{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"Shad",
				"ShaderUniform"
			],
			[
				"bas",
				"basic_shader_frag"
			],
			[
				"render",
				"render_command"
			],
			[
				"Vector",
				"VecThreeFloat"
			],
			[
				"asser",
				"assert_eq\tassert_eq!(…, …)"
			],
			[
				"gl_shader",
				"gl_shader_type"
			],
			[
				"globa",
				"global_prog"
			],
			[
				"rene",
				"render_api"
			],
			[
				"Vec",
				"VecThreeFloat"
			],
			[
				"F",
				"fn"
			],
			[
				"exter_",
				"extern_global_glCreateProgram"
			],
			[
				"shader",
				"shader_source"
			],
			[
				"output",
				"output_length"
			],
			[
				"extern_global_glSahd",
				"extern_global_glShaderInfoLog"
			],
			[
				"GL",
				"GL_COMPILE_STATUS"
			],
			[
				"extern_global",
				"extern_global_glShaderSource"
			],
			[
				"bsi",
				"basic_shader_vert"
			],
			[
				"gengar_",
				"gengar_render_opengl"
			],
			[
				"glcle",
				"glClearColor"
			],
			[
				"sug",
				"suggested_pixel_format_index"
			],
			[
				"t",
				"TARGET_MS"
			],
			[
				"upgra",
				"upgradeAccum"
			],
			[
				"upgr",
				"upgradeParticles"
			],
			[
				"boost",
				"boostParticles"
			],
			[
				"refresh",
				"refreshTimeMinutes"
			],
			[
				"broa",
				"broadcasterId"
			],
			[
				"user",
				"usersShips"
			],
			[
				"channel",
				"channelChatMessageEventInput"
			],
			[
				"event",
				"channelFollowEventInput"
			],
			[
				"targ",
				"targetObj"
			],
			[
				"Unity",
				"UnityEvent"
			],
			[
				"cur",
				"currentStationID"
			],
			[
				"sttion",
				"StationEntry"
			],
			[
				"Station",
				"StationEntry"
			],
			[
				"station",
				"StationEntry"
			],
			[
				"target",
				"targetObj"
			],
			[
				"tar",
				"targetObj"
			],
			[
				"ortho",
				"orthoSizeTarget"
			],
			[
				"deat",
				"deathDisplay"
			],
			[
				"death",
				"deathDisplayParent"
			],
			[
				"Build",
				"BuildTurret"
			],
			[
				"enem",
				"enemyTarget"
			],
			[
				"enemy",
				"enemyTargets"
			],
			[
				"eneis",
				"enemiesPerWave"
			],
			[
				"FolloerList",
				"FollowerListResponse"
			],
			[
				"web",
				"websocketID"
			],
			[
				"Open",
				"OpenWebsocket"
			],
			[
				"Soket",
				"SocketOnMessage"
			],
			[
				"act",
				"activeTokens"
			],
			[
				"erro",
				"errorVal"
			],
			[
				"error",
				"errorVal"
			],
			[
				"device",
				"deviceObationTokenPollSeconds"
			],
			[
				"follow",
				"followersHistory"
			],
			[
				"message",
				"OnMessage"
			],
			[
				"messag",
				"messageType"
			],
			[
				"Twit",
				"TwitchOAuthScope"
			],
			[
				"targetChange",
				"targetChangeTime"
			],
			[
				"targetCh",
				"targetChangeAccum"
			],
			[
				"shake",
				"shakeRetargetAccum"
			],
			[
				"curr",
				"currTarget"
			],
			[
				"V",
				"Vector3"
			],
			[
				"shakeReg",
				"shakeRetargetAccum"
			],
			[
				"ShakeRe",
				"ShakeRetarget"
			],
			[
				"construction",
				"constructionCheck"
			],
			[
				"cons",
				"constructTargetPos"
			],
			[
				"construct",
				"constructTimer"
			],
			[
				"con",
				"constructTimer"
			],
			[
				"constru",
				"constructTargetPos"
			],
			[
				"const",
				"constructTargetPos"
			],
			[
				"construc",
				"ConstructStep"
			],
			[
				"constr",
				"constructTimer"
			],
			[
				"collec",
				"collectTimer"
			],
			[
				"popLimi",
				"popLimit"
			],
			[
				"food",
				"foodGrowth"
			],
			[
				"Ve",
				"Vector2"
			],
			[
				"To",
				"ToWorldPos"
			],
			[
				"Gimo",
				"GizmoDraw"
			],
			[
				"v",
				"Vector2"
			]
		]
	},
	"buffers":
	[
		{
			"file": "ghostly_game_windows/src/main.rs",
			"settings":
			{
				"buffer_size": 9373,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					1905,
					2,
					"left_delete",
					null,
					"AgAAAI8FAAAAAAAAjwUAAAAAAAABAAAAII4FAAAAAAAAjgUAAAAAAAABAAAAYw",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACQBQAAAAAAAJAFAAAAAAAAAAAAAAAA8L8BAAAAAQAAADwDAAAAAAAAPAMAAAAAAAAAAAAAAADwvw"
				],
				[
					1906,
					1,
					"insert",
					{
						"characters": "ch"
					},
					"AgAAAI4FAAAAAAAAjwUAAAAAAAAAAAAAjwUAAAAAAACQBQAAAAAAAAAAAAA",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACOBQAAAAAAAI4FAAAAAAAAAAAAAAAA8L8BAAAAAQAAADwDAAAAAAAAPAMAAAAAAAAAAAAAAADwvw"
				],
				[
					1908,
					1,
					"left_delete",
					null,
					"AQAAAIoFAAAAAAAAigUAAAAAAAAGAAAAbWF0aGNo",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACQBQAAAAAAAIoFAAAAAAAAAAAAAAAA8L8BAAAAAQAAADwDAAAAAAAAPAMAAAAAAAAAAAAAAADwvw"
				],
				[
					1912,
					1,
					"insert",
					{
						"characters": ".unwarp"
					},
					"BwAAAJYFAAAAAAAAlwUAAAAAAAAAAAAAlwUAAAAAAACYBQAAAAAAAAAAAACYBQAAAAAAAJkFAAAAAAAAAAAAAJkFAAAAAAAAmgUAAAAAAAAAAAAAmgUAAAAAAACbBQAAAAAAAAAAAACbBQAAAAAAAJwFAAAAAAAAAAAAAJwFAAAAAAAAnQUAAAAAAAAAAAAA",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACWBQAAAAAAAJYFAAAAAAAAAAAAAAAA8L8BAAAAAQAAADwDAAAAAAAAPAMAAAAAAAAAAAAAAADwvw"
				],
				[
					1913,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJ0FAAAAAAAAnwUAAAAAAAAAAAAA",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACdBQAAAAAAAJ0FAAAAAAAAAAAAAAAA8L8BAAAAAQAAADwDAAAAAAAAPAMAAAAAAAAAAAAAAADwvw"
				],
				[
					1915,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAJ8FAAAAAAAAoAUAAAAAAAAAAAAA",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACfBQAAAAAAAJ8FAAAAAAAAAAAAAAAA8L8BAAAAAQAAADwDAAAAAAAAPAMAAAAAAAAAAAAAAADwvw"
				],
				[
					1918,
					1,
					"insert",
					{
						"characters": "unwrap"
					},
					"BwAAAJcFAAAAAAAAmAUAAAAAAAAAAAAAmAUAAAAAAACYBQAAAAAAAAYAAAB1bndhcnCYBQAAAAAAAJkFAAAAAAAAAAAAAJkFAAAAAAAAmgUAAAAAAAAAAAAAmgUAAAAAAACbBQAAAAAAAAAAAACbBQAAAAAAAJwFAAAAAAAAAAAAAJwFAAAAAAAAnQUAAAAAAAAAAAAA",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACdBQAAAAAAAJcFAAAAAAAAAAAAAAAA8L8BAAAAAQAAADwDAAAAAAAAPAMAAAAAAAAAAAAAAADwvw"
				],
				[
					1919,
					2,
					"rust_fmt_format_buffer",
					null,
					"AQAAAKMFAAAAAAAAowUAAAAAAAAEAAAAICAgIA",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACdBQAAAAAAAJ0FAAAAAAAAAAAAAAAA8L8BAAAAAQAAADwDAAAAAAAAPAMAAAAAAAAAAAAAAADwvw"
				],
				[
					1923,
					1,
					"insert",
					{
						"characters": "let"
					},
					"AwAAAIoFAAAAAAAAiwUAAAAAAAAAAAAAiwUAAAAAAACMBQAAAAAAAAAAAACMBQAAAAAAAI0FAAAAAAAAAAAAAA",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACKBQAAAAAAAIoFAAAAAAAAAAAAAAAAPUABAAAAAQAAADwDAAAAAAAAPAMAAAAAAAAAAAAAAADwvw"
				],
				[
					1924,
					1,
					"insert",
					{
						"characters": " rapi"
					},
					"BQAAAI0FAAAAAAAAjgUAAAAAAAAAAAAAjgUAAAAAAACPBQAAAAAAAAAAAACPBQAAAAAAAJAFAAAAAAAAAAAAAJAFAAAAAAAAkQUAAAAAAAAAAAAAkQUAAAAAAACSBQAAAAAAAAAAAAA",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACNBQAAAAAAAI0FAAAAAAAAAAAAAAAA8L8BAAAAAQAAADwDAAAAAAAAPAMAAAAAAAAAAAAAAADwvw"
				],
				[
					1925,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAJIFAAAAAAAAkwUAAAAAAAAAAAAAkwUAAAAAAACUBQAAAAAAAAAAAAA",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACSBQAAAAAAAJIFAAAAAAAAAAAAAAAA8L8BAAAAAQAAADwDAAAAAAAAPAMAAAAAAAAAAAAAAADwvw"
				],
				[
					1926,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJQFAAAAAAAAlQUAAAAAAAAAAAAA",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACUBQAAAAAAAJQFAAAAAAAAAAAAAAAA8L8BAAAAAQAAADwDAAAAAAAAPAMAAAAAAAAAAAAAAADwvw"
				],
				[
					1932,
					1,
					"insert",
					{
						"characters": "\n\nreturn"
					},
					"CwAAAKsFAAAAAAAArAUAAAAAAAAAAAAArAUAAAAAAACwBQAAAAAAAAAAAACwBQAAAAAAALEFAAAAAAAAAAAAALEFAAAAAAAAtQUAAAAAAAAAAAAArAUAAAAAAACsBQAAAAAAAAQAAAAgICAgsQUAAAAAAACyBQAAAAAAAAAAAACyBQAAAAAAALMFAAAAAAAAAAAAALMFAAAAAAAAtAUAAAAAAAAAAAAAtAUAAAAAAAC1BQAAAAAAAAAAAAC1BQAAAAAAALYFAAAAAAAAAAAAALYFAAAAAAAAtwUAAAAAAAAAAAAA",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACrBQAAAAAAAKsFAAAAAAAA////////738BAAAAAQAAADwDAAAAAAAAPAMAAAAAAAAAAAAAAADwvw"
				],
				[
					1933,
					1,
					"insert",
					{
						"characters": " 0;"
					},
					"AwAAALcFAAAAAAAAuAUAAAAAAAAAAAAAuAUAAAAAAAC5BQAAAAAAAAAAAAC5BQAAAAAAALoFAAAAAAAAAAAAAA",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC3BQAAAAAAALcFAAAAAAAAAAAAAAAA8L8BAAAAAQAAADwDAAAAAAAAPAMAAAAAAAAAAAAAAADwvw"
				],
				[
					1936,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAALoFAAAAAAAAuwUAAAAAAAAAAAAA",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC6BQAAAAAAALoFAAAAAAAAAAAAAAAA8L8BAAAAAQAAADwDAAAAAAAAPAMAAAAAAAAAAAAAAADwvw"
				],
				[
					1937,
					1,
					"left_delete",
					null,
					"AQAAALoFAAAAAAAAugUAAAAAAAABAAAAKQ",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC7BQAAAAAAALsFAAAAAAAAAAAAAAAA8L8BAAAAAQAAADwDAAAAAAAAPAMAAAAAAAAAAAAAAADwvw"
				],
				[
					1940,
					1,
					"insert",
					{
						"characters": "unsafe"
					},
					"BgAAAJUFAAAAAAAAlgUAAAAAAAAAAAAAlgUAAAAAAACXBQAAAAAAAAAAAACXBQAAAAAAAJgFAAAAAAAAAAAAAJgFAAAAAAAAmQUAAAAAAAAAAAAAmQUAAAAAAACaBQAAAAAAAAAAAACaBQAAAAAAAJsFAAAAAAAAAAAAAA",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACVBQAAAAAAAJUFAAAAAAAAAAAAAAAA8L8BAAAAAQAAADwDAAAAAAAAPAMAAAAAAAAAAAAAAADwvw"
				],
				[
					1941,
					1,
					"insert",
					{
						"characters": " {"
					},
					"AgAAAJsFAAAAAAAAnAUAAAAAAAAAAAAAnAUAAAAAAACdBQAAAAAAAAAAAAA",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACbBQAAAAAAAJsFAAAAAAAAAAAAAAAA8L8BAAAAAQAAADwDAAAAAAAAPAMAAAAAAAAAAAAAAADwvw"
				],
				[
					1944,
					1,
					"insert",
					{
						"characters": "}"
					},
					"AQAAALIFAAAAAAAAswUAAAAAAAAAAAAA",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACyBQAAAAAAALIFAAAAAAAAAAAAAAAA8L8BAAAAAQAAADwDAAAAAAAAPAMAAAAAAAAAAAAAAADwvw"
				],
				[
					1945,
					2,
					"rust_fmt_format_buffer",
					null,
					"AgAAAJ0FAAAAAAAAngUAAAAAAAAAAAAAswUAAAAAAAC0BQAAAAAAAAAAAAA",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACzBQAAAAAAALMFAAAAAAAAAAAAAAAA8L8BAAAAAQAAADwDAAAAAAAAPAMAAAAAAAAAAAAAAADwvw"
				],
				[
					1948,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAJIFAAAAAAAAkwUAAAAAAAAAAAAA",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACSBQAAAAAAAJIFAAAAAAAAAAAAAAAA8L8BAAAAAQAAADwDAAAAAAAAPAMAAAAAAAAAAAAAAADwvw"
				],
				[
					1949,
					1,
					"insert",
					{
						"characters": " &"
					},
					"AgAAAJMFAAAAAAAAlAUAAAAAAAAAAAAAlAUAAAAAAACVBQAAAAAAAAAAAAA",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACTBQAAAAAAAJMFAAAAAAAAAAAAAAAA8L8BAAAAAQAAADwDAAAAAAAAPAMAAAAAAAAAAAAAAADwvw"
				],
				[
					1950,
					1,
					"left_delete",
					null,
					"AQAAAJQFAAAAAAAAlAUAAAAAAAABAAAAJg",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACVBQAAAAAAAJUFAAAAAAAAAAAAAAAA8L8BAAAAAQAAADwDAAAAAAAAPAMAAAAAAAAAAAAAAADwvw"
				],
				[
					1951,
					1,
					"insert",
					{
						"characters": "*"
					},
					"AQAAAJQFAAAAAAAAlQUAAAAAAAAAAAAA",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACUBQAAAAAAAJQFAAAAAAAAAAAAAAAA8L8BAAAAAQAAADwDAAAAAAAAPAMAAAAAAAAAAAAAAADwvw"
				],
				[
					1964,
					3,
					"left_delete",
					null,
					"AwAAAJQFAAAAAAAAlAUAAAAAAAABAAAAKpMFAAAAAAAAkwUAAAAAAAABAAAAIJIFAAAAAAAAkgUAAAAAAAABAAAAOg",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACVBQAAAAAAAJUFAAAAAAAAAAAAAAAA8L8BAAAAAQAAADwDAAAAAAAAPAMAAAAAAAAAAAAAAADwvw"
				],
				[
					1967,
					1,
					"insert",
					{
						"characters": " :"
					},
					"AgAAAJIFAAAAAAAAkwUAAAAAAAAAAAAAkwUAAAAAAACUBQAAAAAAAAAAAAA",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACSBQAAAAAAAJIFAAAAAAAAAAAAAAAA8L8BAAAAAQAAADwDAAAAAAAAPAMAAAAAAAAAAAAAAADwvw"
				],
				[
					1975,
					1,
					"insert",
					{
						"characters": "&"
					},
					"AQAAAKAFAAAAAAAAoQUAAAAAAAAAAAAA",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACgBQAAAAAAAKAFAAAAAAAAAAAAAAAA8L8BAAAAAQAAADwDAAAAAAAAPAMAAAAAAAAAAAAAAADwvw"
				],
				[
					1980,
					2,
					"left_delete",
					null,
					"AgAAAJQFAAAAAAAAlAUAAAAAAAABAAAAIJMFAAAAAAAAkwUAAAAAAAABAAAAOg",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACVBQAAAAAAAJUFAAAAAAAAAAAAAAAA8L8BAAAAAQAAADwDAAAAAAAAPAMAAAAAAAAAAAAAAADwvw"
				],
				[
					1987,
					1,
					"left_delete",
					null,
					"AQAAAJ4FAAAAAAAAngUAAAAAAAABAAAAJg",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACfBQAAAAAAAJ8FAAAAAAAAAAAAAAAA8L8BAAAAAQAAADwDAAAAAAAAPAMAAAAAAAAAAAAAAADwvw"
				],
				[
					1991,
					1,
					"insert",
					{
						"characters": "\nunsafe"
					},
					"CAAAAIUFAAAAAAAAhgUAAAAAAAAAAAAAhgUAAAAAAACKBQAAAAAAAAAAAACKBQAAAAAAAIsFAAAAAAAAAAAAAIsFAAAAAAAAjAUAAAAAAAAAAAAAjAUAAAAAAACNBQAAAAAAAAAAAACNBQAAAAAAAI4FAAAAAAAAAAAAAI4FAAAAAAAAjwUAAAAAAAAAAAAAjwUAAAAAAACQBQAAAAAAAAAAAAA",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACFBQAAAAAAAIUFAAAAAAAA////////738BAAAAAQAAADwDAAAAAAAAPAMAAAAAAAAAAAAAAADwvw"
				],
				[
					1992,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJAFAAAAAAAAkQUAAAAAAAAAAAAA",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACQBQAAAAAAAJAFAAAAAAAAAAAAAAAA8L8BAAAAAQAAADwDAAAAAAAAPAMAAAAAAAAAAAAAAADwvw"
				],
				[
					1993,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAJEFAAAAAAAAkwUAAAAAAAAAAAAA",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACRBQAAAAAAAJEFAAAAAAAAAAAAAAAA8L8BAAAAAQAAADwDAAAAAAAAPAMAAAAAAAAAAAAAAADwvw"
				],
				[
					1994,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAJIFAAAAAAAAkwUAAAAAAAAAAAAAkwUAAAAAAACXBQAAAAAAAAAAAACXBQAAAAAAAJgFAAAAAAAAAAAAAJgFAAAAAAAAnAUAAAAAAAAAAAAAkwUAAAAAAACTBQAAAAAAAAQAAAAgICAgkwUAAAAAAACbBQAAAAAAAAAAAAA",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACSBQAAAAAAAJIFAAAAAAAAAAAAAAAA8L8BAAAAAQAAADwDAAAAAAAAPAMAAAAAAAAAAAAAAADwvw"
				],
				[
					1996,
					1,
					"swap_line_down",
					null,
					"AgAAANMFAAAAAAAA2QUAAAAAAAAAAAAAnAUAAAAAAACcBQAAAAAAAAYAAAAgICAgfQo",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAChBQAAAAAAAKEFAAAAAAAAAAAAAAAATUABAAAAAQAAADwDAAAAAAAAPAMAAAAAAAAAAAAAAADwvw"
				],
				[
					2000,
					2,
					"left_delete",
					null,
					"AwAAAMoFAAAAAAAAygUAAAAAAAABAAAAfZMFAAAAAAAAkwUAAAAAAAAIAAAAICAgICAgICDBBQAAAAAAAMEFAAAAAAAAAQAAACA",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADLBQAAAAAAAMsFAAAAAAAAAAAAAAAA8L8BAAAAAQAAADwDAAAAAAAAPAMAAAAAAAAAAAAAAADwvw"
				],
				[
					2003,
					1,
					"left_delete",
					null,
					"AQAAAKMFAAAAAAAAowUAAAAAAAAIAAAAdW5zYWZlIHs",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACrBQAAAAAAAKMFAAAAAAAAAAAAAAAA8L8BAAAAAQAAADwDAAAAAAAAPAMAAAAAAAAAAAAAAADwvw"
				],
				[
					2004,
					2,
					"rust_fmt_format_buffer",
					null,
					"BAAAAJMFAAAAAAAAkwUAAAAAAAABAAAACpMFAAAAAAAAlQUAAAAAAAAAAAAAmQUAAAAAAACbBQAAAAAAAAAAAAClBQAAAAAAAKUFAAAAAAAAAQAAACA",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACjBQAAAAAAAKMFAAAAAAAAAAAAAAAA8L8BAAAAAQAAADwDAAAAAAAAPAMAAAAAAAAAAAAAAADwvw"
				],
				[
					2006,
					1,
					"insert",
					{
						"characters": "&"
					},
					"AQAAAKYFAAAAAAAApwUAAAAAAAAAAAAA",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACmBQAAAAAAAKYFAAAAAAAAAAAAAAAA8L8BAAAAAQAAADwDAAAAAAAAPAMAAAAAAAAAAAAAAADwvw"
				],
				[
					2009,
					1,
					"left_delete",
					null,
					"AQAAAKYFAAAAAAAApgUAAAAAAAABAAAAJg",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACnBQAAAAAAAKcFAAAAAAAAAAAAAAAA8L8BAAAAAQAAADwDAAAAAAAAPAMAAAAAAAAAAAAAAADwvw"
				],
				[
					2010,
					1,
					"insert",
					{
						"characters": "*"
					},
					"AQAAAKYFAAAAAAAApwUAAAAAAAAAAAAA",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACmBQAAAAAAAKYFAAAAAAAAAAAAAAAA8L8BAAAAAQAAADwDAAAAAAAAPAMAAAAAAAAAAAAAAADwvw"
				],
				[
					2013,
					1,
					"left_delete",
					null,
					"AQAAAKYFAAAAAAAApgUAAAAAAAABAAAAKg",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACnBQAAAAAAAKcFAAAAAAAAAAAAAAAA8L8BAAAAAQAAADwDAAAAAAAAPAMAAAAAAAAAAAAAAADwvw"
				],
				[
					2016,
					1,
					"insert",
					{
						"characters": "&mut"
					},
					"BAAAAKYFAAAAAAAApwUAAAAAAAAAAAAApwUAAAAAAACoBQAAAAAAAAAAAACoBQAAAAAAAKkFAAAAAAAAAAAAAKkFAAAAAAAAqgUAAAAAAAAAAAAA",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACmBQAAAAAAAKYFAAAAAAAAAAAAAAAA8L8BAAAAAQAAADwDAAAAAAAAPAMAAAAAAAAAAAAAAADwvw"
				],
				[
					2017,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKoFAAAAAAAAqwUAAAAAAAAAAAAA",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACqBQAAAAAAAKoFAAAAAAAAAAAAAAAA8L8BAAAAAQAAADwDAAAAAAAAPAMAAAAAAAAAAAAAAADwvw"
				],
				[
					2020,
					4,
					"left_delete",
					null,
					"BAAAAKoFAAAAAAAAqgUAAAAAAAABAAAAIKkFAAAAAAAAqQUAAAAAAAABAAAAdKgFAAAAAAAAqAUAAAAAAAABAAAAdacFAAAAAAAApwUAAAAAAAABAAAAbQ",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACrBQAAAAAAAKsFAAAAAAAAAAAAAAAA8L8BAAAAAQAAADwDAAAAAAAAPAMAAAAAAAAAAAAAAADwvw"
				],
				[
					2023,
					1,
					"left_delete",
					null,
					"AQAAAKYFAAAAAAAApgUAAAAAAAABAAAAJg",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACnBQAAAAAAAKcFAAAAAAAAAAAAAAAA8L8BAAAAAQAAADwDAAAAAAAAPAMAAAAAAAAAAAAAAADwvw"
				],
				[
					2027,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAKMFAAAAAAAApAUAAAAAAAAAAAAA",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACjBQAAAAAAAKMFAAAAAAAAAAAAAAAA8L8BAAAAAQAAADwDAAAAAAAAPAMAAAAAAAAAAAAAAADwvw"
				],
				[
					2028,
					1,
					"insert",
					{
						"characters": " &"
					},
					"AgAAAKQFAAAAAAAApQUAAAAAAAAAAAAApQUAAAAAAACmBQAAAAAAAAAAAAA",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACkBQAAAAAAAKQFAAAAAAAAAAAAAAAA8L8BAAAAAQAAADwDAAAAAAAAPAMAAAAAAAAAAAAAAADwvw"
				],
				[
					2029,
					1,
					"paste",
					null,
					"AQAAAKYFAAAAAAAA0QUAAAAAAAAAAAAA",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACmBQAAAAAAAKYFAAAAAAAAAAAAAAAA8L8BAAAAAQAAADwDAAAAAAAAPAMAAAAAAAAAAAAAAADwvw"
				],
				[
					2033,
					1,
					"insert",
					{
						"characters": "&"
					},
					"AQAAANQFAAAAAAAA1QUAAAAAAAAAAAAA",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADUBQAAAAAAANQFAAAAAAAAAAAAAAAA8L8BAAAAAQAAADwDAAAAAAAAPAMAAAAAAAAAAAAAAADwvw"
				],
				[
					2036,
					1,
					"left_delete",
					null,
					"AQAAANQFAAAAAAAA1AUAAAAAAAABAAAAJg",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADVBQAAAAAAANUFAAAAAAAAAAAAAAAA8L8BAAAAAQAAADwDAAAAAAAAPAMAAAAAAAAAAAAAAADwvw"
				],
				[
					2041,
					1,
					"left_delete",
					null,
					"AQAAAKUFAAAAAAAApQUAAAAAAAAtAAAAJmdlbmdhcl9yZW5kZXJfb3BlbmdsOjpvZ2xfcmVuZGVyOjpSZW5kZXJBcGkg",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADSBQAAAAAAAKUFAAAAAAAAAAAAAAAA8L8BAAAAAQAAADwDAAAAAAAAPAMAAAAAAAAAAAAAAADwvw"
				],
				[
					2044,
					2,
					"left_delete",
					null,
					"AgAAAKQFAAAAAAAApAUAAAAAAAABAAAAIKMFAAAAAAAAowUAAAAAAAABAAAAOg",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAClBQAAAAAAAKUFAAAAAAAAAAAAAAAA8L8BAAAAAQAAADwDAAAAAAAAPAMAAAAAAAAAAAAAAADwvw"
				],
				[
					2045,
					2,
					"rust_fmt_format_buffer",
					null,
					"AQAAAKMFAAAAAAAApAUAAAAAAAAAAAAA",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACjBQAAAAAAAKMFAAAAAAAAAAAAAAAA8L8BAAAAAQAAADwDAAAAAAAAPAMAAAAAAAAAAAAAAADwvw"
				],
				[
					2046,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKQFAAAAAAAApQUAAAAAAAAAAAAA",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACkBQAAAAAAAKQFAAAAAAAAAAAAAAAA8L8BAAAAAQAAADwDAAAAAAAAPAMAAAAAAAAAAAAAAADwvw"
				],
				[
					2047,
					1,
					"left_delete",
					null,
					"AQAAAKQFAAAAAAAApAUAAAAAAAABAAAAIA",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAClBQAAAAAAAKUFAAAAAAAAAAAAAAAA8L8BAAAAAQAAADwDAAAAAAAAPAMAAAAAAAAAAAAAAADwvw"
				],
				[
					2066,
					1,
					"left_delete",
					null,
					"AQAAAJsFAAAAAAAAmwUAAAAAAAALAAAAbGV0IHJhcGkgPSA",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACmBQAAAAAAAJsFAAAAAAAAAAAAAAAATUABAAAAAQAAADwDAAAAAAAAPAMAAAAAAAAAAAAAAADwvw"
				],
				[
					2071,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAALAFAAAAAAAAsQUAAAAAAAAAAAAA",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACwBQAAAAAAALAFAAAAAAAAAAAAAAAA8L8BAAAAAQAAADwDAAAAAAAAPAMAAAAAAAAAAAAAAADwvw"
				],
				[
					2072,
					1,
					"insert",
					{
						"characters": "make_sh"
					},
					"BwAAALEFAAAAAAAAsgUAAAAAAAAAAAAAsgUAAAAAAACzBQAAAAAAAAAAAACzBQAAAAAAALQFAAAAAAAAAAAAALQFAAAAAAAAtQUAAAAAAAAAAAAAtQUAAAAAAAC2BQAAAAAAAAAAAAC2BQAAAAAAALcFAAAAAAAAAAAAALcFAAAAAAAAuAUAAAAAAAAAAAAA",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACxBQAAAAAAALEFAAAAAAAAAAAAAAAA8L8BAAAAAQAAADwDAAAAAAAAPAMAAAAAAAAAAAAAAADwvw"
				],
				[
					2074,
					1,
					"insert",
					{
						"characters": "ader_program"
					},
					"DAAAALgFAAAAAAAAuQUAAAAAAAAAAAAAuQUAAAAAAAC6BQAAAAAAAAAAAAC6BQAAAAAAALsFAAAAAAAAAAAAALsFAAAAAAAAvAUAAAAAAAAAAAAAvAUAAAAAAAC9BQAAAAAAAAAAAAC9BQAAAAAAAL4FAAAAAAAAAAAAAL4FAAAAAAAAvwUAAAAAAAAAAAAAvwUAAAAAAADABQAAAAAAAAAAAADABQAAAAAAAMEFAAAAAAAAAAAAAMEFAAAAAAAAwgUAAAAAAAAAAAAAwgUAAAAAAADDBQAAAAAAAAAAAADDBQAAAAAAAMQFAAAAAAAAAAAAAA",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC4BQAAAAAAALgFAAAAAAAAAAAAAAAA8L8BAAAAAQAAADwDAAAAAAAAPAMAAAAAAAAAAAAAAADwvw"
				],
				[
					2075,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAMQFAAAAAAAAxgUAAAAAAAAAAAAA",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADEBQAAAAAAAMQFAAAAAAAAAAAAAAAA8L8BAAAAAQAAADwDAAAAAAAAPAMAAAAAAAAAAAAAAADwvw"
				],
				[
					2080,
					1,
					"insert",
					{
						"characters": "\nogl_"
					},
					"BwAAAJIFAAAAAAAAkwUAAAAAAAAAAAAAkwUAAAAAAACXBQAAAAAAAAAAAACXBQAAAAAAAJsFAAAAAAAAAAAAAJsFAAAAAAAAnAUAAAAAAAAAAAAAnAUAAAAAAACdBQAAAAAAAAAAAACdBQAAAAAAAJ4FAAAAAAAAAAAAAJ4FAAAAAAAAnwUAAAAAAAAAAAAA",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACSBQAAAAAAAJIFAAAAAAAAAAAAAAAAYkABAAAAAQAAADwDAAAAAAAAPAMAAAAAAAAAAAAAAADwvw"
				],
				[
					2084,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAAKgFAAAAAAAAqwUAAAAAAAAAAAAA",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACsBQAAAAAAAKwFAAAAAAAAAAAAAACAVUABAAAAAQAAADwDAAAAAAAAPAMAAAAAAAAAAAAAAADwvw"
				],
				[
					2112,
					1,
					"insert",
					{
						"characters": "\n/*"
					},
					"AwAAAGUFAAAAAAAAZgUAAAAAAAAAAAAAZgUAAAAAAABnBQAAAAAAAAAAAABnBQAAAAAAAGgFAAAAAAAAAAAAAA",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABlBQAAAAAAAGUFAAAAAAAAAAAAAACAVUABAAAAAQAAADwDAAAAAAAAPAMAAAAAAAAAAAAAAADwvw"
				],
				[
					2116,
					1,
					"insert",
					{
						"characters": "\n*/"
					},
					"AwAAAPEFAAAAAAAA8gUAAAAAAAAAAAAA8gUAAAAAAADzBQAAAAAAAAAAAADzBQAAAAAAAPQFAAAAAAAAAAAAAA",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADxBQAAAAAAAPEFAAAAAAAA////////738BAAAAAQAAADwDAAAAAAAAPAMAAAAAAAAAAAAAAADwvw"
				],
				[
					2121,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAABAFAAAAAAAAEwUAAAAAAAAAAAAA",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAQBQAAAAAAABAFAAAAAAAAAAAAAAAAAAABAAAAAQAAADwDAAAAAAAAPAMAAAAAAAAAAAAAAADwvw"
				],
				[
					2125,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAAIQfAAAAAAAAhx8AAAAAAAAAAAAA",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACQHwAAAAAAAJAfAAAAAAAAAAAAAAAA8L8BAAAAAQAAADwDAAAAAAAAPAMAAAAAAAAAAAAAAADwvw"
				],
				[
					2150,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAAHcgAAAAAAAAdyAAAAAAAAADAAAALy8g",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACeIAAAAAAAAJ4gAAAAAAAA////////738BAAAAAQAAADwDAAAAAAAAPAMAAAAAAAAAAAAAAADwvw"
				],
				[
					2160,
					7,
					"cut",
					null,
					"BwAAAHwfAAAAAAAAfB8AAAAAAAAsAAAAICAgICAgICAvLyBPR0xfUkVORF9BUEkgPSBTb21lKHJlbmRlcl9hcGkpOwp8HwAAAAAAAHwfAAAAAAAAAQAAAAp8HwAAAAAAAHwfAAAAAAAACwAAACAgICAgICAgLyoKfB8AAAAAAAB8HwAAAAAAAEsAAAAgICAgICAgIGxldCBlbmdpbmVfcmVuZGVyX2FwaSA9IGdlbmdhcl9lbmdpbmU6OmVuZ2luZTo6cmVuZGVyOjpSZW5kZXJBcGkgewp8HwAAAAAAAHwfAAAAAAAAWQAAACAgICAgICAgICAgIG1ha2Vfc2hhZGVyX3Byb2dyYW06IGdlbmdhcl9yZW5kZXJfb3BlbmdsOjpvZ2xfcmVuZGVyOjpwbWFrZV9zaGFkZXJfcHJvZ3JhbSwKfB8AAAAAAAB8HwAAAAAAAAsAAAAgICAgICAgIH07CnwfAAAAAAAAfB8AAAAAAAALAAAAICAgICAgICAqLwo",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACnHwAAAAAAAKcfAAAAAAAA////////738BAAAAAQAAADwDAAAAAAAAPAMAAAAAAAAAAAAAAADwvw"
				],
				[
					2167,
					1,
					"cut",
					null,
					"DAAAABAFAAAAAAAAEAUAAAAAAABYAAAALy8gc3RhdGljIG11dCBPR0xfUkVORF9BUEk6IE9wdGlvbjxnZW5nYXJfcmVuZGVyX29wZW5nbDo6b2dsX3JlbmRlcjo6UmVuZGVyQXBpPiA9IE5vbmU7ChAFAAAAAAAAEAUAAAAAAAABAAAAChAFAAAAAAAAEAUAAAAAAAADAAAALyoKEAUAAAAAAAAQBQAAAAAAACAAAABwdWIgZm4gY3JlYXRlX3NoYWRlcigpIC0+IGkzMiB7ChAFAAAAAAAAEAUAAAAAAAANAAAAICAgIHVuc2FmZSB7ChAFAAAAAAAAEAUAAAAAAAANAAAAICAgICAgICBvZ2xfChAFAAAAAAAAEAUAAAAAAAA4AAAAICAgICAgICAvLyBPR0xfUkVORF9BUEkudW53cmFwKCkubWFrZV9zaGFkZXJfcHJvZ3JhbSgpOwoQBQAAAAAAABAFAAAAAAAABgAAACAgICB9ChAFAAAAAAAAEAUAAAAAAAABAAAAChAFAAAAAAAAEAUAAAAAAAAOAAAAICAgIHJldHVybiAwOwoQBQAAAAAAABAFAAAAAAAAAgAAAH0KEAUAAAAAAAAQBQAAAAAAAAMAAAAqLwo",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAhBQAAAAAAACEFAAAAAAAAAAAAAACAXkABAAAAAQAAADwDAAAAAAAAPAMAAAAAAAAAAAAAAADwvw"
				],
				[
					2168,
					1,
					"left_delete",
					null,
					"AQAAAA8FAAAAAAAADwUAAAAAAAABAAAACg",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAQBQAAAAAAABAFAAAAAAAAAAAAAAAA8L8BAAAAAQAAADwDAAAAAAAAPAMAAAAAAAAAAAAAAADwvw"
				],
				[
					2173,
					1,
					"cut",
					null,
					"AQAAAFkEAAAAAAAAWQQAAAAAAAABAAAACg",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABZBAAAAAAAAFkEAAAAAAAAAAAAAAAAAAABAAAAAQAAADwDAAAAAAAAPAMAAAAAAAAAAAAAAADwvw"
				],
				[
					2177,
					1,
					"cut",
					null,
					"AgAAABEEAAAAAAAAEQQAAAAAAABIAAAALy9leHRlcm4gInN0ZGNhbGwiIGZuKCpjb25zdCBjX3ZvaWQsICpjb25zdCB1OCwgKmNvbnN0IHU4LCB1MzIpIC0+IGkzMjsKEQQAAAAAAAARBAAAAAAAAHUAAAAvL0hEQyBoZGMsIGNvbnN0IGludCAqcGlBdHRyaWJJTGlzdCwgY29uc3QgRkxPQVQgKnBmQXR0cmliRkxpc3QsIFVJTlQgbk1heEZvcm1hdHMsIGludCAqcGlGb3JtYXRzLCBVSU5UICpuTnVtRm9ybWF0cwo",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAARBAAAAAAAABEEAAAAAAAAAAAAAAAAAAABAAAAAQAAADwDAAAAAAAAPAMAAAAAAAAAAAAAAADwvw"
				],
				[
					2186,
					2,
					"rust_fmt_format_buffer",
					null,
					"AQAAABEEAAAAAAAAEQQAAAAAAAABAAAACg",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAARBAAAAAAAABEEAAAAAAAAAAAAAAAA8L8BAAAAAQAAADwDAAAAAAAAPAMAAAAAAAAAAAAAAADwvw"
				],
				[
					2187,
					3,
					"cut",
					null,
					"AwAAABEEAAAAAAAAEQQAAAAAAAAZAAAAc3RydWN0IEVuZ2llblJlbmRlckFwaSB7ChEEAAAAAAAAEQQAAAAAAAAkAAAAICAgIHB1YiBjcmVhdGVfc2hhZGVyOiBmbigpIC0+IGkzMiwKEQQAAAAAAAARBAAAAAAAAAIAAAB9Cg",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAARBAAAAAAAABEEAAAAAAAAAAAAAAAA8L8BAAAAAQAAADwDAAAAAAAAPAMAAAAAAAAAAAAAAADwvw"
				],
				[
					2188,
					1,
					"left_delete",
					null,
					"AQAAABAEAAAAAAAAEAQAAAAAAAABAAAACg",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAARBAAAAAAAABEEAAAAAAAAAAAAAAAA8L8BAAAAAQAAADwDAAAAAAAAPAMAAAAAAAAAAAAAAADwvw"
				],
				[
					2195,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAAA4fAAAAAAAADh8AAAAAAAADAAAALy8g",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAACHwAAAAAAAAIfAAAAAAAAAAAAAAAAAAABAAAAAQAAADwDAAAAAAAAPAMAAAAAAAAAAAAAAADwvw"
				],
				[
					2269,
					3,
					"left_delete",
					null,
					"AwAAADoAAAAAAAAAOgAAAAAAAAAOAAAAdW51c2VkX2ltcG9ydHM5AAAAAAAAADkAAAAAAAAAAQAAACA4AAAAAAAAADgAAAAAAAAAAQAAACw",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABIAAAAAAAAADoAAAAAAAAAAAAAAAAA8L8BAAAAAQAAADwDAAAAAAAAPAMAAAAAAAAAAAAAAADwvw"
				],
				[
					2282,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAAKkCAAAAAAAAqgIAAAAAAAAAAAAA",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACpAgAAAAAAAKkCAAAAAAAAAAAAAAAA8L8BAAAAAQAAACwDAAAAAAAALAMAAAAAAAAAAAAAAADwvw"
				],
				[
					2285,
					1,
					"left_delete",
					null,
					"AQAAAKkCAAAAAAAAqQIAAAAAAAABAAAAcw",
					"AgAAAAAAAAABAAAAqgIAAAAAAACqAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAtAwAAAAAAAC0DAAAAAAAAAAAAAAAA8L8"
				],
				[
					59,
					1,
					"insert",
					{
						"characters": "&render_api,"
					},
					"DAAAANAeAAAAAAAA0R4AAAAAAAAAAAAA0R4AAAAAAADSHgAAAAAAAAAAAADSHgAAAAAAANMeAAAAAAAAAAAAANMeAAAAAAAA1B4AAAAAAAAAAAAA1B4AAAAAAADVHgAAAAAAAAAAAADVHgAAAAAAANYeAAAAAAAAAAAAANYeAAAAAAAA1x4AAAAAAAAAAAAA1x4AAAAAAADYHgAAAAAAAAAAAADYHgAAAAAAANkeAAAAAAAAAAAAANkeAAAAAAAA2h4AAAAAAAAAAAAA2h4AAAAAAADbHgAAAAAAAAAAAADbHgAAAAAAANweAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0B4AAAAAAADQHgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAsAwAAAAAAACwDAAAAAAAAAAAAAAAA8L8"
				],
				[
					60,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANweAAAAAAAA3R4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA3B4AAAAAAADcHgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAsAwAAAAAAACwDAAAAAAAAAAAAAAAA8L8"
				],
				[
					61,
					2,
					"left_delete",
					null,
					"AgAAANweAAAAAAAA3B4AAAAAAAABAAAAINseAAAAAAAA2x4AAAAAAAABAAAALA",
					"AgAAAAAAAAABAAAA3R4AAAAAAADdHgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAsAwAAAAAAACwDAAAAAAAAAAAAAAAA8L8"
				],
				[
					90,
					1,
					"insert",
					{
						"characters": "ogl_"
					},
					"BAAAAHYdAAAAAAAAdx0AAAAAAAAAAAAAdx0AAAAAAAB4HQAAAAAAAAAAAAB4HQAAAAAAAHkdAAAAAAAAAAAAAHkdAAAAAAAAeh0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAdh0AAAAAAAB2HQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAsAwAAAAAAACwDAAAAAAAAAAAAAAAA8L8"
				],
				[
					150,
					1,
					"left_delete",
					null,
					"AQAAAOQHAAAAAAAA5AcAAAAAAAABAAAANQ",
					"AgAAAAAAAAABAAAA5QcAAAAAAADlBwAAAAAAAAAAAAAAQFlAAQAAAAEAAACyCwAAAAAAALILAAAAAAAAAAAAAAAA8L8"
				],
				[
					151,
					1,
					"insert",
					{
						"characters": "3"
					},
					"AQAAAOQHAAAAAAAA5QcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA5AcAAAAAAADkBwAAAAAAAAAAAAAAAPC/AQAAAAEAAACxCwAAAAAAALELAAAAAAAAAAAAAAAA8L8"
				],
				[
					153,
					1,
					"left_delete",
					null,
					"AQAAAPYHAAAAAAAA9gcAAAAAAAABAAAAMw",
					"AgAAAAAAAAABAAAA9wcAAAAAAAD3BwAAAAAAAAAAAAAAQFlAAQAAAAEAAACyCwAAAAAAALILAAAAAAAAAAAAAAAA8L8"
				],
				[
					154,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAPYHAAAAAAAA9wcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA9gcAAAAAAAD2BwAAAAAAAAAAAAAAAPC/AQAAAAEAAACxCwAAAAAAALELAAAAAAAAAAAAAAAA8L8"
				],
				[
					166,
					2,
					"swap_line_up",
					null,
					"BAAAAAEfAAAAAAAAAR8AAAAAAAAhAAAAICAgICAgICAgICAgcmVuZGVyKCZyZW5kZXJfYXBpKTsK4h4AAAAAAAADHwAAAAAAAAAAAADiHgAAAAAAAOIeAAAAAAAAIQAAACAgICAgICAgICAgIHJlbmRlcigmcmVuZGVyX2FwaSk7CrQeAAAAAAAA1R4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAR8AAAAAAAABHwAAAAAAAAAAAAAAAAAAAQAAAAEAAACyCwAAAAAAALILAAAAAAAAAAAAAAAA8L8"
				],
				[
					221,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAIgdAAAAAAAAiR0AAAAAAAAAAAAAiR0AAAAAAACKHQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAiB0AAAAAAACIHQAAAAAAAAAAAAAAAGtAAQAAAAEAAACyCwAAAAAAALILAAAAAAAAAAAAAAAA8L8"
				],
				[
					223,
					1,
					"reindent",
					null,
					"AQAAAIkdAAAAAAAAkR0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAiR0AAAAAAACJHQAAAAAAAAAAAAAAAAAAAQAAAAEAAACyCwAAAAAAALILAAAAAAAAAAAAAAAA8L8"
				],
				[
					224,
					1,
					"insert",
					{
						"characters": "lset"
					},
					"BAAAAJEdAAAAAAAAkh0AAAAAAAAAAAAAkh0AAAAAAACTHQAAAAAAAAAAAACTHQAAAAAAAJQdAAAAAAAAAAAAAJQdAAAAAAAAlR0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAkR0AAAAAAACRHQAAAAAAAAAAAAAAAPC/AQAAAAEAAACyCwAAAAAAALILAAAAAAAAAAAAAAAA8L8"
				],
				[
					225,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJUdAAAAAAAAlh0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAlR0AAAAAAACVHQAAAAAAAAAAAAAAAPC/AQAAAAEAAACyCwAAAAAAALILAAAAAAAAAAAAAAAA8L8"
				],
				[
					226,
					4,
					"left_delete",
					null,
					"BAAAAJUdAAAAAAAAlR0AAAAAAAABAAAAIJQdAAAAAAAAlB0AAAAAAAABAAAAdJMdAAAAAAAAkx0AAAAAAAABAAAAZZIdAAAAAAAAkh0AAAAAAAABAAAAcw",
					"AgAAAAAAAAABAAAAlh0AAAAAAACWHQAAAAAAAAAAAAAAAPC/AQAAAAEAAACyCwAAAAAAALILAAAAAAAAAAAAAAAA8L8"
				],
				[
					227,
					1,
					"insert",
					{
						"characters": "t"
					},
					"AQAAAJIdAAAAAAAAkx0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAkh0AAAAAAACSHQAAAAAAAAAAAAAAAPC/AQAAAAEAAACyCwAAAAAAALILAAAAAAAAAAAAAAAA8L8"
				],
				[
					228,
					1,
					"insert",
					{
						"characters": " en"
					},
					"AwAAAJMdAAAAAAAAlB0AAAAAAAAAAAAAlB0AAAAAAACVHQAAAAAAAAAAAACVHQAAAAAAAJYdAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAkx0AAAAAAACTHQAAAAAAAAAAAAAAAPC/AQAAAAEAAACyCwAAAAAAALILAAAAAAAAAAAAAAAA8L8"
				],
				[
					229,
					4,
					"left_delete",
					null,
					"BAAAAJUdAAAAAAAAlR0AAAAAAAABAAAAbpQdAAAAAAAAlB0AAAAAAAABAAAAZZMdAAAAAAAAkx0AAAAAAAABAAAAIJIdAAAAAAAAkh0AAAAAAAABAAAAdA",
					"AgAAAAAAAAABAAAAlh0AAAAAAACWHQAAAAAAAAAAAAAAAPC/AQAAAAEAAACyCwAAAAAAALILAAAAAAAAAAAAAAAA8L8"
				],
				[
					230,
					1,
					"insert",
					{
						"characters": "et"
					},
					"AgAAAJIdAAAAAAAAkx0AAAAAAAAAAAAAkx0AAAAAAACUHQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAkh0AAAAAAACSHQAAAAAAAAAAAAAAAPC/AQAAAAEAAACyCwAAAAAAALILAAAAAAAAAAAAAAAA8L8"
				],
				[
					231,
					1,
					"insert",
					{
						"characters": " engine_state"
					},
					"DQAAAJQdAAAAAAAAlR0AAAAAAAAAAAAAlR0AAAAAAACWHQAAAAAAAAAAAACWHQAAAAAAAJcdAAAAAAAAAAAAAJcdAAAAAAAAmB0AAAAAAAAAAAAAmB0AAAAAAACZHQAAAAAAAAAAAACZHQAAAAAAAJodAAAAAAAAAAAAAJodAAAAAAAAmx0AAAAAAAAAAAAAmx0AAAAAAACcHQAAAAAAAAAAAACcHQAAAAAAAJ0dAAAAAAAAAAAAAJ0dAAAAAAAAnh0AAAAAAAAAAAAAnh0AAAAAAACfHQAAAAAAAAAAAACfHQAAAAAAAKAdAAAAAAAAAAAAAKAdAAAAAAAAoR0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAlB0AAAAAAACUHQAAAAAAAAAAAAAAAPC/AQAAAAEAAACyCwAAAAAAALILAAAAAAAAAAAAAAAA8L8"
				],
				[
					233,
					1,
					"insert",
					{
						"characters": "game"
					},
					"BQAAAJUdAAAAAAAAlh0AAAAAAAAAAAAAlh0AAAAAAACWHQAAAAAAAAwAAABlbmdpbmVfc3RhdGWWHQAAAAAAAJcdAAAAAAAAAAAAAJcdAAAAAAAAmB0AAAAAAAAAAAAAmB0AAAAAAACZHQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAoR0AAAAAAACVHQAAAAAAAAAAAAAAAPC/AQAAAAEAAACyCwAAAAAAALILAAAAAAAAAAAAAAAA8L8"
				],
				[
					234,
					4,
					"left_delete",
					null,
					"BAAAAJgdAAAAAAAAmB0AAAAAAAABAAAAZZcdAAAAAAAAlx0AAAAAAAABAAAAbZYdAAAAAAAAlh0AAAAAAAABAAAAYZUdAAAAAAAAlR0AAAAAAAABAAAAZw",
					"AgAAAAAAAAABAAAAmR0AAAAAAACZHQAAAAAAAAAAAAAAAPC/AQAAAAEAAACyCwAAAAAAALILAAAAAAAAAAAAAAAA8L8"
				],
				[
					235,
					1,
					"insert",
					{
						"characters": "engine_state"
					},
					"DAAAAJUdAAAAAAAAlh0AAAAAAAAAAAAAlh0AAAAAAACXHQAAAAAAAAAAAACXHQAAAAAAAJgdAAAAAAAAAAAAAJgdAAAAAAAAmR0AAAAAAAAAAAAAmR0AAAAAAACaHQAAAAAAAAAAAACaHQAAAAAAAJsdAAAAAAAAAAAAAJsdAAAAAAAAnB0AAAAAAAAAAAAAnB0AAAAAAACdHQAAAAAAAAAAAACdHQAAAAAAAJ4dAAAAAAAAAAAAAJ4dAAAAAAAAnx0AAAAAAAAAAAAAnx0AAAAAAACgHQAAAAAAAAAAAACgHQAAAAAAAKEdAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAlR0AAAAAAACVHQAAAAAAAAAAAAAAAPC/AQAAAAEAAACyCwAAAAAAALILAAAAAAAAAAAAAAAA8L8"
				],
				[
					236,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAKEdAAAAAAAAoh0AAAAAAAAAAAAAoh0AAAAAAACjHQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAoR0AAAAAAAChHQAAAAAAAAAAAAAAAPC/AQAAAAEAAACyCwAAAAAAALILAAAAAAAAAAAAAAAA8L8"
				],
				[
					237,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKMdAAAAAAAApB0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAox0AAAAAAACjHQAAAAAAAAAAAAAAAPC/AQAAAAEAAACyCwAAAAAAALILAAAAAAAAAAAAAAAA8L8"
				],
				[
					238,
					1,
					"insert",
					{
						"characters": "gengar_engine:"
					},
					"DgAAAKQdAAAAAAAApR0AAAAAAAAAAAAApR0AAAAAAACmHQAAAAAAAAAAAACmHQAAAAAAAKcdAAAAAAAAAAAAAKcdAAAAAAAAqB0AAAAAAAAAAAAAqB0AAAAAAACpHQAAAAAAAAAAAACpHQAAAAAAAKodAAAAAAAAAAAAAKodAAAAAAAAqx0AAAAAAAAAAAAAqx0AAAAAAACsHQAAAAAAAAAAAACsHQAAAAAAAK0dAAAAAAAAAAAAAK0dAAAAAAAArh0AAAAAAAAAAAAArh0AAAAAAACvHQAAAAAAAAAAAACvHQAAAAAAALAdAAAAAAAAAAAAALAdAAAAAAAAsR0AAAAAAAAAAAAAsR0AAAAAAACyHQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAApB0AAAAAAACkHQAAAAAAAAAAAAAAAPC/AQAAAAEAAACyCwAAAAAAALILAAAAAAAAAAAAAAAA8L8"
				],
				[
					239,
					1,
					"insert",
					{
						"characters": ":state::Stat"
					},
					"DAAAALIdAAAAAAAAsx0AAAAAAAAAAAAAsx0AAAAAAAC0HQAAAAAAAAAAAAC0HQAAAAAAALUdAAAAAAAAAAAAALUdAAAAAAAAth0AAAAAAAAAAAAAth0AAAAAAAC3HQAAAAAAAAAAAAC3HQAAAAAAALgdAAAAAAAAAAAAALgdAAAAAAAAuR0AAAAAAAAAAAAAuR0AAAAAAAC6HQAAAAAAAAAAAAC6HQAAAAAAALsdAAAAAAAAAAAAALsdAAAAAAAAvB0AAAAAAAAAAAAAvB0AAAAAAAC9HQAAAAAAAAAAAAC9HQAAAAAAAL4dAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAsh0AAAAAAACyHQAAAAAAAAAAAAAAAPC/AQAAAAEAAACyCwAAAAAAALILAAAAAAAAAAAAAAAA8L8"
				],
				[
					240,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAAL4dAAAAAAAAvx0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAvh0AAAAAAAC+HQAAAAAAAAAAAAAAAPC/AQAAAAEAAACyCwAAAAAAALILAAAAAAAAAAAAAAAA8L8"
				],
				[
					241,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAL8dAAAAAAAAwB0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAvx0AAAAAAAC/HQAAAAAAAAAAAAAAAPC/AQAAAAEAAACyCwAAAAAAALILAAAAAAAAAAAAAAAA8L8"
				],
				[
					242,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAMAdAAAAAAAAwh0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAwB0AAAAAAADAHQAAAAAAAAAAAAAAAPC/AQAAAAEAAACyCwAAAAAAALILAAAAAAAAAAAAAAAA8L8"
				],
				[
					243,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAMEdAAAAAAAAwh0AAAAAAAAAAAAAwh0AAAAAAADKHQAAAAAAAAAAAADKHQAAAAAAAMsdAAAAAAAAAAAAAMsdAAAAAAAA0x0AAAAAAAAAAAAAwh0AAAAAAADCHQAAAAAAAAgAAAAgICAgICAgIMIdAAAAAAAAzh0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAwR0AAAAAAADBHQAAAAAAAAAAAAAAAPC/AQAAAAEAAACyCwAAAAAAALILAAAAAAAAAAAAAAAA8L8"
				],
				[
					244,
					1,
					"insert",
					{
						"characters": "prog_id"
					},
					"BwAAAM4dAAAAAAAAzx0AAAAAAAAAAAAAzx0AAAAAAADQHQAAAAAAAAAAAADQHQAAAAAAANEdAAAAAAAAAAAAANEdAAAAAAAA0h0AAAAAAAAAAAAA0h0AAAAAAADTHQAAAAAAAAAAAADTHQAAAAAAANQdAAAAAAAAAAAAANQdAAAAAAAA1R0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAzh0AAAAAAADOHQAAAAAAAAAAAAAAAPC/AQAAAAEAAACyCwAAAAAAALILAAAAAAAAAAAAAAAA8L8"
				],
				[
					245,
					1,
					"cut",
					null,
					"AQAAAMIdAAAAAAAAwh0AAAAAAAAUAAAAICAgICAgICAgICAgcHJvZ19pZAo",
					"AgAAAAAAAAABAAAA1R0AAAAAAADVHQAAAAAAAAAAAAAAAPC/AQAAAAEAAACyCwAAAAAAALILAAAAAAAAAAAAAAAA8L8"
				],
				[
					250,
					1,
					"cut",
					null,
					"AQAAAMIdAAAAAAAAwh0AAAAAAAAKAAAAICAgICAgICB9Cg",
					"AgAAAAAAAAABAAAAwh0AAAAAAADCHQAAAAAAAAAAAAAAAAAAAQAAAAEAAACyCwAAAAAAALILAAAAAAAAAAAAAAAA8L8"
				],
				[
					254,
					2,
					"left_delete",
					null,
					"AgAAAMAdAAAAAAAAwB0AAAAAAAABAAAAe78dAAAAAAAAvx0AAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAwR0AAAAAAADBHQAAAAAAAP///////+9/AQAAAAEAAACyCwAAAAAAALILAAAAAAAAAAAAAAAA8L8"
				],
				[
					255,
					1,
					"insert",
					{
						"characters": "::new"
					},
					"BQAAAL8dAAAAAAAAwB0AAAAAAAAAAAAAwB0AAAAAAADBHQAAAAAAAAAAAADBHQAAAAAAAMIdAAAAAAAAAAAAAMIdAAAAAAAAwx0AAAAAAAAAAAAAwx0AAAAAAADEHQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAvx0AAAAAAAC/HQAAAAAAAAAAAAAAAPC/AQAAAAEAAACyCwAAAAAAALILAAAAAAAAAAAAAAAA8L8"
				],
				[
					256,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAMQdAAAAAAAAxh0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAxB0AAAAAAADEHQAAAAAAAAAAAAAAAPC/AQAAAAEAAACyCwAAAAAAALILAAAAAAAAAAAAAAAA8L8"
				],
				[
					258,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAMYdAAAAAAAAxx0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAxh0AAAAAAADGHQAAAAAAAAAAAAAAAPC/AQAAAAEAAACyCwAAAAAAALILAAAAAAAAAAAAAAAA8L8"
				],
				[
					264,
					1,
					"insert",
					{
						"characters": " mut"
					},
					"BAAAAJQdAAAAAAAAlR0AAAAAAAAAAAAAlR0AAAAAAACWHQAAAAAAAAAAAACWHQAAAAAAAJcdAAAAAAAAAAAAAJcdAAAAAAAAmB0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAlB0AAAAAAACUHQAAAAAAAAAAAAAAAPC/AQAAAAEAAACyCwAAAAAAALILAAAAAAAAAAAAAAAA8L8"
				],
				[
					270,
					1,
					"insert",
					{
						"characters": "engine::"
					},
					"CAAAALcdAAAAAAAAuB0AAAAAAAAAAAAAuB0AAAAAAAC5HQAAAAAAAAAAAAC5HQAAAAAAALodAAAAAAAAAAAAALodAAAAAAAAux0AAAAAAAAAAAAAux0AAAAAAAC8HQAAAAAAAAAAAAC8HQAAAAAAAL0dAAAAAAAAAAAAAL0dAAAAAAAAvh0AAAAAAAAAAAAAvh0AAAAAAAC/HQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAtx0AAAAAAAC3HQAAAAAAAAAAAAAAAPC/AQAAAAEAAACyCwAAAAAAALILAAAAAAAAAAAAAAAA8L8"
				],
				[
					278,
					1,
					"insert",
					{
						"characters": "&mut"
					},
					"BAAAAPQdAAAAAAAA9R0AAAAAAAAAAAAA9R0AAAAAAAD2HQAAAAAAAAAAAAD2HQAAAAAAAPcdAAAAAAAAAAAAAPcdAAAAAAAA+B0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA9B0AAAAAAAD0HQAAAAAAAAAAAAAAAPC/AQAAAAEAAACyCwAAAAAAALILAAAAAAAAAAAAAAAA8L8"
				],
				[
					279,
					1,
					"insert",
					{
						"characters": " engine_state,"
					},
					"DgAAAPgdAAAAAAAA+R0AAAAAAAAAAAAA+R0AAAAAAAD6HQAAAAAAAAAAAAD6HQAAAAAAAPsdAAAAAAAAAAAAAPsdAAAAAAAA/B0AAAAAAAAAAAAA/B0AAAAAAAD9HQAAAAAAAAAAAAD9HQAAAAAAAP4dAAAAAAAAAAAAAP4dAAAAAAAA/x0AAAAAAAAAAAAA/x0AAAAAAAAAHgAAAAAAAAAAAAAAHgAAAAAAAAEeAAAAAAAAAAAAAAEeAAAAAAAAAh4AAAAAAAAAAAAAAh4AAAAAAAADHgAAAAAAAAAAAAADHgAAAAAAAAQeAAAAAAAAAAAAAAQeAAAAAAAABR4AAAAAAAAAAAAABR4AAAAAAAAGHgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA+B0AAAAAAAD4HQAAAAAAAAAAAAAAAPC/AQAAAAEAAACyCwAAAAAAALILAAAAAAAAAAAAAAAA8L8"
				],
				[
					280,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAYeAAAAAAAABx4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAABh4AAAAAAAAGHgAAAAAAAAAAAAAAAPC/AQAAAAEAAACyCwAAAAAAALILAAAAAAAAAAAAAAAA8L8"
				],
				[
					285,
					1,
					"insert",
					{
						"characters": "&mut"
					},
					"BAAAAFQfAAAAAAAAVR8AAAAAAAAAAAAAVR8AAAAAAABWHwAAAAAAAAAAAABWHwAAAAAAAFcfAAAAAAAAAAAAAFcfAAAAAAAAWB8AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAVB8AAAAAAABUHwAAAAAAAAAAAAAAAPC/AQAAAAEAAACyCwAAAAAAALILAAAAAAAAAAAAAAAA8L8"
				],
				[
					286,
					1,
					"insert",
					{
						"characters": " ,"
					},
					"AgAAAFgfAAAAAAAAWR8AAAAAAAAAAAAAWR8AAAAAAABaHwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAWB8AAAAAAABYHwAAAAAAAAAAAAAAAPC/AQAAAAEAAACyCwAAAAAAALILAAAAAAAAAAAAAAAA8L8"
				],
				[
					287,
					2,
					"left_delete",
					null,
					"AgAAAFkfAAAAAAAAWR8AAAAAAAABAAAALFgfAAAAAAAAWB8AAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAWh8AAAAAAABaHwAAAAAAAAAAAAAAAPC/AQAAAAEAAACyCwAAAAAAALILAAAAAAAAAAAAAAAA8L8"
				],
				[
					288,
					1,
					"insert",
					{
						"characters": " engine_state,"
					},
					"DgAAAFgfAAAAAAAAWR8AAAAAAAAAAAAAWR8AAAAAAABaHwAAAAAAAAAAAABaHwAAAAAAAFsfAAAAAAAAAAAAAFsfAAAAAAAAXB8AAAAAAAAAAAAAXB8AAAAAAABdHwAAAAAAAAAAAABdHwAAAAAAAF4fAAAAAAAAAAAAAF4fAAAAAAAAXx8AAAAAAAAAAAAAXx8AAAAAAABgHwAAAAAAAAAAAABgHwAAAAAAAGEfAAAAAAAAAAAAAGEfAAAAAAAAYh8AAAAAAAAAAAAAYh8AAAAAAABjHwAAAAAAAAAAAABjHwAAAAAAAGQfAAAAAAAAAAAAAGQfAAAAAAAAZR8AAAAAAAAAAAAAZR8AAAAAAABmHwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAWB8AAAAAAABYHwAAAAAAAAAAAAAAAPC/AQAAAAEAAACyCwAAAAAAALILAAAAAAAAAAAAAAAA8L8"
				],
				[
					289,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAGYfAAAAAAAAZx8AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAZh8AAAAAAABmHwAAAAAAAAAAAAAAAPC/AQAAAAEAAACyCwAAAAAAALILAAAAAAAAAAAAAAAA8L8"
				],
				[
					314,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAFweAAAAAAAAXR4AAAAAAAAAAAAAXR4AAAAAAABeHgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAXB4AAAAAAABcHgAAAAAAAAAAAAAAAPC/AQAAAAEAAACyCwAAAAAAALILAAAAAAAAAAAAAAAA8L8"
				],
				[
					315,
					1,
					"reindent",
					null,
					"AQAAAF4eAAAAAAAAah4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAXh4AAAAAAABeHgAAAAAAAAAAAAAAAPC/AQAAAAEAAACyCwAAAAAAALILAAAAAAAAAAAAAAAA8L8"
				],
				[
					317,
					1,
					"insert",
					{
						"characters": "prin"
					},
					"BQAAAF0eAAAAAAAAXh4AAAAAAAAAAAAAXx4AAAAAAABfHgAAAAAAAAwAAAAgICAgICAgICAgICBeHgAAAAAAAF8eAAAAAAAAAAAAAF8eAAAAAAAAYB4AAAAAAAAAAAAAYB4AAAAAAABhHgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAXR4AAAAAAABdHgAAAAAAAAAAAAAAgFVAAQAAAAEAAACyCwAAAAAAALILAAAAAAAAAAAAAAAA8L8"
				],
				[
					319,
					1,
					"insert",
					{
						"characters": "\t\t\t"
					},
					"AwAAAF0eAAAAAAAAYR4AAAAAAAAAAAAAYR4AAAAAAABlHgAAAAAAAAAAAABlHgAAAAAAAGkeAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAXR4AAAAAAABdHgAAAAAAAAAAAAAAAAAAAQAAAAEAAACyCwAAAAAAALILAAAAAAAAAAAAAAAA8L8"
				],
				[
					322,
					1,
					"insert",
					{
						"characters": "println!"
					},
					"CQAAAGkeAAAAAAAAah4AAAAAAAAAAAAAah4AAAAAAABqHgAAAAAAAAQAAABwcmluah4AAAAAAABrHgAAAAAAAAAAAABrHgAAAAAAAGweAAAAAAAAAAAAAGweAAAAAAAAbR4AAAAAAAAAAAAAbR4AAAAAAABuHgAAAAAAAAAAAABuHgAAAAAAAG8eAAAAAAAAAAAAAG8eAAAAAAAAcB4AAAAAAAAAAAAAcB4AAAAAAABxHgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAbR4AAAAAAABpHgAAAAAAAAAAAAAAAPC/AQAAAAEAAACyCwAAAAAAALILAAAAAAAAAAAAAAAA8L8"
				],
				[
					323,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAHEeAAAAAAAAcx4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAcR4AAAAAAABxHgAAAAAAAAAAAAAAAPC/AQAAAAEAAACyCwAAAAAAALILAAAAAAAAAAAAAAAA8L8"
				],
				[
					324,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAHIeAAAAAAAAdB4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAch4AAAAAAAByHgAAAAAAAAAAAAAAAPC/AQAAAAEAAACyCwAAAAAAALILAAAAAAAAAAAAAAAA8L8"
				],
				[
					325,
					1,
					"insert",
					{
						"characters": "doing"
					},
					"BQAAAHMeAAAAAAAAdB4AAAAAAAAAAAAAdB4AAAAAAAB1HgAAAAAAAAAAAAB1HgAAAAAAAHYeAAAAAAAAAAAAAHYeAAAAAAAAdx4AAAAAAAAAAAAAdx4AAAAAAAB4HgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAcx4AAAAAAABzHgAAAAAAAAAAAAAAAPC/AQAAAAEAAACyCwAAAAAAALILAAAAAAAAAAAAAAAA8L8"
				],
				[
					326,
					1,
					"insert",
					{
						"characters": " stuff"
					},
					"BgAAAHgeAAAAAAAAeR4AAAAAAAAAAAAAeR4AAAAAAAB6HgAAAAAAAAAAAAB6HgAAAAAAAHseAAAAAAAAAAAAAHseAAAAAAAAfB4AAAAAAAAAAAAAfB4AAAAAAAB9HgAAAAAAAAAAAAB9HgAAAAAAAH4eAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAeB4AAAAAAAB4HgAAAAAAAAAAAAAAAPC/AQAAAAEAAACyCwAAAAAAALILAAAAAAAAAAAAAAAA8L8"
				],
				[
					328,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAIAeAAAAAAAAgR4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAgB4AAAAAAACAHgAAAAAAAP///////+9/AQAAAAEAAACyCwAAAAAAALILAAAAAAAAAAAAAAAA8L8"
				],
				[
					346,
					1,
					"insert",
					{
						"characters": "\npritln"
					},
					"CQAAAMAeAAAAAAAAwR4AAAAAAAAAAAAAwR4AAAAAAADNHgAAAAAAAAAAAADNHgAAAAAAANEeAAAAAAAAAAAAANEeAAAAAAAA0h4AAAAAAAAAAAAA0h4AAAAAAADTHgAAAAAAAAAAAADTHgAAAAAAANQeAAAAAAAAAAAAANQeAAAAAAAA1R4AAAAAAAAAAAAA1R4AAAAAAADWHgAAAAAAAAAAAADWHgAAAAAAANceAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAwB4AAAAAAADAHgAAAAAAAP///////+9/AQAAAAEAAACyCwAAAAAAALILAAAAAAAAAAAAAAAA8L8"
				],
				[
					348,
					1,
					"insert",
					{
						"characters": "println!"
					},
					"CQAAANEeAAAAAAAA0h4AAAAAAAAAAAAA0h4AAAAAAADSHgAAAAAAAAYAAABwcml0bG7SHgAAAAAAANMeAAAAAAAAAAAAANMeAAAAAAAA1B4AAAAAAAAAAAAA1B4AAAAAAADVHgAAAAAAAAAAAADVHgAAAAAAANYeAAAAAAAAAAAAANYeAAAAAAAA1x4AAAAAAAAAAAAA1x4AAAAAAADYHgAAAAAAAAAAAADYHgAAAAAAANkeAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA1x4AAAAAAADRHgAAAAAAAAAAAAAAAPC/AQAAAAEAAACyCwAAAAAAALILAAAAAAAAAAAAAAAA8L8"
				],
				[
					349,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAANkeAAAAAAAA2x4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA2R4AAAAAAADZHgAAAAAAAAAAAAAAAPC/AQAAAAEAAACyCwAAAAAAALILAAAAAAAAAAAAAAAA8L8"
				],
				[
					350,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAANoeAAAAAAAA3B4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA2h4AAAAAAADaHgAAAAAAAAAAAAAAAPC/AQAAAAEAAACyCwAAAAAAALILAAAAAAAAAAAAAAAA8L8"
				],
				[
					351,
					1,
					"insert",
					{
						"characters": "message!"
					},
					"CAAAANseAAAAAAAA3B4AAAAAAAAAAAAA3B4AAAAAAADdHgAAAAAAAAAAAADdHgAAAAAAAN4eAAAAAAAAAAAAAN4eAAAAAAAA3x4AAAAAAAAAAAAA3x4AAAAAAADgHgAAAAAAAAAAAADgHgAAAAAAAOEeAAAAAAAAAAAAAOEeAAAAAAAA4h4AAAAAAAAAAAAA4h4AAAAAAADjHgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA2x4AAAAAAADbHgAAAAAAAAAAAAAAAPC/AQAAAAEAAACyCwAAAAAAALILAAAAAAAAAAAAAAAA8L8"
				],
				[
					353,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAOUeAAAAAAAA5h4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA5R4AAAAAAADlHgAAAAAAAP///////+9/AQAAAAEAAACyCwAAAAAAALILAAAAAAAAAAAAAAAA8L8"
				],
				[
					397,
					1,
					"insert",
					{
						"characters": "PeekMesa"
					},
					"CQAAAJIeAAAAAAAAkx4AAAAAAAAAAAAAkx4AAAAAAACTHgAAAAAAAAsAAABHZXRNZXNzYWdlQZMeAAAAAAAAlB4AAAAAAAAAAAAAlB4AAAAAAACVHgAAAAAAAAAAAACVHgAAAAAAAJYeAAAAAAAAAAAAAJYeAAAAAAAAlx4AAAAAAAAAAAAAlx4AAAAAAACYHgAAAAAAAAAAAACYHgAAAAAAAJkeAAAAAAAAAAAAAJkeAAAAAAAAmh4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAnR4AAAAAAACSHgAAAAAAAAAAAAAAAPC/AQAAAAEAAACyCwAAAAAAALILAAAAAAAAAAAAAAAA8L8"
				],
				[
					399,
					2,
					"left_delete",
					null,
					"AgAAAJkeAAAAAAAAmR4AAAAAAAABAAAAYZgeAAAAAAAAmB4AAAAAAAABAAAAcw",
					"AgAAAAAAAAABAAAAmh4AAAAAAACaHgAAAAAAAAAAAAAAAPC/AQAAAAEAAACyCwAAAAAAALILAAAAAAAAAAAAAAAA8L8"
				],
				[
					400,
					1,
					"insert",
					{
						"characters": "ssage"
					},
					"BQAAAJgeAAAAAAAAmR4AAAAAAAAAAAAAmR4AAAAAAACaHgAAAAAAAAAAAACaHgAAAAAAAJseAAAAAAAAAAAAAJseAAAAAAAAnB4AAAAAAAAAAAAAnB4AAAAAAACdHgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAmB4AAAAAAACYHgAAAAAAAAAAAAAAAPC/AQAAAAEAAACyCwAAAAAAALILAAAAAAAAAAAAAAAA8L8"
				],
				[
					409,
					1,
					"insert",
					{
						"characters": "A"
					},
					"AQAAAJ0eAAAAAAAAnh4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAnR4AAAAAAACdHgAAAAAAAAAAAAAAAPC/AQAAAAEAAACyCwAAAAAAALILAAAAAAAAAAAAAAAA8L8"
				],
				[
					414,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAALceAAAAAAAAuB4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAtx4AAAAAAAC3HgAAAAAAAAAAAAAAAPC/AQAAAAEAAACyCwAAAAAAALILAAAAAAAAAAAAAAAA8L8"
				],
				[
					415,
					1,
					"insert",
					{
						"characters": " PMR"
					},
					"BAAAALgeAAAAAAAAuR4AAAAAAAAAAAAAuR4AAAAAAAC6HgAAAAAAAAAAAAC6HgAAAAAAALseAAAAAAAAAAAAALseAAAAAAAAvB4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAuB4AAAAAAAC4HgAAAAAAAAAAAAAAAPC/AQAAAAEAAACyCwAAAAAAALILAAAAAAAAAAAAAAAA8L8"
				],
				[
					416,
					1,
					"left_delete",
					null,
					"AQAAALseAAAAAAAAux4AAAAAAAABAAAAUg",
					"AgAAAAAAAAABAAAAvB4AAAAAAAC8HgAAAAAAAAAAAAAAAPC/AQAAAAEAAACyCwAAAAAAALILAAAAAAAAAAAAAAAA8L8"
				],
				[
					417,
					1,
					"insert",
					{
						"characters": "_REMOVE"
					},
					"BwAAALseAAAAAAAAvB4AAAAAAAAAAAAAvB4AAAAAAAC9HgAAAAAAAAAAAAC9HgAAAAAAAL4eAAAAAAAAAAAAAL4eAAAAAAAAvx4AAAAAAAAAAAAAvx4AAAAAAADAHgAAAAAAAAAAAADAHgAAAAAAAMEeAAAAAAAAAAAAAMEeAAAAAAAAwh4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAux4AAAAAAAC7HgAAAAAAAAAAAAAAAPC/AQAAAAEAAACyCwAAAAAAALILAAAAAAAAAAAAAAAA8L8"
				],
				[
					435,
					1,
					"cut",
					null,
					"AQAAAM0eAAAAAAAAzR4AAAAAAAAmAAAAICAgICAgICAgICAgICAgIHByaW50bG4hKCJtZXNzYWdlISIpOwo",
					"AgAAAAAAAAABAAAA8h4AAAAAAADyHgAAAAAAAAAAAAAAYHNAAQAAAAEAAACyCwAAAAAAALILAAAAAAAAAAAAAAAA8L8"
				],
				[
					437,
					1,
					"cut",
					null,
					"AQAAAF0eAAAAAAAAXR4AAAAAAAAlAAAAICAgICAgICAgICAgcHJpbnRsbiEoImRvaW5nIHN0dWZmIik7Cg",
					"AgAAAAAAAAABAAAAXR4AAAAAAABdHgAAAAAAAAAAAAAAAAAAAQAAAAEAAACyCwAAAAAAALILAAAAAAAAAAAAAAAA8L8"
				],
				[
					438,
					2,
					"rust_fmt_format_buffer",
					null,
					"AQAAAF0eAAAAAAAAXR4AAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAXR4AAAAAAABdHgAAAAAAAAAAAAAAAPC/AQAAAAEAAACyCwAAAAAAALILAAAAAAAAAAAAAAAA8L8"
				],
				[
					448,
					1,
					"insert",
					{
						"characters": "engine_state,"
					},
					"DQAAADIfAAAAAAAAMx8AAAAAAAAAAAAAMx8AAAAAAAA0HwAAAAAAAAAAAAA0HwAAAAAAADUfAAAAAAAAAAAAADUfAAAAAAAANh8AAAAAAAAAAAAANh8AAAAAAAA3HwAAAAAAAAAAAAA3HwAAAAAAADgfAAAAAAAAAAAAADgfAAAAAAAAOR8AAAAAAAAAAAAAOR8AAAAAAAA6HwAAAAAAAAAAAAA6HwAAAAAAADsfAAAAAAAAAAAAADsfAAAAAAAAPB8AAAAAAAAAAAAAPB8AAAAAAAA9HwAAAAAAAAAAAAA9HwAAAAAAAD4fAAAAAAAAAAAAAD4fAAAAAAAAPx8AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAMh8AAAAAAAAyHwAAAAAAAAAAAAAAAPC/AQAAAAEAAACyCwAAAAAAALILAAAAAAAAAAAAAAAA8L8"
				],
				[
					449,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAD8fAAAAAAAAQB8AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAPx8AAAAAAAA/HwAAAAAAAAAAAAAAAPC/AQAAAAEAAACyCwAAAAAAALILAAAAAAAAAAAAAAAA8L8"
				],
				[
					452,
					1,
					"insert",
					{
						"characters": "&"
					},
					"AQAAADIfAAAAAAAAMx8AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAMh8AAAAAAAAyHwAAAAAAAAAAAAAAAPC/AQAAAAEAAACyCwAAAAAAALILAAAAAAAAAAAAAAAA8L8"
				],
				[
					455,
					2,
					"swap_line_down",
					null,
					"BAAAAJAfAAAAAAAAwB8AAAAAAAAAAAAAHx8AAAAAAAAfHwAAAAAAADAAAAAgICAgICAgICAgICByZW5kZXIoJmVuZ2luZV9zdGF0ZSwgJnJlbmRlcl9hcGkpOwqvHwAAAAAAAN8fAAAAAAAAAAAAAGAfAAAAAAAAYB8AAAAAAAAwAAAAICAgICAgICAgICAgcmVuZGVyKCZlbmdpbmVfc3RhdGUsICZyZW5kZXJfYXBpKTsK",
					"AgAAAAAAAAABAAAAMx8AAAAAAAAzHwAAAAAAAAAAAAAAAPC/AQAAAAEAAACyCwAAAAAAALILAAAAAAAAAAAAAAAA8L8"
				],
				[
					473,
					1,
					"insert",
					{
						"characters": "frame_start"
					},
					"DAAAADofAAAAAAAAOx8AAAAAAAAAAAAAOx8AAAAAAAA7HwAAAAAAAAQAAABsb29wOx8AAAAAAAA8HwAAAAAAAAAAAAA8HwAAAAAAAD0fAAAAAAAAAAAAAD0fAAAAAAAAPh8AAAAAAAAAAAAAPh8AAAAAAAA/HwAAAAAAAAAAAAA/HwAAAAAAAEAfAAAAAAAAAAAAAEAfAAAAAAAAQR8AAAAAAAAAAAAAQR8AAAAAAABCHwAAAAAAAAAAAABCHwAAAAAAAEMfAAAAAAAAAAAAAEMfAAAAAAAARB8AAAAAAAAAAAAARB8AAAAAAABFHwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAPh8AAAAAAAA6HwAAAAAAAAAAAAAAAPC/AQAAAAEAAACyCwAAAAAAALILAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "gengar_render_opengl/src/lib.rs",
			"settings":
			{
				"buffer_size": 20,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"insert",
					{
						"characters": "ogl_rene"
					},
					"CQAAAAgAAAAAAAAACQAAAAAAAAAAAAAACQAAAAAAAAAJAAAAAAAAAAYAAAByZW5kZXIJAAAAAAAAAAoAAAAAAAAAAAAAAAoAAAAAAAAACwAAAAAAAAAAAAAACwAAAAAAAAAMAAAAAAAAAAAAAAAMAAAAAAAAAA0AAAAAAAAAAAAAAA0AAAAAAAAADgAAAAAAAAAAAAAADgAAAAAAAAAPAAAAAAAAAAAAAAAPAAAAAAAAABAAAAAAAAAAAAAAAA",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA4AAAAAAAAACAAAAAAAAAAAAAAAAADwvw"
				],
				[
					4,
					1,
					"left_delete",
					null,
					"AQAAAA8AAAAAAAAADwAAAAAAAAABAAAAZQ",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABAAAAAAAAAAEAAAAAAAAAAAAAAAAADwvw"
				],
				[
					5,
					1,
					"insert",
					{
						"characters": "der"
					},
					"AwAAAA8AAAAAAAAAEAAAAAAAAAAAAAAAEAAAAAAAAAARAAAAAAAAAAAAAAARAAAAAAAAABIAAAAAAAAAAAAAAA",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA8AAAAAAAAADwAAAAAAAAAAAAAAAADwvw"
				],
				[
					9,
					2,
					"left_delete",
					null,
					"AgAAAAoAAAAAAAAACgAAAAAAAAABAAAAbAkAAAAAAAAACQAAAAAAAAABAAAAZw",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAsAAAAAAAAACwAAAAAAAAAAAAAAAADwvw"
				],
				[
					10,
					1,
					"insert",
					{
						"characters": "dx"
					},
					"AgAAAAkAAAAAAAAACgAAAAAAAAAAAAAACgAAAAAAAAALAAAAAAAAAAAAAAA",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAkAAAAAAAAACQAAAAAAAAAAAAAAAADwvw"
				],
				[
					11,
					3,
					"left_delete",
					null,
					"AwAAAAoAAAAAAAAACgAAAAAAAAABAAAAeAkAAAAAAAAACQAAAAAAAAABAAAAZAgAAAAAAAAACAAAAAAAAAABAAAAbw",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAsAAAAAAAAACwAAAAAAAAAAAAAAAADwvw"
				],
				[
					12,
					1,
					"insert",
					{
						"characters": "dx"
					},
					"AgAAAAgAAAAAAAAACQAAAAAAAAAAAAAACQAAAAAAAAAKAAAAAAAAAAAAAAA",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAgAAAAAAAAACAAAAAAAAAAAAAAAAADwvw"
				],
				[
					13,
					2,
					"left_delete",
					null,
					"AgAAAAkAAAAAAAAACQAAAAAAAAABAAAAeAgAAAAAAAAACAAAAAAAAAABAAAAZA",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAoAAAAAAAAACgAAAAAAAAAAAAAAAADwvw"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": "ogl"
					},
					"AwAAAAgAAAAAAAAACQAAAAAAAAAAAAAACQAAAAAAAAAKAAAAAAAAAAAAAAAKAAAAAAAAAAsAAAAAAAAAAAAAAA",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAgAAAAAAAAACAAAAAAAAAAAAAAAAADwvw"
				],
				[
					18,
					1,
					"insert",
					{
						"characters": "j"
					},
					"AQAAABQAAAAAAAAAFQAAAAAAAAAAAAAA",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABQAAAAAAAAAFAAAAAAAAAAAAAAAAADwvw"
				],
				[
					19,
					1,
					"left_delete",
					null,
					"AQAAABQAAAAAAAAAFAAAAAAAAAABAAAAag",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABUAAAAAAAAAFQAAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "gengar_renderapi_opengl_windows/src/lib.rs",
			"settings":
			{
				"buffer_size": 37,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					9,
					1,
					"insert",
					{
						"characters": "wgl_api"
					},
					"CAAAABwAAAAAAAAAHQAAAAAAAAAAAAAAHQAAAAAAAAAdAAAAAAAAAAYAAAByZW5kZXIdAAAAAAAAAB4AAAAAAAAAAAAAAB4AAAAAAAAAHwAAAAAAAAAAAAAAHwAAAAAAAAAgAAAAAAAAAAAAAAAgAAAAAAAAACEAAAAAAAAAAAAAACEAAAAAAAAAIgAAAAAAAAAAAAAAIgAAAAAAAAAjAAAAAAAAAAAAAAA",
					"GAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABwAAAAAAAAAIgAAAAAAAAAAAAAAAADwvw"
				],
				[
					22,
					1,
					"cut",
					null,
					"AQAAACYAAAAAAAAAJgAAAAAAAAAbAAAAcHViIGZuIGdldF9yZW5kZXJfYXBpKCkge30K",
					"GAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADUAAAAAAAAANQAAAAAAAAAAAAAAAABbQA"
				],
				[
					23,
					1,
					"left_delete",
					null,
					"AQAAACUAAAAAAAAAJQAAAAAAAAABAAAACg",
					"GAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACYAAAAAAAAAJgAAAAAAAAAAAAAAAADwvw"
				],
				[
					25,
					1,
					"left_delete",
					null,
					"AQAAACQAAAAAAAAAJAAAAAAAAAABAAAACg",
					"GAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACUAAAAAAAAAJQAAAAAAAAAAAAAAAADwvw"
				],
				[
					26,
					1,
					"rust_fmt_format_buffer",
					null,
					"AQAAACQAAAAAAAAAJQAAAAAAAAAAAAAA",
					"GAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACQAAAAAAAAAJAAAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "gengar_renderapi_opengl_windows/src/wgl_api.rs",
			"settings":
			{
				"buffer_size": 10219,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					3424,
					1,
					"left_delete",
					null,
					"AQAAAC0cAAAAAAAALRwAAAAAAAABAAAAaQ",
					"AgAAAAAAAAABAAAAkgsAAAAAAACSCwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAuHAAAAAAAAC4cAAAAAAAAAAAAAAAA8L8"
				],
				[
					3425,
					1,
					"insert",
					{
						"characters": "u"
					},
					"AQAAAC0cAAAAAAAALhwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAkgsAAAAAAACSCwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAtHAAAAAAAAC0cAAAAAAAAAAAAAAAA8L8"
				],
				[
					3434,
					1,
					"left_delete",
					null,
					"AQAAADkaAAAAAAAAORoAAAAAAAABAAAAaQ",
					"AgAAAAAAAAABAAAAkgsAAAAAAACSCwAAAAAAAAAAAAAAAPC/AQAAAAEAAAA6GgAAAAAAADoaAAAAAAAAAAAAAAAA8L8"
				],
				[
					3435,
					1,
					"insert",
					{
						"characters": "u"
					},
					"AQAAADkaAAAAAAAAOhoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAkgsAAAAAAACSCwAAAAAAAAAAAAAAAPC/AQAAAAEAAAA5GgAAAAAAADkaAAAAAAAAAAAAAAAA8L8"
				],
				[
					3448,
					1,
					"left_delete",
					null,
					"AQAAAHQEAAAAAAAAdAQAAAAAAAABAAAAaQ",
					"AgAAAAAAAAABAAAAkgsAAAAAAACSCwAAAAAAAAAAAAAAAPC/AQAAAAEAAAB1BAAAAAAAAHUEAAAAAAAAAAAAAAAA8L8"
				],
				[
					3449,
					1,
					"insert",
					{
						"characters": "u"
					},
					"AQAAAHQEAAAAAAAAdQQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAkQsAAAAAAACRCwAAAAAAAAAAAAAAAPC/AQAAAAEAAAB0BAAAAAAAAHQEAAAAAAAAAAAAAAAA8L8"
				],
				[
					3462,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAFcFAAAAAAAAWAUAAAAAAAAAAAAAWAUAAAAAAABZBQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAkgsAAAAAAACSCwAAAAAAAAAAAAAAAPC/AQAAAAEAAABXBQAAAAAAAFcFAAAAAAAA////////738"
				],
				[
					3463,
					1,
					"paste",
					null,
					"AQAAAFkFAAAAAAAAbQYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAlAsAAAAAAACUCwAAAAAAAAAAAAAAAPC/AQAAAAEAAABZBQAAAAAAAFkFAAAAAAAAAAAAAAAA8L8"
				],
				[
					3464,
					2,
					"rust_fmt_format_buffer",
					null,
					"CwAAAFkFAAAAAAAAWQUAAAAAAAAMAAAAICAgICAgICAgICAgcwUAAAAAAAB4BQAAAAAAAAAAAACOBQAAAAAAAJIFAAAAAAAAAAAAAKgFAAAAAAAArAUAAAAAAAAAAAAAxgUAAAAAAADIBQAAAAAAAAAAAADRBQAAAAAAANUFAAAAAAAAAAAAAPUFAAAAAAAA/gUAAAAAAAAAAAAAAAYAAAAAAAAIBgAAAAAAAAAAAABSBgAAAAAAAFgGAAAAAAAAAAAAAIgGAAAAAAAAiAYAAAAAAAADAAAAIH0KiAYAAAAAAACKBgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAqAwAAAAAAACoDAAAAAAAAAAAAAAAAPC/AQAAAAEAAABtBgAAAAAAAG0GAAAAAAAAAAAAAAAA8L8"
				],
				[
					3469,
					1,
					"left_delete",
					null,
					"AQAAAPgEAAAAAAAA+AQAAAAAAAABAAAAaQ",
					"AgAAAAAAAAABAAAAxQwAAAAAAADFDAAAAAAAAAAAAAAAAPC/AQAAAAEAAAD5BAAAAAAAAPkEAAAAAAAAAAAAAAAA8L8"
				],
				[
					3470,
					1,
					"insert",
					{
						"characters": "u"
					},
					"AQAAAPgEAAAAAAAA+QQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAxAwAAAAAAADEDAAAAAAAAAAAAAAAAPC/AQAAAAEAAAD4BAAAAAAAAPgEAAAAAAAAAAAAAAAA8L8"
				],
				[
					3472,
					11,
					"cut",
					null,
					"CwAAAFkFAAAAAAAAWQUAAAAAAAAbAAAAcHViIHVuc2FmZSBmbiBHZXRTaGFkZXJpdigKWQUAAAAAAABZBQAAAAAAABsAAAAgICAgc2hhZGVyOiB0eXBlczo6R0x1aW50LApZBQAAAAAAAFkFAAAAAAAAGgAAACAgICBwbmFtZTogdHlwZXM6OkdMZW51bSwKWQUAAAAAAABZBQAAAAAAAB8AAAAgICAgcGFyYW1zOiAqbXV0IHR5cGVzOjpHTGludCwKWQUAAAAAAABZBQAAAAAAAAoAAAApIC0+ICgpIHsKWQUAAAAAAABZBQAAAAAAACQAAAAgICAgX19nbF9pbXBvcnRzOjptZW06OnRyYW5zbXV0ZTo6PApZBQAAAAAAAFkFAAAAAAAACwAAACAgICAgICAgXywKWQUAAAAAAABZBQAAAAAAAFMAAAAgICAgICAgIGV4dGVybiAic3lzdGVtIiBmbih0eXBlczo6R0x1aW50LCB0eXBlczo6R0xlbnVtLCAqbXV0IHR5cGVzOjpHTGludCkgLT4gKCksClkFAAAAAAAAWQUAAAAAAAA1AAAAICAgID4oc3RvcmFnZTo6R2V0U2hhZGVyaXYuZikoc2hhZGVyLCBwbmFtZSwgcGFyYW1zKQpZBQAAAAAAAFkFAAAAAAAAAgAAAH0KWQUAAAAAAABZBQAAAAAAAAEAAAAK",
					"AgAAAAAAAAABAAAAxQwAAAAAAADFDAAAAAAAAAAAAAAAAPC/AQAAAAEAAABzBQAAAAAAAHMFAAAAAAAAAAAAAAAgdUA"
				],
				[
					3486,
					1,
					"left_delete",
					null,
					"AQAAADcHAAAAAAAANwcAAAAAAAABAAAAaQ",
					"AgAAAAAAAAABAAAAkgsAAAAAAACSCwAAAAAAAAAAAAAAAPC/AQAAAAEAAAA4BwAAAAAAADgHAAAAAAAAAAAAAAAA8L8"
				],
				[
					3487,
					1,
					"insert",
					{
						"characters": "u"
					},
					"AQAAADcHAAAAAAAAOAcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAkQsAAAAAAACRCwAAAAAAAAAAAAAAAPC/AQAAAAEAAAA3BwAAAAAAADcHAAAAAAAAAAAAAAAA8L8"
				],
				[
					3500,
					1,
					"left_delete",
					null,
					"AQAAALUGAAAAAAAAtQYAAAAAAAABAAAAaQ",
					"AgAAAAAAAAABAAAAkgsAAAAAAACSCwAAAAAAAAAAAAAAAPC/AQAAAAEAAAC2BgAAAAAAALYGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3501,
					1,
					"insert",
					{
						"characters": "u"
					},
					"AQAAALUGAAAAAAAAtgYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAkQsAAAAAAACRCwAAAAAAAAAAAAAAAPC/AQAAAAEAAAC1BgAAAAAAALUGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3504,
					1,
					"left_delete",
					null,
					"AQAAALAGAAAAAAAAsAYAAAAAAAABAAAAaQ",
					"AgAAAAAAAAABAAAAkgsAAAAAAACSCwAAAAAAAAAAAAAAAPC/AQAAAAEAAACxBgAAAAAAALEGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3505,
					1,
					"insert",
					{
						"characters": "u"
					},
					"AQAAALAGAAAAAAAAsQYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAkQsAAAAAAACRCwAAAAAAAAAAAAAAAPC/AQAAAAEAAACwBgAAAAAAALAGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3520,
					1,
					"left_delete",
					null,
					"AQAAAIkFAAAAAAAAiQUAAAAAAAABAAAAaQ",
					"AgAAAAAAAAABAAAAkgsAAAAAAACSCwAAAAAAAAAAAAAAAPC/AQAAAAEAAACKBQAAAAAAAIoFAAAAAAAAAAAAAAAA8L8"
				],
				[
					3521,
					1,
					"insert",
					{
						"characters": "us"
					},
					"AgAAAIkFAAAAAAAAigUAAAAAAAAAAAAAigUAAAAAAACLBQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAkQsAAAAAAACRCwAAAAAAAAAAAAAAAPC/AQAAAAEAAACJBQAAAAAAAIkFAAAAAAAAAAAAAAAA8L8"
				],
				[
					3522,
					1,
					"left_delete",
					null,
					"AQAAAIoFAAAAAAAAigUAAAAAAAABAAAAcw",
					"AgAAAAAAAAABAAAAkwsAAAAAAACTCwAAAAAAAAAAAAAAAPC/AQAAAAEAAACLBQAAAAAAAIsFAAAAAAAAAAAAAAAA8L8"
				],
				[
					3563,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAABULAAAAAAAAFgsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAkgsAAAAAAACSCwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAVCwAAAAAAABULAAAAAAAAAAAAAAAA8L8"
				],
				[
					3564,
					1,
					"paste",
					null,
					"AQAAABYLAAAAAAAAzgsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAkwsAAAAAAACTCwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAWCwAAAAAAABYLAAAAAAAAAAAAAAAA8L8"
				],
				[
					3565,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line.sublime-macro"
					},
					"AQAAAM4LAAAAAAAAzwsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAASwwAAAAAAABLDAAAAAAAAAAAAAAAAPC/AQAAAAEAAADOCwAAAAAAAM4LAAAAAAAAAAAAAAAA8L8"
				],
				[
					3566,
					2,
					"rust_fmt_format_buffer",
					null,
					"BgAAABYLAAAAAAAAFgsAAAAAAAAMAAAAICAgICAgICAgICAgUQsAAAAAAABVCwAAAAAAAAAAAAChCwAAAAAAAKoLAAAAAAAAAAAAAMQLAAAAAAAAygsAAAAAAAAAAAAA0gsAAAAAAADSCwAAAAAAAAIAAAAgfdMLAAAAAAAA1AsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAATAwAAAAAAABMDAAAAAAAAAAAAAAAAPC/AQAAAAEAAADPCwAAAAAAAM8LAAAAAAAAAAAAAAAA8L8"
				],
				[
					3568,
					1,
					"insert",
					{
						"characters": "\n/*"
					},
					"AwAAABULAAAAAAAAFgsAAAAAAAAAAAAAFgsAAAAAAAAXCwAAAAAAAAAAAAAXCwAAAAAAABgLAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAUgwAAAAAAABSDAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAVCwAAAAAAABULAAAAAAAAAAAAAAAAAAA"
				],
				[
					3572,
					1,
					"insert",
					{
						"characters": "\n*/"
					},
					"AwAAANcLAAAAAAAA2AsAAAAAAAAAAAAA2AsAAAAAAADZCwAAAAAAAAAAAADZCwAAAAAAANoLAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAVQwAAAAAAABVDAAAAAAAAAAAAAAAAPC/AQAAAAEAAADXCwAAAAAAANcLAAAAAAAA////////738"
				],
				[
					3575,
					1,
					"insert",
					{
						"characters": "?"
					},
					"AQAAAG4DAAAAAAAAbwMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAWAwAAAAAAABYDAAAAAAAAAAAAAAAAPC/AQAAAAEAAABuAwAAAAAAAG4DAAAAAAAAAAAAAAAAAAA"
				],
				[
					3578,
					1,
					"left_delete",
					null,
					"AQAAAG4DAAAAAAAAbgMAAAAAAAABAAAAPw",
					"AgAAAAAAAAABAAAAWQwAAAAAAABZDAAAAAAAAAAAAAAAAPC/AQAAAAEAAABvAwAAAAAAAG8DAAAAAAAAAAAAAAAA8L8"
				],
				[
					3579,
					1,
					"insert",
					{
						"characters": "?"
					},
					"AQAAAG4DAAAAAAAAbwMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAWAwAAAAAAABYDAAAAAAAAAAAAAAAAPC/AQAAAAEAAABuAwAAAAAAAG4DAAAAAAAAAAAAAAAA8L8"
				],
				[
					3580,
					1,
					"left_delete",
					null,
					"AQAAAG4DAAAAAAAAbgMAAAAAAAABAAAAPw",
					"AgAAAAAAAAABAAAAWQwAAAAAAABZDAAAAAAAAAAAAAAAAPC/AQAAAAEAAABvAwAAAAAAAG8DAAAAAAAAAAAAAAAA8L8"
				],
				[
					3581,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAAG4DAAAAAAAAcQMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAWAwAAAAAAABYDAAAAAAAAAAAAAAAAPC/AQAAAAEAAABuAwAAAAAAAG4DAAAAAAAAAAAAAAAA8L8"
				],
				[
					3584,
					1,
					"cut",
					null,
					"AQAAAG4DAAAAAAAAbgMAAAAAAAApAAAALy8gI1thbGxvdyhpbXByb3Blcl9jdHlwZXNfZGVmaW5pdGlvbnMpXQo",
					"AgAAAAAAAAABAAAAWwwAAAAAAABbDAAAAAAAAAAAAAAAAPC/AQAAAAEAAABxAwAAAAAAAHEDAAAAAAAAAAAAAAAA8L8"
				],
				[
					3595,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAO8KAAAAAAAA8AoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAMgwAAAAAAAAyDAAAAAAAAAAAAAAAAPC/AQAAAAEAAADvCgAAAAAAAO8KAAAAAAAAAAAAAABAhEA"
				],
				[
					3596,
					1,
					"paste",
					null,
					"AQAAAPAKAAAAAAAAtAsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAMwwAAAAAAAAzDAAAAAAAAAAAAAAAAPC/AQAAAAEAAADwCgAAAAAAAPAKAAAAAAAAAAAAAAAA8L8"
				],
				[
					3597,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line.sublime-macro"
					},
					"AQAAALQLAAAAAAAAtQsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA9wwAAAAAAAD3DAAAAAAAAAAAAAAAAPC/AQAAAAEAAAC0CwAAAAAAALQLAAAAAAAAAAAAAAAA8L8"
				],
				[
					3604,
					1,
					"insert",
					{
						"characters": "BindVertexArray"
					},
					"EAAAAPwKAAAAAAAA/QoAAAAAAAAAAAAA/QoAAAAAAAD9CgAAAAAAABMAAABWZXJ0ZXhBdHRyaWJQb2ludGVy/QoAAAAAAAD+CgAAAAAAAAAAAAD+CgAAAAAAAP8KAAAAAAAAAAAAAP8KAAAAAAAAAAsAAAAAAAAAAAAAAAsAAAAAAAABCwAAAAAAAAAAAAABCwAAAAAAAAILAAAAAAAAAAAAAAILAAAAAAAAAwsAAAAAAAAAAAAAAwsAAAAAAAAECwAAAAAAAAAAAAAECwAAAAAAAAULAAAAAAAAAAAAAAULAAAAAAAABgsAAAAAAAAAAAAABgsAAAAAAAAHCwAAAAAAAAAAAAAHCwAAAAAAAAgLAAAAAAAAAAAAAAgLAAAAAAAACQsAAAAAAAAAAAAACQsAAAAAAAAKCwAAAAAAAAAAAAAKCwAAAAAAAAsLAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA+AwAAAAAAAD4DAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAPCwAAAAAAAPwKAAAAAAAAAAAAAAAA8L8"
				],
				[
					3612,
					1,
					"insert",
					{
						"characters": "u32"
					},
					"BAAAACYLAAAAAAAAJwsAAAAAAAAAAAAAJwsAAAAAAAAnCwAAAAAAAC0AAAB1MzIsIHUzMiwgaTMyLCBib29sLCBpMzIsICpjb25zdCBsaWJjOjpjX3ZvaWQnCwAAAAAAACgLAAAAAAAAAAAAACgLAAAAAAAAKQsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA9AwAAAAAAAD0DAAAAAAAAAAAAAAAAPC/AQAAAAEAAABTCwAAAAAAACYLAAAAAAAAAAAAAAAA8L8"
				],
				[
					3613,
					2,
					"rust_fmt_format_buffer",
					null,
					"AQAAAA0LAAAAAAAADQsAAAAAAAAEAAAACiAgIA",
					"AgAAAAAAAAABAAAAygwAAAAAAADKDAAAAAAAAAAAAAAAAPC/AQAAAAEAAAApCwAAAAAAACkLAAAAAAAAAAAAAAAA8L8"
				],
				[
					3623,
					6,
					"cut",
					null,
					"BgAAAIQLAAAAAAAAhAsAAAAAAAADAAAALyoKhAsAAAAAAACECwAAAAAAADwAAABwdWIgdW5zYWZlIGZuIEJpbmRWZXJ0ZXhBcnJheShhcnJheTogdHlwZXM6OkdMdWludCkgLT4gKCkgewqECwAAAAAAAIQLAAAAAAAAUAAAACAgICBfX2dsX2ltcG9ydHM6Om1lbTo6dHJhbnNtdXRlOjo8XywgZXh0ZXJuICJzeXN0ZW0iIGZuKHR5cGVzOjpHTHVpbnQpIC0+ICgpPigKhAsAAAAAAACECwAAAAAAACQAAAAgICAgICAgIHN0b3JhZ2U6OkJpbmRWZXJ0ZXhBcnJheS5mLAqECwAAAAAAAIQLAAAAAAAADQAAACAgICApKGFycmF5KQqECwAAAAAAAIQLAAAAAAAAAgAAAH0K",
					"AgAAAAAAAAABAAAAxgwAAAAAAADGDAAAAAAAAAAAAAAAAPC/AQAAAAEAAACGCwAAAAAAAIYLAAAAAAAAAAAAAADgd0A"
				],
				[
					3624,
					1,
					"left_delete",
					null,
					"AQAAAIMLAAAAAAAAgwsAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAABAwAAAAAAAAEDAAAAAAAAAAAAAAAAPC/AQAAAAEAAACECwAAAAAAAIQLAAAAAAAAAAAAAAAA8L8"
				],
				[
					3629,
					1,
					"cut",
					null,
					"AQAAAIMLAAAAAAAAgwsAAAAAAAADAAAAKi8K",
					"AgAAAAAAAAABAAAAAwwAAAAAAAADDAAAAAAAAAAAAAAAAPC/AQAAAAEAAACDCwAAAAAAAIMLAAAAAAAAAAAAAAAAAAA"
				],
				[
					3634,
					1,
					"insert",
					{
						"characters": "Ver"
					},
					"BAAAAEMLAAAAAAAARAsAAAAAAAAAAAAARAsAAAAAAABECwAAAAAAABMAAABWZXJ0ZXhBdHRyaWJQb2ludGVyRAsAAAAAAABFCwAAAAAAAAAAAABFCwAAAAAAAEYLAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAwAAAAAAAAADAAAAAAAAAAAAAAAAPC/AQAAAAEAAABWCwAAAAAAAEMLAAAAAAAAAAAAAAAA8L8"
				],
				[
					3635,
					3,
					"left_delete",
					null,
					"AwAAAEULAAAAAAAARQsAAAAAAAABAAAAckQLAAAAAAAARAsAAAAAAAABAAAAZUMLAAAAAAAAQwsAAAAAAAABAAAAVg",
					"AgAAAAAAAAABAAAA8AsAAAAAAADwCwAAAAAAAAAAAAAAAPC/AQAAAAEAAABGCwAAAAAAAEYLAAAAAAAAAAAAAAAA8L8"
				],
				[
					3636,
					1,
					"insert",
					{
						"characters": "BindVer"
					},
					"BwAAAEMLAAAAAAAARAsAAAAAAAAAAAAARAsAAAAAAABFCwAAAAAAAAAAAABFCwAAAAAAAEYLAAAAAAAAAAAAAEYLAAAAAAAARwsAAAAAAAAAAAAARwsAAAAAAABICwAAAAAAAAAAAABICwAAAAAAAEkLAAAAAAAAAAAAAEkLAAAAAAAASgsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA7QsAAAAAAADtCwAAAAAAAAAAAAAAAPC/AQAAAAEAAABDCwAAAAAAAEMLAAAAAAAAAAAAAAAA8L8"
				],
				[
					3638,
					1,
					"insert",
					{
						"characters": "texArray"
					},
					"CAAAAEoLAAAAAAAASwsAAAAAAAAAAAAASwsAAAAAAABMCwAAAAAAAAAAAABMCwAAAAAAAE0LAAAAAAAAAAAAAE0LAAAAAAAATgsAAAAAAAAAAAAATgsAAAAAAABPCwAAAAAAAAAAAABPCwAAAAAAAFALAAAAAAAAAAAAAFALAAAAAAAAUQsAAAAAAAAAAAAAUQsAAAAAAABSCwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA9AsAAAAAAAD0CwAAAAAAAAAAAAAAAPC/AQAAAAEAAABKCwAAAAAAAEoLAAAAAAAAAAAAAAAA8L8"
				],
				[
					3646,
					2,
					"cut",
					null,
					"AgAAAPAKAAAAAAAA8AoAAAAAAAA4AAAAdHlwZSBmdW5jX2dsQmluZFZlcnRleEFycmF5ID0gZXh0ZXJuICJzdGRjYWxsIiBmbih1MzIpOwrwCgAAAAAAAPAKAAAAAAAAVwAAAHN0YXRpYyBtdXQgZXh0ZXJuX2dsb2JhbF9nbEJpbmRWZXJ0ZXhBcnJheTogT3B0aW9uPGZ1bmNfZ2xWZXJ0ZXhBdHRyaWJQb2ludGVyPiA9IE5vbmU7Cg",
					"AgAAAAAAAAABAAAA/AsAAAAAAAD8CwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAnCwAAAAAAACcLAAAAAAAAAAAAAABYg0A"
				],
				[
					3647,
					1,
					"left_delete",
					null,
					"AQAAAO8KAAAAAAAA7woAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAbQsAAAAAAABtCwAAAAAAAAAAAAAAAPC/AQAAAAEAAADwCgAAAAAAAPAKAAAAAAAAAAAAAAAA8L8"
				],
				[
					3655,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAGwLAAAAAAAAbQsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAbAsAAAAAAABsCwAAAAAAAAAAAAAAAPC/AQAAAAEAAABsCwAAAAAAAGwLAAAAAAAAAAAAAACAVUA"
				],
				[
					3656,
					1,
					"paste",
					null,
					"AQAAAG0LAAAAAAAAzQwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAbQsAAAAAAABtCwAAAAAAAAAAAAAAAPC/AQAAAAEAAABtCwAAAAAAAG0LAAAAAAAAAAAAAAAA8L8"
				],
				[
					3657,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAM0MAAAAAAAAzgwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAzQwAAAAAAADNDAAAAAAAAAAAAAAAAPC/AQAAAAEAAADNDAAAAAAAAM0MAAAAAAAAAAAAAAAA8L8"
				],
				[
					3658,
					2,
					"rust_fmt_format_buffer",
					null,
					"EQAAAG0LAAAAAAAAbQsAAAAAAAAMAAAAICAgICAgICAgICAgiAsAAAAAAACNCwAAAAAAAAAAAAChCwAAAAAAAKULAAAAAAAAAAAAALwLAAAAAAAAwAsAAAAAAAAAAAAA1gsAAAAAAADaCwAAAAAAAAAAAAAEDAAAAAAAAAYMAAAAAAAAAAAAAA8MAAAAAAAAEwwAAAAAAAAAAAAAMwwAAAAAAAA8DAAAAAAAAAAAAAA+DAAAAAAAAEYMAAAAAAAAAAAAAFoMAAAAAAAAZwwAAAAAAAAAAAAAdQwAAAAAAACBDAAAAAAAAAAAAACRDAAAAAAAAJ0MAAAAAAAAAAAAAKwMAAAAAAAAuAwAAAAAAAAAAAAA2QwAAAAAAADjDAAAAAAAAAAAAADqDAAAAAAAAPAMAAAAAAAAAAAAACcNAAAAAAAAJw0AAAAAAAADAAAAIH0KJw0AAAAAAAApDQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAzgwAAAAAAADODAAAAAAAAAAAAAAAAPC/AQAAAAEAAADODAAAAAAAAM4MAAAAAAAAAAAAAAAA8L8"
				],
				[
					3663,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAGwLAAAAAAAAbQsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAKg0AAAAAAAAqDQAAAAAAAAAAAAAAAPC/AQAAAAEAAABsCwAAAAAAAGwLAAAAAAAAAAAAAAAwgEA"
				],
				[
					3664,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line.sublime-macro"
					},
					"AQAAAG0LAAAAAAAAbgsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAKw0AAAAAAAArDQAAAAAAAAAAAAAAAPC/AQAAAAEAAABtCwAAAAAAAG0LAAAAAAAAAAAAAAAA8L8"
				],
				[
					3665,
					1,
					"paste",
					null,
					"AQAAAG4LAAAAAAAA6QsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAALA0AAAAAAAAsDQAAAAAAAAAAAAAAAPC/AQAAAAEAAABuCwAAAAAAAG4LAAAAAAAAAAAAAAAA8L8"
				],
				[
					3666,
					2,
					"rust_fmt_format_buffer",
					null,
					"AQAAAG0LAAAAAAAAbQsAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAApw0AAAAAAACnDQAAAAAAAAAAAAAAAPC/AQAAAAEAAADpCwAAAAAAAOkLAAAAAAAAAAAAAAAA8L8"
				],
				[
					3669,
					1,
					"cut",
					null,
					"AQAAAGwLAAAAAAAAbAsAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAApg0AAAAAAACmDQAAAAAAAAAAAAAAAPC/AQAAAAEAAABsCwAAAAAAAGwLAAAAAAAAAAAAAAAwgEA"
				],
				[
					3672,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAOcLAAAAAAAA6AsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAApQ0AAAAAAAClDQAAAAAAAAAAAAAAAPC/AQAAAAEAAADnCwAAAAAAAOcLAAAAAAAA////////738"
				],
				[
					3675,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAGsLAAAAAAAAbAsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAApg0AAAAAAACmDQAAAAAAAAAAAAAAAPC/AQAAAAEAAABrCwAAAAAAAGsLAAAAAAAA////////738"
				],
				[
					3679,
					1,
					"insert",
					{
						"characters": "DrawEme"
					},
					"CAAAAHkLAAAAAAAAegsAAAAAAAAAAAAAegsAAAAAAAB6CwAAAAAAAAoAAABVc2VQcm9ncmFtegsAAAAAAAB7CwAAAAAAAAAAAAB7CwAAAAAAAHwLAAAAAAAAAAAAAHwLAAAAAAAAfQsAAAAAAAAAAAAAfQsAAAAAAAB+CwAAAAAAAAAAAAB+CwAAAAAAAH8LAAAAAAAAAAAAAH8LAAAAAAAAgAsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAApw0AAAAAAACnDQAAAAAAAAAAAAAAAPC/AQAAAAEAAACDCwAAAAAAAHkLAAAAAAAAAAAAAAAA8L8"
				],
				[
					3680,
					2,
					"left_delete",
					null,
					"AgAAAH8LAAAAAAAAfwsAAAAAAAABAAAAZX4LAAAAAAAAfgsAAAAAAAABAAAAbQ",
					"AgAAAAAAAAABAAAApA0AAAAAAACkDQAAAAAAAAAAAAAAAPC/AQAAAAEAAACACwAAAAAAAIALAAAAAAAAAAAAAAAA8L8"
				],
				[
					3681,
					1,
					"insert",
					{
						"characters": "lements"
					},
					"BwAAAH4LAAAAAAAAfwsAAAAAAAAAAAAAfwsAAAAAAACACwAAAAAAAAAAAACACwAAAAAAAIELAAAAAAAAAAAAAIELAAAAAAAAggsAAAAAAAAAAAAAggsAAAAAAACDCwAAAAAAAAAAAACDCwAAAAAAAIQLAAAAAAAAAAAAAIQLAAAAAAAAhQsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAog0AAAAAAACiDQAAAAAAAAAAAAAAAPC/AQAAAAEAAAB+CwAAAAAAAH4LAAAAAAAAAAAAAAAA8L8"
				],
				[
					3685,
					1,
					"insert",
					{
						"characters": "DrawElement"
					},
					"DAAAAL0LAAAAAAAAvgsAAAAAAAAAAAAAvgsAAAAAAAC+CwAAAAAAAAoAAABVc2VQcm9ncmFtvgsAAAAAAAC/CwAAAAAAAAAAAAC/CwAAAAAAAMALAAAAAAAAAAAAAMALAAAAAAAAwQsAAAAAAAAAAAAAwQsAAAAAAADCCwAAAAAAAAAAAADCCwAAAAAAAMMLAAAAAAAAAAAAAMMLAAAAAAAAxAsAAAAAAAAAAAAAxAsAAAAAAADFCwAAAAAAAAAAAADFCwAAAAAAAMYLAAAAAAAAAAAAAMYLAAAAAAAAxwsAAAAAAAAAAAAAxwsAAAAAAADICwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAqQ0AAAAAAACpDQAAAAAAAAAAAAAAAPC/AQAAAAEAAADHCwAAAAAAAL0LAAAAAAAAAAAAAAAA8L8"
				],
				[
					3686,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAAMgLAAAAAAAAyQsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAqg0AAAAAAACqDQAAAAAAAAAAAAAAAPC/AQAAAAEAAADICwAAAAAAAMgLAAAAAAAAAAAAAAAA8L8"
				],
				[
					3688,
					1,
					"insert",
					{
						"characters": "\n?"
					},
					"AgAAAO0LAAAAAAAA7gsAAAAAAAAAAAAA7gsAAAAAAADvCwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAqw0AAAAAAACrDQAAAAAAAAAAAAAAAPC/AQAAAAEAAADtCwAAAAAAAO0LAAAAAAAAAAAAAACQcUA"
				],
				[
					3689,
					1,
					"left_delete",
					null,
					"AQAAAO4LAAAAAAAA7gsAAAAAAAABAAAAPw",
					"AgAAAAAAAAABAAAArQ0AAAAAAACtDQAAAAAAAAAAAAAAAPC/AQAAAAEAAADvCwAAAAAAAO8LAAAAAAAAAAAAAAAA8L8"
				],
				[
					3696,
					1,
					"insert",
					{
						"characters": "i32,"
					},
					"BQAAAJwLAAAAAAAAnQsAAAAAAAAAAAAAnQsAAAAAAACdCwAAAAAAAAMAAAB1MzKdCwAAAAAAAJ4LAAAAAAAAAAAAAJ4LAAAAAAAAnwsAAAAAAAAAAAAAnwsAAAAAAACgCwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAArA0AAAAAAACsDQAAAAAAAAAAAAAAAPC/AQAAAAEAAACfCwAAAAAAAJwLAAAAAAAAAAAAAAAA8L8"
				],
				[
					3697,
					1,
					"insert",
					{
						"characters": " i32,"
					},
					"BQAAAKALAAAAAAAAoQsAAAAAAAAAAAAAoQsAAAAAAACiCwAAAAAAAAAAAACiCwAAAAAAAKMLAAAAAAAAAAAAAKMLAAAAAAAApAsAAAAAAAAAAAAApAsAAAAAAAClCwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAArQ0AAAAAAACtDQAAAAAAAAAAAAAAAPC/AQAAAAEAAACgCwAAAAAAAKALAAAAAAAAAAAAAAAA8L8"
				],
				[
					3698,
					1,
					"insert",
					{
						"characters": " i32"
					},
					"BAAAAKULAAAAAAAApgsAAAAAAAAAAAAApgsAAAAAAACnCwAAAAAAAAAAAACnCwAAAAAAAKgLAAAAAAAAAAAAAKgLAAAAAAAAqQsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAsg0AAAAAAACyDQAAAAAAAAAAAAAAAPC/AQAAAAEAAAClCwAAAAAAAKULAAAAAAAAAAAAAAAA8L8"
				],
				[
					3706,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAKkLAAAAAAAAqgsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAtg0AAAAAAAC2DQAAAAAAAAAAAAAAAPC/AQAAAAEAAACpCwAAAAAAAKkLAAAAAAAAAAAAAAAA8L8"
				],
				[
					3707,
					1,
					"insert",
					{
						"characters": " *cont"
					},
					"BgAAAKoLAAAAAAAAqwsAAAAAAAAAAAAAqwsAAAAAAACsCwAAAAAAAAAAAACsCwAAAAAAAK0LAAAAAAAAAAAAAK0LAAAAAAAArgsAAAAAAAAAAAAArgsAAAAAAACvCwAAAAAAAAAAAACvCwAAAAAAALALAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAtw0AAAAAAAC3DQAAAAAAAAAAAAAAAPC/AQAAAAEAAACqCwAAAAAAAKoLAAAAAAAAAAAAAAAA8L8"
				],
				[
					3708,
					1,
					"insert",
					{
						"characters": " libc"
					},
					"BQAAALALAAAAAAAAsQsAAAAAAAAAAAAAsQsAAAAAAACyCwAAAAAAAAAAAACyCwAAAAAAALMLAAAAAAAAAAAAALMLAAAAAAAAtAsAAAAAAAAAAAAAtAsAAAAAAAC1CwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAvQ0AAAAAAAC9DQAAAAAAAAAAAAAAAPC/AQAAAAEAAACwCwAAAAAAALALAAAAAAAAAAAAAAAA8L8"
				],
				[
					3709,
					1,
					"insert",
					{
						"characters": "::cv"
					},
					"BAAAALULAAAAAAAAtgsAAAAAAAAAAAAAtgsAAAAAAAC3CwAAAAAAAAAAAAC3CwAAAAAAALgLAAAAAAAAAAAAALgLAAAAAAAAuQsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAwg0AAAAAAADCDQAAAAAAAAAAAAAAAPC/AQAAAAEAAAC1CwAAAAAAALULAAAAAAAAAAAAAAAA8L8"
				],
				[
					3710,
					1,
					"left_delete",
					null,
					"AQAAALgLAAAAAAAAuAsAAAAAAAABAAAAdg",
					"AgAAAAAAAAABAAAAxg0AAAAAAADGDQAAAAAAAAAAAAAAAPC/AQAAAAEAAAC5CwAAAAAAALkLAAAAAAAAAAAAAAAA8L8"
				],
				[
					3711,
					1,
					"insert",
					{
						"characters": "_voic"
					},
					"BQAAALgLAAAAAAAAuQsAAAAAAAAAAAAAuQsAAAAAAAC6CwAAAAAAAAAAAAC6CwAAAAAAALsLAAAAAAAAAAAAALsLAAAAAAAAvAsAAAAAAAAAAAAAvAsAAAAAAAC9CwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAxQ0AAAAAAADFDQAAAAAAAAAAAAAAAPC/AQAAAAEAAAC4CwAAAAAAALgLAAAAAAAAAAAAAAAA8L8"
				],
				[
					3713,
					1,
					"insert",
					{
						"characters": "\n?"
					},
					"AgAAAAsMAAAAAAAADAwAAAAAAAAAAAAADAwAAAAAAAANDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAyg0AAAAAAADKDQAAAAAAAAAAAAAAAPC/AQAAAAEAAAALDAAAAAAAAAsMAAAAAAAAAAAAAAAAgkA"
				],
				[
					3714,
					1,
					"left_delete",
					null,
					"AQAAAAwMAAAAAAAADAwAAAAAAAABAAAAPw",
					"AgAAAAAAAAABAAAAzA0AAAAAAADMDQAAAAAAAAAAAAAAAPC/AQAAAAEAAAANDAAAAAAAAA0MAAAAAAAAAAAAAAAA8L8"
				],
				[
					3715,
					1,
					"cut",
					null,
					"AQAAAAwMAAAAAAAADAwAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAyw0AAAAAAADLDQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAMDAAAAAAAAAwMAAAAAAAAAAAAAAAA8L8"
				],
				[
					3716,
					1,
					"insert",
					{
						"characters": "/*"
					},
					"AgAAAAwMAAAAAAAADQwAAAAAAAAAAAAADQwAAAAAAAAODAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAyg0AAAAAAADKDQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAMDAAAAAAAAAwMAAAAAAAAAAAAAAAA8L8"
				],
				[
					3720,
					1,
					"insert",
					{
						"characters": "\n*/"
					},
					"AwAAAMsNAAAAAAAAzA0AAAAAAAAAAAAAzA0AAAAAAADNDQAAAAAAAAAAAADNDQAAAAAAAM4NAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAzA0AAAAAAADMDQAAAAAAAAAAAAAAAPC/AQAAAAEAAADLDQAAAAAAAMsNAAAAAAAA////////738"
				],
				[
					3730,
					1,
					"left_delete",
					null,
					"AQAAALwLAAAAAAAAvAsAAAAAAAABAAAAYw",
					"AgAAAAAAAAABAAAAzw0AAAAAAADPDQAAAAAAAAAAAAAAAPC/AQAAAAEAAAC9CwAAAAAAAL0LAAAAAAAAAAAAAAAA8L8"
				],
				[
					3731,
					1,
					"insert",
					{
						"characters": "d"
					},
					"AQAAALwLAAAAAAAAvQsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAzg0AAAAAAADODQAAAAAAAAAAAAAAAPC/AQAAAAEAAAC8CwAAAAAAALwLAAAAAAAAAAAAAAAA8L8"
				],
				[
					3737,
					1,
					"insert",
					{
						"characters": "const"
					},
					"BgAAAKwLAAAAAAAArQsAAAAAAAAAAAAArQsAAAAAAACtCwAAAAAAAAQAAABjb250rQsAAAAAAACuCwAAAAAAAAAAAACuCwAAAAAAAK8LAAAAAAAAAAAAAK8LAAAAAAAAsAsAAAAAAAAAAAAAsAsAAAAAAACxCwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAzw0AAAAAAADPDQAAAAAAAAAAAAAAAPC/AQAAAAEAAACwCwAAAAAAAKwLAAAAAAAAAAAAAAAA8L8"
				],
				[
					3743,
					1,
					"paste",
					null,
					"AQAAAJ8SAAAAAAAA9RIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0A0AAAAAAADQDQAAAAAAAAAAAAAAAPC/AQAAAAEAAADBEgAAAAAAAMESAAAAAAAAAAAAAAAA8L8"
				],
				[
					3745,
					1,
					"insert",
					{
						"characters": "Draw"
					},
					"BQAAAA0TAAAAAAAADhMAAAAAAAAAAAAADhMAAAAAAAAOEwAAAAAAAAoAAABVc2VQcm9ncmFtDhMAAAAAAAAPEwAAAAAAAAAAAAAPEwAAAAAAABATAAAAAAAAAAAAABATAAAAAAAAERMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0A0AAAAAAADQDQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAXEwAAAAAAAA0TAAAAAAAAAAAAAAAA8L8"
				],
				[
					3746,
					1,
					"insert_completion",
					{
						"completion": "extern_global_glDrawElements",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "extern_global_glDrawElements"
					},
					"AgAAAP0SAAAAAAAA/RIAAAAAAAAUAAAAZXh0ZXJuX2dsb2JhbF9nbERyYXf9EgAAAAAAABkTAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0A0AAAAAAADQDQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAREwAAAAAAABETAAAAAAAAAAAAAAAA8L8"
				],
				[
					3750,
					1,
					"insert",
					{
						"characters": "DrawElements"
					},
					"DQAAAD0TAAAAAAAAPhMAAAAAAAAAAAAAPhMAAAAAAAA+EwAAAAAAAAoAAABVc2VQcm9ncmFtPhMAAAAAAAA/EwAAAAAAAAAAAAA/EwAAAAAAAEATAAAAAAAAAAAAAEATAAAAAAAAQRMAAAAAAAAAAAAAQRMAAAAAAABCEwAAAAAAAAAAAABCEwAAAAAAAEMTAAAAAAAAAAAAAEMTAAAAAAAARBMAAAAAAAAAAAAARBMAAAAAAABFEwAAAAAAAAAAAABFEwAAAAAAAEYTAAAAAAAAAAAAAEYTAAAAAAAARxMAAAAAAAAAAAAARxMAAAAAAABIEwAAAAAAAAAAAABIEwAAAAAAAEkTAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0A0AAAAAAADQDQAAAAAAAAAAAAAAAPC/AQAAAAEAAABHEwAAAAAAAD0TAAAAAAAAAAAAAAAA8L8"
				],
				[
					3762,
					1,
					"insert",
					{
						"characters": "\ngl_draw_elemnet"
					},
					"EQAAANMWAAAAAAAA1BYAAAAAAAAAAAAA1BYAAAAAAADcFgAAAAAAAAAAAADcFgAAAAAAAN0WAAAAAAAAAAAAAN0WAAAAAAAA3hYAAAAAAAAAAAAA3hYAAAAAAADfFgAAAAAAAAAAAADfFgAAAAAAAOAWAAAAAAAAAAAAAOAWAAAAAAAA4RYAAAAAAAAAAAAA4RYAAAAAAADiFgAAAAAAAAAAAADiFgAAAAAAAOMWAAAAAAAAAAAAAOMWAAAAAAAA5BYAAAAAAAAAAAAA5BYAAAAAAADlFgAAAAAAAAAAAADlFgAAAAAAAOYWAAAAAAAAAAAAAOYWAAAAAAAA5xYAAAAAAAAAAAAA5xYAAAAAAADoFgAAAAAAAAAAAADoFgAAAAAAAOkWAAAAAAAAAAAAAOkWAAAAAAAA6hYAAAAAAAAAAAAA6hYAAAAAAADrFgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0A0AAAAAAADQDQAAAAAAAAAAAAAAAPC/AQAAAAEAAADTFgAAAAAAANMWAAAAAAAA////////738"
				],
				[
					3763,
					1,
					"insert",
					{
						"characters": "s:"
					},
					"AgAAAOsWAAAAAAAA7BYAAAAAAAAAAAAA7BYAAAAAAADtFgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0A0AAAAAAADQDQAAAAAAAAAAAAAAAPC/AQAAAAEAAADrFgAAAAAAAOsWAAAAAAAAAAAAAAAA8L8"
				],
				[
					3764,
					1,
					"insert",
					{
						"characters": " gl_draw_elements"
					},
					"EQAAAO0WAAAAAAAA7hYAAAAAAAAAAAAA7hYAAAAAAADvFgAAAAAAAAAAAADvFgAAAAAAAPAWAAAAAAAAAAAAAPAWAAAAAAAA8RYAAAAAAAAAAAAA8RYAAAAAAADyFgAAAAAAAAAAAADyFgAAAAAAAPMWAAAAAAAAAAAAAPMWAAAAAAAA9BYAAAAAAAAAAAAA9BYAAAAAAAD1FgAAAAAAAAAAAAD1FgAAAAAAAPYWAAAAAAAAAAAAAPYWAAAAAAAA9xYAAAAAAAAAAAAA9xYAAAAAAAD4FgAAAAAAAAAAAAD4FgAAAAAAAPkWAAAAAAAAAAAAAPkWAAAAAAAA+hYAAAAAAAAAAAAA+hYAAAAAAAD7FgAAAAAAAAAAAAD7FgAAAAAAAPwWAAAAAAAAAAAAAPwWAAAAAAAA/RYAAAAAAAAAAAAA/RYAAAAAAAD+FgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0A0AAAAAAADQDQAAAAAAAAAAAAAAAPC/AQAAAAEAAADtFgAAAAAAAO0WAAAAAAAAAAAAAAAA8L8"
				],
				[
					3768,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAIoaAAAAAAAAixoAAAAAAAAAAAAAixoAAAAAAACMGgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0A0AAAAAAADQDQAAAAAAAAAAAAAAAPC/AQAAAAEAAACKGgAAAAAAAIoaAAAAAAAAAAAAAAAAHEA"
				],
				[
					3770,
					1,
					"reindent",
					null,
					"AQAAAIsaAAAAAAAAjxoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0A0AAAAAAADQDQAAAAAAAAAAAAAAAPC/AQAAAAEAAACLGgAAAAAAAIsaAAAAAAAAAAAAAAAAAAA"
				],
				[
					3771,
					1,
					"insert",
					{
						"characters": "f"
					},
					"AQAAAI8aAAAAAAAAkBoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0A0AAAAAAADQDQAAAAAAAAAAAAAAAPC/AQAAAAEAAACPGgAAAAAAAI8aAAAAAAAAAAAAAAAA8L8"
				],
				[
					3772,
					2,
					"left_delete",
					null,
					"AgAAAI8aAAAAAAAAjxoAAAAAAAABAAAAZosaAAAAAAAAixoAAAAAAAAEAAAAICAgIA",
					"AgAAAAAAAAABAAAA0A0AAAAAAADQDQAAAAAAAAAAAAAAAPC/AQAAAAEAAACQGgAAAAAAAJAaAAAAAAAAAAAAAAAA8L8"
				],
				[
					3773,
					1,
					"insert",
					{
						"characters": "gn"
					},
					"AgAAAIsaAAAAAAAAjBoAAAAAAAAAAAAAjBoAAAAAAACNGgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0A0AAAAAAADQDQAAAAAAAAAAAAAAAPC/AQAAAAEAAACLGgAAAAAAAIsaAAAAAAAAAAAAAAAA8L8"
				],
				[
					3774,
					1,
					"insert",
					{
						"characters": " gl"
					},
					"AwAAAI0aAAAAAAAAjhoAAAAAAAAAAAAAjhoAAAAAAACPGgAAAAAAAAAAAACPGgAAAAAAAJAaAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0A0AAAAAAADQDQAAAAAAAAAAAAAAAPC/AQAAAAEAAACNGgAAAAAAAI0aAAAAAAAAAAAAAAAA8L8"
				],
				[
					3775,
					5,
					"left_delete",
					null,
					"BQAAAI8aAAAAAAAAjxoAAAAAAAABAAAAbI4aAAAAAAAAjhoAAAAAAAABAAAAZ40aAAAAAAAAjRoAAAAAAAABAAAAIIwaAAAAAAAAjBoAAAAAAAABAAAAbosaAAAAAAAAixoAAAAAAAABAAAAZw",
					"AgAAAAAAAAABAAAA0A0AAAAAAADQDQAAAAAAAAAAAAAAAPC/AQAAAAEAAACQGgAAAAAAAJAaAAAAAAAAAAAAAAAA8L8"
				],
				[
					3776,
					1,
					"insert",
					{
						"characters": "fn"
					},
					"AgAAAIsaAAAAAAAAjBoAAAAAAAAAAAAAjBoAAAAAAACNGgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0A0AAAAAAADQDQAAAAAAAAAAAAAAAPC/AQAAAAEAAACLGgAAAAAAAIsaAAAAAAAAAAAAAAAA8L8"
				],
				[
					3777,
					1,
					"insert",
					{
						"characters": " gl_daw_"
					},
					"CAAAAI0aAAAAAAAAjhoAAAAAAAAAAAAAjhoAAAAAAACPGgAAAAAAAAAAAACPGgAAAAAAAJAaAAAAAAAAAAAAAJAaAAAAAAAAkRoAAAAAAAAAAAAAkRoAAAAAAACSGgAAAAAAAAAAAACSGgAAAAAAAJMaAAAAAAAAAAAAAJMaAAAAAAAAlBoAAAAAAAAAAAAAlBoAAAAAAACVGgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0A0AAAAAAADQDQAAAAAAAAAAAAAAAPC/AQAAAAEAAACNGgAAAAAAAI0aAAAAAAAAAAAAAAAA8L8"
				],
				[
					3778,
					3,
					"left_delete",
					null,
					"AwAAAJQaAAAAAAAAlBoAAAAAAAABAAAAX5MaAAAAAAAAkxoAAAAAAAABAAAAd5IaAAAAAAAAkhoAAAAAAAABAAAAYQ",
					"AgAAAAAAAAABAAAA0A0AAAAAAADQDQAAAAAAAAAAAAAAAPC/AQAAAAEAAACVGgAAAAAAAJUaAAAAAAAAAAAAAAAA8L8"
				],
				[
					3779,
					1,
					"insert",
					{
						"characters": "raw_elements"
					},
					"DAAAAJIaAAAAAAAAkxoAAAAAAAAAAAAAkxoAAAAAAACUGgAAAAAAAAAAAACUGgAAAAAAAJUaAAAAAAAAAAAAAJUaAAAAAAAAlhoAAAAAAAAAAAAAlhoAAAAAAACXGgAAAAAAAAAAAACXGgAAAAAAAJgaAAAAAAAAAAAAAJgaAAAAAAAAmRoAAAAAAAAAAAAAmRoAAAAAAACaGgAAAAAAAAAAAACaGgAAAAAAAJsaAAAAAAAAAAAAAJsaAAAAAAAAnBoAAAAAAAAAAAAAnBoAAAAAAACdGgAAAAAAAAAAAACdGgAAAAAAAJ4aAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0A0AAAAAAADQDQAAAAAAAAAAAAAAAPC/AQAAAAEAAACSGgAAAAAAAJIaAAAAAAAAAAAAAAAA8L8"
				],
				[
					3780,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJ4aAAAAAAAAoBoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0A0AAAAAAADQDQAAAAAAAAAAAAAAAPC/AQAAAAEAAACeGgAAAAAAAJ4aAAAAAAAAAAAAAAAA8L8"
				],
				[
					3781,
					1,
					"insert",
					{
						"characters": "i32,"
					},
					"BAAAAJ8aAAAAAAAAoBoAAAAAAAAAAAAAoBoAAAAAAAChGgAAAAAAAAAAAAChGgAAAAAAAKIaAAAAAAAAAAAAAKIaAAAAAAAAoxoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0A0AAAAAAADQDQAAAAAAAAAAAAAAAPC/AQAAAAEAAACfGgAAAAAAAJ8aAAAAAAAAAAAAAAAA8L8"
				],
				[
					3782,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKMaAAAAAAAApBoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0A0AAAAAAADQDQAAAAAAAAAAAAAAAPC/AQAAAAEAAACjGgAAAAAAAKMaAAAAAAAAAAAAAAAA8L8"
				],
				[
					3783,
					5,
					"left_delete",
					null,
					"BQAAAKMaAAAAAAAAoxoAAAAAAAABAAAAIKIaAAAAAAAAohoAAAAAAAABAAAALKEaAAAAAAAAoRoAAAAAAAABAAAAMqAaAAAAAAAAoBoAAAAAAAABAAAAM58aAAAAAAAAnxoAAAAAAAABAAAAaQ",
					"AgAAAAAAAAABAAAA0A0AAAAAAADQDQAAAAAAAAAAAAAAAPC/AQAAAAEAAACkGgAAAAAAAKQaAAAAAAAAAAAAAAAA8L8"
				],
				[
					3784,
					1,
					"insert",
					{
						"characters": "mode,"
					},
					"BQAAAJ8aAAAAAAAAoBoAAAAAAAAAAAAAoBoAAAAAAAChGgAAAAAAAAAAAAChGgAAAAAAAKIaAAAAAAAAAAAAAKIaAAAAAAAAoxoAAAAAAAAAAAAAoxoAAAAAAACkGgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0A0AAAAAAADQDQAAAAAAAAAAAAAAAPC/AQAAAAEAAACfGgAAAAAAAJ8aAAAAAAAAAAAAAAAA8L8"
				],
				[
					3785,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKQaAAAAAAAApRoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0A0AAAAAAADQDQAAAAAAAAAAAAAAAPC/AQAAAAEAAACkGgAAAAAAAKQaAAAAAAAAAAAAAAAA8L8"
				],
				[
					3786,
					2,
					"left_delete",
					null,
					"AgAAAKQaAAAAAAAApBoAAAAAAAABAAAAIKMaAAAAAAAAoxoAAAAAAAABAAAALA",
					"AgAAAAAAAAABAAAA0A0AAAAAAADQDQAAAAAAAAAAAAAAAPC/AQAAAAEAAAClGgAAAAAAAKUaAAAAAAAAAAAAAAAA8L8"
				],
				[
					3787,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAKMaAAAAAAAApBoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0A0AAAAAAADQDQAAAAAAAAAAAAAAAPC/AQAAAAEAAACjGgAAAAAAAKMaAAAAAAAAAAAAAAAA8L8"
				],
				[
					3788,
					1,
					"insert",
					{
						"characters": " i32,"
					},
					"BQAAAKQaAAAAAAAApRoAAAAAAAAAAAAApRoAAAAAAACmGgAAAAAAAAAAAACmGgAAAAAAAKcaAAAAAAAAAAAAAKcaAAAAAAAAqBoAAAAAAAAAAAAAqBoAAAAAAACpGgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0A0AAAAAAADQDQAAAAAAAAAAAAAAAPC/AQAAAAEAAACkGgAAAAAAAKQaAAAAAAAAAAAAAAAA8L8"
				],
				[
					3789,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKkaAAAAAAAAqhoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0A0AAAAAAADQDQAAAAAAAAAAAAAAAPC/AQAAAAEAAACpGgAAAAAAAKkaAAAAAAAAAAAAAAAA8L8"
				],
				[
					3790,
					1,
					"insert",
					{
						"characters": "count:"
					},
					"BgAAAKoaAAAAAAAAqxoAAAAAAAAAAAAAqxoAAAAAAACsGgAAAAAAAAAAAACsGgAAAAAAAK0aAAAAAAAAAAAAAK0aAAAAAAAArhoAAAAAAAAAAAAArhoAAAAAAACvGgAAAAAAAAAAAACvGgAAAAAAALAaAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0A0AAAAAAADQDQAAAAAAAAAAAAAAAPC/AQAAAAEAAACqGgAAAAAAAKoaAAAAAAAAAAAAAAAA8L8"
				],
				[
					3791,
					1,
					"insert",
					{
						"characters": " i32,"
					},
					"BQAAALAaAAAAAAAAsRoAAAAAAAAAAAAAsRoAAAAAAACyGgAAAAAAAAAAAACyGgAAAAAAALMaAAAAAAAAAAAAALMaAAAAAAAAtBoAAAAAAAAAAAAAtBoAAAAAAAC1GgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0A0AAAAAAADQDQAAAAAAAAAAAAAAAPC/AQAAAAEAAACwGgAAAAAAALAaAAAAAAAAAAAAAAAA8L8"
				],
				[
					3795,
					1,
					"left_delete",
					null,
					"AQAAAKoaAAAAAAAAqhoAAAAAAAALAAAAY291bnQ6IGkzMiw",
					"AgAAAAAAAAABAAAA0A0AAAAAAADQDQAAAAAAAAAAAAAAAPC/AQAAAAEAAAC1GgAAAAAAAKoaAAAAAAAAAAAAAAAA8L8"
				],
				[
					3809,
					1,
					"insert",
					{
						"characters": "indecies:"
					},
					"CQAAAKoaAAAAAAAAqxoAAAAAAAAAAAAAqxoAAAAAAACsGgAAAAAAAAAAAACsGgAAAAAAAK0aAAAAAAAAAAAAAK0aAAAAAAAArhoAAAAAAAAAAAAArhoAAAAAAACvGgAAAAAAAAAAAACvGgAAAAAAALAaAAAAAAAAAAAAALAaAAAAAAAAsRoAAAAAAAAAAAAAsRoAAAAAAACyGgAAAAAAAAAAAACyGgAAAAAAALMaAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0A0AAAAAAADQDQAAAAAAAAAAAAAAAPC/AQAAAAEAAACqGgAAAAAAAKoaAAAAAAAAAAAAAAAA8L8"
				],
				[
					3810,
					1,
					"insert",
					{
						"characters": " ve"
					},
					"AwAAALMaAAAAAAAAtBoAAAAAAAAAAAAAtBoAAAAAAAC1GgAAAAAAAAAAAAC1GgAAAAAAALYaAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0A0AAAAAAADQDQAAAAAAAAAAAAAAAPC/AQAAAAEAAACzGgAAAAAAALMaAAAAAAAAAAAAAAAA8L8"
				],
				[
					3811,
					2,
					"left_delete",
					null,
					"AgAAALUaAAAAAAAAtRoAAAAAAAABAAAAZbQaAAAAAAAAtBoAAAAAAAABAAAAdg",
					"AgAAAAAAAAABAAAA0A0AAAAAAADQDQAAAAAAAAAAAAAAAPC/AQAAAAEAAAC2GgAAAAAAALYaAAAAAAAAAAAAAAAA8L8"
				],
				[
					3812,
					1,
					"insert",
					{
						"characters": "Vec<u32>"
					},
					"CAAAALQaAAAAAAAAtRoAAAAAAAAAAAAAtRoAAAAAAAC2GgAAAAAAAAAAAAC2GgAAAAAAALcaAAAAAAAAAAAAALcaAAAAAAAAuBoAAAAAAAAAAAAAuBoAAAAAAAC5GgAAAAAAAAAAAAC5GgAAAAAAALoaAAAAAAAAAAAAALoaAAAAAAAAuxoAAAAAAAAAAAAAuxoAAAAAAAC8GgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0A0AAAAAAADQDQAAAAAAAAAAAAAAAPC/AQAAAAEAAAC0GgAAAAAAALQaAAAAAAAAAAAAAAAA8L8"
				],
				[
					3816,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAL0aAAAAAAAAvhoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0A0AAAAAAADQDQAAAAAAAAAAAAAAAPC/AQAAAAEAAAC9GgAAAAAAAL0aAAAAAAAA////////738"
				],
				[
					3817,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAL4aAAAAAAAAwBoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0A0AAAAAAADQDQAAAAAAAAAAAAAAAPC/AQAAAAEAAAC+GgAAAAAAAL4aAAAAAAAAAAAAAAAA8L8"
				],
				[
					3818,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAAL8aAAAAAAAAwBoAAAAAAAAAAAAAwBoAAAAAAADBGgAAAAAAAAAAAADAGgAAAAAAAMQaAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0A0AAAAAAADQDQAAAAAAAAAAAAAAAPC/AQAAAAEAAAC/GgAAAAAAAL8aAAAAAAAAAAAAAAAA8L8"
				],
				[
					3819,
					2,
					"rust_fmt_format_buffer",
					null,
					"AwAAAP4WAAAAAAAA/xYAAAAAAAAAAAAAjBoAAAAAAACMGgAAAAAAAAAAAADAGgAAAAAAAMAaAAAAAAAABgAAAAogICAgCg",
					"AgAAAAAAAAABAAAA0A0AAAAAAADQDQAAAAAAAAAAAAAAAPC/AQAAAAEAAADEGgAAAAAAAMQaAAAAAAAAAAAAAAAA8L8"
				],
				[
					3828,
					1,
					"insert",
					{
						"characters": "elements"
					},
					"CQAAAOQWAAAAAAAA5RYAAAAAAAAAAAAA5RYAAAAAAADlFgAAAAAAAAgAAABlbGVtbmV0c+UWAAAAAAAA5hYAAAAAAAAAAAAA5hYAAAAAAADnFgAAAAAAAAAAAADnFgAAAAAAAOgWAAAAAAAAAAAAAOgWAAAAAAAA6RYAAAAAAAAAAAAA6RYAAAAAAADqFgAAAAAAAAAAAADqFgAAAAAAAOsWAAAAAAAAAAAAAOsWAAAAAAAA7BYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0A0AAAAAAADQDQAAAAAAAAAAAAAAAPC/AQAAAAEAAADsFgAAAAAAAOQWAAAAAAAAAAAAAAAA8L8"
				],
				[
					3842,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAAMAaAAAAAAAAwRoAAAAAAAAAAAAAwRoAAAAAAADCGgAAAAAAAAAAAADBGgAAAAAAAMUaAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0A0AAAAAAADQDQAAAAAAAAAAAAAAAPC/AQAAAAEAAADAGgAAAAAAAMAaAAAAAAAAAAAAAAAA8L8"
				],
				[
					3843,
					1,
					"paste",
					null,
					"AQAAAMUaAAAAAAAARRwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0A0AAAAAAADQDQAAAAAAAAAAAAAAAPC/AQAAAAEAAADFGgAAAAAAAMUaAAAAAAAAAAAAAAAA8L8"
				],
				[
					3844,
					2,
					"rust_fmt_format_buffer",
					null,
					"AQAAAMUaAAAAAAAAxRoAAAAAAAAEAAAAICAgIA",
					"AgAAAAAAAAABAAAA0A0AAAAAAADQDQAAAAAAAAAAAAAAAPC/AQAAAAEAAABFHAAAAAAAAEUcAAAAAAAAAAAAAAAA8L8"
				],
				[
					3846,
					2,
					"cut",
					null,
					"AgAAAMEaAAAAAAAAwRoAAAAAAAAvAAAAICAgIGxldCBtdXQgbGlzdF9jOiBWZWM8VmVjVGhyZWVGbG9hdEM+ID0gZGF0YQrBGgAAAAAAAMEaAAAAAAAAFQAAACAgICAgICAgLmludG9faXRlcigpCg",
					"AgAAAAAAAAABAAAA0A0AAAAAAADQDQAAAAAAAAAAAAAAAPC/AQAAAAEAAADGGgAAAAAAAMYaAAAAAAAAAAAAAAAAQkA"
				],
				[
					3847,
					2,
					"cut",
					null,
					"AgAAAMEaAAAAAAAAwRoAAAAAAAAyAAAAICAgICAgICAubWFwKHxpbnB1dHwgVmVjVGhyZWVGbG9hdEM6OmZyb20oaW5wdXQpKQrBGgAAAAAAAMEaAAAAAAAAFAAAACAgICAgICAgLmNvbGxlY3QoKTsK",
					"AgAAAAAAAAABAAAA0A0AAAAAAADQDQAAAAAAAAAAAAAAAPC/AQAAAAEAAADBGgAAAAAAAMEaAAAAAAAAAAAAAAAA8L8"
				],
				[
					3852,
					1,
					"insert",
					{
						"characters": "indecies"
					},
					"CQAAAM8aAAAAAAAA0BoAAAAAAAAAAAAA0BoAAAAAAADQGgAAAAAAAAYAAABsaXN0X2PQGgAAAAAAANEaAAAAAAAAAAAAANEaAAAAAAAA0hoAAAAAAAAAAAAA0hoAAAAAAADTGgAAAAAAAAAAAADTGgAAAAAAANQaAAAAAAAAAAAAANQaAAAAAAAA1RoAAAAAAAAAAAAA1RoAAAAAAADWGgAAAAAAAAAAAADWGgAAAAAAANcaAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0A0AAAAAAADQDQAAAAAAAAAAAAAAAPC/AQAAAAEAAADVGgAAAAAAAM8aAAAAAAAAAAAAAAAA8L8"
				],
				[
					3861,
					1,
					"insert",
					{
						"characters": "Draw"
					},
					"BQAAAHIbAAAAAAAAcxsAAAAAAAAAAAAAcxsAAAAAAABzGwAAAAAAAAUAAAByRGF0YXMbAAAAAAAAdBsAAAAAAAAAAAAAdBsAAAAAAAB1GwAAAAAAAAAAAAB1GwAAAAAAAHYbAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0A0AAAAAAADQDQAAAAAAAAAAAAAAAPC/AQAAAAEAAAB3GwAAAAAAAHIbAAAAAAAAAAAAAAAA8L8"
				],
				[
					3863,
					1,
					"insert",
					{
						"characters": "DrawElements"
					},
					"DQAAAG0bAAAAAAAAbhsAAAAAAAAAAAAAbhsAAAAAAABuGwAAAAAAAAkAAABCdWZmZURyYXduGwAAAAAAAG8bAAAAAAAAAAAAAG8bAAAAAAAAcBsAAAAAAAAAAAAAcBsAAAAAAABxGwAAAAAAAAAAAABxGwAAAAAAAHIbAAAAAAAAAAAAAHIbAAAAAAAAcxsAAAAAAAAAAAAAcxsAAAAAAAB0GwAAAAAAAAAAAAB0GwAAAAAAAHUbAAAAAAAAAAAAAHUbAAAAAAAAdhsAAAAAAAAAAAAAdhsAAAAAAAB3GwAAAAAAAAAAAAB3GwAAAAAAAHgbAAAAAAAAAAAAAHgbAAAAAAAAeRsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0A0AAAAAAADQDQAAAAAAAAAAAAAAAPC/AQAAAAEAAAB2GwAAAAAAAG0bAAAAAAAAAAAAAAAA8L8"
				],
				[
					3871,
					1,
					"insert",
					{
						"characters": "mode,"
					},
					"BgAAAIQbAAAAAAAAhRsAAAAAAAAAAAAAhRsAAAAAAACFGwAAAAAAADAAAAB0YXJnZXQsIGkzMjo6dHJ5X2Zyb20oc2l6ZSkudW53cmFwKCksIHB0ciwgdXNhZ2WFGwAAAAAAAIYbAAAAAAAAAAAAAIYbAAAAAAAAhxsAAAAAAAAAAAAAhxsAAAAAAACIGwAAAAAAAAAAAACIGwAAAAAAAIkbAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0A0AAAAAAADQDQAAAAAAAAAAAAAAAPC/AQAAAAEAAACEGwAAAAAAALQbAAAAAAAAAAAAAAAA8L8"
				],
				[
					3872,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIkbAAAAAAAAihsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0A0AAAAAAADQDQAAAAAAAAAAAAAAAPC/AQAAAAEAAACJGwAAAAAAAIkbAAAAAAAAAAAAAAAA8L8"
				],
				[
					3873,
					2,
					"rust_fmt_format_buffer",
					null,
					"AwAAAFMbAAAAAAAAUxsAAAAAAAAIAAAACiAgICAgICCAGwAAAAAAAIAbAAAAAAAAAgAAACwggRsAAAAAAACBGwAAAAAAAAQAAAAKICAg",
					"AgAAAAAAAAABAAAA0A0AAAAAAADQDQAAAAAAAAAAAAAAAPC/AQAAAAEAAACKGwAAAAAAAIobAAAAAAAAAAAAAAAA8L8"
				],
				[
					3875,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAIYbAAAAAAAAhxsAAAAAAAAAAAAAhxsAAAAAAACIGwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0A0AAAAAAADQDQAAAAAAAAAAAAAAAPC/AQAAAAEAAACGGwAAAAAAAIYbAAAAAAAAAAAAAACgeUA"
				],
				[
					3876,
					1,
					"paste",
					null,
					"AQAAAIgbAAAAAAAA6BwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0A0AAAAAAADQDQAAAAAAAAAAAAAAAPC/AQAAAAEAAACIGwAAAAAAAIgbAAAAAAAAAAAAAAAA8L8"
				],
				[
					3877,
					2,
					"rust_fmt_format_buffer",
					null,
					"EQAAAIcbAAAAAAAAhxsAAAAAAAANAAAACiAgICAgICAgICAgIKIbAAAAAAAApxsAAAAAAAAAAAAAuxsAAAAAAAC/GwAAAAAAAAAAAADWGwAAAAAAANobAAAAAAAAAAAAAPAbAAAAAAAA9BsAAAAAAAAAAAAAHhwAAAAAAAAgHAAAAAAAAAAAAAApHAAAAAAAAC0cAAAAAAAAAAAAAE0cAAAAAAAAVhwAAAAAAAAAAAAAWBwAAAAAAABgHAAAAAAAAAAAAAB0HAAAAAAAAIEcAAAAAAAAAAAAAI8cAAAAAAAAmxwAAAAAAAAAAAAAqxwAAAAAAAC3HAAAAAAAAAAAAADGHAAAAAAAANIcAAAAAAAAAAAAAPMcAAAAAAAA/RwAAAAAAAAAAAAABB0AAAAAAAAKHQAAAAAAAAAAAABBHQAAAAAAAEEdAAAAAAAAAQAAACBBHQAAAAAAAEIdAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0A0AAAAAAADQDQAAAAAAAAAAAAAAAPC/AQAAAAEAAADoHAAAAAAAAOgcAAAAAAAAAAAAAAAA8L8"
				],
				[
					3879,
					1,
					"insert",
					{
						"characters": "\n/*"
					},
					"AwAAAIYbAAAAAAAAhxsAAAAAAAAAAAAAhxsAAAAAAACIGwAAAAAAAAAAAACIGwAAAAAAAIkbAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0A0AAAAAAADQDQAAAAAAAAAAAAAAAPC/AQAAAAEAAACGGwAAAAAAAIYbAAAAAAAAAAAAAAAA8L8"
				],
				[
					3885,
					1,
					"insert",
					{
						"characters": "\n*/"
					},
					"AwAAAEYdAAAAAAAARx0AAAAAAAAAAAAARx0AAAAAAABIHQAAAAAAAAAAAABIHQAAAAAAAEkdAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0A0AAAAAAADQDQAAAAAAAAAAAAAAAPC/AQAAAAEAAABGHQAAAAAAAEYdAAAAAAAA////////738"
				],
				[
					3892,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAIAbAAAAAAAAgRsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0A0AAAAAAADQDQAAAAAAAAAAAAAAAPC/AQAAAAEAAACAGwAAAAAAAIAbAAAAAAAAAAAAAAAA8L8"
				],
				[
					3893,
					1,
					"insert",
					{
						"characters": " indecies.Len"
					},
					"DQAAAIEbAAAAAAAAghsAAAAAAAAAAAAAghsAAAAAAACDGwAAAAAAAAAAAACDGwAAAAAAAIQbAAAAAAAAAAAAAIQbAAAAAAAAhRsAAAAAAAAAAAAAhRsAAAAAAACGGwAAAAAAAAAAAACGGwAAAAAAAIcbAAAAAAAAAAAAAIcbAAAAAAAAiBsAAAAAAAAAAAAAiBsAAAAAAACJGwAAAAAAAAAAAACJGwAAAAAAAIobAAAAAAAAAAAAAIobAAAAAAAAixsAAAAAAAAAAAAAixsAAAAAAACMGwAAAAAAAAAAAACMGwAAAAAAAI0bAAAAAAAAAAAAAI0bAAAAAAAAjhsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0A0AAAAAAADQDQAAAAAAAAAAAAAAAPC/AQAAAAEAAACBGwAAAAAAAIEbAAAAAAAAAAAAAAAA8L8"
				],
				[
					3894,
					3,
					"left_delete",
					null,
					"AwAAAI0bAAAAAAAAjRsAAAAAAAABAAAAbowbAAAAAAAAjBsAAAAAAAABAAAAZYsbAAAAAAAAixsAAAAAAAABAAAATA",
					"AgAAAAAAAAABAAAA0A0AAAAAAADQDQAAAAAAAAAAAAAAAPC/AQAAAAEAAACOGwAAAAAAAI4bAAAAAAAAAAAAAAAA8L8"
				],
				[
					3895,
					1,
					"insert",
					{
						"characters": "len"
					},
					"AwAAAIsbAAAAAAAAjBsAAAAAAAAAAAAAjBsAAAAAAACNGwAAAAAAAAAAAACNGwAAAAAAAI4bAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0A0AAAAAAADQDQAAAAAAAAAAAAAAAPC/AQAAAAEAAACLGwAAAAAAAIsbAAAAAAAAAAAAAAAA8L8"
				],
				[
					3896,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAI4bAAAAAAAAkBsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0A0AAAAAAADQDQAAAAAAAAAAAAAAAPC/AQAAAAEAAACOGwAAAAAAAI4bAAAAAAAAAAAAAAAA8L8"
				],
				[
					3898,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAJAbAAAAAAAAkRsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0A0AAAAAAADQDQAAAAAAAAAAAAAAAPC/AQAAAAEAAACQGwAAAAAAAJAbAAAAAAAAAAAAAAAA8L8"
				],
				[
					3899,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJEbAAAAAAAAkhsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0A0AAAAAAADQDQAAAAAAAAAAAAAAAPC/AQAAAAEAAACRGwAAAAAAAJEbAAAAAAAAAAAAAAAA8L8"
				],
				[
					3900,
					2,
					"rust_fmt_format_buffer",
					null,
					"AQAAAJAbAAAAAAAAkBsAAAAAAAACAAAALCA",
					"AgAAAAAAAAABAAAA0A0AAAAAAADQDQAAAAAAAAAAAAAAAPC/AQAAAAEAAACSGwAAAAAAAJIbAAAAAAAAAAAAAAAA8L8"
				],
				[
					3901,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJAbAAAAAAAAkRsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0A0AAAAAAADQDQAAAAAAAAAAAAAAAPC/AQAAAAEAAACQGwAAAAAAAJAbAAAAAAAAAAAAAAAA8L8"
				],
				[
					3902,
					2,
					"left_delete",
					null,
					"AgAAAJAbAAAAAAAAkBsAAAAAAAABAAAAII8bAAAAAAAAjxsAAAAAAAABAAAAKQ",
					"AgAAAAAAAAABAAAA0A0AAAAAAADQDQAAAAAAAAAAAAAAAPC/AQAAAAEAAACRGwAAAAAAAJEbAAAAAAAAAAAAAAAA8L8"
				],
				[
					3904,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAJAbAAAAAAAAkRsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0A0AAAAAAADQDQAAAAAAAAAAAAAAAPC/AQAAAAEAAACQGwAAAAAAAJAbAAAAAAAAAAAAAAAA8L8"
				],
				[
					3905,
					1,
					"insert",
					{
						"characters": " GL"
					},
					"AwAAAJEbAAAAAAAAkhsAAAAAAAAAAAAAkhsAAAAAAACTGwAAAAAAAAAAAACTGwAAAAAAAJQbAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0A0AAAAAAADQDQAAAAAAAAAAAAAAAPC/AQAAAAEAAACRGwAAAAAAAJEbAAAAAAAAAAAAAAAA8L8"
				],
				[
					3906,
					1,
					"insert",
					{
						"characters": "_"
					},
					"AQAAAJQbAAAAAAAAlRsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0A0AAAAAAADQDQAAAAAAAAAAAAAAAPC/AQAAAAEAAACUGwAAAAAAAJQbAAAAAAAAAAAAAAAA8L8"
				],
				[
					3907,
					1,
					"left_delete",
					null,
					"AQAAAJQbAAAAAAAAlBsAAAAAAAABAAAAXw",
					"AgAAAAAAAAABAAAA0A0AAAAAAADQDQAAAAAAAAAAAAAAAPC/AQAAAAEAAACVGwAAAAAAAJUbAAAAAAAAAAAAAAAA8L8"
				],
				[
					3908,
					1,
					"insert",
					{
						"characters": "_UNSIGNED"
					},
					"CQAAAJQbAAAAAAAAlRsAAAAAAAAAAAAAlRsAAAAAAACWGwAAAAAAAAAAAACWGwAAAAAAAJcbAAAAAAAAAAAAAJcbAAAAAAAAmBsAAAAAAAAAAAAAmBsAAAAAAACZGwAAAAAAAAAAAACZGwAAAAAAAJobAAAAAAAAAAAAAJobAAAAAAAAmxsAAAAAAAAAAAAAmxsAAAAAAACcGwAAAAAAAAAAAACcGwAAAAAAAJ0bAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0A0AAAAAAADQDQAAAAAAAAAAAAAAAPC/AQAAAAEAAACUGwAAAAAAAJQbAAAAAAAAAAAAAAAA8L8"
				],
				[
					3909,
					1,
					"insert",
					{
						"characters": "_IND"
					},
					"BAAAAJ0bAAAAAAAAnhsAAAAAAAAAAAAAnhsAAAAAAACfGwAAAAAAAAAAAACfGwAAAAAAAKAbAAAAAAAAAAAAAKAbAAAAAAAAoRsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0A0AAAAAAADQDQAAAAAAAAAAAAAAAPC/AQAAAAEAAACdGwAAAAAAAJ0bAAAAAAAAAAAAAAAA8L8"
				],
				[
					3910,
					1,
					"left_delete",
					null,
					"AQAAAKAbAAAAAAAAoBsAAAAAAAABAAAARA",
					"AgAAAAAAAAABAAAA0A0AAAAAAADQDQAAAAAAAAAAAAAAAPC/AQAAAAEAAAChGwAAAAAAAKEbAAAAAAAAAAAAAAAA8L8"
				],
				[
					3911,
					1,
					"insert",
					{
						"characters": "T,"
					},
					"AgAAAKAbAAAAAAAAoRsAAAAAAAAAAAAAoRsAAAAAAACiGwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0A0AAAAAAADQDQAAAAAAAAAAAAAAAPC/AQAAAAEAAACgGwAAAAAAAKAbAAAAAAAAAAAAAAAA8L8"
				],
				[
					3912,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKIbAAAAAAAAoxsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0A0AAAAAAADQDQAAAAAAAAAAAAAAAPC/AQAAAAEAAACiGwAAAAAAAKIbAAAAAAAAAAAAAAAA8L8"
				],
				[
					3914,
					1,
					"cut",
					null,
					"AQAAAPsaAAAAAAAA+xoAAAAAAABMAAAAICAgIGxldCBzaXplOiB1c2l6ZSA9IHN0ZDo6bWVtOjpzaXplX29mOjo8VmVjVGhyZWVGbG9hdEM+KCkgKiBsaXN0X2MubGVuKCk7Cg",
					"AgAAAAAAAAABAAAA0A0AAAAAAADQDQAAAAAAAAAAAAAAAPC/AQAAAAEAAABGGwAAAAAAAEYbAAAAAAAAAAAAAACwhEA"
				],
				[
					3917,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAFcbAAAAAAAAWBsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0A0AAAAAAADQDQAAAAAAAAAAAAAAAPC/AQAAAAEAAABXGwAAAAAAAFcbAAAAAAAAAAAAAAAA8L8"
				],
				[
					3919,
					1,
					"insert",
					{
						"characters": "ptr"
					},
					"AwAAAFcbAAAAAAAAWBsAAAAAAAAAAAAAWBsAAAAAAABZGwAAAAAAAAAAAABZGwAAAAAAAFobAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0A0AAAAAAADQDQAAAAAAAAAAAAAAAPC/AQAAAAEAAABXGwAAAAAAAFcbAAAAAAAAAAAAAAAA8L8"
				],
				[
					3931,
					1,
					"insert",
					{
						"characters": "R"
					},
					"AgAAAPgLAAAAAAAA+QsAAAAAAAAAAAAA+QsAAAAAAAD5CwAAAAAAAAoAAABVc2VQcm9ncmFt",
					"AgAAAAAAAAABAAAA0A0AAAAAAADQDQAAAAAAAAAAAAAAAPC/AQAAAAEAAAACDAAAAAAAAPgLAAAAAAAAAAAAAAAA8L8"
				],
				[
					3932,
					1,
					"left_delete",
					null,
					"AQAAAPgLAAAAAAAA+AsAAAAAAAABAAAAUg",
					"AgAAAAAAAAABAAAAxw0AAAAAAADHDQAAAAAAAAAAAAAAAPC/AQAAAAEAAAD5CwAAAAAAAPkLAAAAAAAAAAAAAAAA8L8"
				],
				[
					3933,
					1,
					"insert",
					{
						"characters": "DrawElements"
					},
					"DAAAAPgLAAAAAAAA+QsAAAAAAAAAAAAA+QsAAAAAAAD6CwAAAAAAAAAAAAD6CwAAAAAAAPsLAAAAAAAAAAAAAPsLAAAAAAAA/AsAAAAAAAAAAAAA/AsAAAAAAAD9CwAAAAAAAAAAAAD9CwAAAAAAAP4LAAAAAAAAAAAAAP4LAAAAAAAA/wsAAAAAAAAAAAAA/wsAAAAAAAAADAAAAAAAAAAAAAAADAAAAAAAAAEMAAAAAAAAAAAAAAEMAAAAAAAAAgwAAAAAAAAAAAAAAgwAAAAAAAADDAAAAAAAAAAAAAADDAAAAAAAAAQMAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAxg0AAAAAAADGDQAAAAAAAAAAAAAAAPC/AQAAAAEAAAD4CwAAAAAAAPgLAAAAAAAAAAAAAAAA8L8"
				],
				[
					3947,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAJEBAAAAAAAAkgEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0g0AAAAAAADSDQAAAAAAAAAAAAAAAPC/AQAAAAEAAACRAQAAAAAAAJEBAAAAAAAA////////738"
				],
				[
					3948,
					1,
					"paste",
					null,
					"AQAAAJIBAAAAAAAA7gEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0w0AAAAAAADTDQAAAAAAAAAAAAAAAPC/AQAAAAEAAACSAQAAAAAAAJIBAAAAAAAAAAAAAAAA8L8"
				],
				[
					3950,
					2,
					"rust_fmt_format_buffer",
					null,
					"AwAAAL0BAAAAAAAAvQEAAAAAAAABAAAAIL0BAAAAAAAAvgEAAAAAAAAAAAAA7QEAAAAAAADtAQAAAAAAAAEAAAAK",
					"AgAAAAAAAAABAAAALw4AAAAAAAAvDgAAAAAAAAAAAAAAAPC/AQAAAAEAAACSAQAAAAAAAJIBAAAAAAAAAAAAAAAAAAA"
				],
				[
					3953,
					1,
					"cut",
					null,
					"AQAAAJIBAAAAAAAAkgEAAAAAAAAsAAAAI1thbGxvdyhkZWFkX2NvZGUsIG5vbl91cHBlcl9jYXNlX2dsb2JhbHMpXQo",
					"AgAAAAAAAAABAAAALg4AAAAAAAAuDgAAAAAAAAAAAAAAAPC/AQAAAAEAAAC9AQAAAAAAAL0BAAAAAAAAAAAAAAAA8L8"
				],
				[
					3957,
					1,
					"left_delete",
					null,
					"AQAAAJIBAAAAAAAAkgEAAAAAAAAEAAAAcHViIA",
					"AgAAAAAAAAABAAAAAg4AAAAAAAACDgAAAAAAAAAAAAAAAPC/AQAAAAEAAACWAQAAAAAAAJIBAAAAAAAAAAAAAAAA8L8"
				],
				[
					3961,
					2,
					"left_delete",
					null,
					"AgAAAKYBAAAAAAAApgEAAAAAAAAOAAAAdHlwZXM6OkdMZW51bSClAQAAAAAAAKUBAAAAAAAAAQAAACA",
					"AgAAAAAAAAABAAAA/g0AAAAAAAD+DQAAAAAAAAAAAAAAAPC/AQAAAAEAAAC0AQAAAAAAAKYBAAAAAAAAAAAAAAAA8L8"
				],
				[
					3962,
					1,
					"insert",
					{
						"characters": " i32"
					},
					"BAAAAKUBAAAAAAAApgEAAAAAAAAAAAAApgEAAAAAAACnAQAAAAAAAAAAAACnAQAAAAAAAKgBAAAAAAAAAAAAAKgBAAAAAAAAqQEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA7w0AAAAAAADvDQAAAAAAAAAAAAAAAPC/AQAAAAEAAAClAQAAAAAAAKUBAAAAAAAAAAAAAAAA8L8"
				],
				[
					3963,
					2,
					"rust_fmt_format_buffer",
					null,
					"AQAAAKkBAAAAAAAAqgEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA8w0AAAAAAADzDQAAAAAAAAAAAAAAAPC/AQAAAAEAAACpAQAAAAAAAKkBAAAAAAAAAAAAAAAA8L8"
				],
				[
					3967,
					1,
					"insert",
					{
						"characters": "GL_"
					},
					"AwAAAJgBAAAAAAAAmQEAAAAAAAAAAAAAmQEAAAAAAACaAQAAAAAAAAAAAACaAQAAAAAAAJsBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA9A0AAAAAAAD0DQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAQAAAAAAAJgBAAAAAAAAAAAAAAAA8L8"
				],
				[
					3975,
					1,
					"insert",
					{
						"characters": "\ni32::"
					},
					"CQAAAF0bAAAAAAAAXhsAAAAAAAAAAAAAXhsAAAAAAABiGwAAAAAAAAAAAABeGwAAAAAAAF4bAAAAAAAABAAAACAgICBeGwAAAAAAAGYbAAAAAAAAAAAAAGYbAAAAAAAAZxsAAAAAAAAAAAAAZxsAAAAAAABoGwAAAAAAAAAAAABoGwAAAAAAAGkbAAAAAAAAAAAAAGkbAAAAAAAAahsAAAAAAAAAAAAAahsAAAAAAABrGwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA9w0AAAAAAAD3DQAAAAAAAAAAAAAAAPC/AQAAAAEAAABdGwAAAAAAAF0bAAAAAAAAAAAAAAAA8L8"
				],
				[
					3976,
					1,
					"insert",
					{
						"characters": "from("
					},
					"BQAAAGsbAAAAAAAAbBsAAAAAAAAAAAAAbBsAAAAAAABtGwAAAAAAAAAAAABtGwAAAAAAAG4bAAAAAAAAAAAAAG4bAAAAAAAAbxsAAAAAAAAAAAAAbxsAAAAAAABwGwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA9w0AAAAAAAD3DQAAAAAAAAAAAAAAAPC/AQAAAAEAAABrGwAAAAAAAGsbAAAAAAAAAAAAAAAA8L8"
				],
				[
					3978,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAH4bAAAAAAAAfxsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA9w0AAAAAAAD3DQAAAAAAAAAAAAAAAPC/AQAAAAEAAAB+GwAAAAAAAH4bAAAAAAAAAAAAAAAA8L8"
				],
				[
					3979,
					2,
					"rust_fmt_format_buffer",
					null,
					"CQAAAC4bAAAAAAAANhsAAAAAAAAAAAAAXxsAAAAAAABsGwAAAAAAAAAAAABxGwAAAAAAAHEbAAAAAAAAAQAAACByGwAAAAAAAHQbAAAAAAAAAAAAAHwbAAAAAAAAfhsAAAAAAAAAAAAAmBsAAAAAAACkGwAAAAAAAAAAAAC1GwAAAAAAAMEbAAAAAAAAAAAAAMUbAAAAAAAAzxsAAAAAAAAAAAAA0BsAAAAAAADUGwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA9w0AAAAAAAD3DQAAAAAAAAAAAAAAAPC/AQAAAAEAAAB/GwAAAAAAAH8bAAAAAAAAAAAAAAAA8L8"
				],
				[
					3983,
					1,
					"insert",
					{
						"characters": "try_from"
					},
					"CQAAAIMbAAAAAAAAhBsAAAAAAAAAAAAAhBsAAAAAAACEGwAAAAAAAAQAAABmcm9thBsAAAAAAACFGwAAAAAAAAAAAACFGwAAAAAAAIYbAAAAAAAAAAAAAIYbAAAAAAAAhxsAAAAAAAAAAAAAhxsAAAAAAACIGwAAAAAAAAAAAACIGwAAAAAAAIkbAAAAAAAAAAAAAIkbAAAAAAAAihsAAAAAAAAAAAAAihsAAAAAAACLGwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA9w0AAAAAAAD3DQAAAAAAAAAAAAAAAPC/AQAAAAEAAACHGwAAAAAAAIMbAAAAAAAAAAAAAAAA8L8"
				],
				[
					3986,
					1,
					"insert",
					{
						"characters": ".unwrap()"
					},
					"CQAAAJsbAAAAAAAAnBsAAAAAAAAAAAAAnBsAAAAAAACdGwAAAAAAAAAAAACdGwAAAAAAAJ4bAAAAAAAAAAAAAJ4bAAAAAAAAnxsAAAAAAAAAAAAAnxsAAAAAAACgGwAAAAAAAAAAAACgGwAAAAAAAKEbAAAAAAAAAAAAAKEbAAAAAAAAohsAAAAAAAAAAAAAohsAAAAAAACjGwAAAAAAAAAAAACjGwAAAAAAAKQbAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA9w0AAAAAAAD3DQAAAAAAAAAAAAAAAPC/AQAAAAEAAACbGwAAAAAAAJsbAAAAAAAAAAAAAAAA8L8"
				],
				[
					3993,
					1,
					"insert",
					{
						"characters": "&mut"
					},
					"BAAAANwaAAAAAAAA3RoAAAAAAAAAAAAA3RoAAAAAAADeGgAAAAAAAAAAAADeGgAAAAAAAN8aAAAAAAAAAAAAAN8aAAAAAAAA4BoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA9w0AAAAAAAD3DQAAAAAAAAAAAAAAAPC/AQAAAAEAAADcGgAAAAAAANwaAAAAAAAAAAAAAAAA8L8"
				],
				[
					3994,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOAaAAAAAAAA4RoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA9w0AAAAAAAD3DQAAAAAAAAAAAAAAAPC/AQAAAAEAAADgGgAAAAAAAOAaAAAAAAAAAAAAAAAA8L8"
				],
				[
					4001,
					4,
					"left_delete",
					null,
					"BAAAAAobAAAAAAAAChsAAAAAAAABAAAAXwkbAAAAAAAACRsAAAAAAAABAAAAdAgbAAAAAAAACBsAAAAAAAABAAAAdQcbAAAAAAAABxsAAAAAAAABAAAAbQ",
					"AgAAAAAAAAABAAAA9w0AAAAAAAD3DQAAAAAAAAAAAAAAAPC/AQAAAAEAAAALGwAAAAAAAAsbAAAAAAAAAAAAAAAA8L8"
				],
				[
					4007,
					4,
					"left_delete",
					null,
					"BAAAABQbAAAAAAAAFBsAAAAAAAABAAAAIBMbAAAAAAAAExsAAAAAAAABAAAAdBIbAAAAAAAAEhsAAAAAAAABAAAAdREbAAAAAAAAERsAAAAAAAABAAAAbQ",
					"AgAAAAAAAAABAAAA9w0AAAAAAAD3DQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAVGwAAAAAAABUbAAAAAAAAAAAAAAAA8L8"
				],
				[
					4014,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAPQaAAAAAAAA9RoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA9w0AAAAAAAD3DQAAAAAAAAAAAAAAAPC/AQAAAAEAAAD0GgAAAAAAAPQaAAAAAAAAAAAAAAAA8L8"
				],
				[
					4017,
					1,
					"insert",
					{
						"characters": "const"
					},
					"BQAAABIbAAAAAAAAExsAAAAAAAAAAAAAExsAAAAAAAAUGwAAAAAAAAAAAAAUGwAAAAAAABUbAAAAAAAAAAAAABUbAAAAAAAAFhsAAAAAAAAAAAAAFhsAAAAAAAAXGwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA9w0AAAAAAAD3DQAAAAAAAAAAAAAAAPC/AQAAAAEAAAASGwAAAAAAABIbAAAAAAAAAAAAAAAA8L8"
				],
				[
					4018,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABcbAAAAAAAAGBsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA9w0AAAAAAAD3DQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAXGwAAAAAAABcbAAAAAAAAAAAAAAAA8L8"
				],
				[
					4019,
					2,
					"rust_fmt_format_buffer",
					null,
					"AQAAAPUaAAAAAAAA9RoAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAA9w0AAAAAAAD3DQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAYGwAAAAAAABgbAAAAAAAAAAAAAAAA8L8"
				],
				[
					4024,
					1,
					"left_delete",
					null,
					"AQAAAN0aAAAAAAAA3RoAAAAAAAAEAAAAbXV0IA",
					"AgAAAAAAAAABAAAA9w0AAAAAAAD3DQAAAAAAAAAAAAAAAPC/AQAAAAEAAADhGgAAAAAAAN0aAAAAAAAAAAAAAAAA8L8"
				],
				[
					4025,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAAN0aAAAAAAAA3hoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA9w0AAAAAAAD3DQAAAAAAAAAAAAAAAPC/AQAAAAEAAADdGgAAAAAAAN0aAAAAAAAAAAAAAAAA8L8"
				],
				[
					4026,
					1,
					"left_delete",
					null,
					"AQAAAN0aAAAAAAAA3RoAAAAAAAABAAAAcw",
					"AgAAAAAAAAABAAAA9w0AAAAAAAD3DQAAAAAAAAAAAAAAAPC/AQAAAAEAAADeGgAAAAAAAN4aAAAAAAAAAAAAAAAA8L8"
				],
				[
					4036,
					1,
					"cut",
					null,
					"AQAAAOYbAAAAAAAA5hsAAAAAAADCAQAALyoKcHViIHVuc2FmZSBmbiBEcmF3RWxlbWVudHMoCiAgICBtb2RlOiB0eXBlczo6R0xlbnVtLAogICAgY291bnQ6IHR5cGVzOjpHTHNpemVpLAogICAgdHlwZV86IHR5cGVzOjpHTGVudW0sCiAgICBpbmRpY2VzOiAqY29uc3QgX19nbF9pbXBvcnRzOjpyYXc6OmNfdm9pZCwKKSAtPiAoKSB7CiAgICBfX2dsX2ltcG9ydHM6Om1lbTo6dHJhbnNtdXRlOjo8CiAgICAgICAgXywKICAgICAgICBleHRlcm4gInN5c3RlbSIgZm4oCiAgICAgICAgICAgIHR5cGVzOjpHTGVudW0sCiAgICAgICAgICAgIHR5cGVzOjpHTHNpemVpLAogICAgICAgICAgICB0eXBlczo6R0xlbnVtLAogICAgICAgICAgICAqY29uc3QgX19nbF9pbXBvcnRzOjpyYXc6OmNfdm9pZCwKICAgICAgICApIC0+ICgpLAogICAgPihzdG9yYWdlOjpEcmF3RWxlbWVudHMuZikobW9kZSwgY291bnQsIHR5cGVfLCBpbmRpY2VzKQp9Ciov",
					"AgAAAAAAAAABAAAA9w0AAAAAAAD3DQAAAAAAAAAAAAAAAPC/AQAAAAEAAADmGwAAAAAAAKgdAAAAAAAA////////738"
				],
				[
					4037,
					2,
					"rust_fmt_format_buffer",
					null,
					"AQAAAOYbAAAAAAAA5hsAAAAAAAACAAAACgo",
					"AgAAAAAAAAABAAAA9w0AAAAAAAD3DQAAAAAAAAAAAAAAAPC/AQAAAAEAAADmGwAAAAAAAOYbAAAAAAAAAAAAAAAA8L8"
				],
				[
					4067,
					1,
					"left_delete",
					null,
					"AQAAAJcYAAAAAAAAlxgAAAAAAAABAAAAeA",
					"AgAAAAAAAAABAAAA9w0AAAAAAAD3DQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYGAAAAAAAAJgYAAAAAAAAAAAAAAAA8L8"
				],
				[
					4068,
					1,
					"insert",
					{
						"characters": "type"
					},
					"BAAAAJcYAAAAAAAAmBgAAAAAAAAAAAAAmBgAAAAAAACZGAAAAAAAAAAAAACZGAAAAAAAAJoYAAAAAAAAAAAAAJoYAAAAAAAAmxgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA9w0AAAAAAAD3DQAAAAAAAAAAAAAAAPC/AQAAAAEAAACXGAAAAAAAAJcYAAAAAAAAAAAAAAAA8L8"
				],
				[
					4076,
					1,
					"left_delete",
					null,
					"AQAAAOAYAAAAAAAA4BgAAAAAAAABAAAAeA",
					"AgAAAAAAAAABAAAA9w0AAAAAAAD3DQAAAAAAAAAAAAAAAPC/AQAAAAEAAADhGAAAAAAAAOEYAAAAAAAAAAAAAAAA8L8"
				],
				[
					4077,
					1,
					"insert",
					{
						"characters": "type"
					},
					"BAAAAOAYAAAAAAAA4RgAAAAAAAAAAAAA4RgAAAAAAADiGAAAAAAAAAAAAADiGAAAAAAAAOMYAAAAAAAAAAAAAOMYAAAAAAAA5BgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA9w0AAAAAAAD3DQAAAAAAAAAAAAAAAPC/AQAAAAEAAADgGAAAAAAAAOAYAAAAAAAAAAAAAAAA8L8"
				],
				[
					4081,
					1,
					"insert",
					{
						"characters": "ty"
					},
					"AwAAAOAYAAAAAAAA4RgAAAAAAAAAAAAA4RgAAAAAAADhGAAAAAAAAAQAAAB0eXBl4RgAAAAAAADiGAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA9w0AAAAAAAD3DQAAAAAAAAAAAAAAAPC/AQAAAAEAAADkGAAAAAAAAOAYAAAAAAAAAAAAAAAA8L8"
				],
				[
					4086,
					1,
					"insert",
					{
						"characters": "ty"
					},
					"AwAAAJcYAAAAAAAAmBgAAAAAAAAAAAAAmBgAAAAAAACYGAAAAAAAAAQAAAB0eXBlmBgAAAAAAACZGAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA9w0AAAAAAAD3DQAAAAAAAAAAAAAAAPC/AQAAAAEAAACbGAAAAAAAAJcYAAAAAAAAAAAAAAAA8L8"
				],
				[
					4157,
					1,
					"insert",
					{
						"characters": "ogl_"
					},
					"BAAAAAMOAAAAAAAABA4AAAAAAAAAAAAABA4AAAAAAAAFDgAAAAAAAAAAAAAFDgAAAAAAAAYOAAAAAAAAAAAAAAYOAAAAAAAABw4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAw4AAAAAAAADDgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAGIgAAAAAAAAYiAAAAAAAAAAAAAAAA8L8"
				],
				[
					4162,
					1,
					"cut",
					null,
					"AQAAADQMAAAAAAAANAwAAAAAAADCAQAALyoKcHViIHVuc2FmZSBmbiBEcmF3RWxlbWVudHMoCiAgICBtb2RlOiB0eXBlczo6R0xlbnVtLAogICAgY291bnQ6IHR5cGVzOjpHTHNpemVpLAogICAgdHlwZV86IHR5cGVzOjpHTGVudW0sCiAgICBpbmRpY2VzOiAqY29uc3QgX19nbF9pbXBvcnRzOjpyYXc6OmNfdm9pZCwKKSAtPiAoKSB7CiAgICBfX2dsX2ltcG9ydHM6Om1lbTo6dHJhbnNtdXRlOjo8CiAgICAgICAgXywKICAgICAgICBleHRlcm4gInN5c3RlbSIgZm4oCiAgICAgICAgICAgIHR5cGVzOjpHTGVudW0sCiAgICAgICAgICAgIHR5cGVzOjpHTHNpemVpLAogICAgICAgICAgICB0eXBlczo6R0xlbnVtLAogICAgICAgICAgICAqY29uc3QgX19nbF9pbXBvcnRzOjpyYXc6OmNfdm9pZCwKICAgICAgICApIC0+ICgpLAogICAgPihzdG9yYWdlOjpEcmF3RWxlbWVudHMuZikobW9kZSwgY291bnQsIHR5cGVfLCBpbmRpY2VzKQp9Ciov",
					"AgAAAAAAAAABAAAA9g0AAAAAAAA0DAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAKIgAAAAAAAAoiAAAAAAAAAAAAAAAA8L8"
				],
				[
					4163,
					2,
					"rust_fmt_format_buffer",
					null,
					"AQAAADQMAAAAAAAANAwAAAAAAAACAAAACgo",
					"AgAAAAAAAAABAAAANAwAAAAAAAA0DAAAAAAAAAAAAAAAAPC/AQAAAAEAAABIIAAAAAAAAEggAAAAAAAAAAAAAAAA8L8"
				],
				[
					4169,
					1,
					"cut",
					null,
					"AQAAAEAAAAAAAAAAQAAAAAAAAAAWAAAAICAgIHVudXNlZF92YXJpYWJsZXMsCg",
					"AgAAAAAAAAABAAAAVQAAAAAAAABVAAAAAAAAAAAAAAAAAHJAAQAAAAEAAABGIAAAAAAAAEYgAAAAAAAAAAAAAAAA8L8"
				],
				[
					4173,
					1,
					"cut",
					null,
					"AQAAAIoAAAAAAAAAigAAAAAAAAATAAAAICAgIHVudXNlZF9pbXBvcnRzCg",
					"AgAAAAAAAAABAAAAigAAAAAAAACKAAAAAAAAAAAAAAAAAAAAAQAAAAEAAAAwIAAAAAAAADAgAAAAAAAAAAAAAAAA8L8"
				],
				[
					4174,
					2,
					"rust_fmt_format_buffer",
					null,
					"BAAAAD8AAAAAAAAAPwAAAAAAAAAFAAAACiAgICBOAAAAAAAAAE4AAAAAAAAABAAAAAogICBmAAAAAAAAAGYAAAAAAAAABAAAAAogICB7AAAAAAAAAHsAAAAAAAAAAgAAACwK",
					"AgAAAAAAAAABAAAAigAAAAAAAACKAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAdIAAAAAAAAB0gAAAAAAAAAAAAAAAA8L8"
				],
				[
					4261,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAPsLAAAAAAAA/AsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAUwAAAAAAAABVAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAD7CwAAAAAAAPsLAAAAAAAAAAAAAAAA8L8"
				],
				[
					4262,
					1,
					"paste",
					null,
					"AQAAAPwLAAAAAAAAxAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAUwAAAAAAAABVAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAD8CwAAAAAAAPwLAAAAAAAAAAAAAAAA8L8"
				],
				[
					4263,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAMQMAAAAAAAAxQwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAUwAAAAAAAABVAAAAAAAAAAAAAAAAAPC/AQAAAAEAAADEDAAAAAAAAMQMAAAAAAAAAAAAAAAA8L8"
				],
				[
					4264,
					2,
					"rust_fmt_format_buffer",
					null,
					"BgAAAPwLAAAAAAAA/AsAAAAAAAAMAAAAICAgICAgICAgICAgPwwAAAAAAABDDAAAAAAAAAAAAACPDAAAAAAAAJgMAAAAAAAAAAAAALoMAAAAAAAAwAwAAAAAAAAAAAAAyAwAAAAAAADIDAAAAAAAAAIAAAAgfckMAAAAAAAAygwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAUwAAAAAAAABVAAAAAAAAAAAAAAAAAPC/AQAAAAEAAADFDAAAAAAAAMUMAAAAAAAAAAAAAAAA8L8"
				],
				[
					4273,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAPsLAAAAAAAA/AsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAUwAAAAAAAABVAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAD7CwAAAAAAAPsLAAAAAAAAAAAAAAAYgUA"
				],
				[
					4274,
					1,
					"paste",
					null,
					"AQAAAPwLAAAAAAAAnAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAUwAAAAAAAABVAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAD8CwAAAAAAAPwLAAAAAAAAAAAAAAAA8L8"
				],
				[
					4275,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line.sublime-macro"
					},
					"AQAAAJwMAAAAAAAAnQwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAUwAAAAAAAABVAAAAAAAAAAAAAAAAAPC/AQAAAAEAAACcDAAAAAAAAJwMAAAAAAAAAAAAAAAA8L8"
				],
				[
					4284,
					1,
					"insert",
					{
						"characters": "EnableVertexAtt"
					},
					"EAAAAAgMAAAAAAAACQwAAAAAAAAAAAAACQwAAAAAAAAJDAAAAAAAAAwAAABEcmF3RWxlbWVudHMJDAAAAAAAAAoMAAAAAAAAAAAAAAoMAAAAAAAACwwAAAAAAAAAAAAACwwAAAAAAAAMDAAAAAAAAAAAAAAMDAAAAAAAAA0MAAAAAAAAAAAAAA0MAAAAAAAADgwAAAAAAAAAAAAADgwAAAAAAAAPDAAAAAAAAAAAAAAPDAAAAAAAABAMAAAAAAAAAAAAABAMAAAAAAAAEQwAAAAAAAAAAAAAEQwAAAAAAAASDAAAAAAAAAAAAAASDAAAAAAAABMMAAAAAAAAAAAAABMMAAAAAAAAFAwAAAAAAAAAAAAAFAwAAAAAAAAVDAAAAAAAAAAAAAAVDAAAAAAAABYMAAAAAAAAAAAAABYMAAAAAAAAFwwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAUwAAAAAAAABVAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAUDAAAAAAAAAgMAAAAAAAAAAAAAAAA8L8"
				],
				[
					4285,
					1,
					"insert",
					{
						"characters": "ribArray"
					},
					"CAAAABcMAAAAAAAAGAwAAAAAAAAAAAAAGAwAAAAAAAAZDAAAAAAAAAAAAAAZDAAAAAAAABoMAAAAAAAAAAAAABoMAAAAAAAAGwwAAAAAAAAAAAAAGwwAAAAAAAAcDAAAAAAAAAAAAAAcDAAAAAAAAB0MAAAAAAAAAAAAAB0MAAAAAAAAHgwAAAAAAAAAAAAAHgwAAAAAAAAfDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAUwAAAAAAAABVAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAXDAAAAAAAABcMAAAAAAAAAAAAAAAA8L8"
				],
				[
					4292,
					1,
					"insert",
					{
						"characters": "EanbleV"
					},
					"CAAAAHYMAAAAAAAAdwwAAAAAAAAAAAAAdwwAAAAAAAB3DAAAAAAAAAwAAABEcmF3RWxlbWVudHN3DAAAAAAAAHgMAAAAAAAAAAAAAHgMAAAAAAAAeQwAAAAAAAAAAAAAeQwAAAAAAAB6DAAAAAAAAAAAAAB6DAAAAAAAAHsMAAAAAAAAAAAAAHsMAAAAAAAAfAwAAAAAAAAAAAAAfAwAAAAAAAB9DAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAUwAAAAAAAABVAAAAAAAAAAAAAAAAAPC/AQAAAAEAAACCDAAAAAAAAHYMAAAAAAAAAAAAAAAA8L8"
				],
				[
					4293,
					6,
					"left_delete",
					null,
					"BgAAAHwMAAAAAAAAfAwAAAAAAAABAAAAVnsMAAAAAAAAewwAAAAAAAABAAAAZXoMAAAAAAAAegwAAAAAAAABAAAAbHkMAAAAAAAAeQwAAAAAAAABAAAAYngMAAAAAAAAeAwAAAAAAAABAAAAbncMAAAAAAAAdwwAAAAAAAABAAAAYQ",
					"AgAAAAAAAAABAAAAUwAAAAAAAABVAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAB9DAAAAAAAAH0MAAAAAAAAAAAAAAAA8L8"
				],
				[
					4294,
					1,
					"insert",
					{
						"characters": "nableVertexAttr"
					},
					"DwAAAHcMAAAAAAAAeAwAAAAAAAAAAAAAeAwAAAAAAAB5DAAAAAAAAAAAAAB5DAAAAAAAAHoMAAAAAAAAAAAAAHoMAAAAAAAAewwAAAAAAAAAAAAAewwAAAAAAAB8DAAAAAAAAAAAAAB8DAAAAAAAAH0MAAAAAAAAAAAAAH0MAAAAAAAAfgwAAAAAAAAAAAAAfgwAAAAAAAB/DAAAAAAAAAAAAAB/DAAAAAAAAIAMAAAAAAAAAAAAAIAMAAAAAAAAgQwAAAAAAAAAAAAAgQwAAAAAAACCDAAAAAAAAAAAAACCDAAAAAAAAIMMAAAAAAAAAAAAAIMMAAAAAAAAhAwAAAAAAAAAAAAAhAwAAAAAAACFDAAAAAAAAAAAAACFDAAAAAAAAIYMAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAUwAAAAAAAABVAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAB3DAAAAAAAAHcMAAAAAAAAAAAAAAAA8L8"
				],
				[
					4295,
					1,
					"insert",
					{
						"characters": "ibArrasy"
					},
					"CAAAAIYMAAAAAAAAhwwAAAAAAAAAAAAAhwwAAAAAAACIDAAAAAAAAAAAAACIDAAAAAAAAIkMAAAAAAAAAAAAAIkMAAAAAAAAigwAAAAAAAAAAAAAigwAAAAAAACLDAAAAAAAAAAAAACLDAAAAAAAAIwMAAAAAAAAAAAAAIwMAAAAAAAAjQwAAAAAAAAAAAAAjQwAAAAAAACODAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAUwAAAAAAAABVAAAAAAAAAAAAAAAAAPC/AQAAAAEAAACGDAAAAAAAAIYMAAAAAAAAAAAAAAAA8L8"
				],
				[
					4296,
					2,
					"left_delete",
					null,
					"AgAAAI0MAAAAAAAAjQwAAAAAAAABAAAAeYwMAAAAAAAAjAwAAAAAAAABAAAAcw",
					"AgAAAAAAAAABAAAAUwAAAAAAAABVAAAAAAAAAAAAAAAAAPC/AQAAAAEAAACODAAAAAAAAI4MAAAAAAAAAAAAAAAA8L8"
				],
				[
					4297,
					1,
					"insert",
					{
						"characters": "y"
					},
					"AQAAAIwMAAAAAAAAjQwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAUwAAAAAAAABVAAAAAAAAAAAAAAAAAPC/AQAAAAEAAACMDAAAAAAAAIwMAAAAAAAAAAAAAAAA8L8"
				],
				[
					4310,
					1,
					"paste",
					null,
					"AgAAAJYMAAAAAAAAtAwAAAAAAAAAAAAAtAwAAAAAAAC0DAAAAAAAABMAAABmdW5jX2dsRHJhd0VsZW1lbnRz",
					"AgAAAAAAAAABAAAAUwAAAAAAAABVAAAAAAAAAAAAAAAAAPC/AQAAAAEAAACpDAAAAAAAAJYMAAAAAAAAAAAAAAAA8L8"
				],
				[
					4321,
					1,
					"insert",
					{
						"characters": "u32"
					},
					"BAAAADYMAAAAAAAANwwAAAAAAAAAAAAANwwAAAAAAAA3DAAAAAAAACIAAABpMzIsIGkzMiwgaTMyLCAqY29uc3QgbGliYzo6Y192b2lkNwwAAAAAAAA4DAAAAAAAAAAAAAA4DAAAAAAAADkMAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAUwAAAAAAAABVAAAAAAAAAAAAAAAAAPC/AQAAAAEAAABYDAAAAAAAADYMAAAAAAAAAAAAAAAA8L8"
				],
				[
					4324,
					1,
					"left_delete",
					null,
					"AQAAADgMAAAAAAAAOAwAAAAAAAABAAAAMg",
					"AgAAAAAAAAABAAAAUwAAAAAAAABVAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAA5DAAAAAAAADkMAAAAAAAAAAAAAAAA8L8"
				],
				[
					4325,
					1,
					"left_delete",
					null,
					"AQAAADcMAAAAAAAANwwAAAAAAAABAAAAMw",
					"AgAAAAAAAAABAAAAUwAAAAAAAABVAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAA4DAAAAAAAADgMAAAAAAAAAAAAAAAA8L8"
				],
				[
					4326,
					1,
					"insert",
					{
						"characters": "32"
					},
					"AgAAADcMAAAAAAAAOAwAAAAAAAAAAAAAOAwAAAAAAAA5DAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAUwAAAAAAAABVAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAA3DAAAAAAAADcMAAAAAAAAAAAAAAAA8L8"
				],
				[
					4330,
					5,
					"cut",
					null,
					"BQAAAKAMAAAAAAAAoAwAAAAAAABEAAAAcHViIHVuc2FmZSBmbiBFbmFibGVWZXJ0ZXhBdHRyaWJBcnJheShpbmRleDogdHlwZXM6OkdMdWludCkgLT4gKCkgewqgDAAAAAAAAKAMAAAAAAAAUAAAACAgICBfX2dsX2ltcG9ydHM6Om1lbTo6dHJhbnNtdXRlOjo8XywgZXh0ZXJuICJzeXN0ZW0iIGZuKHR5cGVzOjpHTHVpbnQpIC0+ICgpPigKoAwAAAAAAACgDAAAAAAAACwAAAAgICAgICAgIHN0b3JhZ2U6OkVuYWJsZVZlcnRleEF0dHJpYkFycmF5LmYsCqAMAAAAAAAAoAwAAAAAAAANAAAAICAgICkoaW5kZXgpCqAMAAAAAAAAoAwAAAAAAAACAAAAfQo",
					"AgAAAAAAAAABAAAAUwAAAAAAAABVAAAAAAAAAAAAAAAAAPC/AQAAAAEAAADdDAAAAAAAAN0MAAAAAAAAAAAAAABwe0A"
				],
				[
					4331,
					1,
					"left_delete",
					null,
					"AQAAAJ8MAAAAAAAAnwwAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAUwAAAAAAAABVAAAAAAAAAAAAAAAAAPC/AQAAAAEAAACgDAAAAAAAAKAMAAAAAAAAAAAAAAAA8L8"
				],
				[
					4338,
					1,
					"paste",
					null,
					"AQAAAMgRAAAAAAAAIhIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAUwAAAAAAAABVAAAAAAAAAAAAAAAAAPC/AQAAAAEAAADIEQAAAAAAAMgRAAAAAAAAAAAAAAAAAAA"
				],
				[
					4341,
					1,
					"insert",
					{
						"characters": "Ean"
					},
					"BAAAADoSAAAAAAAAOxIAAAAAAAAAAAAAOxIAAAAAAAA7EgAAAAAAAAwAAABEcmF3RWxlbWVudHM7EgAAAAAAADwSAAAAAAAAAAAAADwSAAAAAAAAPRIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAUwAAAAAAAABVAAAAAAAAAAAAAAAAAPC/AQAAAAEAAABGEgAAAAAAADoSAAAAAAAAAAAAAAAA8L8"
				],
				[
					4342,
					2,
					"left_delete",
					null,
					"AgAAADwSAAAAAAAAPBIAAAAAAAABAAAAbjsSAAAAAAAAOxIAAAAAAAABAAAAYQ",
					"AgAAAAAAAAABAAAAUwAAAAAAAABVAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAA9EgAAAAAAAD0SAAAAAAAAAAAAAAAA8L8"
				],
				[
					4343,
					1,
					"insert",
					{
						"characters": "nableVertex"
					},
					"CwAAADsSAAAAAAAAPBIAAAAAAAAAAAAAPBIAAAAAAAA9EgAAAAAAAAAAAAA9EgAAAAAAAD4SAAAAAAAAAAAAAD4SAAAAAAAAPxIAAAAAAAAAAAAAPxIAAAAAAABAEgAAAAAAAAAAAABAEgAAAAAAAEESAAAAAAAAAAAAAEESAAAAAAAAQhIAAAAAAAAAAAAAQhIAAAAAAABDEgAAAAAAAAAAAABDEgAAAAAAAEQSAAAAAAAAAAAAAEQSAAAAAAAARRIAAAAAAAAAAAAARRIAAAAAAABGEgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAUwAAAAAAAABVAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAA7EgAAAAAAADsSAAAAAAAAAAAAAAAA8L8"
				],
				[
					4344,
					1,
					"insert_completion",
					{
						"completion": "extern_global_glEnableVertexAttribArray",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "extern_global_glEnableVertexAttribArray"
					},
					"AgAAACoSAAAAAAAAKhIAAAAAAAAcAAAAZXh0ZXJuX2dsb2JhbF9nbEVuYWJsZVZlcnRleCoSAAAAAAAAURIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAUwAAAAAAAABVAAAAAAAAAAAAAAAAAPC/AQAAAAEAAABGEgAAAAAAAEYSAAAAAAAAAAAAAAAA8L8"
				],
				[
					4351,
					1,
					"insert",
					{
						"characters": "EnableVertex"
					},
					"DQAAAHUSAAAAAAAAdhIAAAAAAAAAAAAAdhIAAAAAAAB2EgAAAAAAAAwAAABEcmF3RWxlbWVudHN2EgAAAAAAAHcSAAAAAAAAAAAAAHcSAAAAAAAAeBIAAAAAAAAAAAAAeBIAAAAAAAB5EgAAAAAAAAAAAAB5EgAAAAAAAHoSAAAAAAAAAAAAAHoSAAAAAAAAexIAAAAAAAAAAAAAexIAAAAAAAB8EgAAAAAAAAAAAAB8EgAAAAAAAH0SAAAAAAAAAAAAAH0SAAAAAAAAfhIAAAAAAAAAAAAAfhIAAAAAAAB/EgAAAAAAAAAAAAB/EgAAAAAAAIASAAAAAAAAAAAAAIASAAAAAAAAgRIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAUwAAAAAAAABVAAAAAAAAAAAAAAAAAPC/AQAAAAEAAACBEgAAAAAAAHUSAAAAAAAAAAAAAAAA8L8"
				],
				[
					4352,
					1,
					"insert_completion",
					{
						"completion": "func_glEnableVertexAttribArray",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "func_glEnableVertexAttribArray"
					},
					"AgAAAHMSAAAAAAAAcxIAAAAAAAAOAAAAZ2xFbmFibGVWZXJ0ZXhzEgAAAAAAAJESAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAUwAAAAAAAABVAAAAAAAAAAAAAAAAAPC/AQAAAAEAAACBEgAAAAAAAIESAAAAAAAAAAAAAAAA8L8"
				],
				[
					4353,
					2,
					"rust_fmt_format_buffer",
					null,
					"AQAAAFMSAAAAAAAAXxIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAUwAAAAAAAABVAAAAAAAAAAAAAAAAAPC/AQAAAAEAAACREgAAAAAAAJESAAAAAAAAAAAAAAAA8L8"
				],
				[
					4359,
					1,
					"left_delete",
					null,
					"AQAAAH8SAAAAAAAAfxIAAAAAAAAFAAAAZnVuY18",
					"AgAAAAAAAAABAAAAUwAAAAAAAABVAAAAAAAAAAAAAAAAAPC/AQAAAAEAAACEEgAAAAAAAH8SAAAAAAAAAAAAAAAA8L8"
				],
				[
					4366,
					1,
					"paste",
					null,
					"AQAAACMWAAAAAAAATxYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAUwAAAAAAAABVAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAoFgAAAAAAACgWAAAAAAAAAAAAAAAAQkA"
				],
				[
					4371,
					1,
					"paste",
					null,
					"AgAAAFcWAAAAAAAAdBYAAAAAAAAAAAAAdBYAAAAAAAB0FgAAAAAAABAAAABnbF9kcmF3X2VsZW1lbnRz",
					"AgAAAAAAAAABAAAAUwAAAAAAAABVAAAAAAAAAAAAAAAAAPC/AQAAAAEAAABnFgAAAAAAAFcWAAAAAAAAAAAAAAAA8L8"
				],
				[
					4376,
					1,
					"paste",
					null,
					"AgAAAHYWAAAAAAAAkxYAAAAAAAAAAAAAkxYAAAAAAACTFgAAAAAAABAAAABnbF9kcmF3X2VsZW1lbnRz",
					"AgAAAAAAAAABAAAAUwAAAAAAAABVAAAAAAAAAAAAAAAAAPC/AQAAAAEAAACGFgAAAAAAAHYWAAAAAAAAAAAAAAAA8L8"
				],
				[
					4382,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAFQYAAAAAAAAVRgAAAAAAAAAAAAAVRgAAAAAAABWGAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAUwAAAAAAAABVAAAAAAAAAAAAAAAAAPC/AQAAAAEAAABUGAAAAAAAAFQYAAAAAAAAAAAAAACgcEA"
				],
				[
					4384,
					1,
					"reindent",
					null,
					"AQAAAFUYAAAAAAAAWRgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAUwAAAAAAAABVAAAAAAAAAAAAAAAAAPC/AQAAAAEAAABVGAAAAAAAAFUYAAAAAAAAAAAAAAAAAAA"
				],
				[
					4385,
					1,
					"left_delete",
					null,
					"AQAAAFUYAAAAAAAAVRgAAAAAAAAEAAAAICAgIA",
					"AgAAAAAAAAABAAAAUwAAAAAAAABVAAAAAAAAAAAAAAAAAPC/AQAAAAEAAABZGAAAAAAAAFkYAAAAAAAAAAAAAAAA8L8"
				],
				[
					4386,
					1,
					"insert",
					{
						"characters": "fn"
					},
					"AgAAAFUYAAAAAAAAVhgAAAAAAAAAAAAAVhgAAAAAAABXGAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAUwAAAAAAAABVAAAAAAAAAAAAAAAAAPC/AQAAAAEAAABVGAAAAAAAAFUYAAAAAAAAAAAAAAAA8L8"
				],
				[
					4387,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFcYAAAAAAAAWBgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAUwAAAAAAAABVAAAAAAAAAAAAAAAAAPC/AQAAAAEAAABXGAAAAAAAAFcYAAAAAAAAAAAAAAAA8L8"
				],
				[
					4388,
					1,
					"paste",
					null,
					"AQAAAFgYAAAAAAAAdRgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAUwAAAAAAAABVAAAAAAAAAAAAAAAAAPC/AQAAAAEAAABYGAAAAAAAAFgYAAAAAAAAAAAAAAAA8L8"
				],
				[
					4389,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAHUYAAAAAAAAdxgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAUwAAAAAAAABVAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAB1GAAAAAAAAHUYAAAAAAAAAAAAAAAA8L8"
				],
				[
					4390,
					1,
					"insert",
					{
						"characters": "u2"
					},
					"AgAAAHYYAAAAAAAAdxgAAAAAAAAAAAAAdxgAAAAAAAB4GAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAUwAAAAAAAABVAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAB2GAAAAAAAAHYYAAAAAAAAAAAAAAAA8L8"
				],
				[
					4391,
					2,
					"left_delete",
					null,
					"AgAAAHcYAAAAAAAAdxgAAAAAAAABAAAAMnYYAAAAAAAAdhgAAAAAAAABAAAAdQ",
					"AgAAAAAAAAABAAAAUwAAAAAAAABVAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAB4GAAAAAAAAHgYAAAAAAAAAAAAAAAA8L8"
				],
				[
					4392,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAHUYAAAAAAAAdRgAAAAAAAABAAAAKHUYAAAAAAAAdRgAAAAAAAABAAAAKQ",
					"AgAAAAAAAAABAAAAUwAAAAAAAABVAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAB2GAAAAAAAAHYYAAAAAAAAAAAAAAAA8L8"
				],
				[
					4393,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAHUYAAAAAAAAdxgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAUwAAAAAAAABVAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAB1GAAAAAAAAHUYAAAAAAAAAAAAAAAA8L8"
				],
				[
					4394,
					1,
					"insert",
					{
						"characters": "loc:"
					},
					"BAAAAHYYAAAAAAAAdxgAAAAAAAAAAAAAdxgAAAAAAAB4GAAAAAAAAAAAAAB4GAAAAAAAAHkYAAAAAAAAAAAAAHkYAAAAAAAAehgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAUwAAAAAAAABVAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAB2GAAAAAAAAHYYAAAAAAAAAAAAAAAA8L8"
				],
				[
					4395,
					1,
					"insert",
					{
						"characters": " u32"
					},
					"BAAAAHoYAAAAAAAAexgAAAAAAAAAAAAAexgAAAAAAAB8GAAAAAAAAAAAAAB8GAAAAAAAAH0YAAAAAAAAAAAAAH0YAAAAAAAAfhgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAUwAAAAAAAABVAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAB6GAAAAAAAAHoYAAAAAAAAAAAAAAAA8L8"
				],
				[
					4397,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAH8YAAAAAAAAgRgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAUwAAAAAAAABVAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAB/GAAAAAAAAH8YAAAAAAAAAAAAAAAA8L8"
				],
				[
					4398,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAH8YAAAAAAAAfxgAAAAAAAABAAAAe38YAAAAAAAAfxgAAAAAAAABAAAAfQ",
					"AgAAAAAAAAABAAAAUwAAAAAAAABVAAAAAAAAAAAAAAAAAPC/AQAAAAEAAACAGAAAAAAAAIAYAAAAAAAAAAAAAAAA8L8"
				],
				[
					4399,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAH8YAAAAAAAAgBgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAUwAAAAAAAABVAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAB/GAAAAAAAAH8YAAAAAAAAAAAAAAAA8L8"
				],
				[
					4400,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAIAYAAAAAAAAghgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAUwAAAAAAAABVAAAAAAAAAAAAAAAAAPC/AQAAAAEAAACAGAAAAAAAAIAYAAAAAAAAAAAAAAAA8L8"
				],
				[
					4401,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAAIEYAAAAAAAAghgAAAAAAAAAAAAAghgAAAAAAACDGAAAAAAAAAAAAACCGAAAAAAAAIYYAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAUwAAAAAAAABVAAAAAAAAAAAAAAAAAPC/AQAAAAEAAACBGAAAAAAAAIEYAAAAAAAAAAAAAAAA8L8"
				],
				[
					4402,
					1,
					"insert",
					{
						"characters": "unsafe"
					},
					"BgAAAIYYAAAAAAAAhxgAAAAAAAAAAAAAhxgAAAAAAACIGAAAAAAAAAAAAACIGAAAAAAAAIkYAAAAAAAAAAAAAIkYAAAAAAAAihgAAAAAAAAAAAAAihgAAAAAAACLGAAAAAAAAAAAAACLGAAAAAAAAIwYAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAUwAAAAAAAABVAAAAAAAAAAAAAAAAAPC/AQAAAAEAAACGGAAAAAAAAIYYAAAAAAAAAAAAAAAA8L8"
				],
				[
					4403,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIwYAAAAAAAAjRgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAUwAAAAAAAABVAAAAAAAAAAAAAAAAAPC/AQAAAAEAAACMGAAAAAAAAIwYAAAAAAAAAAAAAAAA8L8"
				],
				[
					4404,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAI0YAAAAAAAAjxgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAUwAAAAAAAABVAAAAAAAAAAAAAAAAAPC/AQAAAAEAAACNGAAAAAAAAI0YAAAAAAAAAAAAAAAA8L8"
				],
				[
					4405,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAI4YAAAAAAAAjxgAAAAAAAAAAAAAjxgAAAAAAACTGAAAAAAAAAAAAACTGAAAAAAAAJQYAAAAAAAAAAAAAJQYAAAAAAAAmBgAAAAAAAAAAAAAjxgAAAAAAACPGAAAAAAAAAQAAAAgICAgjxgAAAAAAACXGAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAUwAAAAAAAABVAAAAAAAAAAAAAAAAAPC/AQAAAAEAAACOGAAAAAAAAI4YAAAAAAAAAAAAAAAA8L8"
				],
				[
					4411,
					1,
					"paste",
					null,
					"AQAAAIIYAAAAAAAAvRgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAUwAAAAAAAABVAAAAAAAAAAAAAAAAAPC/AQAAAAEAAACKGAAAAAAAAIoYAAAAAAAAAAAAAAAATUA"
				],
				[
					4414,
					3,
					"cut",
					null,
					"AwAAAL0YAAAAAAAAvRgAAAAAAAANAAAAICAgIHVuc2FmZSB7Cr0YAAAAAAAAvRgAAAAAAAAJAAAAICAgICAgICAKvRgAAAAAAAC9GAAAAAAAAAYAAAAgICAgfQo",
					"AgAAAAAAAAABAAAAUwAAAAAAAABVAAAAAAAAAAAAAAAAAPC/AQAAAAEAAADFGAAAAAAAAMUYAAAAAAAAAAAAAAAATUA"
				],
				[
					4420,
					2,
					"left_delete",
					null,
					"AgAAALgYAAAAAAAAuBgAAAAAAAABAAAAebcYAAAAAAAAtxgAAAAAAAABAAAAdA",
					"AgAAAAAAAAABAAAAUwAAAAAAAABVAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAC5GAAAAAAAALkYAAAAAAAAAAAAAAAA8L8"
				],
				[
					4421,
					1,
					"insert",
					{
						"characters": "loc"
					},
					"AwAAALcYAAAAAAAAuBgAAAAAAAAAAAAAuBgAAAAAAAC5GAAAAAAAAAAAAAC5GAAAAAAAALoYAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAUwAAAAAAAABVAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAC3GAAAAAAAALcYAAAAAAAAAAAAAAAA8L8"
				],
				[
					4434,
					1,
					"insert",
					{
						"characters": "EnableV"
					},
					"CAAAAKAYAAAAAAAAoRgAAAAAAAAAAAAAoRgAAAAAAAChGAAAAAAAAAwAAABDcmVhdGVTaGFkZXKhGAAAAAAAAKIYAAAAAAAAAAAAAKIYAAAAAAAAoxgAAAAAAAAAAAAAoxgAAAAAAACkGAAAAAAAAAAAAACkGAAAAAAAAKUYAAAAAAAAAAAAAKUYAAAAAAAAphgAAAAAAAAAAAAAphgAAAAAAACnGAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAUwAAAAAAAABVAAAAAAAAAAAAAAAAAPC/AQAAAAEAAACsGAAAAAAAAKAYAAAAAAAAAAAAAAAA8L8"
				],
				[
					4435,
					1,
					"insert_completion",
					{
						"completion": "extern_global_glEnableVertexAttribArray",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "extern_global_glEnableVertexAttribArray"
					},
					"AgAAAJAYAAAAAAAAkBgAAAAAAAAXAAAAZXh0ZXJuX2dsb2JhbF9nbEVuYWJsZVaQGAAAAAAAALcYAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAUwAAAAAAAABVAAAAAAAAAAAAAAAAAPC/AQAAAAEAAACnGAAAAAAAAKcYAAAAAAAAAAAAAAAA8L8"
				],
				[
					4491,
					1,
					"insert",
					{
						"characters": "P"
					},
					"AQAAAFkLAAAAAAAAWgsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAWQsAAAAAAABZCwAAAAAAAAAAAAAAAPC/AQAAAAEAAABUGAAAAAAAAFQYAAAAAAAAAAAAAAAA8L8"
				],
				[
					4500,
					1,
					"left_delete",
					null,
					"AQAAAFkLAAAAAAAAWQsAAAAAAAABAAAAUA",
					"AgAAAAAAAAABAAAAWgsAAAAAAABaCwAAAAAAAAAAAAAAAPC/AQAAAAEAAABVGAAAAAAAAFUYAAAAAAAAAAAAAAAA8L8"
				],
				[
					4501,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAAFkLAAAAAAAAWgsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAWQsAAAAAAABZCwAAAAAAAAAAAAAAAPC/AQAAAAEAAABUGAAAAAAAAFQYAAAAAAAAAAAAAAAA8L8"
				],
				[
					4502,
					1,
					"left_delete",
					null,
					"AQAAAFkLAAAAAAAAWQsAAAAAAAABAAAAcw",
					"AgAAAAAAAAABAAAAWgsAAAAAAABaCwAAAAAAAAAAAAAAAPC/AQAAAAEAAABVGAAAAAAAAFUYAAAAAAAAAAAAAAAA8L8"
				],
				[
					4510,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAJ8MAAAAAAAAoAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAnwwAAAAAAACfDAAAAAAAAAAAAAAAAPC/AQAAAAEAAABUGAAAAAAAAFQYAAAAAAAAAAAAAAAA8L8"
				],
				[
					4511,
					1,
					"paste",
					null,
					"AQAAAKAMAAAAAAAArg0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAoAwAAAAAAACgDAAAAAAAAAAAAAAAAPC/AQAAAAEAAABVGAAAAAAAAFUYAAAAAAAAAAAAAAAA8L8"
				],
				[
					4512,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line.sublime-macro"
					},
					"AQAAAK4NAAAAAAAArw0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAArg0AAAAAAACuDQAAAAAAAAAAAAAAAPC/AQAAAAEAAABjGQAAAAAAAGMZAAAAAAAAAAAAAAAA8L8"
				],
				[
					4513,
					2,
					"rust_fmt_format_buffer",
					null,
					"CgAAAKAMAAAAAAAAoAwAAAAAAAAMAAAAICAgICAgICAgICAgwQwAAAAAAADGDAAAAAAAAAAAAADdDAAAAAAAAOEMAAAAAAAAAAAAAPwMAAAAAAAA/gwAAAAAAAAAAAAAEQ0AAAAAAAAVDQAAAAAAAAAAAAA1DQAAAAAAAD4NAAAAAAAAAAAAAEANAAAAAAAASA0AAAAAAAAAAAAAkA0AAAAAAACWDQAAAAAAAAAAAADFDQAAAAAAAMUNAAAAAAAAAwAAACB9CsUNAAAAAAAAxw0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAArw0AAAAAAACvDQAAAAAAAAAAAAAAAPC/AQAAAAEAAABkGQAAAAAAAGQZAAAAAAAAAAAAAAAA8L8"
				],
				[
					4521,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAJ8MAAAAAAAAoAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAnwwAAAAAAACfDAAAAAAAAAAAAAAAEIZAAQAAAAEAAAB9GQAAAAAAAH0ZAAAAAAAAAAAAAAAA8L8"
				],
				[
					4522,
					1,
					"paste",
					null,
					"AQAAAKAMAAAAAAAAQg0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAoAwAAAAAAACgDAAAAAAAAAAAAAAAAPC/AQAAAAEAAAB+GQAAAAAAAH4ZAAAAAAAAAAAAAAAA8L8"
				],
				[
					4523,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line.sublime-macro"
					},
					"AQAAAEINAAAAAAAAQw0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQg0AAAAAAABCDQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAgGgAAAAAAACAaAAAAAAAAAAAAAAAA8L8"
				],
				[
					4529,
					1,
					"insert",
					{
						"characters": "GetUniformL"
					},
					"DAAAAKwMAAAAAAAArQwAAAAAAAAAAAAArQwAAAAAAACtDAAAAAAAABcAAABFbmFibGVWZXJ0ZXhBdHRyaWJBcnJhea0MAAAAAAAArgwAAAAAAAAAAAAArgwAAAAAAACvDAAAAAAAAAAAAACvDAAAAAAAALAMAAAAAAAAAAAAALAMAAAAAAAAsQwAAAAAAAAAAAAAsQwAAAAAAACyDAAAAAAAAAAAAACyDAAAAAAAALMMAAAAAAAAAAAAALMMAAAAAAAAtAwAAAAAAAAAAAAAtAwAAAAAAAC1DAAAAAAAAAAAAAC1DAAAAAAAALYMAAAAAAAAAAAAALYMAAAAAAAAtwwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAwwwAAAAAAACsDAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAhGgAAAAAAACEaAAAAAAAAAAAAAAAA8L8"
				],
				[
					4530,
					1,
					"insert",
					{
						"characters": "ocation"
					},
					"BwAAALcMAAAAAAAAuAwAAAAAAAAAAAAAuAwAAAAAAAC5DAAAAAAAAAAAAAC5DAAAAAAAALoMAAAAAAAAAAAAALoMAAAAAAAAuwwAAAAAAAAAAAAAuwwAAAAAAAC8DAAAAAAAAAAAAAC8DAAAAAAAAL0MAAAAAAAAAAAAAL0MAAAAAAAAvgwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAtwwAAAAAAAC3DAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAVGgAAAAAAABUaAAAAAAAAAAAAAAAA8L8"
				],
				[
					4534,
					1,
					"insert",
					{
						"characters": "GetUniformLocat"
					},
					"EAAAAPYMAAAAAAAA9wwAAAAAAAAAAAAA9wwAAAAAAAD3DAAAAAAAABcAAABFbmFibGVWZXJ0ZXhBdHRyaWJBcnJhefcMAAAAAAAA+AwAAAAAAAAAAAAA+AwAAAAAAAD5DAAAAAAAAAAAAAD5DAAAAAAAAPoMAAAAAAAAAAAAAPoMAAAAAAAA+wwAAAAAAAAAAAAA+wwAAAAAAAD8DAAAAAAAAAAAAAD8DAAAAAAAAP0MAAAAAAAAAAAAAP0MAAAAAAAA/gwAAAAAAAAAAAAA/gwAAAAAAAD/DAAAAAAAAAAAAAD/DAAAAAAAAAANAAAAAAAAAAAAAAANAAAAAAAAAQ0AAAAAAAAAAAAAAQ0AAAAAAAACDQAAAAAAAAAAAAACDQAAAAAAAAMNAAAAAAAAAAAAAAMNAAAAAAAABA0AAAAAAAAAAAAABA0AAAAAAAAFDQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAADQ0AAAAAAAD2DAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAcGgAAAAAAABwaAAAAAAAAAAAAAAAA8L8"
				],
				[
					4535,
					1,
					"insert",
					{
						"characters": "ion"
					},
					"AwAAAAUNAAAAAAAABg0AAAAAAAAAAAAABg0AAAAAAAAHDQAAAAAAAAAAAAAHDQAAAAAAAAgNAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAABQ0AAAAAAAAFDQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAUGgAAAAAAABQaAAAAAAAAAAAAAAAA8L8"
				],
				[
					4543,
					1,
					"insert",
					{
						"characters": "GetUniform"
					},
					"CwAAABgNAAAAAAAAGQ0AAAAAAAAAAAAAGQ0AAAAAAAAZDQAAAAAAABcAAABFbmFibGVWZXJ0ZXhBdHRyaWJBcnJheRkNAAAAAAAAGg0AAAAAAAAAAAAAGg0AAAAAAAAbDQAAAAAAAAAAAAAbDQAAAAAAABwNAAAAAAAAAAAAABwNAAAAAAAAHQ0AAAAAAAAAAAAAHQ0AAAAAAAAeDQAAAAAAAAAAAAAeDQAAAAAAAB8NAAAAAAAAAAAAAB8NAAAAAAAAIA0AAAAAAAAAAAAAIA0AAAAAAAAhDQAAAAAAAAAAAAAhDQAAAAAAACINAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAALw0AAAAAAAAYDQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAXGgAAAAAAABcaAAAAAAAAAAAAAAAA8L8"
				],
				[
					4544,
					1,
					"insert_completion",
					{
						"completion": "func_glGetUniformLocation",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "func_glGetUniformLocation"
					},
					"AgAAABENAAAAAAAAEQ0AAAAAAAARAAAAZnVuY19nbEdldFVuaWZvcm0RDQAAAAAAACoNAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAIg0AAAAAAAAiDQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAKGgAAAAAAAAoaAAAAAAAAAAAAAAAA8L8"
				],
				[
					4549,
					1,
					"insert",
					{
						"characters": "\n/*"
					},
					"AwAAADQNAAAAAAAANQ0AAAAAAAAAAAAANQ0AAAAAAAA2DQAAAAAAAAAAAAA2DQAAAAAAADcNAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAANA0AAAAAAAA0DQAAAAAAAAAAAAAAyIFAAQAAAAEAAAASGgAAAAAAABIaAAAAAAAAAAAAAAAA8L8"
				],
				[
					4553,
					1,
					"cut",
					null,
					"AQAAADUNAAAAAAAANQ0AAAAAAAADAAAALyoK",
					"AgAAAAAAAAABAAAANQ0AAAAAAAA1DQAAAAAAAAAAAAAAAAAAAQAAAAEAAAAVGgAAAAAAABUaAAAAAAAAAAAAAAAA8L8"
				],
				[
					4557,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAANgMAAAAAAAA2QwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA2AwAAAAAAADYDAAAAAAAAAAAAAAAAPC/AQAAAAEAAAASGgAAAAAAABIaAAAAAAAAAAAAAAAA8L8"
				],
				[
					4558,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANkMAAAAAAAA2gwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA2QwAAAAAAADZDAAAAAAAAAAAAAAAAPC/AQAAAAEAAAATGgAAAAAAABMaAAAAAAAAAAAAAAAA8L8"
				],
				[
					4559,
					1,
					"insert",
					{
						"characters": "*const"
					},
					"BgAAANoMAAAAAAAA2wwAAAAAAAAAAAAA2wwAAAAAAADcDAAAAAAAAAAAAADcDAAAAAAAAN0MAAAAAAAAAAAAAN0MAAAAAAAA3gwAAAAAAAAAAAAA3gwAAAAAAADfDAAAAAAAAAAAAADfDAAAAAAAAOAMAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA2gwAAAAAAADaDAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAUGgAAAAAAABQaAAAAAAAAAAAAAAAA8L8"
				],
				[
					4560,
					1,
					"insert",
					{
						"characters": " libc::c"
					},
					"CAAAAOAMAAAAAAAA4QwAAAAAAAAAAAAA4QwAAAAAAADiDAAAAAAAAAAAAADiDAAAAAAAAOMMAAAAAAAAAAAAAOMMAAAAAAAA5AwAAAAAAAAAAAAA5AwAAAAAAADlDAAAAAAAAAAAAADlDAAAAAAAAOYMAAAAAAAAAAAAAOYMAAAAAAAA5wwAAAAAAAAAAAAA5wwAAAAAAADoDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA4AwAAAAAAADgDAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAaGgAAAAAAABoaAAAAAAAAAAAAAAAA8L8"
				],
				[
					4561,
					1,
					"insert",
					{
						"characters": "_char"
					},
					"BQAAAOgMAAAAAAAA6QwAAAAAAAAAAAAA6QwAAAAAAADqDAAAAAAAAAAAAADqDAAAAAAAAOsMAAAAAAAAAAAAAOsMAAAAAAAA7AwAAAAAAAAAAAAA7AwAAAAAAADtDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA6AwAAAAAAADoDAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAiGgAAAAAAACIaAAAAAAAAAAAAAAAA8L8"
				],
				[
					4564,
					1,
					"insert",
					{
						"characters": "\n/*"
					},
					"AwAAAEkNAAAAAAAASg0AAAAAAAAAAAAASg0AAAAAAABLDQAAAAAAAAAAAABLDQAAAAAAAEwNAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAASQ0AAAAAAABJDQAAAAAAAAAAAAAAUIFAAQAAAAEAAAAnGgAAAAAAACcaAAAAAAAAAAAAAAAA8L8"
				],
				[
					4568,
					1,
					"insert",
					{
						"characters": "\n*/"
					},
					"AwAAAHQOAAAAAAAAdQ4AAAAAAAAAAAAAdQ4AAAAAAAB2DgAAAAAAAAAAAAB2DgAAAAAAAHcOAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAdA4AAAAAAAB0DgAAAAAAAP///////+9/AQAAAAEAAAAqGgAAAAAAACoaAAAAAAAAAAAAAAAA8L8"
				],
				[
					4577,
					1,
					"paste",
					null,
					"AQAAAKETAAAAAAAA+xMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAoRMAAAAAAAChEwAAAAAAAAAAAAAAAAAAAQAAAAEAAAAtGgAAAAAAAC0aAAAAAAAAAAAAAAAA8L8"
				],
				[
					4582,
					1,
					"insert",
					{
						"characters": "GetUniformLocati"
					},
					"EQAAAEMUAAAAAAAARBQAAAAAAAAAAAAARBQAAAAAAABEFAAAAAAAAAwAAABEcmF3RWxlbWVudHNEFAAAAAAAAEUUAAAAAAAAAAAAAEUUAAAAAAAARhQAAAAAAAAAAAAARhQAAAAAAABHFAAAAAAAAAAAAABHFAAAAAAAAEgUAAAAAAAAAAAAAEgUAAAAAAAASRQAAAAAAAAAAAAASRQAAAAAAABKFAAAAAAAAAAAAABKFAAAAAAAAEsUAAAAAAAAAAAAAEsUAAAAAAAATBQAAAAAAAAAAAAATBQAAAAAAABNFAAAAAAAAAAAAABNFAAAAAAAAE4UAAAAAAAAAAAAAE4UAAAAAAAATxQAAAAAAAAAAAAATxQAAAAAAABQFAAAAAAAAAAAAABQFAAAAAAAAFEUAAAAAAAAAAAAAFEUAAAAAAAAUhQAAAAAAAAAAAAAUhQAAAAAAABTFAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAATxQAAAAAAABDFAAAAAAAAAAAAAAAAPC/AQAAAAEAAACHGgAAAAAAAIcaAAAAAAAAAAAAAAAA8L8"
				],
				[
					4583,
					1,
					"insert",
					{
						"characters": "on"
					},
					"AgAAAFMUAAAAAAAAVBQAAAAAAAAAAAAAVBQAAAAAAABVFAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAUxQAAAAAAABTFAAAAAAAAAAAAAAAAPC/AQAAAAEAAACLGgAAAAAAAIsaAAAAAAAAAAAAAAAA8L8"
				],
				[
					4593,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAJ0lAAAAAAAAniUAAAAAAAAAAAAAniUAAAAAAACfJQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAnSUAAAAAAACdJQAAAAAAAAAAAAAAAAAAAQAAAAEAAACNGgAAAAAAAI0aAAAAAAAAAAAAAAAA8L8"
				],
				[
					4595,
					1,
					"reindent",
					null,
					"AQAAAJ4lAAAAAAAAoiUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAniUAAAAAAACeJQAAAAAAAAAAAAAAAAAAAQAAAAEAAACNGgAAAAAAAI0aAAAAAAAAAAAAAAAA8L8"
				],
				[
					4596,
					1,
					"insert",
					{
						"characters": "pub"
					},
					"AwAAAKIlAAAAAAAAoyUAAAAAAAAAAAAAoyUAAAAAAACkJQAAAAAAAAAAAACkJQAAAAAAAKUlAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAoiUAAAAAAACiJQAAAAAAAAAAAAAAAPC/AQAAAAEAAACNGgAAAAAAAI0aAAAAAAAAAAAAAAAA8L8"
				],
				[
					4597,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKUlAAAAAAAApiUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAApSUAAAAAAAClJQAAAAAAAAAAAAAAAPC/AQAAAAEAAACNGgAAAAAAAI0aAAAAAAAAAAAAAAAA8L8"
				],
				[
					4598,
					2,
					"left_delete",
					null,
					"AgAAAKUlAAAAAAAApSUAAAAAAAABAAAAIKQlAAAAAAAApCUAAAAAAAABAAAAYg",
					"AgAAAAAAAAABAAAApiUAAAAAAACmJQAAAAAAAAAAAAAAAPC/AQAAAAEAAACNGgAAAAAAAI0aAAAAAAAAAAAAAAAA8L8"
				],
				[
					4600,
					1,
					"left_delete",
					null,
					"AQAAAJ4lAAAAAAAAniUAAAAAAAAEAAAAICAgIA",
					"AgAAAAAAAAABAAAAoiUAAAAAAACiJQAAAAAAAAAAAAAAAD1AAQAAAAEAAACNGgAAAAAAAI0aAAAAAAAAAAAAAAAA8L8"
				],
				[
					4602,
					1,
					"insert",
					{
						"characters": "b"
					},
					"AQAAAKAlAAAAAAAAoSUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAoCUAAAAAAACgJQAAAAAAAP///////+9/AQAAAAEAAACNGgAAAAAAAI0aAAAAAAAAAAAAAAAA8L8"
				],
				[
					4603,
					1,
					"insert",
					{
						"characters": " fn"
					},
					"AwAAAKElAAAAAAAAoiUAAAAAAAAAAAAAoiUAAAAAAACjJQAAAAAAAAAAAACjJQAAAAAAAKQlAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAoSUAAAAAAAChJQAAAAAAAAAAAAAAAPC/AQAAAAEAAACNGgAAAAAAAI0aAAAAAAAAAAAAAAAA8L8"
				],
				[
					4604,
					1,
					"insert",
					{
						"characters": " gl_get_uni"
					},
					"CwAAAKQlAAAAAAAApSUAAAAAAAAAAAAApSUAAAAAAACmJQAAAAAAAAAAAACmJQAAAAAAAKclAAAAAAAAAAAAAKclAAAAAAAAqCUAAAAAAAAAAAAAqCUAAAAAAACpJQAAAAAAAAAAAACpJQAAAAAAAKolAAAAAAAAAAAAAKolAAAAAAAAqyUAAAAAAAAAAAAAqyUAAAAAAACsJQAAAAAAAAAAAACsJQAAAAAAAK0lAAAAAAAAAAAAAK0lAAAAAAAAriUAAAAAAAAAAAAAriUAAAAAAACvJQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAApCUAAAAAAACkJQAAAAAAAAAAAAAAAPC/AQAAAAEAAACNGgAAAAAAAI0aAAAAAAAAAAAAAAAA8L8"
				],
				[
					4605,
					1,
					"insert",
					{
						"characters": "form_location"
					},
					"DQAAAK8lAAAAAAAAsCUAAAAAAAAAAAAAsCUAAAAAAACxJQAAAAAAAAAAAACxJQAAAAAAALIlAAAAAAAAAAAAALIlAAAAAAAAsyUAAAAAAAAAAAAAsyUAAAAAAAC0JQAAAAAAAAAAAAC0JQAAAAAAALUlAAAAAAAAAAAAALUlAAAAAAAAtiUAAAAAAAAAAAAAtiUAAAAAAAC3JQAAAAAAAAAAAAC3JQAAAAAAALglAAAAAAAAAAAAALglAAAAAAAAuSUAAAAAAAAAAAAAuSUAAAAAAAC6JQAAAAAAAAAAAAC6JQAAAAAAALslAAAAAAAAAAAAALslAAAAAAAAvCUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAryUAAAAAAACvJQAAAAAAAAAAAAAAAPC/AQAAAAEAAACNGgAAAAAAAI0aAAAAAAAAAAAAAAAA8L8"
				],
				[
					4606,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAALwlAAAAAAAAviUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAvCUAAAAAAAC8JQAAAAAAAAAAAAAAAPC/AQAAAAEAAACNGgAAAAAAAI0aAAAAAAAAAAAAAAAA8L8"
				],
				[
					4608,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAL4lAAAAAAAAvyUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAviUAAAAAAAC+JQAAAAAAAAAAAAAAAPC/AQAAAAEAAACNGgAAAAAAAI0aAAAAAAAAAAAAAAAA8L8"
				],
				[
					4609,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAL8lAAAAAAAAwSUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAvyUAAAAAAAC/JQAAAAAAAAAAAAAAAPC/AQAAAAEAAACNGgAAAAAAAI0aAAAAAAAAAAAAAAAA8L8"
				],
				[
					4610,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAAMAlAAAAAAAAwSUAAAAAAAAAAAAAwSUAAAAAAADCJQAAAAAAAAAAAADBJQAAAAAAAMUlAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAwCUAAAAAAADAJQAAAAAAAAAAAAAAAPC/AQAAAAEAAACNGgAAAAAAAI0aAAAAAAAAAAAAAAAA8L8"
				],
				[
					4615,
					1,
					"insert",
					{
						"characters": "prog_id:"
					},
					"CQAAAL0lAAAAAAAAviUAAAAAAAAAAAAAwiUAAAAAAADCJQAAAAAAAAQAAAAgICAgviUAAAAAAAC/JQAAAAAAAAAAAAC/JQAAAAAAAMAlAAAAAAAAAAAAAMAlAAAAAAAAwSUAAAAAAAAAAAAAwSUAAAAAAADCJQAAAAAAAAAAAADCJQAAAAAAAMMlAAAAAAAAAAAAAMMlAAAAAAAAxCUAAAAAAAAAAAAAxCUAAAAAAADFJQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAvSUAAAAAAAC9JQAAAAAAAAAAAAAAAPC/AQAAAAEAAACNGgAAAAAAAI0aAAAAAAAAAAAAAAAA8L8"
				],
				[
					4616,
					1,
					"insert",
					{
						"characters": " u32"
					},
					"BAAAAMUlAAAAAAAAxiUAAAAAAAAAAAAAxiUAAAAAAADHJQAAAAAAAAAAAADHJQAAAAAAAMglAAAAAAAAAAAAAMglAAAAAAAAySUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAxSUAAAAAAADFJQAAAAAAAAAAAAAAAPC/AQAAAAEAAACNGgAAAAAAAI0aAAAAAAAAAAAAAAAA8L8"
				],
				[
					4625,
					1,
					"insert",
					{
						"characters": " ->"
					},
					"AwAAAO4MAAAAAAAA7wwAAAAAAAAAAAAA7wwAAAAAAADwDAAAAAAAAAAAAADwDAAAAAAAAPEMAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA7gwAAAAAAADuDAAAAAAAAAAAAAAAAPC/AQAAAAEAAACNGgAAAAAAAI0aAAAAAAAAAAAAAAAA8L8"
				],
				[
					4626,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAPEMAAAAAAAA8gwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA8QwAAAAAAADxDAAAAAAAAAAAAAAAAPC/AQAAAAEAAACQGgAAAAAAAJAaAAAAAAAAAAAAAAAA8L8"
				],
				[
					4627,
					1,
					"insert",
					{
						"characters": "i32"
					},
					"AwAAAPIMAAAAAAAA8wwAAAAAAAAAAAAA8wwAAAAAAAD0DAAAAAAAAAAAAAD0DAAAAAAAAPUMAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA8gwAAAAAAADyDAAAAAAAAAAAAAAAAPC/AQAAAAEAAACRGgAAAAAAAJEaAAAAAAAAAAAAAAAA8L8"
				],
				[
					4628,
					2,
					"rust_fmt_format_buffer",
					null,
					"AQAAANMlAAAAAAAA0yUAAAAAAAACAAAACgo",
					"AgAAAAAAAAABAAAA9QwAAAAAAAD1DAAAAAAAAAAAAAAAAPC/AQAAAAEAAACUGgAAAAAAAJQaAAAAAAAAAAAAAAAA8L8"
				],
				[
					4635,
					1,
					"insert",
					{
						"characters": "j"
					},
					"AQAAANIlAAAAAAAA0yUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0iUAAAAAAADSJQAAAAAAAAAAAAAAAPC/AQAAAAEAAACUGgAAAAAAAJQaAAAAAAAAAAAAAAAA8L8"
				],
				[
					4636,
					1,
					"left_delete",
					null,
					"AQAAANIlAAAAAAAA0iUAAAAAAAABAAAAag",
					"AgAAAAAAAAABAAAA0yUAAAAAAADTJQAAAAAAAAAAAAAAAPC/AQAAAAEAAACUGgAAAAAAAJQaAAAAAAAAAAAAAAAA8L8"
				],
				[
					4637,
					1,
					"insert",
					{
						"characters": "->"
					},
					"AgAAANIlAAAAAAAA0yUAAAAAAAAAAAAA0yUAAAAAAADUJQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0iUAAAAAAADSJQAAAAAAAAAAAAAAAPC/AQAAAAEAAACUGgAAAAAAAJQaAAAAAAAAAAAAAAAA8L8"
				],
				[
					4638,
					1,
					"insert",
					{
						"characters": " i32"
					},
					"BAAAANQlAAAAAAAA1SUAAAAAAAAAAAAA1SUAAAAAAADWJQAAAAAAAAAAAADWJQAAAAAAANclAAAAAAAAAAAAANclAAAAAAAA2CUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA1CUAAAAAAADUJQAAAAAAAAAAAAAAAPC/AQAAAAEAAACUGgAAAAAAAJQaAAAAAAAAAAAAAAAA8L8"
				],
				[
					4640,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAANklAAAAAAAA2iUAAAAAAAAAAAAA2iUAAAAAAADbJQAAAAAAAAAAAADaJQAAAAAAAN4lAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA2SUAAAAAAADZJQAAAAAAAAAAAAAAAPC/AQAAAAEAAACUGgAAAAAAAJQaAAAAAAAAAAAAAAAA8L8"
				],
				[
					4641,
					1,
					"insert",
					{
						"characters": "return"
					},
					"BgAAAN4lAAAAAAAA3yUAAAAAAAAAAAAA3yUAAAAAAADgJQAAAAAAAAAAAADgJQAAAAAAAOElAAAAAAAAAAAAAOElAAAAAAAA4iUAAAAAAAAAAAAA4iUAAAAAAADjJQAAAAAAAAAAAADjJQAAAAAAAOQlAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA3iUAAAAAAADeJQAAAAAAAAAAAAAAAPC/AQAAAAEAAACUGgAAAAAAAJQaAAAAAAAAAAAAAAAA8L8"
				],
				[
					4642,
					1,
					"insert",
					{
						"characters": " 0;"
					},
					"AwAAAOQlAAAAAAAA5SUAAAAAAAAAAAAA5SUAAAAAAADmJQAAAAAAAAAAAADmJQAAAAAAAOclAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA5CUAAAAAAADkJQAAAAAAAAAAAAAAAPC/AQAAAAEAAACUGgAAAAAAAJQaAAAAAAAAAAAAAAAA8L8"
				],
				[
					4643,
					2,
					"rust_fmt_format_buffer",
					null,
					"AQAAANglAAAAAAAA2SUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA5yUAAAAAAADnJQAAAAAAAAAAAAAAAPC/AQAAAAEAAACUGgAAAAAAAJQaAAAAAAAAAAAAAAAA8L8"
				],
				[
					4649,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAANAlAAAAAAAA0SUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0CUAAAAAAADQJQAAAAAAAAAAAAAAAPC/AQAAAAEAAACUGgAAAAAAAJQaAAAAAAAAAAAAAAAA8L8"
				],
				[
					4650,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANElAAAAAAAA0iUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0SUAAAAAAADRJQAAAAAAAAAAAAAAAPC/AQAAAAEAAACUGgAAAAAAAJQaAAAAAAAAAAAAAAAA8L8"
				],
				[
					4651,
					1,
					"insert",
					{
						"characters": "uni"
					},
					"AwAAANIlAAAAAAAA0yUAAAAAAAAAAAAA0yUAAAAAAADUJQAAAAAAAAAAAADUJQAAAAAAANUlAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0iUAAAAAAADSJQAAAAAAAAAAAAAAAPC/AQAAAAEAAACUGgAAAAAAAJQaAAAAAAAAAAAAAAAA8L8"
				],
				[
					4652,
					2,
					"left_delete",
					null,
					"AgAAANQlAAAAAAAA1CUAAAAAAAABAAAAadMlAAAAAAAA0yUAAAAAAAABAAAAbg",
					"AgAAAAAAAAABAAAA1SUAAAAAAADVJQAAAAAAAAAAAAAAAPC/AQAAAAEAAACUGgAAAAAAAJQaAAAAAAAAAAAAAAAA8L8"
				],
				[
					4653,
					1,
					"insert",
					{
						"characters": "niform_name:"
					},
					"DAAAANMlAAAAAAAA1CUAAAAAAAAAAAAA1CUAAAAAAADVJQAAAAAAAAAAAADVJQAAAAAAANYlAAAAAAAAAAAAANYlAAAAAAAA1yUAAAAAAAAAAAAA1yUAAAAAAADYJQAAAAAAAAAAAADYJQAAAAAAANklAAAAAAAAAAAAANklAAAAAAAA2iUAAAAAAAAAAAAA2iUAAAAAAADbJQAAAAAAAAAAAADbJQAAAAAAANwlAAAAAAAAAAAAANwlAAAAAAAA3SUAAAAAAAAAAAAA3SUAAAAAAADeJQAAAAAAAAAAAADeJQAAAAAAAN8lAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0yUAAAAAAADTJQAAAAAAAAAAAAAAAPC/AQAAAAEAAACUGgAAAAAAAJQaAAAAAAAAAAAAAAAA8L8"
				],
				[
					4654,
					1,
					"insert",
					{
						"characters": " &str"
					},
					"BQAAAN8lAAAAAAAA4CUAAAAAAAAAAAAA4CUAAAAAAADhJQAAAAAAAAAAAADhJQAAAAAAAOIlAAAAAAAAAAAAAOIlAAAAAAAA4yUAAAAAAAAAAAAA4yUAAAAAAADkJQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA3yUAAAAAAADfJQAAAAAAAAAAAAAAAPC/AQAAAAEAAACUGgAAAAAAAJQaAAAAAAAAAAAAAAAA8L8"
				],
				[
					4663,
					1,
					"insert",
					{
						"characters": "\nunsa"
					},
					"BgAAAO4lAAAAAAAA7yUAAAAAAAAAAAAA7yUAAAAAAADzJQAAAAAAAAAAAADzJQAAAAAAAPQlAAAAAAAAAAAAAPQlAAAAAAAA9SUAAAAAAAAAAAAA9SUAAAAAAAD2JQAAAAAAAAAAAAD2JQAAAAAAAPclAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA7iUAAAAAAADuJQAAAAAAAP///////+9/AQAAAAEAAACUGgAAAAAAAJQaAAAAAAAAAAAAAAAA8L8"
				],
				[
					4667,
					1,
					"insert",
					{
						"characters": "unsafe"
					},
					"BwAAAPMlAAAAAAAA9CUAAAAAAAAAAAAA9CUAAAAAAAD0JQAAAAAAAAQAAAB1bnNh9CUAAAAAAAD1JQAAAAAAAAAAAAD1JQAAAAAAAPYlAAAAAAAAAAAAAPYlAAAAAAAA9yUAAAAAAAAAAAAA9yUAAAAAAAD4JQAAAAAAAAAAAAD4JQAAAAAAAPklAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA9yUAAAAAAADzJQAAAAAAAAAAAAAAAPC/AQAAAAEAAACUGgAAAAAAAJQaAAAAAAAAAAAAAAAA8L8"
				],
				[
					4668,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAPklAAAAAAAA+iUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA+SUAAAAAAAD5JQAAAAAAAAAAAAAAAPC/AQAAAAEAAACUGgAAAAAAAJQaAAAAAAAAAAAAAAAA8L8"
				],
				[
					4669,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAPolAAAAAAAA/CUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA+iUAAAAAAAD6JQAAAAAAAAAAAAAAAPC/AQAAAAEAAACUGgAAAAAAAJQaAAAAAAAAAAAAAAAA8L8"
				],
				[
					4673,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAPslAAAAAAAA/CUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA+yUAAAAAAAD7JQAAAAAAAAAAAAAAAPC/AQAAAAEAAACUGgAAAAAAAJQaAAAAAAAAAAAAAAAA8L8"
				],
				[
					4675,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAP0lAAAAAAAA/iUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA/SUAAAAAAAD9JQAAAAAAAAAAAAAAAPC/AQAAAAEAAACUGgAAAAAAAJQaAAAAAAAAAAAAAAAA8L8"
				],
				[
					4676,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAP4lAAAAAAAA/yUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA/iUAAAAAAAD+JQAAAAAAAAAAAAAAAPC/AQAAAAEAAACUGgAAAAAAAJQaAAAAAAAAAAAAAAAA8L8"
				],
				[
					4678,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAPwlAAAAAAAA/SUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA/CUAAAAAAAD8JQAAAAAAAAAAAAAAAPC/AQAAAAEAAACUGgAAAAAAAJQaAAAAAAAAAAAAAAAA8L8"
				],
				[
					4679,
					1,
					"left_delete",
					null,
					"AQAAAPwlAAAAAAAA/CUAAAAAAAABAAAAOw",
					"AgAAAAAAAAABAAAA/SUAAAAAAAD9JQAAAAAAAAAAAAAAAPC/AQAAAAEAAACUGgAAAAAAAJQaAAAAAAAAAAAAAAAA8L8"
				],
				[
					4681,
					1,
					"left_delete",
					null,
					"AQAAAP4lAAAAAAAA/iUAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAA/yUAAAAAAAD/JQAAAAAAAP///////+9/AQAAAAEAAACUGgAAAAAAAJQaAAAAAAAAAAAAAAAA8L8"
				],
				[
					4683,
					1,
					"insert",
					{
						"characters": " exetern_glo"
					},
					"DAAAAPslAAAAAAAA/CUAAAAAAAAAAAAA/CUAAAAAAAD9JQAAAAAAAAAAAAD9JQAAAAAAAP4lAAAAAAAAAAAAAP4lAAAAAAAA/yUAAAAAAAAAAAAA/yUAAAAAAAAAJgAAAAAAAAAAAAAAJgAAAAAAAAEmAAAAAAAAAAAAAAEmAAAAAAAAAiYAAAAAAAAAAAAAAiYAAAAAAAADJgAAAAAAAAAAAAADJgAAAAAAAAQmAAAAAAAAAAAAAAQmAAAAAAAABSYAAAAAAAAAAAAABSYAAAAAAAAGJgAAAAAAAAAAAAAGJgAAAAAAAAcmAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA+yUAAAAAAAD7JQAAAAAAAAAAAAAAAPC/AQAAAAEAAACUGgAAAAAAAJQaAAAAAAAAAAAAAAAA8L8"
				],
				[
					4685,
					1,
					"insert",
					{
						"characters": "esx"
					},
					"BAAAAPwlAAAAAAAA/SUAAAAAAAAAAAAA/SUAAAAAAAD9JQAAAAAAAAsAAABleGV0ZXJuX2dsb/0lAAAAAAAA/iUAAAAAAAAAAAAA/iUAAAAAAAD/JQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAByYAAAAAAAD8JQAAAAAAAAAAAAAAAPC/AQAAAAEAAACUGgAAAAAAAJQaAAAAAAAAAAAAAAAA8L8"
				],
				[
					4686,
					1,
					"left_delete",
					null,
					"AQAAAP4lAAAAAAAA/iUAAAAAAAABAAAAeA",
					"AgAAAAAAAAABAAAA/yUAAAAAAAD/JQAAAAAAAAAAAAAAAPC/AQAAAAEAAACUGgAAAAAAAJQaAAAAAAAAAAAAAAAA8L8"
				],
				[
					4687,
					1,
					"insert",
					{
						"characters": "x"
					},
					"AQAAAP4lAAAAAAAA/yUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA/iUAAAAAAAD+JQAAAAAAAAAAAAAAAPC/AQAAAAEAAACUGgAAAAAAAJQaAAAAAAAAAAAAAAAA8L8"
				],
				[
					4688,
					2,
					"left_delete",
					null,
					"AgAAAP4lAAAAAAAA/iUAAAAAAAABAAAAeP0lAAAAAAAA/SUAAAAAAAABAAAAcw",
					"AgAAAAAAAAABAAAA/yUAAAAAAAD/JQAAAAAAAAAAAAAAAPC/AQAAAAEAAACUGgAAAAAAAJQaAAAAAAAAAAAAAAAA8L8"
				],
				[
					4689,
					1,
					"insert",
					{
						"characters": "xtern_global_gl"
					},
					"DwAAAP0lAAAAAAAA/iUAAAAAAAAAAAAA/iUAAAAAAAD/JQAAAAAAAAAAAAD/JQAAAAAAAAAmAAAAAAAAAAAAAAAmAAAAAAAAASYAAAAAAAAAAAAAASYAAAAAAAACJgAAAAAAAAAAAAACJgAAAAAAAAMmAAAAAAAAAAAAAAMmAAAAAAAABCYAAAAAAAAAAAAABCYAAAAAAAAFJgAAAAAAAAAAAAAFJgAAAAAAAAYmAAAAAAAAAAAAAAYmAAAAAAAAByYAAAAAAAAAAAAAByYAAAAAAAAIJgAAAAAAAAAAAAAIJgAAAAAAAAkmAAAAAAAAAAAAAAkmAAAAAAAACiYAAAAAAAAAAAAACiYAAAAAAAALJgAAAAAAAAAAAAALJgAAAAAAAAwmAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA/SUAAAAAAAD9JQAAAAAAAAAAAAAAAPC/AQAAAAEAAACUGgAAAAAAAJQaAAAAAAAAAAAAAAAA8L8"
				],
				[
					4690,
					1,
					"insert",
					{
						"characters": "GetU"
					},
					"BAAAAAwmAAAAAAAADSYAAAAAAAAAAAAADSYAAAAAAAAOJgAAAAAAAAAAAAAOJgAAAAAAAA8mAAAAAAAAAAAAAA8mAAAAAAAAECYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAADCYAAAAAAAAMJgAAAAAAAAAAAAAAAPC/AQAAAAEAAACUGgAAAAAAAJQaAAAAAAAAAAAAAAAA8L8"
				],
				[
					4691,
					1,
					"insert_completion",
					{
						"completion": "extern_global_glGetUniformLocation",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "extern_global_glGetUniformLocation"
					},
					"AgAAAPwlAAAAAAAA/CUAAAAAAAAUAAAAZXh0ZXJuX2dsb2JhbF9nbEdldFX8JQAAAAAAAB4mAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAECYAAAAAAAAQJgAAAAAAAAAAAAAAAPC/AQAAAAEAAACUGgAAAAAAAJQaAAAAAAAAAAAAAAAA8L8"
				],
				[
					4692,
					1,
					"insert",
					{
						"characters": ".unw"
					},
					"BAAAAB4mAAAAAAAAHyYAAAAAAAAAAAAAHyYAAAAAAAAgJgAAAAAAAAAAAAAgJgAAAAAAACEmAAAAAAAAAAAAACEmAAAAAAAAIiYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAHiYAAAAAAAAeJgAAAAAAAAAAAAAAAPC/AQAAAAEAAACUGgAAAAAAAJQaAAAAAAAAAAAAAAAA8L8"
				],
				[
					4693,
					1,
					"insert",
					{
						"characters": "rap"
					},
					"AwAAACImAAAAAAAAIyYAAAAAAAAAAAAAIyYAAAAAAAAkJgAAAAAAAAAAAAAkJgAAAAAAACUmAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAIiYAAAAAAAAiJgAAAAAAAAAAAAAAAPC/AQAAAAEAAACUGgAAAAAAAJQaAAAAAAAAAAAAAAAA8L8"
				],
				[
					4694,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAACUmAAAAAAAAJyYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAJSYAAAAAAAAlJgAAAAAAAAAAAAAAAPC/AQAAAAEAAACUGgAAAAAAAJQaAAAAAAAAAAAAAAAA8L8"
				],
				[
					4696,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAACcmAAAAAAAAKCYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAJyYAAAAAAAAnJgAAAAAAAAAAAAAAAPC/AQAAAAEAAACUGgAAAAAAAJQaAAAAAAAAAAAAAAAA8L8"
				],
				[
					4699,
					1,
					"insert",
					{
						"characters": "("
					},
					"AQAAAPwlAAAAAAAA/SUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA/CUAAAAAAAD8JQAAAAAAAAAAAAAAAPC/AQAAAAEAAACUGgAAAAAAAJQaAAAAAAAAAAAAAAAA8L8"
				],
				[
					4702,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAACkmAAAAAAAAKyYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAKSYAAAAAAAApJgAAAAAAAAAAAAAAAPC/AQAAAAEAAACUGgAAAAAAAJQaAAAAAAAAAAAAAAAA8L8"
				],
				[
					4703,
					1,
					"insert",
					{
						"characters": "prog_id,"
					},
					"CAAAAComAAAAAAAAKyYAAAAAAAAAAAAAKyYAAAAAAAAsJgAAAAAAAAAAAAAsJgAAAAAAAC0mAAAAAAAAAAAAAC0mAAAAAAAALiYAAAAAAAAAAAAALiYAAAAAAAAvJgAAAAAAAAAAAAAvJgAAAAAAADAmAAAAAAAAAAAAADAmAAAAAAAAMSYAAAAAAAAAAAAAMSYAAAAAAAAyJgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAKiYAAAAAAAAqJgAAAAAAAAAAAAAAAPC/AQAAAAEAAACUGgAAAAAAAJQaAAAAAAAAAAAAAAAA8L8"
				],
				[
					4704,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADImAAAAAAAAMyYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAMiYAAAAAAAAyJgAAAAAAAAAAAAAAAPC/AQAAAAEAAACUGgAAAAAAAJQaAAAAAAAAAAAAAAAA8L8"
				],
				[
					4705,
					1,
					"insert",
					{
						"characters": "name"
					},
					"BAAAADMmAAAAAAAANCYAAAAAAAAAAAAANCYAAAAAAAA1JgAAAAAAAAAAAAA1JgAAAAAAADYmAAAAAAAAAAAAADYmAAAAAAAANyYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAMyYAAAAAAAAzJgAAAAAAAAAAAAAAAPC/AQAAAAEAAACUGgAAAAAAAJQaAAAAAAAAAAAAAAAA8L8"
				],
				[
					4712,
					1,
					"insert",
					{
						"characters": "return"
					},
					"BgAAAPwlAAAAAAAA/SUAAAAAAAAAAAAA/SUAAAAAAAD+JQAAAAAAAAAAAAD+JQAAAAAAAP8lAAAAAAAAAAAAAP8lAAAAAAAAACYAAAAAAAAAAAAAACYAAAAAAAABJgAAAAAAAAAAAAABJgAAAAAAAAImAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA/CUAAAAAAAD8JQAAAAAAAAAAAAAAAPC/AQAAAAEAAACUGgAAAAAAAJQaAAAAAAAAAAAAAAAA8L8"
				],
				[
					4713,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAImAAAAAAAAAyYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAiYAAAAAAAACJgAAAAAAAAAAAAAAAPC/AQAAAAEAAACUGgAAAAAAAJQaAAAAAAAAAAAAAAAA8L8"
				],
				[
					4715,
					1,
					"left_delete",
					null,
					"AQAAAPwlAAAAAAAA/CUAAAAAAAAHAAAAcmV0dXJuIA",
					"AgAAAAAAAAABAAAAAyYAAAAAAAD8JQAAAAAAAAAAAAAAAPC/AQAAAAEAAACUGgAAAAAAAJQaAAAAAAAAAAAAAAAA8L8"
				],
				[
					4733,
					1,
					"insert",
					{
						"characters": "\nv"
					},
					"AwAAAO4lAAAAAAAA7yUAAAAAAAAAAAAA7yUAAAAAAADzJQAAAAAAAAAAAADzJQAAAAAAAPQlAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA7iUAAAAAAADuJQAAAAAAAP///////+9/AQAAAAEAAACUGgAAAAAAAJQaAAAAAAAAAAAAAAAA8L8"
				],
				[
					4736,
					1,
					"left_delete",
					null,
					"AQAAAPMlAAAAAAAA8yUAAAAAAAABAAAAdg",
					"AgAAAAAAAAABAAAA9CUAAAAAAAD0JQAAAAAAAAAAAAAAAPC/AQAAAAEAAACUGgAAAAAAAJQaAAAAAAAAAAAAAAAA8L8"
				],
				[
					4737,
					1,
					"paste",
					null,
					"AQAAAO8lAAAAAAAAOSYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA8yUAAAAAAADzJQAAAAAAAAAAAAAAAPC/AQAAAAEAAACUGgAAAAAAAJQaAAAAAAAAAAAAAAAA8L8"
				],
				[
					4738,
					2,
					"rust_fmt_format_buffer",
					null,
					"AQAAADkmAAAAAAAAOSYAAAAAAAAEAAAAICAgIA",
					"AgAAAAAAAAABAAAAPSYAAAAAAAA9JgAAAAAAAAAAAAAAAPC/AQAAAAEAAACUGgAAAAAAAJQaAAAAAAAAAAAAAAAA8L8"
				],
				[
					4747,
					1,
					"insert",
					{
						"characters": "name_c"
					},
					"BwAAAPclAAAAAAAA+CUAAAAAAAAAAAAA+CUAAAAAAAD4JQAAAAAAAA8AAABzaGFkZXJfc291cmNlX2P4JQAAAAAAAPklAAAAAAAAAAAAAPklAAAAAAAA+iUAAAAAAAAAAAAA+iUAAAAAAAD7JQAAAAAAAAAAAAD7JQAAAAAAAPwlAAAAAAAAAAAAAPwlAAAAAAAA/SUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAABiYAAAAAAAD3JQAAAAAAAAAAAAAAAPC/AQAAAAEAAACUGgAAAAAAAJQaAAAAAAAAAAAAAAAA8L8"
				],
				[
					4755,
					1,
					"insert",
					{
						"characters": "_c.as_"
					},
					"BgAAAHkmAAAAAAAAeiYAAAAAAAAAAAAAeiYAAAAAAAB7JgAAAAAAAAAAAAB7JgAAAAAAAHwmAAAAAAAAAAAAAHwmAAAAAAAAfSYAAAAAAAAAAAAAfSYAAAAAAAB+JgAAAAAAAAAAAAB+JgAAAAAAAH8mAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAeSYAAAAAAAB5JgAAAAAAAAAAAAAAAPC/AQAAAAEAAACUGgAAAAAAAJQaAAAAAAAAAAAAAAAA8L8"
				],
				[
					4756,
					1,
					"insert_completion",
					{
						"completion": "as_ptr",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "as_ptr"
					},
					"AgAAAHwmAAAAAAAAfCYAAAAAAAADAAAAYXNffCYAAAAAAACCJgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAfyYAAAAAAAB/JgAAAAAAAAAAAAAAAPC/AQAAAAEAAACUGgAAAAAAAJQaAAAAAAAAAAAAAAAA8L8"
				],
				[
					4757,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAIImAAAAAAAAhCYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAgiYAAAAAAACCJgAAAAAAAAAAAAAAAPC/AQAAAAEAAACUGgAAAAAAAJQaAAAAAAAAAAAAAAAA8L8"
				],
				[
					4771,
					1,
					"insert",
					{
						"characters": "\ngl_get_un"
					},
					"CwAAANQYAAAAAAAA1RgAAAAAAAAAAAAA1RgAAAAAAADdGAAAAAAAAAAAAADdGAAAAAAAAN4YAAAAAAAAAAAAAN4YAAAAAAAA3xgAAAAAAAAAAAAA3xgAAAAAAADgGAAAAAAAAAAAAADgGAAAAAAAAOEYAAAAAAAAAAAAAOEYAAAAAAAA4hgAAAAAAAAAAAAA4hgAAAAAAADjGAAAAAAAAAAAAADjGAAAAAAAAOQYAAAAAAAAAAAAAOQYAAAAAAAA5RgAAAAAAAAAAAAA5RgAAAAAAADmGAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA1BgAAAAAAADUGAAAAAAAAP///////+9/AQAAAAEAAACUGgAAAAAAAJQaAAAAAAAAAAAAAAAA8L8"
				],
				[
					4772,
					1,
					"insert",
					{
						"characters": "iform"
					},
					"BQAAAOYYAAAAAAAA5xgAAAAAAAAAAAAA5xgAAAAAAADoGAAAAAAAAAAAAADoGAAAAAAAAOkYAAAAAAAAAAAAAOkYAAAAAAAA6hgAAAAAAAAAAAAA6hgAAAAAAADrGAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA5hgAAAAAAADmGAAAAAAAAAAAAAAAAPC/AQAAAAEAAACmGgAAAAAAAKYaAAAAAAAAAAAAAAAA8L8"
				],
				[
					4773,
					1,
					"insert_completion",
					{
						"completion": "gl_get_uniform_location",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "gl_get_uniform_location"
					},
					"AgAAAN0YAAAAAAAA3RgAAAAAAAAOAAAAZ2xfZ2V0X3VuaWZvcm3dGAAAAAAAAPQYAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA6xgAAAAAAADrGAAAAAAAAAAAAAAAAPC/AQAAAAEAAACrGgAAAAAAAKsaAAAAAAAAAAAAAAAA8L8"
				],
				[
					4774,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAPQYAAAAAAAA9RgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA9BgAAAAAAAD0GAAAAAAAAAAAAAAAAPC/AQAAAAEAAAC0GgAAAAAAALQaAAAAAAAAAAAAAAAA8L8"
				],
				[
					4775,
					1,
					"insert",
					{
						"characters": " gl_get_uniform"
					},
					"DwAAAPUYAAAAAAAA9hgAAAAAAAAAAAAA9hgAAAAAAAD3GAAAAAAAAAAAAAD3GAAAAAAAAPgYAAAAAAAAAAAAAPgYAAAAAAAA+RgAAAAAAAAAAAAA+RgAAAAAAAD6GAAAAAAAAAAAAAD6GAAAAAAAAPsYAAAAAAAAAAAAAPsYAAAAAAAA/BgAAAAAAAAAAAAA/BgAAAAAAAD9GAAAAAAAAAAAAAD9GAAAAAAAAP4YAAAAAAAAAAAAAP4YAAAAAAAA/xgAAAAAAAAAAAAA/xgAAAAAAAAAGQAAAAAAAAAAAAAAGQAAAAAAAAEZAAAAAAAAAAAAAAEZAAAAAAAAAhkAAAAAAAAAAAAAAhkAAAAAAAADGQAAAAAAAAAAAAADGQAAAAAAAAQZAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA9RgAAAAAAAD1GAAAAAAAAAAAAAAAAPC/AQAAAAEAAAC1GgAAAAAAALUaAAAAAAAAAAAAAAAA8L8"
				],
				[
					4776,
					1,
					"insert",
					{
						"characters": "_location,"
					},
					"CgAAAAQZAAAAAAAABRkAAAAAAAAAAAAABRkAAAAAAAAGGQAAAAAAAAAAAAAGGQAAAAAAAAcZAAAAAAAAAAAAAAcZAAAAAAAACBkAAAAAAAAAAAAACBkAAAAAAAAJGQAAAAAAAAAAAAAJGQAAAAAAAAoZAAAAAAAAAAAAAAoZAAAAAAAACxkAAAAAAAAAAAAACxkAAAAAAAAMGQAAAAAAAAAAAAAMGQAAAAAAAA0ZAAAAAAAAAAAAAA0ZAAAAAAAADhkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAABBkAAAAAAAAEGQAAAAAAAAAAAAAAAPC/AQAAAAEAAADEGgAAAAAAAMQaAAAAAAAAAAAAAAAA8L8"
				],
				[
					4783,
					1,
					"insert",
					{
						"characters": "name"
					},
					"BQAAAFEmAAAAAAAAUiYAAAAAAAAAAAAAUiYAAAAAAABSJgAAAAAAAA0AAABzaGFkZXJfc291cmNlUiYAAAAAAABTJgAAAAAAAAAAAABTJgAAAAAAAFQmAAAAAAAAAAAAAFQmAAAAAAAAVSYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAXiYAAAAAAABRJgAAAAAAAAAAAAAAAPC/AQAAAAEAAADOGgAAAAAAAM4aAAAAAAAAAAAAAAAA8L8"
				],
				[
					4787,
					1,
					"insert",
					{
						"characters": "uniform_name"
					},
					"DQAAAFEmAAAAAAAAUiYAAAAAAAAAAAAAUiYAAAAAAABSJgAAAAAAAAQAAABuYW1lUiYAAAAAAABTJgAAAAAAAAAAAABTJgAAAAAAAFQmAAAAAAAAAAAAAFQmAAAAAAAAVSYAAAAAAAAAAAAAVSYAAAAAAABWJgAAAAAAAAAAAABWJgAAAAAAAFcmAAAAAAAAAAAAAFcmAAAAAAAAWCYAAAAAAAAAAAAAWCYAAAAAAABZJgAAAAAAAAAAAABZJgAAAAAAAFomAAAAAAAAAAAAAFomAAAAAAAAWyYAAAAAAAAAAAAAWyYAAAAAAABcJgAAAAAAAAAAAABcJgAAAAAAAF0mAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAVSYAAAAAAABRJgAAAAAAAAAAAAAAAPC/AQAAAAEAAADOGgAAAAAAAM4aAAAAAAAAAAAAAAAA8L8"
				],
				[
					4802,
					1,
					"insert",
					{
						"characters": "return"
					},
					"BgAAAHcmAAAAAAAAeCYAAAAAAAAAAAAAeCYAAAAAAAB5JgAAAAAAAAAAAAB5JgAAAAAAAHomAAAAAAAAAAAAAHomAAAAAAAAeyYAAAAAAAAAAAAAeyYAAAAAAAB8JgAAAAAAAAAAAAB8JgAAAAAAAH0mAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAdyYAAAAAAAB3JgAAAAAAAAAAAAAAAPC/AQAAAAEAAADOGgAAAAAAAM4aAAAAAAAAAAAAAAAA8L8"
				],
				[
					4803,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAH0mAAAAAAAAfiYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAfSYAAAAAAAB9JgAAAAAAAAAAAAAAAPC/AQAAAAEAAADOGgAAAAAAAM4aAAAAAAAAAAAAAAAA8L8"
				],
				[
					4805,
					1,
					"cut",
					null,
					"AQAAAMkmAAAAAAAAySYAAAAAAAAOAAAAICAgIHJldHVybiAwOwo",
					"AgAAAAAAAAABAAAA1iYAAAAAAADWJgAAAAAAAAAAAAAAAGJAAQAAAAEAAADOGgAAAAAAAM4aAAAAAAAAAAAAAAAA8L8"
				],
				[
					4813,
					1,
					"cut",
					null,
					"AQAAAGkmAAAAAAAAaSYAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAaSYAAAAAAABpJgAAAAAAAAAAAAAAAPC/AQAAAAEAAADOGgAAAAAAAM4aAAAAAAAAAAAAAAAA8L8"
				],
				[
					4822,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAFANAAAAAAAAUQ0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAUA0AAAAAAABQDQAAAAAAAAAAAAAAAPC/AQAAAAEAAADOGgAAAAAAAM4aAAAAAAAAAAAAAAAA8L8"
				],
				[
					4823,
					1,
					"paste",
					null,
					"AQAAAFENAAAAAAAAsw4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAUQ0AAAAAAABRDQAAAAAAAAAAAAAAAPC/AQAAAAEAAADPGgAAAAAAAM8aAAAAAAAAAAAAAAAA8L8"
				],
				[
					4824,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line.sublime-macro"
					},
					"AQAAALMOAAAAAAAAtA4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAsw4AAAAAAACzDgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAxHAAAAAAAADEcAAAAAAAAAAAAAAAA8L8"
				],
				[
					4825,
					2,
					"rust_fmt_format_buffer",
					null,
					"EQAAAFENAAAAAAAAUQ0AAAAAAAAMAAAAICAgICAgICAgICAgcA0AAAAAAAB1DQAAAAAAAAAAAACMDQAAAAAAAJANAAAAAAAAAAAAAKcNAAAAAAAAqw0AAAAAAAAAAAAAyA0AAAAAAADMDQAAAAAAAAAAAADpDQAAAAAAAOsNAAAAAAAAAAAAAPQNAAAAAAAA+A0AAAAAAAAAAAAAGA4AAAAAAAAhDgAAAAAAAAAAAAAjDgAAAAAAACsOAAAAAAAAAAAAAD8OAAAAAAAATA4AAAAAAAAAAAAAWQ4AAAAAAABlDgAAAAAAAAAAAAB1DgAAAAAAAIEOAAAAAAAAAAAAAJMOAAAAAAAAnw4AAAAAAAAAAAAAtQ4AAAAAAAC/DgAAAAAAAAAAAADGDgAAAAAAAMwOAAAAAAAAAAAAAA0PAAAAAAAADQ8AAAAAAAADAAAAIH0KDQ8AAAAAAAAPDwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAtA4AAAAAAAC0DgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAyHAAAAAAAADIcAAAAAAAAAAAAAAAA8L8"
				],
				[
					4827,
					11,
					"cut",
					null,
					"CwAAABEPAAAAAAAAEQ8AAAAAAAADAAAALyoKEQ8AAAAAAAARDwAAAAAAACIAAABwdWIgdW5zYWZlIGZuIEdldFVuaWZvcm1Mb2NhdGlvbigKEQ8AAAAAAAARDwAAAAAAABwAAAAgICAgcHJvZ3JhbTogdHlwZXM6OkdMdWludCwKEQ8AAAAAAAARDwAAAAAAACAAAAAgICAgbmFtZTogKmNvbnN0IHR5cGVzOjpHTGNoYXIsChEPAAAAAAAAEQ8AAAAAAAAUAAAAKSAtPiB0eXBlczo6R0xpbnQgewoRDwAAAAAAABEPAAAAAAAAJAAAACAgICBfX2dsX2ltcG9ydHM6Om1lbTo6dHJhbnNtdXRlOjo8ChEPAAAAAAAAEQ8AAAAAAAALAAAAICAgICAgICBfLAoRDwAAAAAAABEPAAAAAAAAUQAAACAgICAgICAgZXh0ZXJuICJzeXN0ZW0iIGZuKHR5cGVzOjpHTHVpbnQsICpjb25zdCB0eXBlczo6R0xjaGFyKSAtPiB0eXBlczo6R0xpbnQsChEPAAAAAAAAEQ8AAAAAAAA0AAAAICAgID4oc3RvcmFnZTo6R2V0VW5pZm9ybUxvY2F0aW9uLmYpKHByb2dyYW0sIG5hbWUpChEPAAAAAAAAEQ8AAAAAAAACAAAAfQoRDwAAAAAAABEPAAAAAAAAAwAAACovCg",
					"AgAAAAAAAAABAAAAEQ8AAAAAAAARDwAAAAAAAAAAAAAAAAAAAQAAAAEAAACOHAAAAAAAAI4cAAAAAAAAAAAAAAAA8L8"
				],
				[
					4828,
					1,
					"left_delete",
					null,
					"AQAAABAPAAAAAAAAEA8AAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAEQ8AAAAAAAARDwAAAAAAAAAAAAAAAPC/AQAAAAEAAABgGwAAAAAAAGAbAAAAAAAAAAAAAAAA8L8"
				],
				[
					4830,
					1,
					"insert",
					{
						"characters": "\n/*"
					},
					"AwAAAFANAAAAAAAAUQ0AAAAAAAAAAAAAUQ0AAAAAAABSDQAAAAAAAAAAAABSDQAAAAAAAFMNAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAUA0AAAAAAABQDQAAAAAAAAAAAAAAAPC/AQAAAAEAAABfGwAAAAAAAF8bAAAAAAAAAAAAAAAA8L8"
				],
				[
					4834,
					1,
					"insert",
					{
						"characters": "\n*/"
					},
					"AwAAABIPAAAAAAAAEw8AAAAAAAAAAAAAEw8AAAAAAAAUDwAAAAAAAAAAAAAUDwAAAAAAABUPAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAEg8AAAAAAAASDwAAAAAAAP///////+9/AQAAAAEAAABiGwAAAAAAAGIbAAAAAAAAAAAAAAAA8L8"
				],
				[
					4846,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAFANAAAAAAAAUQ0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAUA0AAAAAAABQDQAAAAAAAAAAAAAA0INAAQAAAAEAAABlGwAAAAAAAGUbAAAAAAAAAAAAAAAA8L8"
				],
				[
					4847,
					1,
					"paste",
					null,
					"AQAAAFENAAAAAAAAAA4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAUQ0AAAAAAABRDQAAAAAAAAAAAAAAAPC/AQAAAAEAAABmGwAAAAAAAGYbAAAAAAAAAAAAAAAA8L8"
				],
				[
					4848,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line.sublime-macro"
					},
					"AQAAAAAOAAAAAAAAAQ4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAA4AAAAAAAAADgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAVHAAAAAAAABUcAAAAAAAAAAAAAAAA8L8"
				],
				[
					4855,
					1,
					"insert",
					{
						"characters": "UniformMatrix"
					},
					"DgAAAF0NAAAAAAAAXg0AAAAAAAAAAAAAXg0AAAAAAABeDQAAAAAAABIAAABHZXRVbmlmb3JtTG9jYXRpb25eDQAAAAAAAF8NAAAAAAAAAAAAAF8NAAAAAAAAYA0AAAAAAAAAAAAAYA0AAAAAAABhDQAAAAAAAAAAAABhDQAAAAAAAGINAAAAAAAAAAAAAGINAAAAAAAAYw0AAAAAAAAAAAAAYw0AAAAAAABkDQAAAAAAAAAAAABkDQAAAAAAAGUNAAAAAAAAAAAAAGUNAAAAAAAAZg0AAAAAAAAAAAAAZg0AAAAAAABnDQAAAAAAAAAAAABnDQAAAAAAAGgNAAAAAAAAAAAAAGgNAAAAAAAAaQ0AAAAAAAAAAAAAaQ0AAAAAAABqDQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAbw0AAAAAAABdDQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAWHAAAAAAAABYcAAAAAAAAAAAAAAAA8L8"
				],
				[
					4856,
					1,
					"insert",
					{
						"characters": "4fv"
					},
					"AwAAAGoNAAAAAAAAaw0AAAAAAAAAAAAAaw0AAAAAAABsDQAAAAAAAAAAAABsDQAAAAAAAG0NAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAag0AAAAAAABqDQAAAAAAAAAAAAAAAPC/AQAAAAEAAAARHAAAAAAAABEcAAAAAAAAAAAAAAAA8L8"
				],
				[
					4865,
					3,
					"left_delete",
					null,
					"AwAAAMENAAAAAAAAwQ0AAAAAAAASAAAAR2V0VW5pZm9ybUxvY2F0aW9uwA0AAAAAAADADQAAAAAAAAEAAABsvw0AAAAAAAC/DQAAAAAAAAEAAABn",
					"AgAAAAAAAAABAAAA0w0AAAAAAADBDQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAUHAAAAAAAABQcAAAAAAAAAAAAAAAA8L8"
				],
				[
					4866,
					1,
					"paste",
					null,
					"AQAAAL8NAAAAAAAA0Q0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAvw0AAAAAAAC/DQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAHAAAAAAAAAAcAAAAAAAAAAAAAAAA8L8"
				],
				[
					4870,
					1,
					"paste",
					null,
					"AgAAAN8NAAAAAAAA8Q0AAAAAAAAAAAAA8Q0AAAAAAADxDQAAAAAAABQAAABnbEdldFVuaWZvcm1Mb2NhdGlvbg",
					"AgAAAAAAAAABAAAA8w0AAAAAAADfDQAAAAAAAAAAAAAAAPC/AQAAAAEAAAASHAAAAAAAABIcAAAAAAAAAAAAAAAA8L8"
				],
				[
					4876,
					7,
					"left_delete",
					null,
					"BwAAAKMNAAAAAAAAow0AAAAAAAABAAAAMqINAAAAAAAAog0AAAAAAAABAAAAM6ENAAAAAAAAoQ0AAAAAAAABAAAAaaANAAAAAAAAoA0AAAAAAAABAAAAIJ8NAAAAAAAAnw0AAAAAAAABAAAAPp4NAAAAAAAAng0AAAAAAAABAAAALZ0NAAAAAAAAnQ0AAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAApA0AAAAAAACkDQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAQHAAAAAAAABAcAAAAAAAAAAAAAAAA8L8"
				],
				[
					4879,
					1,
					"left_delete",
					null,
					"AQAAAIQNAAAAAAAAhA0AAAAAAAAYAAAAdTMyLCAqY29uc3QgbGliYzo6Y19jaGFy",
					"AgAAAAAAAAABAAAAnA0AAAAAAACEDQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAJHAAAAAAAAAkcAAAAAAAAAAAAAAAA8L8"
				],
				[
					4880,
					1,
					"insert",
					{
						"characters": "i32,"
					},
					"BAAAAIQNAAAAAAAAhQ0AAAAAAAAAAAAAhQ0AAAAAAACGDQAAAAAAAAAAAACGDQAAAAAAAIcNAAAAAAAAAAAAAIcNAAAAAAAAiA0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAhA0AAAAAAACEDQAAAAAAAAAAAAAAAPC/AQAAAAEAAADxGwAAAAAAAPEbAAAAAAAAAAAAAAAA8L8"
				],
				[
					4881,
					1,
					"insert",
					{
						"characters": " i32,"
					},
					"BQAAAIgNAAAAAAAAiQ0AAAAAAAAAAAAAiQ0AAAAAAACKDQAAAAAAAAAAAACKDQAAAAAAAIsNAAAAAAAAAAAAAIsNAAAAAAAAjA0AAAAAAAAAAAAAjA0AAAAAAACNDQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAiA0AAAAAAACIDQAAAAAAAAAAAAAAAPC/AQAAAAEAAAD1GwAAAAAAAPUbAAAAAAAAAAAAAAAA8L8"
				],
				[
					4882,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAI0NAAAAAAAAjg0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAjQ0AAAAAAACNDQAAAAAAAAAAAAAAAPC/AQAAAAEAAAD6GwAAAAAAAPobAAAAAAAAAAAAAAAA8L8"
				],
				[
					4883,
					1,
					"insert",
					{
						"characters": "bool,"
					},
					"BQAAAI4NAAAAAAAAjw0AAAAAAAAAAAAAjw0AAAAAAACQDQAAAAAAAAAAAACQDQAAAAAAAJENAAAAAAAAAAAAAJENAAAAAAAAkg0AAAAAAAAAAAAAkg0AAAAAAACTDQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAjg0AAAAAAACODQAAAAAAAAAAAAAAAPC/AQAAAAEAAAD7GwAAAAAAAPsbAAAAAAAAAAAAAAAA8L8"
				],
				[
					4884,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJMNAAAAAAAAlA0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAkw0AAAAAAACTDQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAHAAAAAAAAAAcAAAAAAAAAAAAAAAA8L8"
				],
				[
					4885,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJQNAAAAAAAAlg0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAlA0AAAAAAACUDQAAAAAAAAAAAAAAAPC/AQAAAAEAAAABHAAAAAAAAAEcAAAAAAAAAAAAAAAA8L8"
				],
				[
					4886,
					1,
					"insert",
					{
						"characters": "const"
					},
					"BQAAAJUNAAAAAAAAlg0AAAAAAAAAAAAAlg0AAAAAAACXDQAAAAAAAAAAAACXDQAAAAAAAJgNAAAAAAAAAAAAAJgNAAAAAAAAmQ0AAAAAAAAAAAAAmQ0AAAAAAACaDQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAlQ0AAAAAAACVDQAAAAAAAAAAAAAAAPC/AQAAAAEAAAADHAAAAAAAAAMcAAAAAAAAAAAAAAAA8L8"
				],
				[
					4887,
					5,
					"left_delete",
					null,
					"BQAAAJkNAAAAAAAAmQ0AAAAAAAABAAAAdJgNAAAAAAAAmA0AAAAAAAABAAAAc5cNAAAAAAAAlw0AAAAAAAABAAAAbpYNAAAAAAAAlg0AAAAAAAABAAAAb5UNAAAAAAAAlQ0AAAAAAAABAAAAYw",
					"AgAAAAAAAAABAAAAmg0AAAAAAACaDQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAIHAAAAAAAAAgcAAAAAAAAAAAAAAAA8L8"
				],
				[
					4888,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAJQNAAAAAAAAlA0AAAAAAAABAAAAKJQNAAAAAAAAlA0AAAAAAAABAAAAKQ",
					"AgAAAAAAAAABAAAAlQ0AAAAAAACVDQAAAAAAAAAAAAAAAPC/AQAAAAEAAAADHAAAAAAAAAMcAAAAAAAAAAAAAAAA8L8"
				],
				[
					4889,
					1,
					"insert",
					{
						"characters": "*const"
					},
					"BgAAAJQNAAAAAAAAlQ0AAAAAAAAAAAAAlQ0AAAAAAACWDQAAAAAAAAAAAACWDQAAAAAAAJcNAAAAAAAAAAAAAJcNAAAAAAAAmA0AAAAAAAAAAAAAmA0AAAAAAACZDQAAAAAAAAAAAACZDQAAAAAAAJoNAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAlA0AAAAAAACUDQAAAAAAAAAAAAAAAPC/AQAAAAEAAAABHAAAAAAAAAEcAAAAAAAAAAAAAAAA8L8"
				],
				[
					4890,
					1,
					"insert",
					{
						"characters": " f32"
					},
					"BAAAAJoNAAAAAAAAmw0AAAAAAAAAAAAAmw0AAAAAAACcDQAAAAAAAAAAAACcDQAAAAAAAJ0NAAAAAAAAAAAAAJ0NAAAAAAAAng0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAmg0AAAAAAACaDQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAHHAAAAAAAAAccAAAAAAAAAAAAAAAA8L8"
				],
				[
					4900,
					1,
					"paste",
					null,
					"AQAAAD8VAAAAAAAAnxUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAPxUAAAAAAAA/FQAAAAAAAAAAAAAAAAAAAQAAAAEAAAALHAAAAAAAAAscAAAAAAAAAAAAAAAA8L8"
				],
				[
					4906,
					1,
					"insert",
					{
						"characters": "UniformMatris"
					},
					"DgAAAOcVAAAAAAAA6BUAAAAAAAAAAAAA6BUAAAAAAADoFQAAAAAAABIAAABHZXRVbmlmb3JtTG9jYXRpb27oFQAAAAAAAOkVAAAAAAAAAAAAAOkVAAAAAAAA6hUAAAAAAAAAAAAA6hUAAAAAAADrFQAAAAAAAAAAAADrFQAAAAAAAOwVAAAAAAAAAAAAAOwVAAAAAAAA7RUAAAAAAAAAAAAA7RUAAAAAAADuFQAAAAAAAAAAAADuFQAAAAAAAO8VAAAAAAAAAAAAAO8VAAAAAAAA8BUAAAAAAAAAAAAA8BUAAAAAAADxFQAAAAAAAAAAAADxFQAAAAAAAPIVAAAAAAAAAAAAAPIVAAAAAAAA8xUAAAAAAAAAAAAA8xUAAAAAAAD0FQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA+RUAAAAAAADnFQAAAAAAAAAAAAAAAPC/AQAAAAEAAABrHAAAAAAAAGscAAAAAAAAAAAAAAAA8L8"
				],
				[
					4909,
					1,
					"left_delete",
					null,
					"AQAAAPMVAAAAAAAA8xUAAAAAAAABAAAAcw",
					"AgAAAAAAAAABAAAA9BUAAAAAAAD0FQAAAAAAAAAAAAAAAPC/AQAAAAEAAABmHAAAAAAAAGYcAAAAAAAAAAAAAAAA8L8"
				],
				[
					4910,
					1,
					"insert",
					{
						"characters": "x"
					},
					"AQAAAPMVAAAAAAAA9BUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA8xUAAAAAAADzFQAAAAAAAAAAAAAAAPC/AQAAAAEAAABlHAAAAAAAAGUcAAAAAAAAAAAAAAAA8L8"
				],
				[
					4911,
					1,
					"insert_completion",
					{
						"completion": "func_glUniformMatrix4fv",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "func_glUniformMatrix4fv"
					},
					"AgAAAOUVAAAAAAAA5RUAAAAAAAAPAAAAZ2xVbmlmb3JtTWF0cml45RUAAAAAAAD8FQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA9BUAAAAAAAD0FQAAAAAAAAAAAAAAAPC/AQAAAAEAAABmHAAAAAAAAGYcAAAAAAAAAAAAAAAA8L8"
				],
				[
					4919,
					1,
					"left_delete",
					null,
					"AQAAAOUVAAAAAAAA5RUAAAAAAAAFAAAAZnVuY18",
					"AgAAAAAAAAABAAAA6hUAAAAAAADlFQAAAAAAAAAAAAAAAPC/AQAAAAEAAABuHAAAAAAAAG4cAAAAAAAAAAAAAAAA8L8"
				],
				[
					4938,
					1,
					"paste",
					null,
					"AgAAAOUVAAAAAAAA9xUAAAAAAAAAAAAA9xUAAAAAAAD3FQAAAAAAABIAAABnbFVuaWZvcm1NYXRyaXg0ZnY",
					"AgAAAAAAAAABAAAA5RUAAAAAAAD3FQAAAAAAAAAAAAAAAPC/AQAAAAEAAABpHAAAAAAAAGkcAAAAAAAAAAAAAAAA8L8"
				],
				[
					4954,
					1,
					"insert",
					{
						"characters": "GetUni"
					},
					"BwAAAFcVAAAAAAAAWBUAAAAAAAAAAAAAWBUAAAAAAABYFQAAAAAAAAwAAABEcmF3RWxlbWVudHNYFQAAAAAAAFkVAAAAAAAAAAAAAFkVAAAAAAAAWhUAAAAAAAAAAAAAWhUAAAAAAABbFQAAAAAAAAAAAABbFQAAAAAAAFwVAAAAAAAAAAAAAFwVAAAAAAAAXRUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAYxUAAAAAAABXFQAAAAAAAAAAAAAAAPC/AQAAAAEAAABpHAAAAAAAAGkcAAAAAAAAAAAAAAAA8L8"
				],
				[
					4955,
					1,
					"insert_completion",
					{
						"completion": "extern_global_glGetUniformLocation",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "extern_global_glGetUniformLocation"
					},
					"AgAAAEcVAAAAAAAARxUAAAAAAAAWAAAAZXh0ZXJuX2dsb2JhbF9nbEdldFVuaUcVAAAAAAAAaRUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAXRUAAAAAAABdFQAAAAAAAAAAAAAAAPC/AQAAAAEAAABjHAAAAAAAAGMcAAAAAAAAAAAAAAAA8L8"
				],
				[
					4956,
					2,
					"rust_fmt_format_buffer",
					null,
					"AQAAAGsVAAAAAAAAdxUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAaRUAAAAAAABpFQAAAAAAAAAAAAAAAPC/AQAAAAEAAABvHAAAAAAAAG8cAAAAAAAAAAAAAAAA8L8"
				],
				[
					4961,
					2,
					"swap_line_up",
					null,
					"BAAAALEVAAAAAAAAsRUAAAAAAABeAAAAICAgICAgICBleHRlcm5fZ2xvYmFsX2dsRHJhd0VsZW1lbnRzID0gU29tZSh3Z2xfZ2V0X3Byb2NfYWRkcmVzcyEocyEoImdsVW5pZm9ybU1hdHJpeDRmdiIpKSk7CmwVAAAAAAAAyhUAAAAAAAAAAAAAbBUAAAAAAABsFQAAAAAAAF4AAAAgICAgICAgIGV4dGVybl9nbG9iYWxfZ2xEcmF3RWxlbWVudHMgPSBTb21lKHdnbF9nZXRfcHJvY19hZGRyZXNzIShzISgiZ2xVbmlmb3JtTWF0cml4NGZ2IikpKTsKPxUAAAAAAACdFQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA1RUAAAAAAADVFQAAAAAAAAAAAAAAAPC/AQAAAAEAAAB7HAAAAAAAAHscAAAAAAAAAAAAAAAA8L8"
				],
				[
					4963,
					1,
					"insert",
					{
						"characters": "Uniform"
					},
					"CAAAAFcVAAAAAAAAWBUAAAAAAAAAAAAAWBUAAAAAAABYFQAAAAAAAAwAAABEcmF3RWxlbWVudHNYFQAAAAAAAFkVAAAAAAAAAAAAAFkVAAAAAAAAWhUAAAAAAAAAAAAAWhUAAAAAAABbFQAAAAAAAAAAAABbFQAAAAAAAFwVAAAAAAAAAAAAAFwVAAAAAAAAXRUAAAAAAAAAAAAAXRUAAAAAAABeFQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAYxUAAAAAAABXFQAAAAAAAAAAAAAAAPC/AQAAAAEAAAB7HAAAAAAAAHscAAAAAAAAAAAAAAAA8L8"
				],
				[
					4964,
					1,
					"insert_completion",
					{
						"completion": "extern_global_glUniformMatrix4fv",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "extern_global_glUniformMatrix4fv"
					},
					"AgAAAEcVAAAAAAAARxUAAAAAAAAXAAAAZXh0ZXJuX2dsb2JhbF9nbFVuaWZvcm1HFQAAAAAAAGcVAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAXhUAAAAAAABeFQAAAAAAAAAAAAAAAPC/AQAAAAEAAAB2HAAAAAAAAHYcAAAAAAAAAAAAAAAA8L8"
				],
				[
					4979,
					1,
					"insert",
					{
						"characters": "\n\npub"
					},
					"BQAAAHooAAAAAAAAeygAAAAAAAAAAAAAeygAAAAAAAB8KAAAAAAAAAAAAAB8KAAAAAAAAH0oAAAAAAAAAAAAAH0oAAAAAAAAfigAAAAAAAAAAAAAfigAAAAAAAB/KAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAeigAAAAAAAB6KAAAAAAAAAAAAAAA4GJAAQAAAAEAAAB/HAAAAAAAAH8cAAAAAAAAAAAAAAAA8L8"
				],
				[
					4980,
					1,
					"insert",
					{
						"characters": " fn"
					},
					"AwAAAH8oAAAAAAAAgCgAAAAAAAAAAAAAgCgAAAAAAACBKAAAAAAAAAAAAACBKAAAAAAAAIIoAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAfygAAAAAAAB/KAAAAAAAAAAAAAAAAPC/AQAAAAEAAAB/HAAAAAAAAH8cAAAAAAAAAAAAAAAA8L8"
				],
				[
					4981,
					1,
					"insert",
					{
						"characters": " gl_matrix"
					},
					"CgAAAIIoAAAAAAAAgygAAAAAAAAAAAAAgygAAAAAAACEKAAAAAAAAAAAAACEKAAAAAAAAIUoAAAAAAAAAAAAAIUoAAAAAAAAhigAAAAAAAAAAAAAhigAAAAAAACHKAAAAAAAAAAAAACHKAAAAAAAAIgoAAAAAAAAAAAAAIgoAAAAAAAAiSgAAAAAAAAAAAAAiSgAAAAAAACKKAAAAAAAAAAAAACKKAAAAAAAAIsoAAAAAAAAAAAAAIsoAAAAAAAAjCgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAgigAAAAAAACCKAAAAAAAAAAAAAAAAPC/AQAAAAEAAAB/HAAAAAAAAH8cAAAAAAAAAAAAAAAA8L8"
				],
				[
					4982,
					6,
					"left_delete",
					null,
					"BgAAAIsoAAAAAAAAiygAAAAAAAABAAAAeIooAAAAAAAAiigAAAAAAAABAAAAaYkoAAAAAAAAiSgAAAAAAAABAAAAcogoAAAAAAAAiCgAAAAAAAABAAAAdIcoAAAAAAAAhygAAAAAAAABAAAAYYYoAAAAAAAAhigAAAAAAAABAAAAbQ",
					"AgAAAAAAAAABAAAAjCgAAAAAAACMKAAAAAAAAAAAAAAAAPC/AQAAAAEAAAB/HAAAAAAAAH8cAAAAAAAAAAAAAAAA8L8"
				],
				[
					4983,
					1,
					"insert",
					{
						"characters": "uniform_"
					},
					"CAAAAIYoAAAAAAAAhygAAAAAAAAAAAAAhygAAAAAAACIKAAAAAAAAAAAAACIKAAAAAAAAIkoAAAAAAAAAAAAAIkoAAAAAAAAiigAAAAAAAAAAAAAiigAAAAAAACLKAAAAAAAAAAAAACLKAAAAAAAAIwoAAAAAAAAAAAAAIwoAAAAAAAAjSgAAAAAAAAAAAAAjSgAAAAAAACOKAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAhigAAAAAAACGKAAAAAAAAAAAAAAAAPC/AQAAAAEAAAB/HAAAAAAAAH8cAAAAAAAAAAAAAAAA8L8"
				],
				[
					4984,
					1,
					"insert",
					{
						"characters": "matrix"
					},
					"BgAAAI4oAAAAAAAAjygAAAAAAAAAAAAAjygAAAAAAACQKAAAAAAAAAAAAACQKAAAAAAAAJEoAAAAAAAAAAAAAJEoAAAAAAAAkigAAAAAAAAAAAAAkigAAAAAAACTKAAAAAAAAAAAAACTKAAAAAAAAJQoAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAjigAAAAAAACOKAAAAAAAAAAAAAAAAPC/AQAAAAEAAAB/HAAAAAAAAH8cAAAAAAAAAAAAAAAA8L8"
				],
				[
					4985,
					1,
					"insert",
					{
						"characters": "_4fv"
					},
					"BAAAAJQoAAAAAAAAlSgAAAAAAAAAAAAAlSgAAAAAAACWKAAAAAAAAAAAAACWKAAAAAAAAJcoAAAAAAAAAAAAAJcoAAAAAAAAmCgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAlCgAAAAAAACUKAAAAAAAAAAAAAAAAPC/AQAAAAEAAAB/HAAAAAAAAH8cAAAAAAAAAAAAAAAA8L8"
				],
				[
					4988,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJgoAAAAAAAAmigAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAmCgAAAAAAACYKAAAAAAAAAAAAAAAAPC/AQAAAAEAAAB/HAAAAAAAAH8cAAAAAAAAAAAAAAAA8L8"
				],
				[
					4989,
					1,
					"insert",
					{
						"characters": "loc:"
					},
					"BAAAAJkoAAAAAAAAmigAAAAAAAAAAAAAmigAAAAAAACbKAAAAAAAAAAAAACbKAAAAAAAAJwoAAAAAAAAAAAAAJwoAAAAAAAAnSgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAmSgAAAAAAACZKAAAAAAAAAAAAAAAAPC/AQAAAAEAAAB/HAAAAAAAAH8cAAAAAAAAAAAAAAAA8L8"
				],
				[
					4990,
					1,
					"insert",
					{
						"characters": " i32,"
					},
					"BQAAAJ0oAAAAAAAAnigAAAAAAAAAAAAAnigAAAAAAACfKAAAAAAAAAAAAACfKAAAAAAAAKAoAAAAAAAAAAAAAKAoAAAAAAAAoSgAAAAAAAAAAAAAoSgAAAAAAACiKAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAnSgAAAAAAACdKAAAAAAAAAAAAAAAAPC/AQAAAAEAAAB/HAAAAAAAAH8cAAAAAAAAAAAAAAAA8L8"
				],
				[
					4991,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKIoAAAAAAAAoygAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAoigAAAAAAACiKAAAAAAAAAAAAAAAAPC/AQAAAAEAAAB/HAAAAAAAAH8cAAAAAAAAAAAAAAAA8L8"
				],
				[
					4992,
					1,
					"insert",
					{
						"characters": "count:"
					},
					"BgAAAKMoAAAAAAAApCgAAAAAAAAAAAAApCgAAAAAAAClKAAAAAAAAAAAAAClKAAAAAAAAKYoAAAAAAAAAAAAAKYoAAAAAAAApygAAAAAAAAAAAAApygAAAAAAACoKAAAAAAAAAAAAACoKAAAAAAAAKkoAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAoygAAAAAAACjKAAAAAAAAAAAAAAAAPC/AQAAAAEAAAB/HAAAAAAAAH8cAAAAAAAAAAAAAAAA8L8"
				],
				[
					4993,
					1,
					"insert",
					{
						"characters": " i32,"
					},
					"BQAAAKkoAAAAAAAAqigAAAAAAAAAAAAAqigAAAAAAACrKAAAAAAAAAAAAACrKAAAAAAAAKwoAAAAAAAAAAAAAKwoAAAAAAAArSgAAAAAAAAAAAAArSgAAAAAAACuKAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAqSgAAAAAAACpKAAAAAAAAAAAAAAAAPC/AQAAAAEAAAB/HAAAAAAAAH8cAAAAAAAAAAAAAAAA8L8"
				],
				[
					4994,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAK4oAAAAAAAArygAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAArigAAAAAAACuKAAAAAAAAAAAAAAAAPC/AQAAAAEAAAB/HAAAAAAAAH8cAAAAAAAAAAAAAAAA8L8"
				],
				[
					4995,
					1,
					"insert",
					{
						"characters": "transpose:"
					},
					"CgAAAK8oAAAAAAAAsCgAAAAAAAAAAAAAsCgAAAAAAACxKAAAAAAAAAAAAACxKAAAAAAAALIoAAAAAAAAAAAAALIoAAAAAAAAsygAAAAAAAAAAAAAsygAAAAAAAC0KAAAAAAAAAAAAAC0KAAAAAAAALUoAAAAAAAAAAAAALUoAAAAAAAAtigAAAAAAAAAAAAAtigAAAAAAAC3KAAAAAAAAAAAAAC3KAAAAAAAALgoAAAAAAAAAAAAALgoAAAAAAAAuSgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAArygAAAAAAACvKAAAAAAAAAAAAAAAAPC/AQAAAAEAAAB/HAAAAAAAAH8cAAAAAAAAAAAAAAAA8L8"
				],
				[
					4996,
					1,
					"insert",
					{
						"characters": " bool,"
					},
					"BgAAALkoAAAAAAAAuigAAAAAAAAAAAAAuigAAAAAAAC7KAAAAAAAAAAAAAC7KAAAAAAAALwoAAAAAAAAAAAAALwoAAAAAAAAvSgAAAAAAAAAAAAAvSgAAAAAAAC+KAAAAAAAAAAAAAC+KAAAAAAAAL8oAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAuSgAAAAAAAC5KAAAAAAAAAAAAAAAAPC/AQAAAAEAAAB/HAAAAAAAAH8cAAAAAAAAAAAAAAAA8L8"
				],
				[
					4997,
					1,
					"insert",
					{
						"characters": " matr"
					},
					"BQAAAL8oAAAAAAAAwCgAAAAAAAAAAAAAwCgAAAAAAADBKAAAAAAAAAAAAADBKAAAAAAAAMIoAAAAAAAAAAAAAMIoAAAAAAAAwygAAAAAAAAAAAAAwygAAAAAAADEKAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAvygAAAAAAAC/KAAAAAAAAAAAAAAAAPC/AQAAAAEAAAB/HAAAAAAAAH8cAAAAAAAAAAAAAAAA8L8"
				],
				[
					4998,
					1,
					"insert",
					{
						"characters": "ix"
					},
					"AgAAAMQoAAAAAAAAxSgAAAAAAAAAAAAAxSgAAAAAAADGKAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAxCgAAAAAAADEKAAAAAAAAAAAAAAAAPC/AQAAAAEAAAB/HAAAAAAAAH8cAAAAAAAAAAAAAAAA8L8"
				],
				[
					4999,
					6,
					"left_delete",
					null,
					"BgAAAMUoAAAAAAAAxSgAAAAAAAABAAAAeMQoAAAAAAAAxCgAAAAAAAABAAAAacMoAAAAAAAAwygAAAAAAAABAAAAcsIoAAAAAAAAwigAAAAAAAABAAAAdMEoAAAAAAAAwSgAAAAAAAABAAAAYcAoAAAAAAAAwCgAAAAAAAABAAAAbQ",
					"AgAAAAAAAAABAAAAxigAAAAAAADGKAAAAAAAAAAAAAAAAPC/AQAAAAEAAAB/HAAAAAAAAH8cAAAAAAAAAAAAAAAA8L8"
				],
				[
					5000,
					1,
					"insert",
					{
						"characters": "mat,"
					},
					"BAAAAMAoAAAAAAAAwSgAAAAAAAAAAAAAwSgAAAAAAADCKAAAAAAAAAAAAADCKAAAAAAAAMMoAAAAAAAAAAAAAMMoAAAAAAAAxCgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAwCgAAAAAAADAKAAAAAAAAAAAAAAAAPC/AQAAAAEAAAB/HAAAAAAAAH8cAAAAAAAAAAAAAAAA8L8"
				],
				[
					5001,
					1,
					"left_delete",
					null,
					"AQAAAMMoAAAAAAAAwygAAAAAAAABAAAALA",
					"AgAAAAAAAAABAAAAxCgAAAAAAADEKAAAAAAAAAAAAAAAAPC/AQAAAAEAAAB/HAAAAAAAAH8cAAAAAAAAAAAAAAAA8L8"
				],
				[
					5002,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAMMoAAAAAAAAxCgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAwygAAAAAAADDKAAAAAAAAAAAAAAAAPC/AQAAAAEAAAB/HAAAAAAAAH8cAAAAAAAAAAAAAAAA8L8"
				],
				[
					5003,
					1,
					"insert",
					{
						"characters": " M44"
					},
					"BAAAAMQoAAAAAAAAxSgAAAAAAAAAAAAAxSgAAAAAAADGKAAAAAAAAAAAAADGKAAAAAAAAMcoAAAAAAAAAAAAAMcoAAAAAAAAyCgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAxCgAAAAAAADEKAAAAAAAAAAAAAAAAPC/AQAAAAEAAAB/HAAAAAAAAH8cAAAAAAAAAAAAAAAA8L8"
				],
				[
					5004,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMgoAAAAAAAAySgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAyCgAAAAAAADIKAAAAAAAAAAAAAAAAPC/AQAAAAEAAAB/HAAAAAAAAH8cAAAAAAAAAAAAAAAA8L8"
				],
				[
					5005,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAMkoAAAAAAAAyygAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAySgAAAAAAADJKAAAAAAAAAAAAAAAAPC/AQAAAAEAAAB/HAAAAAAAAH8cAAAAAAAAAAAAAAAA8L8"
				],
				[
					5006,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAMkoAAAAAAAAySgAAAAAAAABAAAAe8koAAAAAAAAySgAAAAAAAABAAAAfQ",
					"AgAAAAAAAAABAAAAyigAAAAAAADKKAAAAAAAAAAAAAAAAPC/AQAAAAEAAAB/HAAAAAAAAH8cAAAAAAAAAAAAAAAA8L8"
				],
				[
					5007,
					1,
					"left_delete",
					null,
					"AQAAAMgoAAAAAAAAyCgAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAySgAAAAAAADJKAAAAAAAAAAAAAAAAPC/AQAAAAEAAAB/HAAAAAAAAH8cAAAAAAAAAAAAAAAA8L8"
				],
				[
					5009,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMkoAAAAAAAAyigAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAySgAAAAAAADJKAAAAAAAAAAAAAAAAPC/AQAAAAEAAAB/HAAAAAAAAH8cAAAAAAAAAAAAAAAA8L8"
				],
				[
					5010,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAMooAAAAAAAAzCgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAyigAAAAAAADKKAAAAAAAAAAAAAAAAPC/AQAAAAEAAAB/HAAAAAAAAH8cAAAAAAAAAAAAAAAA8L8"
				],
				[
					5011,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAAMsoAAAAAAAAzCgAAAAAAAAAAAAAzCgAAAAAAADNKAAAAAAAAAAAAADMKAAAAAAAANAoAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAyygAAAAAAADLKAAAAAAAAAAAAAAAAPC/AQAAAAEAAAB/HAAAAAAAAH8cAAAAAAAAAAAAAAAA8L8"
				],
				[
					5012,
					2,
					"rust_fmt_format_buffer",
					null,
					"AQAAAMsoAAAAAAAAyygAAAAAAAAGAAAACiAgICAK",
					"AgAAAAAAAAABAAAA0CgAAAAAAADQKAAAAAAAAAAAAAAAAPC/AQAAAAEAAAB/HAAAAAAAAH8cAAAAAAAAAAAAAAAA8L8"
				],
				[
					5020,
					1,
					"insert",
					{
						"characters": "\nuse"
					},
					"BAAAAKUAAAAAAAAApgAAAAAAAAAAAAAApgAAAAAAAACnAAAAAAAAAAAAAACnAAAAAAAAAKgAAAAAAAAAAAAAAKgAAAAAAAAAqQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAApQAAAAAAAAClAAAAAAAAAP///////+9/AQAAAAEAAAB/HAAAAAAAAH8cAAAAAAAAAAAAAAAA8L8"
				],
				[
					5021,
					1,
					"insert",
					{
						"characters": " gengar_engine"
					},
					"DgAAAKkAAAAAAAAAqgAAAAAAAAAAAAAAqgAAAAAAAACrAAAAAAAAAAAAAACrAAAAAAAAAKwAAAAAAAAAAAAAAKwAAAAAAAAArQAAAAAAAAAAAAAArQAAAAAAAACuAAAAAAAAAAAAAACuAAAAAAAAAK8AAAAAAAAAAAAAAK8AAAAAAAAAsAAAAAAAAAAAAAAAsAAAAAAAAACxAAAAAAAAAAAAAACxAAAAAAAAALIAAAAAAAAAAAAAALIAAAAAAAAAswAAAAAAAAAAAAAAswAAAAAAAAC0AAAAAAAAAAAAAAC0AAAAAAAAALUAAAAAAAAAAAAAALUAAAAAAAAAtgAAAAAAAAAAAAAAtgAAAAAAAAC3AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAqQAAAAAAAACpAAAAAAAAAAAAAAAAAPC/AQAAAAEAAACDHAAAAAAAAIMcAAAAAAAAAAAAAAAA8L8"
				],
				[
					5022,
					1,
					"paste",
					null,
					"AQAAAKYAAAAAAAAA4QAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAtwAAAAAAAAC3AAAAAAAAAAAAAAAAAPC/AQAAAAEAAACRHAAAAAAAAJEcAAAAAAAAAAAAAAAA8L8"
				],
				[
					5025,
					1,
					"cut",
					null,
					"AQAAAOEAAAAAAAAA4QAAAAAAAAASAAAAdXNlIGdlbmdhcl9lbmdpbmUK",
					"AgAAAAAAAAABAAAA8gAAAAAAAADyAAAAAAAAAAAAAAAAgF5AAQAAAAEAAADMHAAAAAAAAMwcAAAAAAAAAAAAAAAA8L8"
				],
				[
					5026,
					2,
					"rust_fmt_format_buffer",
					null,
					"BAAAAJoAAAAAAAAAmgAAAAAAAAAHAAAAdmVjdG9yc5oAAAAAAAAAtQAAAAAAAAAAAAAA1QAAAAAAAADVAAAAAAAAABsAAABtYXRyaWNpZXM6Om1hdHJpeF9mb3VyX2ZvdXLVAAAAAAAAANwAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA4QAAAAAAAADhAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAC6HAAAAAAAALocAAAAAAAAAAAAAAAA8L8"
				],
				[
					5031,
					1,
					"insert",
					{
						"characters": "\ngl_uni"
					},
					"CAAAAPoaAAAAAAAA+xoAAAAAAAAAAAAA+xoAAAAAAAADGwAAAAAAAAAAAAADGwAAAAAAAAQbAAAAAAAAAAAAAAQbAAAAAAAABRsAAAAAAAAAAAAABRsAAAAAAAAGGwAAAAAAAAAAAAAGGwAAAAAAAAcbAAAAAAAAAAAAAAcbAAAAAAAACBsAAAAAAAAAAAAACBsAAAAAAAAJGwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA+hoAAAAAAAD6GgAAAAAAAP///////+9/AQAAAAEAAAC6HAAAAAAAALocAAAAAAAAAAAAAAAA8L8"
				],
				[
					5032,
					2,
					"left_delete",
					null,
					"AgAAAAgbAAAAAAAACBsAAAAAAAABAAAAaQcbAAAAAAAABxsAAAAAAAABAAAAbg",
					"AgAAAAAAAAABAAAACRsAAAAAAAAJGwAAAAAAAAAAAAAAAPC/AQAAAAEAAADJHAAAAAAAAMkcAAAAAAAAAAAAAAAA8L8"
				],
				[
					5033,
					1,
					"insert",
					{
						"characters": "niform_ma"
					},
					"CQAAAAcbAAAAAAAACBsAAAAAAAAAAAAACBsAAAAAAAAJGwAAAAAAAAAAAAAJGwAAAAAAAAobAAAAAAAAAAAAAAobAAAAAAAACxsAAAAAAAAAAAAACxsAAAAAAAAMGwAAAAAAAAAAAAAMGwAAAAAAAA0bAAAAAAAAAAAAAA0bAAAAAAAADhsAAAAAAAAAAAAADhsAAAAAAAAPGwAAAAAAAAAAAAAPGwAAAAAAABAbAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAABxsAAAAAAAAHGwAAAAAAAAAAAAAAAPC/AQAAAAEAAADHHAAAAAAAAMccAAAAAAAAAAAAAAAA8L8"
				],
				[
					5034,
					1,
					"insert_completion",
					{
						"completion": "gl_uniform_matrix_4fv",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "gl_uniform_matrix_4fv"
					},
					"AgAAAAMbAAAAAAAAAxsAAAAAAAANAAAAZ2xfdW5pZm9ybV9tYQMbAAAAAAAAGBsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAEBsAAAAAAAAQGwAAAAAAAAAAAAAAAPC/AQAAAAEAAADQHAAAAAAAANAcAAAAAAAAAAAAAAAA8L8"
				],
				[
					5035,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAABgbAAAAAAAAGRsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAGBsAAAAAAAAYGwAAAAAAAAAAAAAAAPC/AQAAAAEAAADYHAAAAAAAANgcAAAAAAAAAAAAAAAA8L8"
				],
				[
					5036,
					1,
					"insert",
					{
						"characters": " gl_un"
					},
					"BgAAABkbAAAAAAAAGhsAAAAAAAAAAAAAGhsAAAAAAAAbGwAAAAAAAAAAAAAbGwAAAAAAABwbAAAAAAAAAAAAABwbAAAAAAAAHRsAAAAAAAAAAAAAHRsAAAAAAAAeGwAAAAAAAAAAAAAeGwAAAAAAAB8bAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAGRsAAAAAAAAZGwAAAAAAAAAAAAAAAPC/AQAAAAEAAADZHAAAAAAAANkcAAAAAAAAAAAAAAAA8L8"
				],
				[
					5037,
					1,
					"insert_completion",
					{
						"completion": "gl_uniform_matrix_4fv",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "gl_uniform_matrix_4fv"
					},
					"AgAAABobAAAAAAAAGhsAAAAAAAAFAAAAZ2xfdW4aGwAAAAAAAC8bAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAHxsAAAAAAAAfGwAAAAAAAAAAAAAAAPC/AQAAAAEAAADfHAAAAAAAAN8cAAAAAAAAAAAAAAAA8L8"
				],
				[
					5038,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAC8bAAAAAAAAMBsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAALxsAAAAAAAAvGwAAAAAAAAAAAAAAAPC/AQAAAAEAAADvHAAAAAAAAO8cAAAAAAAAAAAAAAAA8L8"
				],
				[
					5039,
					1,
					"left_delete",
					null,
					"AQAAAC8bAAAAAAAALxsAAAAAAAABAAAAOw",
					"AgAAAAAAAAABAAAAMBsAAAAAAAAwGwAAAAAAAAAAAAAAAPC/AQAAAAEAAADwHAAAAAAAAPAcAAAAAAAAAAAAAAAA8L8"
				],
				[
					5040,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAC8bAAAAAAAAMBsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAALxsAAAAAAAAvGwAAAAAAAAAAAAAAAPC/AQAAAAEAAADvHAAAAAAAAO8cAAAAAAAAAAAAAAAA8L8"
				],
				[
					5049,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAADwpAAAAAAAAPSkAAAAAAAAAAAAAPSkAAAAAAAA+KQAAAAAAAAAAAAA9KQAAAAAAAEEpAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAPCkAAAAAAAA8KQAAAAAAAAAAAAAAAPC/AQAAAAEAAADwHAAAAAAAAPAcAAAAAAAAAAAAAAAA8L8"
				],
				[
					5050,
					1,
					"insert",
					{
						"characters": "unsafe"
					},
					"BgAAAEEpAAAAAAAAQikAAAAAAAAAAAAAQikAAAAAAABDKQAAAAAAAAAAAABDKQAAAAAAAEQpAAAAAAAAAAAAAEQpAAAAAAAARSkAAAAAAAAAAAAARSkAAAAAAABGKQAAAAAAAAAAAABGKQAAAAAAAEcpAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQSkAAAAAAABBKQAAAAAAAAAAAAAAAPC/AQAAAAEAAADwHAAAAAAAAPAcAAAAAAAAAAAAAAAA8L8"
				],
				[
					5051,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEcpAAAAAAAASCkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAARykAAAAAAABHKQAAAAAAAAAAAAAAAPC/AQAAAAEAAADwHAAAAAAAAPAcAAAAAAAAAAAAAAAA8L8"
				],
				[
					5052,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAEgpAAAAAAAASikAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAASCkAAAAAAABIKQAAAAAAAAAAAAAAAPC/AQAAAAEAAADwHAAAAAAAAPAcAAAAAAAAAAAAAAAA8L8"
				],
				[
					5053,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAEkpAAAAAAAASikAAAAAAAAAAAAASikAAAAAAABOKQAAAAAAAAAAAABOKQAAAAAAAE8pAAAAAAAAAAAAAE8pAAAAAAAAUykAAAAAAAAAAAAASikAAAAAAABKKQAAAAAAAAQAAAAgICAgSikAAAAAAABSKQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAASSkAAAAAAABJKQAAAAAAAAAAAAAAAPC/AQAAAAEAAADwHAAAAAAAAPAcAAAAAAAAAAAAAAAA8L8"
				],
				[
					5054,
					1,
					"insert",
					{
						"characters": "gl"
					},
					"AgAAAFIpAAAAAAAAUykAAAAAAAAAAAAAUykAAAAAAABUKQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAUikAAAAAAABSKQAAAAAAAAAAAAAAAPC/AQAAAAEAAADwHAAAAAAAAPAcAAAAAAAAAAAAAAAA8L8"
				],
				[
					5055,
					2,
					"left_delete",
					null,
					"AgAAAFMpAAAAAAAAUykAAAAAAAABAAAAbFIpAAAAAAAAUikAAAAAAAABAAAAZw",
					"AgAAAAAAAAABAAAAVCkAAAAAAABUKQAAAAAAAAAAAAAAAPC/AQAAAAEAAADwHAAAAAAAAPAcAAAAAAAAAAAAAAAA8L8"
				],
				[
					5056,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAFIpAAAAAAAAVCkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAUikAAAAAAABSKQAAAAAAAAAAAAAAAPC/AQAAAAEAAADwHAAAAAAAAPAcAAAAAAAAAAAAAAAA8L8"
				],
				[
					5057,
					1,
					"insert",
					{
						"characters": "exter_global"
					},
					"DAAAAFMpAAAAAAAAVCkAAAAAAAAAAAAAVCkAAAAAAABVKQAAAAAAAAAAAABVKQAAAAAAAFYpAAAAAAAAAAAAAFYpAAAAAAAAVykAAAAAAAAAAAAAVykAAAAAAABYKQAAAAAAAAAAAABYKQAAAAAAAFkpAAAAAAAAAAAAAFkpAAAAAAAAWikAAAAAAAAAAAAAWikAAAAAAABbKQAAAAAAAAAAAABbKQAAAAAAAFwpAAAAAAAAAAAAAFwpAAAAAAAAXSkAAAAAAAAAAAAAXSkAAAAAAABeKQAAAAAAAAAAAABeKQAAAAAAAF8pAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAUykAAAAAAABTKQAAAAAAAAAAAAAAAPC/AQAAAAEAAADwHAAAAAAAAPAcAAAAAAAAAAAAAAAA8L8"
				],
				[
					5058,
					1,
					"insert",
					{
						"characters": "_glUn"
					},
					"BQAAAF8pAAAAAAAAYCkAAAAAAAAAAAAAYCkAAAAAAABhKQAAAAAAAAAAAABhKQAAAAAAAGIpAAAAAAAAAAAAAGIpAAAAAAAAYykAAAAAAAAAAAAAYykAAAAAAABkKQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAXykAAAAAAABfKQAAAAAAAAAAAAAAAPC/AQAAAAEAAADwHAAAAAAAAPAcAAAAAAAAAAAAAAAA8L8"
				],
				[
					5059,
					1,
					"insert_completion",
					{
						"completion": "extern_global_glUniformMatrix4fv",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "extern_global_glUniformMatrix4fv"
					},
					"AgAAAFMpAAAAAAAAUykAAAAAAAARAAAAZXh0ZXJfZ2xvYmFsX2dsVW5TKQAAAAAAAHMpAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAZCkAAAAAAABkKQAAAAAAAAAAAAAAAPC/AQAAAAEAAADwHAAAAAAAAPAcAAAAAAAAAAAAAAAA8L8"
				],
				[
					5060,
					1,
					"insert",
					{
						"characters": ".unwrap"
					},
					"BwAAAHMpAAAAAAAAdCkAAAAAAAAAAAAAdCkAAAAAAAB1KQAAAAAAAAAAAAB1KQAAAAAAAHYpAAAAAAAAAAAAAHYpAAAAAAAAdykAAAAAAAAAAAAAdykAAAAAAAB4KQAAAAAAAAAAAAB4KQAAAAAAAHkpAAAAAAAAAAAAAHkpAAAAAAAAeikAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAcykAAAAAAABzKQAAAAAAAAAAAAAAAPC/AQAAAAEAAADwHAAAAAAAAPAcAAAAAAAAAAAAAAAA8L8"
				],
				[
					5061,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAHopAAAAAAAAfCkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAeikAAAAAAAB6KQAAAAAAAAAAAAAAAPC/AQAAAAEAAADwHAAAAAAAAPAcAAAAAAAAAAAAAAAA8L8"
				],
				[
					5063,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAH0pAAAAAAAAfykAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAfSkAAAAAAAB9KQAAAAAAAAAAAAAAAPC/AQAAAAEAAADwHAAAAAAAAPAcAAAAAAAAAAAAAAAA8L8"
				],
				[
					5064,
					1,
					"insert",
					{
						"characters": "loc,"
					},
					"BAAAAH4pAAAAAAAAfykAAAAAAAAAAAAAfykAAAAAAACAKQAAAAAAAAAAAACAKQAAAAAAAIEpAAAAAAAAAAAAAIEpAAAAAAAAgikAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAfikAAAAAAAB+KQAAAAAAAAAAAAAAAPC/AQAAAAEAAADwHAAAAAAAAPAcAAAAAAAAAAAAAAAA8L8"
				],
				[
					5065,
					1,
					"insert",
					{
						"characters": " count,"
					},
					"BwAAAIIpAAAAAAAAgykAAAAAAAAAAAAAgykAAAAAAACEKQAAAAAAAAAAAACEKQAAAAAAAIUpAAAAAAAAAAAAAIUpAAAAAAAAhikAAAAAAAAAAAAAhikAAAAAAACHKQAAAAAAAAAAAACHKQAAAAAAAIgpAAAAAAAAAAAAAIgpAAAAAAAAiSkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAgikAAAAAAACCKQAAAAAAAAAAAAAAAPC/AQAAAAEAAADwHAAAAAAAAPAcAAAAAAAAAAAAAAAA8L8"
				],
				[
					5066,
					1,
					"insert",
					{
						"characters": " false"
					},
					"BgAAAIkpAAAAAAAAiikAAAAAAAAAAAAAiikAAAAAAACLKQAAAAAAAAAAAACLKQAAAAAAAIwpAAAAAAAAAAAAAIwpAAAAAAAAjSkAAAAAAAAAAAAAjSkAAAAAAACOKQAAAAAAAAAAAACOKQAAAAAAAI8pAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAiSkAAAAAAACJKQAAAAAAAAAAAAAAAPC/AQAAAAEAAADwHAAAAAAAAPAcAAAAAAAAAAAAAAAA8L8"
				],
				[
					5067,
					5,
					"left_delete",
					null,
					"BQAAAI4pAAAAAAAAjikAAAAAAAABAAAAZY0pAAAAAAAAjSkAAAAAAAABAAAAc4wpAAAAAAAAjCkAAAAAAAABAAAAbIspAAAAAAAAiykAAAAAAAABAAAAYYopAAAAAAAAiikAAAAAAAABAAAAZg",
					"AgAAAAAAAAABAAAAjykAAAAAAACPKQAAAAAAAAAAAAAAAPC/AQAAAAEAAADwHAAAAAAAAPAcAAAAAAAAAAAAAAAA8L8"
				],
				[
					5068,
					1,
					"insert",
					{
						"characters": "tran"
					},
					"BAAAAIopAAAAAAAAiykAAAAAAAAAAAAAiykAAAAAAACMKQAAAAAAAAAAAACMKQAAAAAAAI0pAAAAAAAAAAAAAI0pAAAAAAAAjikAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAiikAAAAAAACKKQAAAAAAAAAAAAAAAPC/AQAAAAEAAADwHAAAAAAAAPAcAAAAAAAAAAAAAAAA8L8"
				],
				[
					5069,
					1,
					"insert_completion",
					{
						"completion": "transpose",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "transpose"
					},
					"AgAAAIopAAAAAAAAiikAAAAAAAAEAAAAdHJhboopAAAAAAAAkykAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAjikAAAAAAACOKQAAAAAAAAAAAAAAAPC/AQAAAAEAAADwHAAAAAAAAPAcAAAAAAAAAAAAAAAA8L8"
				],
				[
					5070,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAJMpAAAAAAAAlCkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAkykAAAAAAACTKQAAAAAAAAAAAAAAAPC/AQAAAAEAAADwHAAAAAAAAPAcAAAAAAAAAAAAAAAA8L8"
				],
				[
					5071,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJQpAAAAAAAAlSkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAlCkAAAAAAACUKQAAAAAAAAAAAAAAAPC/AQAAAAEAAADwHAAAAAAAAPAcAAAAAAAAAAAAAAAA8L8"
				],
				[
					5072,
					1,
					"insert",
					{
						"characters": "dat"
					},
					"AwAAAJUpAAAAAAAAlikAAAAAAAAAAAAAlikAAAAAAACXKQAAAAAAAAAAAACXKQAAAAAAAJgpAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAlSkAAAAAAACVKQAAAAAAAAAAAAAAAPC/AQAAAAEAAADwHAAAAAAAAPAcAAAAAAAAAAAAAAAA8L8"
				],
				[
					5073,
					3,
					"left_delete",
					null,
					"AwAAAJcpAAAAAAAAlykAAAAAAAABAAAAdJYpAAAAAAAAlikAAAAAAAABAAAAYZUpAAAAAAAAlSkAAAAAAAABAAAAZA",
					"AgAAAAAAAAABAAAAmCkAAAAAAACYKQAAAAAAAAAAAAAAAPC/AQAAAAEAAADwHAAAAAAAAPAcAAAAAAAAAAAAAAAA8L8"
				],
				[
					5074,
					1,
					"insert",
					{
						"characters": "mat"
					},
					"AwAAAJUpAAAAAAAAlikAAAAAAAAAAAAAlikAAAAAAACXKQAAAAAAAAAAAACXKQAAAAAAAJgpAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAlSkAAAAAAACVKQAAAAAAAAAAAAAAAPC/AQAAAAEAAADwHAAAAAAAAPAcAAAAAAAAAAAAAAAA8L8"
				],
				[
					5076,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAJkpAAAAAAAAmikAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAmSkAAAAAAACZKQAAAAAAAAAAAAAAAPC/AQAAAAEAAADwHAAAAAAAAPAcAAAAAAAAAAAAAAAA8L8"
				],
				[
					5080,
					1,
					"insert",
					{
						"characters": ".elements"
					},
					"CQAAAJgpAAAAAAAAmSkAAAAAAAAAAAAAmSkAAAAAAACaKQAAAAAAAAAAAACaKQAAAAAAAJspAAAAAAAAAAAAAJspAAAAAAAAnCkAAAAAAAAAAAAAnCkAAAAAAACdKQAAAAAAAAAAAACdKQAAAAAAAJ4pAAAAAAAAAAAAAJ4pAAAAAAAAnykAAAAAAAAAAAAAnykAAAAAAACgKQAAAAAAAAAAAACgKQAAAAAAAKEpAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAmCkAAAAAAACYKQAAAAAAAAAAAAAAAPC/AQAAAAEAAADwHAAAAAAAAPAcAAAAAAAAAAAAAAAA8L8"
				],
				[
					5081,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAKEpAAAAAAAAoykAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAoSkAAAAAAAChKQAAAAAAAAAAAAAAAPC/AQAAAAEAAADwHAAAAAAAAPAcAAAAAAAAAAAAAAAA8L8"
				],
				[
					5082,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAKIpAAAAAAAAoykAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAoikAAAAAAACiKQAAAAAAAAAAAAAAAPC/AQAAAAEAAADwHAAAAAAAAPAcAAAAAAAAAAAAAAAA8L8"
				],
				[
					5084,
					1,
					"insert",
					{
						"characters": ".as_ptr"
					},
					"BwAAAKQpAAAAAAAApSkAAAAAAAAAAAAApSkAAAAAAACmKQAAAAAAAAAAAACmKQAAAAAAAKcpAAAAAAAAAAAAAKcpAAAAAAAAqCkAAAAAAAAAAAAAqCkAAAAAAACpKQAAAAAAAAAAAACpKQAAAAAAAKopAAAAAAAAAAAAAKopAAAAAAAAqykAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAApCkAAAAAAACkKQAAAAAAAAAAAAAAAPC/AQAAAAEAAADwHAAAAAAAAPAcAAAAAAAAAAAAAAAA8L8"
				],
				[
					5085,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAKspAAAAAAAArSkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAqykAAAAAAACrKQAAAAAAAAAAAAAAAPC/AQAAAAEAAADwHAAAAAAAAPAcAAAAAAAAAAAAAAAA8L8"
				],
				[
					5087,
					2,
					"rust_fmt_format_buffer",
					null,
					"BQAAAH4pAAAAAAAAiykAAAAAAAAAAAAAjykAAAAAAACbKQAAAAAAAAAAAACiKQAAAAAAAK4pAAAAAAAAAAAAALkpAAAAAAAAxSkAAAAAAAAAAAAA3ikAAAAAAADoKQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAArSkAAAAAAACtKQAAAAAAAAAAAAAAAPC/AQAAAAEAAADwHAAAAAAAAPAcAAAAAAAAAAAAAAAA8L8"
				],
				[
					5095,
					9,
					"left_delete",
					null,
					"CQAAAN0pAAAAAAAA3SkAAAAAAAABAAAAKdwpAAAAAAAA3CkAAAAAAAABAAAAKNspAAAAAAAA2ykAAAAAAAABAAAActopAAAAAAAA2ikAAAAAAAABAAAAdNkpAAAAAAAA2SkAAAAAAAABAAAAcNgpAAAAAAAA2CkAAAAAAAABAAAAX9cpAAAAAAAA1ykAAAAAAAABAAAAc9YpAAAAAAAA1ikAAAAAAAABAAAAYdUpAAAAAAAA1SkAAAAAAAABAAAALg",
					"AgAAAAAAAAABAAAA3ikAAAAAAADeKQAAAAAAAAAAAAAAAPC/AQAAAAEAAADwHAAAAAAAAPAcAAAAAAAAAAAAAAAA8L8"
				],
				[
					5097,
					1,
					"insert",
					{
						"characters": "&"
					},
					"AQAAAMYpAAAAAAAAxykAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAxikAAAAAAADGKQAAAAAAAAAAAAAAAPC/AQAAAAEAAADwHAAAAAAAAPAcAAAAAAAAAAAAAAAA8L8"
				],
				[
					5098,
					2,
					"rust_fmt_format_buffer",
					null,
					"BQAAAH4pAAAAAAAAfikAAAAAAAANAAAACiAgICAgICAgICAgIIIpAAAAAAAAgikAAAAAAAAMAAAACiAgICAgICAgICAgiSkAAAAAAACJKQAAAAAAAAwAAAAKICAgICAgICAgICCUKQAAAAAAAJQpAAAAAAAADAAAAAogICAgICAgICAgIKUpAAAAAAAApSkAAAAAAAAKAAAALAogICAgICAgIA",
					"AgAAAAAAAAABAAAAxykAAAAAAADHKQAAAAAAAAAAAAAAAPC/AQAAAAEAAADwHAAAAAAAAPAcAAAAAAAAAAAAAAAA8L8"
				],
				[
					5099,
					1,
					"left_delete",
					null,
					"AQAAAJUpAAAAAAAAlSkAAAAAAAABAAAAJg",
					"AgAAAAAAAAABAAAAlikAAAAAAACWKQAAAAAAAAAAAAAAAPC/AQAAAAEAAADwHAAAAAAAAPAcAAAAAAAAAAAAAAAA8L8"
				],
				[
					5100,
					1,
					"insert",
					{
						"characters": "*const"
					},
					"BgAAAJUpAAAAAAAAlikAAAAAAAAAAAAAlikAAAAAAACXKQAAAAAAAAAAAACXKQAAAAAAAJgpAAAAAAAAAAAAAJgpAAAAAAAAmSkAAAAAAAAAAAAAmSkAAAAAAACaKQAAAAAAAAAAAACaKQAAAAAAAJspAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAlSkAAAAAAACVKQAAAAAAAAAAAAAAAPC/AQAAAAEAAADwHAAAAAAAAPAcAAAAAAAAAAAAAAAA8L8"
				],
				[
					5101,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJspAAAAAAAAnCkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAmykAAAAAAACbKQAAAAAAAAAAAAAAAPC/AQAAAAEAAADwHAAAAAAAAPAcAAAAAAAAAAAAAAAA8L8"
				],
				[
					5104,
					6,
					"left_delete",
					null,
					"BgAAAJspAAAAAAAAmykAAAAAAAABAAAAIJopAAAAAAAAmikAAAAAAAABAAAAdJkpAAAAAAAAmSkAAAAAAAABAAAAc5gpAAAAAAAAmCkAAAAAAAABAAAAbpcpAAAAAAAAlykAAAAAAAABAAAAb5YpAAAAAAAAlikAAAAAAAABAAAAYw",
					"AgAAAAAAAAABAAAAnCkAAAAAAACcKQAAAAAAAAAAAAAAAPC/AQAAAAEAAADwHAAAAAAAAPAcAAAAAAAAAAAAAAAA8L8"
				],
				[
					5107,
					1,
					"left_delete",
					null,
					"AQAAAJUpAAAAAAAAlSkAAAAAAAABAAAAKg",
					"AgAAAAAAAAABAAAAlikAAAAAAACWKQAAAAAAAAAAAAAAAPC/AQAAAAEAAADwHAAAAAAAAPAcAAAAAAAAAAAAAAAA8L8"
				],
				[
					5108,
					1,
					"insert",
					{
						"characters": "&"
					},
					"AQAAAJUpAAAAAAAAlikAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAlSkAAAAAAACVKQAAAAAAAAAAAAAAAPC/AQAAAAEAAADwHAAAAAAAAPAcAAAAAAAAAAAAAAAA8L8"
				],
				[
					5109,
					1,
					"left_delete",
					null,
					"AQAAAJUpAAAAAAAAlSkAAAAAAAABAAAAJg",
					"AgAAAAAAAAABAAAAlikAAAAAAACWKQAAAAAAAAAAAAAAAPC/AQAAAAEAAADwHAAAAAAAAPAcAAAAAAAAAAAAAAAA8L8"
				],
				[
					5112,
					1,
					"insert",
					{
						"characters": ".as_mut_pt"
					},
					"CgAAAKQpAAAAAAAApSkAAAAAAAAAAAAApSkAAAAAAACmKQAAAAAAAAAAAACmKQAAAAAAAKcpAAAAAAAAAAAAAKcpAAAAAAAAqCkAAAAAAAAAAAAAqCkAAAAAAACpKQAAAAAAAAAAAACpKQAAAAAAAKopAAAAAAAAAAAAAKopAAAAAAAAqykAAAAAAAAAAAAAqykAAAAAAACsKQAAAAAAAAAAAACsKQAAAAAAAK0pAAAAAAAAAAAAAK0pAAAAAAAArikAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAApCkAAAAAAACkKQAAAAAAAAAAAAAAAPC/AQAAAAEAAADwHAAAAAAAAPAcAAAAAAAAAAAAAAAA8L8"
				],
				[
					5113,
					1,
					"insert",
					{
						"characters": "r"
					},
					"AQAAAK4pAAAAAAAArykAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAArikAAAAAAACuKQAAAAAAAAAAAAAAAPC/AQAAAAEAAADwHAAAAAAAAPAcAAAAAAAAAAAAAAAA8L8"
				],
				[
					5114,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAK8pAAAAAAAAsSkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAArykAAAAAAACvKQAAAAAAAAAAAAAAAPC/AQAAAAEAAADwHAAAAAAAAPAcAAAAAAAAAAAAAAAA8L8"
				],
				[
					5116,
					2,
					"rust_fmt_format_buffer",
					null,
					"BQAAAH4pAAAAAAAAiykAAAAAAAAAAAAAjykAAAAAAACbKQAAAAAAAAAAAACiKQAAAAAAAK4pAAAAAAAAAAAAALkpAAAAAAAAxSkAAAAAAAAAAAAA4ikAAAAAAADsKQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAsSkAAAAAAACxKQAAAAAAAAAAAAAAAPC/AQAAAAEAAADwHAAAAAAAAPAcAAAAAAAAAAAAAAAA8L8"
				],
				[
					5120,
					13,
					"left_delete",
					null,
					"DQAAAOEpAAAAAAAA4SkAAAAAAAABAAAAKeApAAAAAAAA4CkAAAAAAAABAAAAKN8pAAAAAAAA3ykAAAAAAAABAAAAct4pAAAAAAAA3ikAAAAAAAABAAAAdN0pAAAAAAAA3SkAAAAAAAABAAAAcNwpAAAAAAAA3CkAAAAAAAABAAAAX9spAAAAAAAA2ykAAAAAAAABAAAAdNopAAAAAAAA2ikAAAAAAAABAAAAddkpAAAAAAAA2SkAAAAAAAABAAAAbdgpAAAAAAAA2CkAAAAAAAABAAAAX9cpAAAAAAAA1ykAAAAAAAABAAAAc9YpAAAAAAAA1ikAAAAAAAABAAAAYdUpAAAAAAAA1SkAAAAAAAABAAAALg",
					"AgAAAAAAAAABAAAA4ikAAAAAAADiKQAAAAAAAAAAAAAAAPC/AQAAAAEAAADwHAAAAAAAAPAcAAAAAAAAAAAAAAAA8L8"
				],
				[
					5121,
					1,
					"rust_fmt_format_buffer",
					null,
					"BQAAAH4pAAAAAAAAfikAAAAAAAANAAAACiAgICAgICAgICAgIIIpAAAAAAAAgikAAAAAAAAMAAAACiAgICAgICAgICAgiSkAAAAAAACJKQAAAAAAAAwAAAAKICAgICAgICAgICCUKQAAAAAAAJQpAAAAAAAADAAAAAogICAgICAgICAgIKQpAAAAAAAApCkAAAAAAAAKAAAALAogICAgICAgIA",
					"AgAAAAAAAAABAAAA1SkAAAAAAADVKQAAAAAAAAAAAAAAAPC/AQAAAAEAAADwHAAAAAAAAPAcAAAAAAAAAAAAAAAA8L8"
				],
				[
					5145,
					1,
					"insert",
					{
						"characters": "&mut"
					},
					"BAAAAJUpAAAAAAAAlikAAAAAAAAAAAAAlikAAAAAAACXKQAAAAAAAAAAAACXKQAAAAAAAJgpAAAAAAAAAAAAAJgpAAAAAAAAmSkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAlSkAAAAAAACVKQAAAAAAAAAAAAAAAPC/AQAAAAEAAADwHAAAAAAAAPAcAAAAAAAAAAAAAAAA8L8"
				],
				[
					5146,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJkpAAAAAAAAmikAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAmSkAAAAAAACZKQAAAAAAAAAAAAAAAPC/AQAAAAEAAADwHAAAAAAAAPAcAAAAAAAAAAAAAAAA8L8"
				],
				[
					5149,
					4,
					"left_delete",
					null,
					"BAAAAJkpAAAAAAAAmSkAAAAAAAABAAAAIJgpAAAAAAAAmCkAAAAAAAABAAAAdJcpAAAAAAAAlykAAAAAAAABAAAAdZYpAAAAAAAAlikAAAAAAAABAAAAbQ",
					"AgAAAAAAAAABAAAAmikAAAAAAACaKQAAAAAAAAAAAAAAAPC/AQAAAAEAAADwHAAAAAAAAPAcAAAAAAAAAAAAAAAA8L8"
				],
				[
					5165,
					2,
					"left_delete",
					null,
					"AgAAANgNAAAAAAAA2A0AAAAAAAABAAAAMtcNAAAAAAAA1w0AAAAAAAABAAAAMw",
					"AgAAAAAAAAABAAAA2Q0AAAAAAADZDQAAAAAAAAAAAAAAAPC/AQAAAAEAAADwHAAAAAAAAPAcAAAAAAAAAAAAAAAA8L8"
				],
				[
					5166,
					1,
					"insert",
					{
						"characters": "64"
					},
					"AgAAANcNAAAAAAAA2A0AAAAAAAAAAAAA2A0AAAAAAADZDQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA1w0AAAAAAADXDQAAAAAAAAAAAAAAAPC/AQAAAAEAAADuHAAAAAAAAO4cAAAAAAAAAAAAAAAA8L8"
				],
				[
					5179,
					17,
					"cut",
					null,
					"EQAAADIOAAAAAAAAMg4AAAAAAAADAAAALyoKMg4AAAAAAAAyDgAAAAAAACAAAABwdWIgdW5zYWZlIGZuIFVuaWZvcm1NYXRyaXg0ZnYoCjIOAAAAAAAAMg4AAAAAAAAcAAAAICAgIGxvY2F0aW9uOiB0eXBlczo6R0xpbnQsCjIOAAAAAAAAMg4AAAAAAAAbAAAAICAgIGNvdW50OiB0eXBlczo6R0xzaXplaSwKMg4AAAAAAAAyDgAAAAAAACEAAAAgICAgdHJhbnNwb3NlOiB0eXBlczo6R0xib29sZWFuLAoyDgAAAAAAADIOAAAAAAAAIgAAACAgICB2YWx1ZTogKmNvbnN0IHR5cGVzOjpHTGZsb2F0LAoyDgAAAAAAADIOAAAAAAAACgAAACkgLT4gKCkgewoyDgAAAAAAADIOAAAAAAAAJAAAACAgICBfX2dsX2ltcG9ydHM6Om1lbTo6dHJhbnNtdXRlOjo8CjIOAAAAAAAAMg4AAAAAAAALAAAAICAgICAgICBfLAoyDgAAAAAAADIOAAAAAAAAHAAAACAgICAgICAgZXh0ZXJuICJzeXN0ZW0iIGZuKAoyDgAAAAAAADIOAAAAAAAAGgAAACAgICAgICAgICAgIHR5cGVzOjpHTGludCwKMg4AAAAAAAAyDgAAAAAAABwAAAAgICAgICAgICAgICB0eXBlczo6R0xzaXplaSwKMg4AAAAAAAAyDgAAAAAAAB4AAAAgICAgICAgICAgICB0eXBlczo6R0xib29sZWFuLAoyDgAAAAAAADIOAAAAAAAAIwAAACAgICAgICAgICAgICpjb25zdCB0eXBlczo6R0xmbG9hdCwKMg4AAAAAAAAyDgAAAAAAABEAAAAgICAgICAgICkgLT4gKCksCjIOAAAAAAAAMg4AAAAAAABGAAAAICAgID4oc3RvcmFnZTo6VW5pZm9ybU1hdHJpeDRmdi5mKShsb2NhdGlvbiwgY291bnQsIHRyYW5zcG9zZSwgdmFsdWUpCjIOAAAAAAAAMg4AAAAAAAACAAAAfQo",
					"AgAAAAAAAAABAAAAMg4AAAAAAAAyDgAAAAAAAAAAAAAAAAAAAQAAAAEAAADwHAAAAAAAAPAcAAAAAAAAAAAAAAAA8L8"
				],
				[
					5180,
					1,
					"insert",
					{
						"characters": "x"
					},
					"AQAAADIOAAAAAAAAMw4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAMg4AAAAAAAAyDgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAuGwAAAAAAAC4bAAAAAAAAAAAAAAAA8L8"
				],
				[
					5181,
					1,
					"left_delete",
					null,
					"AQAAADIOAAAAAAAAMg4AAAAAAAABAAAAeA",
					"AgAAAAAAAAABAAAAMw4AAAAAAAAzDgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAvGwAAAAAAAC8bAAAAAAAAAAAAAAAA8L8"
				],
				[
					5182,
					1,
					"cut",
					null,
					"AQAAADIOAAAAAAAAMg4AAAAAAAADAAAAKi8K",
					"AgAAAAAAAAABAAAAMg4AAAAAAAAyDgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAuGwAAAAAAAC4bAAAAAAAAAAAAAAAA8L8"
				],
				[
					5183,
					1,
					"rust_fmt_format_buffer",
					null,
					"AQAAADIOAAAAAAAAMg4AAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAMg4AAAAAAAAyDgAAAAAAAAAAAAAAAPC/AQAAAAEAAAArGwAAAAAAACsbAAAAAAAAAAAAAAAA8L8"
				],
				[
					5214,
					1,
					"insert",
					{
						"characters": "&"
					},
					"AQAAAHAnAAAAAAAAcScAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAcCcAAAAAAABwJwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAqGwAAAAAAACobAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "gengar_engine/src/engine/render/shader.rs",
			"settings":
			{
				"buffer_size": 843,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					9,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAPQAAAAAAAAA9QAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9AAAAAAAAAD0AAAAAAAAAAAAAAAAoHBA"
				],
				[
					10,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAPUAAAAAAAAA9wAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9QAAAAAAAAD1AAAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					1,
					"insert",
					{
						"characters": "#"
					},
					"AQAAAPUAAAAAAAAA9gAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9QAAAAAAAAD1AAAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": "derive"
					},
					"BgAAAPcAAAAAAAAA+AAAAAAAAAAAAAAA+AAAAAAAAAD5AAAAAAAAAAAAAAD5AAAAAAAAAPoAAAAAAAAAAAAAAPoAAAAAAAAA+wAAAAAAAAAAAAAA+wAAAAAAAAD8AAAAAAAAAAAAAAD8AAAAAAAAAP0AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9wAAAAAAAAD3AAAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAP0AAAAAAAAA/wAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/QAAAAAAAAD9AAAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": "c"
					},
					"AQAAAP4AAAAAAAAA/wAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/gAAAAAAAAD+AAAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					1,
					"left_delete",
					null,
					"AQAAAP4AAAAAAAAA/gAAAAAAAAABAAAAYw",
					"AQAAAAAAAAABAAAA/wAAAAAAAAD/AAAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": "clone"
					},
					"BQAAAP4AAAAAAAAA/wAAAAAAAAAAAAAA/wAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAEBAAAAAAAAAAAAAAEBAAAAAAAAAgEAAAAAAAAAAAAAAgEAAAAAAAADAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/gAAAAAAAAD+AAAAAAAAAAAAAAAAAPC/"
				],
				[
					27,
					1,
					"left_delete",
					null,
					"AQAAAP4AAAAAAAAA/gAAAAAAAAABAAAAYw",
					"AQAAAAAAAAABAAAA/wAAAAAAAAD/AAAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": "C"
					},
					"AQAAAP4AAAAAAAAA/wAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/gAAAAAAAAD+AAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "gengar_renderapi_opengl_windows/target/debug/.fingerprint/windows-a2754bc8d6ae3ddd/invoked.timestamp",
			"settings":
			{
				"buffer_size": 48,
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"revert",
					null,
					"CgAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAVGhpcyBmaWxlIGhhcyBhbiBtdGltZSBvZiB3aGVuIHRoaXMgd2FzIHN0YXJ0ZWQuAAAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAA",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"contents": "#![allow(unused_variables)]\n\npub struct RenderApi {\n    pub clear: fn(),\n}\n\npub fn render(render_api: &RenderApi) {\n    println!(\"actually render things here\");\n}\n",
			"file": "gengar_render_opengl/src/render.rs",
			"file_size": 172,
			"file_write_time": 133658889961333186,
			"settings":
			{
				"buffer_size": 163,
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					2,
					1,
					"left_delete",
					null,
					"AQAAAEoAAAAAAAAASgAAAAAAAAABAAAAKg",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEsAAAAAAAAASwAAAAAAAAAAAAAAAADwvw"
				],
				[
					3,
					1,
					"insert",
					{
						"characters": "&"
					},
					"AQAAAEoAAAAAAAAASwAAAAAAAAAAAAAA",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEoAAAAAAAAASgAAAAAAAAAAAAAAAADwvw"
				],
				[
					4,
					1,
					"rust_fmt_format_buffer",
					null,
					"AwAAAC8AAAAAAAAALwAAAAAAAAABAAAAClYAAAAAAAAAVgAAAAAAAAAGAAAACiAgICAKVwAAAAAAAABYAAAAAAAAAAAAAAA",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEsAAAAAAAAASwAAAAAAAAAAAAAAAADwvw"
				],
				[
					8,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAAAAAAAAAAAAAQAAAAAAAAAAAAAA",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
				],
				[
					12,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAAAAAAAAAAAAAQAAAAAAAAAAAAAA",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": "#"
					},
					"AQAAAAAAAAAAAAAAAQAAAAAAAAAAAAAA",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
				],
				[
					15,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAAEAAAAAAAAAAwAAAAAAAAAAAAAA",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAEAAAAAAAAAAQAAAAAAAAAAAAAAAADwvw"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": "!"
					},
					"AQAAAAEAAAAAAAAAAgAAAAAAAAAAAAAA",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAEAAAAAAAAAAQAAAAAAAAAAAAAAAADwvw"
				],
				[
					20,
					1,
					"insert",
					{
						"characters": "alo"
					},
					"AwAAAAMAAAAAAAAABAAAAAAAAAAAAAAABAAAAAAAAAAFAAAAAAAAAAAAAAAFAAAAAAAAAAYAAAAAAAAAAAAAAA",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAMAAAAAAAAAAwAAAAAAAAAAAAAAAADwvw"
				],
				[
					21,
					1,
					"left_delete",
					null,
					"AQAAAAUAAAAAAAAABQAAAAAAAAABAAAAbw",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAYAAAAAAAAABgAAAAAAAAAAAAAAAADwvw"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": "low"
					},
					"AwAAAAUAAAAAAAAABgAAAAAAAAAAAAAABgAAAAAAAAAHAAAAAAAAAAAAAAAHAAAAAAAAAAgAAAAAAAAAAAAAAA",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAUAAAAAAAAABQAAAAAAAAAAAAAAAADwvw"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": "n"
					},
					"AQAAAAAAAAAAAAAAAQAAAAAAAAAAAAAA",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABNQA"
				],
				[
					25,
					1,
					"left_delete",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAbg",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAEAAAAAAAAAAQAAAAAAAAAAAAAAAADwvw"
				],
				[
					28,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAAgAAAAAAAAACgAAAAAAAAAAAAAA",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAgAAAAAAAAACAAAAAAAAAAAAAAAAADwvw"
				],
				[
					29,
					1,
					"insert",
					{
						"characters": "unused_"
					},
					"BwAAAAkAAAAAAAAACgAAAAAAAAAAAAAACgAAAAAAAAALAAAAAAAAAAAAAAALAAAAAAAAAAwAAAAAAAAAAAAAAAwAAAAAAAAADQAAAAAAAAAAAAAADQAAAAAAAAAOAAAAAAAAAAAAAAAOAAAAAAAAAA8AAAAAAAAAAAAAAA8AAAAAAAAAEAAAAAAAAAAAAAAA",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAkAAAAAAAAACQAAAAAAAAAAAAAAAADwvw"
				],
				[
					30,
					1,
					"insert",
					{
						"characters": "variables"
					},
					"CQAAABAAAAAAAAAAEQAAAAAAAAAAAAAAEQAAAAAAAAASAAAAAAAAAAAAAAASAAAAAAAAABMAAAAAAAAAAAAAABMAAAAAAAAAFAAAAAAAAAAAAAAAFAAAAAAAAAAVAAAAAAAAAAAAAAAVAAAAAAAAABYAAAAAAAAAAAAAABYAAAAAAAAAFwAAAAAAAAAAAAAAFwAAAAAAAAAYAAAAAAAAAAAAAAAYAAAAAAAAABkAAAAAAAAAAAAAAA",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABAAAAAAAAAAEAAAAAAAAAAAAAAAAADwvw"
				],
				[
					49,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAAHMAAAAAAAAAdAAAAAAAAAAAAAAAdAAAAAAAAAB1AAAAAAAAAAAAAAB0AAAAAAAAAHgAAAAAAAAAAAAAAA",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHMAAAAAAAAAcwAAAAAAAAAAAAAAAADwvw"
				],
				[
					50,
					1,
					"insert",
					{
						"characters": "println!"
					},
					"CAAAAHgAAAAAAAAAeQAAAAAAAAAAAAAAeQAAAAAAAAB6AAAAAAAAAAAAAAB6AAAAAAAAAHsAAAAAAAAAAAAAAHsAAAAAAAAAfAAAAAAAAAAAAAAAfAAAAAAAAAB9AAAAAAAAAAAAAAB9AAAAAAAAAH4AAAAAAAAAAAAAAH4AAAAAAAAAfwAAAAAAAAAAAAAAfwAAAAAAAACAAAAAAAAAAAAAAAA",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHgAAAAAAAAAeAAAAAAAAAAAAAAAAADwvw"
				],
				[
					51,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAIAAAAAAAAAAggAAAAAAAAAAAAAA",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIAAAAAAAAAAgAAAAAAAAAAAAAAAAADwvw"
				],
				[
					52,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAIEAAAAAAAAAgwAAAAAAAAAAAAAA",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIEAAAAAAAAAgQAAAAAAAAAAAAAAAADwvw"
				],
				[
					53,
					1,
					"insert",
					{
						"characters": "do"
					},
					"AgAAAIIAAAAAAAAAgwAAAAAAAAAAAAAAgwAAAAAAAACEAAAAAAAAAAAAAAA",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIIAAAAAAAAAggAAAAAAAAAAAAAAAADwvw"
				],
				[
					54,
					1,
					"insert",
					{
						"characters": " rend"
					},
					"BQAAAIQAAAAAAAAAhQAAAAAAAAAAAAAAhQAAAAAAAACGAAAAAAAAAAAAAACGAAAAAAAAAIcAAAAAAAAAAAAAAIcAAAAAAAAAiAAAAAAAAAAAAAAAiAAAAAAAAACJAAAAAAAAAAAAAAA",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIQAAAAAAAAAhAAAAAAAAAAAAAAAAADwvw"
				],
				[
					55,
					7,
					"left_delete",
					null,
					"BwAAAIgAAAAAAAAAiAAAAAAAAAABAAAAZIcAAAAAAAAAhwAAAAAAAAABAAAAboYAAAAAAAAAhgAAAAAAAAABAAAAZYUAAAAAAAAAhQAAAAAAAAABAAAAcoQAAAAAAAAAhAAAAAAAAAABAAAAIIMAAAAAAAAAgwAAAAAAAAABAAAAb4IAAAAAAAAAggAAAAAAAAABAAAAZA",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIkAAAAAAAAAiQAAAAAAAAAAAAAAAADwvw"
				],
				[
					56,
					1,
					"insert",
					{
						"characters": "actually"
					},
					"CAAAAIIAAAAAAAAAgwAAAAAAAAAAAAAAgwAAAAAAAACEAAAAAAAAAAAAAACEAAAAAAAAAIUAAAAAAAAAAAAAAIUAAAAAAAAAhgAAAAAAAAAAAAAAhgAAAAAAAACHAAAAAAAAAAAAAACHAAAAAAAAAIgAAAAAAAAAAAAAAIgAAAAAAAAAiQAAAAAAAAAAAAAAiQAAAAAAAACKAAAAAAAAAAAAAAA",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIIAAAAAAAAAggAAAAAAAAAAAAAAAADwvw"
				],
				[
					57,
					1,
					"insert",
					{
						"characters": " render"
					},
					"BwAAAIoAAAAAAAAAiwAAAAAAAAAAAAAAiwAAAAAAAACMAAAAAAAAAAAAAACMAAAAAAAAAI0AAAAAAAAAAAAAAI0AAAAAAAAAjgAAAAAAAAAAAAAAjgAAAAAAAACPAAAAAAAAAAAAAACPAAAAAAAAAJAAAAAAAAAAAAAAAJAAAAAAAAAAkQAAAAAAAAAAAAAA",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIoAAAAAAAAAigAAAAAAAAAAAAAAAADwvw"
				],
				[
					58,
					1,
					"insert",
					{
						"characters": " things"
					},
					"BwAAAJEAAAAAAAAAkgAAAAAAAAAAAAAAkgAAAAAAAACTAAAAAAAAAAAAAACTAAAAAAAAAJQAAAAAAAAAAAAAAJQAAAAAAAAAlQAAAAAAAAAAAAAAlQAAAAAAAACWAAAAAAAAAAAAAACWAAAAAAAAAJcAAAAAAAAAAAAAAJcAAAAAAAAAmAAAAAAAAAAAAAAA",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJEAAAAAAAAAkQAAAAAAAAAAAAAAAADwvw"
				],
				[
					59,
					1,
					"insert",
					{
						"characters": " here"
					},
					"BQAAAJgAAAAAAAAAmQAAAAAAAAAAAAAAmQAAAAAAAACaAAAAAAAAAAAAAACaAAAAAAAAAJsAAAAAAAAAAAAAAJsAAAAAAAAAnAAAAAAAAAAAAAAAnAAAAAAAAACdAAAAAAAAAAAAAAA",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJgAAAAAAAAAmAAAAAAAAAAAAAAAAADwvw"
				],
				[
					61,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAJ8AAAAAAAAAoAAAAAAAAAAAAAAA",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJ8AAAAAAAAAnwAAAAAAAAD////////vfw"
				]
			]
		},
		{
			"file": "gengar_render_opengl/Cargo.toml",
			"settings":
			{
				"buffer_size": 252,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"insert",
					{
						"characters": "_opengl"
					},
					"BwAAAB8AAAAAAAAAIAAAAAAAAAAAAAAAIAAAAAAAAAAhAAAAAAAAAAAAAAAhAAAAAAAAACIAAAAAAAAAAAAAACIAAAAAAAAAIwAAAAAAAAAAAAAAIwAAAAAAAAAkAAAAAAAAAAAAAAAkAAAAAAAAACUAAAAAAAAAAAAAACUAAAAAAAAAJgAAAAAAAAAAAAAA",
					"HQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAfAAAAAAAAAB8AAAAAAAAAAAAAAAAA8L8"
				],
				[
					8,
					1,
					"paste",
					null,
					"AQAAAL0AAAAAAAAA6wAAAAAAAAAAAAAA",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAmAAAAAAAAACYAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAL0AAAAAAAAAvQAAAAAAAAAAAAAAAADwvw"
				],
				[
					14,
					1,
					"cut",
					null,
					"AQAAAL0AAAAAAAAAvQAAAAAAAAAuAAAAZ2VuZ2FyX2VuZ2luZSA9IHsgcGF0aCA9ICIuLi9nZW5nYXJfZW5naW5lIiB9Cg",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAmAAAAAAAAACYAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAL0AAAAAAAAAvQAAAAAAAAAAAAAAAAAAAA"
				],
				[
					19,
					1,
					"paste",
					null,
					"AQAAAL0AAAAAAAAA6wAAAAAAAAAAAAAA",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAmAAAAAAAAACYAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAL0AAAAAAAAAvQAAAAAAAAAAAAAAAADwvw"
				],
				[
					20,
					1,
					"left_delete",
					null,
					"AQAAAOoAAAAAAAAA6gAAAAAAAAABAAAACg",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAmAAAAAAAAACYAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAOsAAAAAAAAA6wAAAAAAAAAAAAAAAADwvw"
				],
				[
					23,
					1,
					"revert",
					null,
					"EAAAAAAAAAAAAAAAAAAAAAAAAADqAAAAW3BhY2thZ2VdCm5hbWUgPSAiZ2VuZ2FyX3JlbmRlcl9vcGVuZ2wiCnZlcnNpb24gPSAiMC4xLjAiCmVkaXRpb24gPSAiMjAyMSIKCiMgU2VlIG1vcmUga2V5cyBhbmQgdGhlaXIgZGVmaW5pdGlvbnMgYXQgaHR0cHM6Ly9kb2MucnVzdC1sYW5nLm9yZy9jYXJnby9yZWZlcmVuY2UvbWFuaWZlc3QuaHRtbAoKW2RlcGVuZGVuY2llc10KZ2VuZ2FyX2VuZ2luZSA9IHsgcGF0aCA9ICIuLi9nZW5nYXJfZW5naW5lIiB9AAAAAAAAAAD8AAAAAAAAAAAAAAAAAAAAAAAAAPwAAAAAAAAAAAAAAAAAAAAAAAAA/AAAAAAAAAAAAAAAAAAAAAAAAAD8AAAAAAAAAAAAAAAAAAAAAAAAAPwAAAAAAAAAAAAAAAAAAAAAAAAA/AAAAAAAAAAAAAAAAAAAAAAAAAD8AAAAAAAAAAAAAAAAAAAAAAAAAPwAAAAAAAAAAAAAAAAAAAAAAAAA/AAAAAAAAAAAAAAAAAAAAAAAAAD8AAAAAAAAAAAAAAAAAAAAAAAAAPwAAAAAAAAAAAAAAAAAAAAAAAAA/AAAAAAAAAAAAAAAAAAAAAAAAAD8AAAAAAAAAAAAAAAAAAAAAAAAAPwAAAAAAAAAAAAAAAAAAAAAAAAA/AAAAAAAAAAAAAAA",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAmAAAAAAAAACYAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAL0AAAAAAAAAvQAAAAAAAAAAAAAAAAAAAA"
				]
			]
		},
		{
			"file": "gengar_renderapi_opengl_windows/Cargo.toml",
			"redo_stack":
			[
				[
					11,
					1,
					"cut",
					null,
					"AQAAAGYAAAAAAAAAlAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAZgAAAAAAAABmAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAB2AQAAAAAAAHYBAAAAAAAAAAAAAAAA8L8"
				]
			],
			"settings":
			{
				"buffer_size": 425,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					5,
					1,
					"insert",
					{
						"characters": "_open"
					},
					"BQAAAKEAAAAAAAAAogAAAAAAAAAAAAAAogAAAAAAAACjAAAAAAAAAAAAAACjAAAAAAAAAKQAAAAAAAAAAAAAAKQAAAAAAAAApQAAAAAAAAAAAAAApQAAAAAAAACmAAAAAAAAAAAAAAA",
					"HAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAoQAAAAAAAAChAAAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					4,
					"left_delete",
					null,
					"BAAAAKUAAAAAAAAApQAAAAAAAAABAAAAbqQAAAAAAAAApAAAAAAAAAABAAAAZaMAAAAAAAAAowAAAAAAAAABAAAAcKIAAAAAAAAAogAAAAAAAAABAAAAbw",
					"HAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAApgAAAAAAAACmAAAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					1,
					"insert",
					{
						"characters": "openg"
					},
					"BQAAAKIAAAAAAAAAowAAAAAAAAAAAAAAowAAAAAAAACkAAAAAAAAAAAAAACkAAAAAAAAAKUAAAAAAAAAAAAAAKUAAAAAAAAApgAAAAAAAAAAAAAApgAAAAAAAACnAAAAAAAAAAAAAAA",
					"HAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAogAAAAAAAACiAAAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					1,
					"left_delete",
					null,
					"AQAAAKYAAAAAAAAApgAAAAAAAAABAAAAZw",
					"HAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAApwAAAAAAAACnAAAAAAAAAAAAAAAAAPC/"
				],
				[
					9,
					1,
					"insert",
					{
						"characters": "gl"
					},
					"AgAAAKYAAAAAAAAApwAAAAAAAAAAAAAApwAAAAAAAACoAAAAAAAAAAAAAAA",
					"HAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAApgAAAAAAAACmAAAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": "_opengl"
					},
					"BwAAAMUAAAAAAAAAxgAAAAAAAAAAAAAAxgAAAAAAAADHAAAAAAAAAAAAAADHAAAAAAAAAMgAAAAAAAAAAAAAAMgAAAAAAAAAyQAAAAAAAAAAAAAAyQAAAAAAAADKAAAAAAAAAAAAAADKAAAAAAAAAMsAAAAAAAAAAAAAAMsAAAAAAAAAzAAAAAAAAAAAAAAA",
					"HAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAxQAAAAAAAADFAAAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAM8AAAAAAAAA0AAAAAAAAAAAAAAA0AAAAAAAAADRAAAAAAAAAAAAAAA",
					"HAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAzwAAAAAAAADPAAAAAAAAAP///////+9/"
				],
				[
					20,
					1,
					"paste",
					null,
					"AQAAANEAAAAAAAAAmQEAAAAAAAAAAAAA",
					"HAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA0QAAAAAAAADRAAAAAAAAAAAAAAAAAPC/"
				],
				[
					32,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAM8AAAAAAAAA0AAAAAAAAAAAAAAA",
					"HAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAzwAAAAAAAADPAAAAAAAAAP///////+9/"
				],
				[
					33,
					1,
					"paste",
					null,
					"AQAAANAAAAAAAAAA3AAAAAAAAAAAAAAA",
					"HAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA0AAAAAAAAADQAAAAAAAAAAAAAAAAAPC/"
				],
				[
					4,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAANwAAAAAAAAA3QAAAAAAAAAAAAAA",
					"HAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANwAAAAAAAAA3AAAAAAAAAAAAAAAAADwvwEAAAABAAAA3AAAAAAAAADcAAAAAAAAAAAAAAAAgFVA"
				],
				[
					5,
					1,
					"paste",
					null,
					"AQAAAN0AAAAAAAAA6gAAAAAAAAAAAAAA",
					"HAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAN0AAAAAAAAA3QAAAAAAAAAAAAAAAADwvwEAAAABAAAA3QAAAAAAAADdAAAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAALQBAAAAAAAAtQEAAAAAAAAAAAAAtQEAAAAAAAC2AQAAAAAAAAAAAAA",
					"HAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALQBAAAAAAAAtAEAAAAAAAAAAAAAAIBXQAEAAAABAAAA6gAAAAAAAADqAAAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					1,
					"paste",
					null,
					"AQAAALYBAAAAAAAA4gEAAAAAAAAAAAAA",
					"HAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALYBAAAAAAAAtgEAAAAAAAAAAAAAAADwvwEAAAABAAAA6gAAAAAAAADqAAAAAAAAAAAAAAAAAPC/"
				],
				[
					3,
					1,
					"cut",
					null,
					"AQAAAN0AAAAAAAAA3QAAAAAAAAAOAAAAZ2wgPSAiMC4xNC4wIgo",
					"FAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4gEAAAAAAADiAQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					22,
					1,
					"revert",
					null,
					"CwAAAAAAAAAAAAAAAAAAAAAAAADUAQAAW3BhY2thZ2VdCm5hbWUgPSAiZ2VuZ2FyX3JlbmRlcmFwaV9vcGVuZ2xfd2luZG93cyIKdmVyc2lvbiA9ICIwLjEuMCIKZWRpdGlvbiA9ICIyMDIxIgoKW2RlcGVuZGVuY2llc10KZ2VuZ2FyX2VuZ2luZSA9IHsgcGF0aCA9ICIuLi9nZW5nYXJfZW5naW5lIiB9Cmdlbmdhcl9yZW5kZXJfb3BlbmdsID0geyBwYXRoID0gIi4uL2dlbmdhcl9yZW5kZXJfb3BlbmdsIiB9CmxpYmMgPSAiMC4yIgoKW2RlcGVuZGVuY2llcy53aW5kb3dzXQp2ZXJzaW9uID0gIjAuNTIiCmZlYXR1cmVzID0gWwogICAgIldpbjMyX0dyYXBoaWNzX0dkaSIsCiAgICAiV2luMzJfU3lzdGVtX0xpYnJhcnlMb2FkZXIiLAogICAgIldpbjMyX1VJX1dpbmRvd3NBbmRNZXNzYWdpbmciLAogICAgIldpbjMyX0ZvdW5kYXRpb24iLAoJIldpbjMyX0dyYXBoaWNzX09wZW5HTCIsCl0KCltidWlsZC1kZXBlbmRlbmNpZXNdCmdsX2dlbmVyYXRvciA9ICIwLjE0LjAiAAAAAAAAAACmAQAAAAAAAAAAAAAAAAAAAAAAAKYBAAAAAAAAAAAAAAAAAAAAAAAApgEAAAAAAAAAAAAAAAAAAAAAAACmAQAAAAAAAAAAAAAAAAAAAAAAAKYBAAAAAAAAAAAAAAAAAAAAAAAApgEAAAAAAAAAAAAAAAAAAAAAAACmAQAAAAAAAAAAAAAAAAAAAAAAAKYBAAAAAAAAAAAAAAAAAAAAAAAApgEAAAAAAAAAAAAAAAAAAAAAAACmAQAAAAAAAAAAAAA",
					"FAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA1AEAAAAAAADUAQAAAAAAAAAAAAAAAPC/AQAAAAEAAAC8AQAAAAAAALwBAAAAAAAAAAAAAAAA8L8"
				],
				[
					1,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAKYBAAAAAAAAqQEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAApgEAAAAAAACmAQAAAAAAAAAAAAAAAPC/AQAAAAEAAACkAQAAAAAAAKQBAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"contents": "#![allow(unused_imports, unused_variables, unused_mut)]\n\nuse gl_generator::{Api, Fallbacks, GlobalGenerator, Profile, Registry};\nuse std::env;\nuse std::fs::File;\nuse std::path::Path;\n\nfn main() {\n    let dest = env::var(\"OUT_DIR\").unwrap();\n    let mut file = File::create(&Path::new(&dest).join(\"bindings.rs\")).unwrap();\n\n    Registry::new(Api::Gl, (3, 3), Profile::Core, Fallbacks::All, [])\n        .write_bindings(GlobalGenerator, &mut file)\n        .unwrap();\n}\n",
			"file": "gengar_renderapi_opengl_windows/build.rs",
			"file_size": 481,
			"file_write_time": 133661658559591001,
			"redo_stack":
			[
				[
					8,
					1,
					"left_delete",
					null,
					"AQAAAGQBAAAAAAAAZQEAAAAAAAAAAAAA",
					"DAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGQBAAAAAAAAZAEAAAAAAAAAAAAAAADwvw"
				]
			],
			"settings":
			{
				"buffer_size": 466,
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"paste",
					null,
					"AQAAAAAAAAAAAAAAtAEAAAAAAAAAAAAA",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2,
					1,
					"rust_fmt_format_buffer",
					null,
					"AQAAALQBAAAAAAAAtQEAAAAAAAAAAAAA",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC0AQAAAAAAALQBAAAAAAAAAAAAAAAA8L8"
				],
				[
					4,
					2,
					"cut",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAbAAAAZXh0ZXJuIGNyYXRlIGdsX2dlbmVyYXRvcjsKAAAAAAAAAAAAAAAAAAAAAAEAAAAK",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
				],
				[
					9,
					1,
					"insert",
					{
						"characters": "\n/*"
					},
					"BAAAAIoAAAAAAAAAiwAAAAAAAAAAAAAAiwAAAAAAAACPAAAAAAAAAAAAAACPAAAAAAAAAJAAAAAAAAAAAAAAAJAAAAAAAAAAkQAAAAAAAAAAAAAA",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACKAAAAAAAAAIoAAAAAAAAA////////738"
				],
				[
					12,
					1,
					"insert",
					{
						"characters": "\n*/"
					},
					"AwAAAIsBAAAAAAAAjAEAAAAAAAAAAAAAjAEAAAAAAACNAQAAAAAAAAAAAACNAQAAAAAAAI4BAAAAAAAAAAAAAA",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACLAQAAAAAAAIsBAAAAAAAAAAAAAAAAAAA"
				],
				[
					13,
					3,
					"left_delete",
					null,
					"AwAAAI0BAAAAAAAAjQEAAAAAAAABAAAAL4wBAAAAAAAAjAEAAAAAAAABAAAAKosBAAAAAAAAiwEAAAAAAAABAAAACg",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACOAQAAAAAAAI4BAAAAAAAAAAAAAAAA8L8"
				],
				[
					15,
					1,
					"insert",
					{
						"characters": "\n*/s"
					},
					"BQAAAJ0BAAAAAAAAngEAAAAAAAAAAAAAngEAAAAAAACmAQAAAAAAAAAAAACmAQAAAAAAAKcBAAAAAAAAAAAAAKcBAAAAAAAAqAEAAAAAAAAAAAAAqAEAAAAAAACpAQAAAAAAAAAAAAA",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACdAQAAAAAAAJ0BAAAAAAAA////////738"
				],
				[
					16,
					1,
					"insert_completion",
					{
						"completion": "std",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "std"
					},
					"AgAAAKgBAAAAAAAAqAEAAAAAAAABAAAAc6gBAAAAAAAAqwEAAAAAAAAAAAAA",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACpAQAAAAAAAKkBAAAAAAAAAAAAAAAA8L8"
				],
				[
					17,
					3,
					"left_delete",
					null,
					"AwAAAKoBAAAAAAAAqgEAAAAAAAABAAAAZKkBAAAAAAAAqQEAAAAAAAABAAAAdKgBAAAAAAAAqAEAAAAAAAABAAAAcw",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACrAQAAAAAAAKsBAAAAAAAAAAAAAAAA8L8"
				],
				[
					18,
					1,
					"insert",
					{
						"characters": "\nprintln!"
					},
					"CgAAAKgBAAAAAAAAqQEAAAAAAAAAAAAAqQEAAAAAAACxAQAAAAAAAAAAAACxAQAAAAAAALIBAAAAAAAAAAAAALIBAAAAAAAAswEAAAAAAAAAAAAAswEAAAAAAAC0AQAAAAAAAAAAAAC0AQAAAAAAALUBAAAAAAAAAAAAALUBAAAAAAAAtgEAAAAAAAAAAAAAtgEAAAAAAAC3AQAAAAAAAAAAAAC3AQAAAAAAALgBAAAAAAAAAAAAALgBAAAAAAAAuQEAAAAAAAAAAAAA",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACoAQAAAAAAAKgBAAAAAAAAAAAAAAAA8L8"
				],
				[
					19,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAALkBAAAAAAAAuwEAAAAAAAAAAAAA",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC5AQAAAAAAALkBAAAAAAAAAAAAAAAA8L8"
				],
				[
					20,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAALoBAAAAAAAAvAEAAAAAAAAAAAAA",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC6AQAAAAAAALoBAAAAAAAAAAAAAAAA8L8"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": "runnin"
					},
					"BgAAALsBAAAAAAAAvAEAAAAAAAAAAAAAvAEAAAAAAAC9AQAAAAAAAAAAAAC9AQAAAAAAAL4BAAAAAAAAAAAAAL4BAAAAAAAAvwEAAAAAAAAAAAAAvwEAAAAAAADAAQAAAAAAAAAAAADAAQAAAAAAAMEBAAAAAAAAAAAAAA",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC7AQAAAAAAALsBAAAAAAAAAAAAAAAA8L8"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": " buil"
					},
					"BQAAAMEBAAAAAAAAwgEAAAAAAAAAAAAAwgEAAAAAAADDAQAAAAAAAAAAAADDAQAAAAAAAMQBAAAAAAAAAAAAAMQBAAAAAAAAxQEAAAAAAAAAAAAAxQEAAAAAAADGAQAAAAAAAAAAAAA",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADBAQAAAAAAAMEBAAAAAAAAAAAAAAAA8L8"
				],
				[
					23,
					1,
					"insert",
					{
						"characters": " dstuff"
					},
					"BwAAAMYBAAAAAAAAxwEAAAAAAAAAAAAAxwEAAAAAAADIAQAAAAAAAAAAAADIAQAAAAAAAMkBAAAAAAAAAAAAAMkBAAAAAAAAygEAAAAAAAAAAAAAygEAAAAAAADLAQAAAAAAAAAAAADLAQAAAAAAAMwBAAAAAAAAAAAAAMwBAAAAAAAAzQEAAAAAAAAAAAAA",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADGAQAAAAAAAMYBAAAAAAAAAAAAAAAA8L8"
				],
				[
					25,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAM8BAAAAAAAA0AEAAAAAAAAAAAAA",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADPAQAAAAAAAM8BAAAAAAAAAAAAAAAA8L8"
				],
				[
					26,
					1,
					"rust_fmt_format_buffer",
					null,
					"AQAAAK0BAAAAAAAArQEAAAAAAAAEAAAAICAgIA",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADQAQAAAAAAANABAAAAAAAAAAAAAAAA8L8"
				],
				[
					29,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAACAAAAAAAAAAAAAAA",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
				],
				[
					31,
					1,
					"insert",
					{
						"characters": "#"
					},
					"AQAAAAAAAAAAAAAAAQAAAAAAAAAAAAAA",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
				],
				[
					32,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAAEAAAAAAAAAAwAAAAAAAAAAAAAA",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAABAAAAAAAAAAEAAAAAAAAAAAAAAAAA8L8"
				],
				[
					34,
					1,
					"insert",
					{
						"characters": "!"
					},
					"AQAAAAEAAAAAAAAAAgAAAAAAAAAAAAAA",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAABAAAAAAAAAAEAAAAAAAAAAAAAAAAA8L8"
				],
				[
					36,
					1,
					"insert",
					{
						"characters": "allow"
					},
					"BQAAAAMAAAAAAAAABAAAAAAAAAAAAAAABAAAAAAAAAAFAAAAAAAAAAAAAAAFAAAAAAAAAAYAAAAAAAAAAAAAAAYAAAAAAAAABwAAAAAAAAAAAAAABwAAAAAAAAAIAAAAAAAAAAAAAAA",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAADAAAAAAAAAAMAAAAAAAAAAAAAAAAA8L8"
				],
				[
					37,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAAgAAAAAAAAACgAAAAAAAAAAAAAA",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAIAAAAAAAAAAgAAAAAAAAAAAAAAAAA8L8"
				],
				[
					38,
					1,
					"insert",
					{
						"characters": "u"
					},
					"AQAAAAkAAAAAAAAACgAAAAAAAAAAAAAA",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAJAAAAAAAAAAkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					39,
					1,
					"left_delete",
					null,
					"AQAAAAkAAAAAAAAACQAAAAAAAAABAAAAdQ",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAKAAAAAAAAAAoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					40,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAAgAAAAAAAAACAAAAAAAAAABAAAAWwgAAAAAAAAACAAAAAAAAAABAAAAXQ",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAJAAAAAAAAAAkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					41,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAAgAAAAAAAAACgAAAAAAAAAAAAAA",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAIAAAAAAAAAAgAAAAAAAAAAAAAAAAA8L8"
				],
				[
					42,
					1,
					"insert",
					{
						"characters": "unused_impolrts"
					},
					"DwAAAAkAAAAAAAAACgAAAAAAAAAAAAAACgAAAAAAAAALAAAAAAAAAAAAAAALAAAAAAAAAAwAAAAAAAAAAAAAAAwAAAAAAAAADQAAAAAAAAAAAAAADQAAAAAAAAAOAAAAAAAAAAAAAAAOAAAAAAAAAA8AAAAAAAAAAAAAAA8AAAAAAAAAEAAAAAAAAAAAAAAAEAAAAAAAAAARAAAAAAAAAAAAAAARAAAAAAAAABIAAAAAAAAAAAAAABIAAAAAAAAAEwAAAAAAAAAAAAAAEwAAAAAAAAAUAAAAAAAAAAAAAAAUAAAAAAAAABUAAAAAAAAAAAAAABUAAAAAAAAAFgAAAAAAAAAAAAAAFgAAAAAAAAAXAAAAAAAAAAAAAAAXAAAAAAAAABgAAAAAAAAAAAAAAA",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAJAAAAAAAAAAkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					44,
					1,
					"insert",
					{
						"characters": "imports"
					},
					"CAAAABAAAAAAAAAAEQAAAAAAAAAAAAAAEQAAAAAAAAARAAAAAAAAAAgAAABpbXBvbHJ0cxEAAAAAAAAAEgAAAAAAAAAAAAAAEgAAAAAAAAATAAAAAAAAAAAAAAATAAAAAAAAABQAAAAAAAAAAAAAABQAAAAAAAAAFQAAAAAAAAAAAAAAFQAAAAAAAAAWAAAAAAAAAAAAAAAWAAAAAAAAABcAAAAAAAAAAAAAAA",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAYAAAAAAAAABAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					49,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAAOcBAAAAAAAA6AEAAAAAAAAAAAAA6AEAAAAAAADsAQAAAAAAAAAAAADsAQAAAAAAAO0BAAAAAAAAAAAAAO0BAAAAAAAA8QEAAAAAAAAAAAAA6AEAAAAAAADoAQAAAAAAAAQAAAAgICAg",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADnAQAAAAAAAOcBAAAAAAAA////////738"
				],
				[
					50,
					1,
					"paste",
					null,
					"AQAAAO0BAAAAAAAAFQIAAAAAAAAAAAAA",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADtAQAAAAAAAO0BAAAAAAAAAAAAAAAA8L8"
				],
				[
					56,
					1,
					"insert",
					{
						"characters": "testing"
					},
					"CAAAAAoCAAAAAAAACwIAAAAAAAAAAAAACwIAAAAAAAALAgAAAAAAAAMAAABmb28LAgAAAAAAAAwCAAAAAAAAAAAAAAwCAAAAAAAADQIAAAAAAAAAAAAADQIAAAAAAAAOAgAAAAAAAAAAAAAOAgAAAAAAAA8CAAAAAAAAAAAAAA8CAAAAAAAAEAIAAAAAAAAAAAAAEAIAAAAAAAARAgAAAAAAAAAAAAA",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAANAgAAAAAAAAoCAAAAAAAAAAAAAAAA8L8"
				],
				[
					59,
					1,
					"left_delete",
					null,
					"AQAAABcCAAAAAAAAFwIAAAAAAAABAAAAPw",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAYAgAAAAAAABgCAAAAAAAAAAAAAAAA8L8"
				],
				[
					60,
					1,
					"insert",
					{
						"characters": ".unwrap"
					},
					"BwAAABcCAAAAAAAAGAIAAAAAAAAAAAAAGAIAAAAAAAAZAgAAAAAAAAAAAAAZAgAAAAAAABoCAAAAAAAAAAAAABoCAAAAAAAAGwIAAAAAAAAAAAAAGwIAAAAAAAAcAgAAAAAAAAAAAAAcAgAAAAAAAB0CAAAAAAAAAAAAAB0CAAAAAAAAHgIAAAAAAAAAAAAA",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAXAgAAAAAAABcCAAAAAAAAAAAAAAAA8L8"
				],
				[
					61,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAB4CAAAAAAAAIAIAAAAAAAAAAAAA",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAeAgAAAAAAAB4CAAAAAAAAAAAAAAAA8L8"
				],
				[
					64,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAACECAAAAAAAAIgIAAAAAAAAAAAAAIgIAAAAAAAAmAgAAAAAAAAAAAAA",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAhAgAAAAAAACECAAAAAAAA////////738"
				],
				[
					68,
					1,
					"insert",
					{
						"characters": "file.writ\""
					},
					"CgAAACYCAAAAAAAAJwIAAAAAAAAAAAAAJwIAAAAAAAAoAgAAAAAAAAAAAAAoAgAAAAAAACkCAAAAAAAAAAAAACkCAAAAAAAAKgIAAAAAAAAAAAAAKgIAAAAAAAArAgAAAAAAAAAAAAArAgAAAAAAACwCAAAAAAAAAAAAACwCAAAAAAAALQIAAAAAAAAAAAAALQIAAAAAAAAuAgAAAAAAAAAAAAAuAgAAAAAAAC8CAAAAAAAAAAAAAC8CAAAAAAAAMAIAAAAAAAAAAAAA",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAmAgAAAAAAACYCAAAAAAAAAAAAAADAXEA"
				],
				[
					69,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAADACAAAAAAAAMgIAAAAAAAAAAAAA",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAwAgAAAAAAADACAAAAAAAAAAAAAAAA8L8"
				],
				[
					70,
					1,
					"insert",
					{
						"characters": "\""
					},
					"AQAAADECAAAAAAAAMgIAAAAAAAAAAAAA",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAxAgAAAAAAADECAAAAAAAAAAAAAAAA8L8"
				],
				[
					71,
					1,
					"left_delete",
					null,
					"AQAAADECAAAAAAAAMQIAAAAAAAABAAAAIg",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAyAgAAAAAAADICAAAAAAAAAAAAAAAA8L8"
				],
				[
					72,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAADACAAAAAAAAMAIAAAAAAAABAAAAKDACAAAAAAAAMAIAAAAAAAABAAAAKQ",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAxAgAAAAAAADECAAAAAAAAAAAAAAAA8L8"
				],
				[
					73,
					1,
					"left_delete",
					null,
					"AQAAAC8CAAAAAAAALwIAAAAAAAABAAAAIg",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAwAgAAAAAAADACAAAAAAAAAAAAAAAA8L8"
				],
				[
					74,
					1,
					"insert",
					{
						"characters": "e\""
					},
					"AgAAAC8CAAAAAAAAMAIAAAAAAAAAAAAAMAIAAAAAAAAxAgAAAAAAAAAAAAA",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAvAgAAAAAAAC8CAAAAAAAAAAAAAAAA8L8"
				],
				[
					75,
					1,
					"left_delete",
					null,
					"AQAAADACAAAAAAAAMAIAAAAAAAABAAAAIg",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAxAgAAAAAAADECAAAAAAAAAAAAAAAA8L8"
				],
				[
					76,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAADACAAAAAAAAMgIAAAAAAAAAAAAA",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAwAgAAAAAAADACAAAAAAAAAAAAAAAA8L8"
				],
				[
					77,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAADECAAAAAAAAMwIAAAAAAAAAAAAA",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAxAgAAAAAAADECAAAAAAAAAAAAAAAA8L8"
				],
				[
					78,
					1,
					"insert",
					{
						"characters": "stuff"
					},
					"BQAAADICAAAAAAAAMwIAAAAAAAAAAAAAMwIAAAAAAAA0AgAAAAAAAAAAAAA0AgAAAAAAADUCAAAAAAAAAAAAADUCAAAAAAAANgIAAAAAAAAAAAAANgIAAAAAAAA3AgAAAAAAAAAAAAA",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAyAgAAAAAAADICAAAAAAAAAAAAAAAA8L8"
				],
				[
					79,
					1,
					"insert",
					{
						"characters": " here!"
					},
					"BgAAADcCAAAAAAAAOAIAAAAAAAAAAAAAOAIAAAAAAAA5AgAAAAAAAAAAAAA5AgAAAAAAADoCAAAAAAAAAAAAADoCAAAAAAAAOwIAAAAAAAAAAAAAOwIAAAAAAAA8AgAAAAAAAAAAAAA8AgAAAAAAAD0CAAAAAAAAAAAAAA",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA3AgAAAAAAADcCAAAAAAAAAAAAAAAA8L8"
				],
				[
					81,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAD8CAAAAAAAAQAIAAAAAAAAAAAAA",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA/AgAAAAAAAD8CAAAAAAAA////////738"
				],
				[
					84,
					1,
					"insert",
					{
						"characters": "_all"
					},
					"BAAAADACAAAAAAAAMQIAAAAAAAAAAAAAMQIAAAAAAAAyAgAAAAAAAAAAAAAyAgAAAAAAADMCAAAAAAAAAAAAADMCAAAAAAAANAIAAAAAAAAAAAAA",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAwAgAAAAAAADACAAAAAAAAAAAAAAAA8L8"
				],
				[
					88,
					1,
					"insert",
					{
						"characters": "b"
					},
					"AQAAADUCAAAAAAAANgIAAAAAAAAAAAAA",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA1AgAAAAAAADUCAAAAAAAAAAAAAAAA8L8"
				],
				[
					96,
					1,
					"insert",
					{
						"characters": "std::"
					},
					"BQAAAPwBAAAAAAAA/QEAAAAAAAAAAAAA/QEAAAAAAAD+AQAAAAAAAAAAAAD+AQAAAAAAAP8BAAAAAAAAAAAAAP8BAAAAAAAAAAIAAAAAAAAAAAAAAAIAAAAAAAABAgAAAAAAAAAAAAA",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD8AQAAAAAAAPwBAAAAAAAAAAAAAAAA8L8"
				],
				[
					99,
					1,
					"left_delete",
					null,
					"AQAAAPwBAAAAAAAA/AEAAAAAAAAFAAAAc3RkOjo",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAABAgAAAAAAAPwBAAAAAAAAAAAAAAAA8L8"
				],
				[
					103,
					2,
					"swap_line_up",
					null,
					"BAAAANoAAAAAAAAA2gAAAAAAAABRAAAAICAgIGxldCBtdXQgZmlsZSA9IEZpbGU6OmNyZWF0ZSgmUGF0aDo6bmV3KCZkZXN0KS5qb2luKCJiaW5kaW5ncy5ycyIpKS51bndyYXAoKTsKrQAAAAAAAAD+AAAAAAAAAAAAAACtAAAAAAAAAK0AAAAAAAAAUQAAACAgICBsZXQgbXV0IGZpbGUgPSBGaWxlOjpjcmVhdGUoJlBhdGg6Om5ldygmZGVzdCkuam9pbigiYmluZGluZ3MucnMiKSkudW53cmFwKCk7CqYAAAAAAAAA9wAAAAAAAAAAAAAA",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADtAAAAAAAAAO0AAAAAAAAAAAAAAAAgYUA"
				],
				[
					108,
					3,
					"cut",
					null,
					"AwAAAOgBAAAAAAAA6AEAAAAAAAABAAAACugBAAAAAAAA6AEAAAAAAAA5AAAAICAgIGxldCBtdXQgZmlsZSA9IEZpbGU6OmNyZWF0ZSgidGVzdGluZy50eHQiKS51bndyYXAoKTsK6AEAAAAAAADoAQAAAAAAACQAAAAgICAgZmlsZS53cml0ZV9hbGwoYiJzdHVmZiBoZXJlISIpOwo",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADoAQAAAAAAAOgBAAAAAAAAAAAAAAAAAAA"
				],
				[
					112,
					2,
					"swap_line_up",
					null,
					"BAAAAP4AAAAAAAAA/gAAAAAAAAAtAAAAICAgIGxldCBkZXN0ID0gZW52Ojp2YXIoIk9VVF9ESVIiKS51bndyYXAoKTsK9wAAAAAAAAAkAQAAAAAAAAAAAAD3AAAAAAAAAPcAAAAAAAAALQAAACAgICBsZXQgZGVzdCA9IGVudjo6dmFyKCJPVVRfRElSIikudW53cmFwKCk7CqYAAAAAAAAA0wAAAAAAAAAAAAAA",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAqAQAAAAAAACoBAAAAAAAAAAAAAACgdUA"
				],
				[
					119,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAABcAAAAAAAAAGAAAAAAAAAAAAAAA",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAXAAAAAAAAABcAAAAAAAAAAAAAAAAA8L8"
				],
				[
					120,
					1,
					"insert",
					{
						"characters": " unused"
					},
					"BwAAABgAAAAAAAAAGQAAAAAAAAAAAAAAGQAAAAAAAAAaAAAAAAAAAAAAAAAaAAAAAAAAABsAAAAAAAAAAAAAABsAAAAAAAAAHAAAAAAAAAAAAAAAHAAAAAAAAAAdAAAAAAAAAAAAAAAdAAAAAAAAAB4AAAAAAAAAAAAAAB4AAAAAAAAAHwAAAAAAAAAAAAAA",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAYAAAAAAAAABgAAAAAAAAAAAAAAAAA8L8"
				],
				[
					121,
					1,
					"insert",
					{
						"characters": "_variables"
					},
					"CgAAAB8AAAAAAAAAIAAAAAAAAAAAAAAAIAAAAAAAAAAhAAAAAAAAAAAAAAAhAAAAAAAAACIAAAAAAAAAAAAAACIAAAAAAAAAIwAAAAAAAAAAAAAAIwAAAAAAAAAkAAAAAAAAAAAAAAAkAAAAAAAAACUAAAAAAAAAAAAAACUAAAAAAAAAJgAAAAAAAAAAAAAAJgAAAAAAAAAnAAAAAAAAAAAAAAAnAAAAAAAAACgAAAAAAAAAAAAAACgAAAAAAAAAKQAAAAAAAAAAAAAA",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAfAAAAAAAAAB8AAAAAAAAAAAAAAAAA8L8"
				],
				[
					123,
					1,
					"insert",
					{
						"characters": "b"
					},
					"AQAAACkAAAAAAAAAKgAAAAAAAAAAAAAA",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAApAAAAAAAAACkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					124,
					1,
					"left_delete",
					null,
					"AQAAACkAAAAAAAAAKQAAAAAAAAABAAAAYg",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAqAAAAAAAAACoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					126,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAACkAAAAAAAAAKgAAAAAAAAAAAAAA",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAApAAAAAAAAACkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					127,
					1,
					"insert",
					{
						"characters": " unused_mut"
					},
					"CwAAACoAAAAAAAAAKwAAAAAAAAAAAAAAKwAAAAAAAAAsAAAAAAAAAAAAAAAsAAAAAAAAAC0AAAAAAAAAAAAAAC0AAAAAAAAALgAAAAAAAAAAAAAALgAAAAAAAAAvAAAAAAAAAAAAAAAvAAAAAAAAADAAAAAAAAAAAAAAADAAAAAAAAAAMQAAAAAAAAAAAAAAMQAAAAAAAAAyAAAAAAAAAAAAAAAyAAAAAAAAADMAAAAAAAAAAAAAADMAAAAAAAAANAAAAAAAAAAAAAAANAAAAAAAAAA1AAAAAAAAAAAAAAA",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAqAAAAAAAAACoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					155,
					1,
					"cut",
					null,
					"AQAAAEIBAAAAAAAAQgEAAAAAAAAHAAAAICAgIC8qCg",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABCAQAAAAAAAEIBAAAAAAAAAAAAAAAAAAA"
				],
				[
					157,
					1,
					"cut",
					null,
					"AQAAANABAAAAAAAA0AEAAAAAAAALAAAAICAgICAgICAqLwo",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADQAQAAAAAAANABAAAAAAAAAAAAAAAAAAA"
				],
				[
					161,
					1,
					"cut",
					null,
					"AQAAANABAAAAAAAA0AEAAAAAAAAkAAAAICAgIHByaW50bG4hKCJydW5uaW4gYnVpbCBkc3R1ZmYiKTsK",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADQAQAAAAAAANABAAAAAAAAAAAAAAAAAAA"
				],
				[
					172,
					1,
					"left_delete",
					null,
					"AQAAAF8BAAAAAAAAXwEAAAAAAAABAAAANA",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABgAQAAAAAAAGABAAAAAAAAAAAAAAAA8L8"
				],
				[
					173,
					1,
					"insert",
					{
						"characters": "3"
					},
					"AQAAAF8BAAAAAAAAYAEAAAAAAAAAAAAA",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABfAQAAAAAAAF8BAAAAAAAAAAAAAAAA8L8"
				],
				[
					175,
					1,
					"left_delete",
					null,
					"AQAAAGIBAAAAAAAAYgEAAAAAAAABAAAANg",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABjAQAAAAAAAGMBAAAAAAAAAAAAAAAA8L8"
				],
				[
					176,
					1,
					"insert",
					{
						"characters": "3"
					},
					"AQAAAGIBAAAAAAAAYwEAAAAAAAAAAAAA",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABiAQAAAAAAAGIBAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"contents": "\n        mod __gl_imports {\n            pub use std::mem;\n            pub use std::os::raw;\n        }\n    \n\n        #[inline(never)]\n        fn metaloadfn(loadfn: &mut dyn FnMut(&'static str) -> *const __gl_imports::raw::c_void,\n                      symbol: &'static str,\n                      fallbacks: &[&'static str]) -> *const __gl_imports::raw::c_void {\n            let mut ptr = loadfn(symbol);\n            if ptr.is_null() {\n                for &sym in fallbacks {\n                    ptr = loadfn(sym);\n                    if !ptr.is_null() { break; }\n                }\n            }\n            ptr\n        }\n    \n\n        pub mod types {\n            #![allow(non_camel_case_types, non_snake_case, dead_code, missing_copy_implementations)]\n    \n// Common types from OpenGL 1.1\npub type GLenum = super::__gl_imports::raw::c_uint;\npub type GLboolean = super::__gl_imports::raw::c_uchar;\npub type GLbitfield = super::__gl_imports::raw::c_uint;\npub type GLvoid = super::__gl_imports::raw::c_void;\npub type GLbyte = super::__gl_imports::raw::c_char;\npub type GLshort = super::__gl_imports::raw::c_short;\npub type GLint = super::__gl_imports::raw::c_int;\npub type GLclampx = super::__gl_imports::raw::c_int;\npub type GLubyte = super::__gl_imports::raw::c_uchar;\npub type GLushort = super::__gl_imports::raw::c_ushort;\npub type GLuint = super::__gl_imports::raw::c_uint;\npub type GLsizei = super::__gl_imports::raw::c_int;\npub type GLfloat = super::__gl_imports::raw::c_float;\npub type GLclampf = super::__gl_imports::raw::c_float;\npub type GLdouble = super::__gl_imports::raw::c_double;\npub type GLclampd = super::__gl_imports::raw::c_double;\npub type GLeglImageOES = *const super::__gl_imports::raw::c_void;\npub type GLchar = super::__gl_imports::raw::c_char;\npub type GLcharARB = super::__gl_imports::raw::c_char;\n\n#[cfg(target_os = \"macos\")]\npub type GLhandleARB = *const super::__gl_imports::raw::c_void;\n#[cfg(not(target_os = \"macos\"))]\npub type GLhandleARB = super::__gl_imports::raw::c_uint;\n\npub type GLhalfARB = super::__gl_imports::raw::c_ushort;\npub type GLhalf = super::__gl_imports::raw::c_ushort;\n\n// Must be 32 bits\npub type GLfixed = GLint;\n\npub type GLintptr = isize;\npub type GLsizeiptr = isize;\npub type GLint64 = i64;\npub type GLuint64 = u64;\npub type GLintptrARB = isize;\npub type GLsizeiptrARB = isize;\npub type GLint64EXT = i64;\npub type GLuint64EXT = u64;\n\npub enum __GLsync {}\npub type GLsync = *const __GLsync;\n\n// compatible with OpenCL cl_context\npub enum _cl_context {}\npub enum _cl_event {}\n\npub type GLDEBUGPROC = Option<extern \"system\" fn(source: GLenum,\n                                                 gltype: GLenum,\n                                                 id: GLuint,\n                                                 severity: GLenum,\n                                                 length: GLsizei,\n                                                 message: *const GLchar,\n                                                 userParam: *mut super::__gl_imports::raw::c_void)>;\npub type GLDEBUGPROCARB = Option<extern \"system\" fn(source: GLenum,\n                                                    gltype: GLenum,\n                                                    id: GLuint,\n                                                    severity: GLenum,\n                                                    length: GLsizei,\n                                                    message: *const GLchar,\n                                                    userParam: *mut super::__gl_imports::raw::c_void)>;\npub type GLDEBUGPROCKHR = Option<extern \"system\" fn(source: GLenum,\n                                                    gltype: GLenum,\n                                                    id: GLuint,\n                                                    severity: GLenum,\n                                                    length: GLsizei,\n                                                    message: *const GLchar,\n                                                    userParam: *mut super::__gl_imports::raw::c_void)>;\n\n// GLES 1 types\n// \"pub type GLclampx = i32;\",\n\n// GLES 1/2 types (tagged for GLES 1)\n// \"pub type GLbyte = i8;\",\n// \"pub type GLubyte = u8;\",\n// \"pub type GLfloat = GLfloat;\",\n// \"pub type GLclampf = GLfloat;\",\n// \"pub type GLfixed = i32;\",\n// \"pub type GLint64 = i64;\",\n// \"pub type GLuint64 = u64;\",\n// \"pub type GLintptr = intptr_t;\",\n// \"pub type GLsizeiptr = ssize_t;\",\n\n// GLES 1/2 types (tagged for GLES 2 - attribute syntax is limited)\n// \"pub type GLbyte = i8;\",\n// \"pub type GLubyte = u8;\",\n// \"pub type GLfloat = GLfloat;\",\n// \"pub type GLclampf = GLfloat;\",\n// \"pub type GLfixed = i32;\",\n// \"pub type GLint64 = i64;\",\n// \"pub type GLuint64 = u64;\",\n// \"pub type GLint64EXT = i64;\",\n// \"pub type GLuint64EXT = u64;\",\n// \"pub type GLintptr = intptr_t;\",\n// \"pub type GLsizeiptr = ssize_t;\",\n\n// GLES 2 types (none currently)\n\n// Vendor extension types\npub type GLDEBUGPROCAMD = Option<extern \"system\" fn(id: GLuint,\n                                                    category: GLenum,\n                                                    severity: GLenum,\n                                                    length: GLsizei,\n                                                    message: *const GLchar,\n                                                    userParam: *mut super::__gl_imports::raw::c_void)>;\npub type GLhalfNV = super::__gl_imports::raw::c_ushort;\npub type GLvdpauSurfaceNV = GLintptr;\n\n\n        }\n    \n#[allow(dead_code, non_upper_case_globals)] pub const ACTIVE_ATTRIBUTES: types::GLenum = 0x8B89;\n#[allow(dead_code, non_upper_case_globals)] pub const ACTIVE_ATTRIBUTE_MAX_LENGTH: types::GLenum = 0x8B8A;\n#[allow(dead_code, non_upper_case_globals)] pub const ACTIVE_TEXTURE: types::GLenum = 0x84E0;\n#[allow(dead_code, non_upper_case_globals)] pub const ACTIVE_UNIFORMS: types::GLenum = 0x8B86;\n#[allow(dead_code, non_upper_case_globals)] pub const ACTIVE_UNIFORM_BLOCKS: types::GLenum = 0x8A36;\n#[allow(dead_code, non_upper_case_globals)] pub const ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH: types::GLenum = 0x8A35;\n#[allow(dead_code, non_upper_case_globals)] pub const ACTIVE_UNIFORM_MAX_LENGTH: types::GLenum = 0x8B87;\n#[allow(dead_code, non_upper_case_globals)] pub const ALIASED_LINE_WIDTH_RANGE: types::GLenum = 0x846E;\n#[allow(dead_code, non_upper_case_globals)] pub const ALPHA: types::GLenum = 0x1906;\n#[allow(dead_code, non_upper_case_globals)] pub const ALREADY_SIGNALED: types::GLenum = 0x911A;\n#[allow(dead_code, non_upper_case_globals)] pub const ALWAYS: types::GLenum = 0x0207;\n#[allow(dead_code, non_upper_case_globals)] pub const AND: types::GLenum = 0x1501;\n#[allow(dead_code, non_upper_case_globals)] pub const AND_INVERTED: types::GLenum = 0x1504;\n#[allow(dead_code, non_upper_case_globals)] pub const AND_REVERSE: types::GLenum = 0x1502;\n#[allow(dead_code, non_upper_case_globals)] pub const ANY_SAMPLES_PASSED: types::GLenum = 0x8C2F;\n#[allow(dead_code, non_upper_case_globals)] pub const ARRAY_BUFFER: types::GLenum = 0x8892;\n#[allow(dead_code, non_upper_case_globals)] pub const ARRAY_BUFFER_BINDING: types::GLenum = 0x8894;\n#[allow(dead_code, non_upper_case_globals)] pub const ATTACHED_SHADERS: types::GLenum = 0x8B85;\n#[allow(dead_code, non_upper_case_globals)] pub const BACK: types::GLenum = 0x0405;\n#[allow(dead_code, non_upper_case_globals)] pub const BACK_LEFT: types::GLenum = 0x0402;\n#[allow(dead_code, non_upper_case_globals)] pub const BACK_RIGHT: types::GLenum = 0x0403;\n#[allow(dead_code, non_upper_case_globals)] pub const BGR: types::GLenum = 0x80E0;\n#[allow(dead_code, non_upper_case_globals)] pub const BGRA: types::GLenum = 0x80E1;\n#[allow(dead_code, non_upper_case_globals)] pub const BGRA_INTEGER: types::GLenum = 0x8D9B;\n#[allow(dead_code, non_upper_case_globals)] pub const BGR_INTEGER: types::GLenum = 0x8D9A;\n#[allow(dead_code, non_upper_case_globals)] pub const BLEND: types::GLenum = 0x0BE2;\n#[allow(dead_code, non_upper_case_globals)] pub const BLEND_COLOR: types::GLenum = 0x8005;\n#[allow(dead_code, non_upper_case_globals)] pub const BLEND_DST: types::GLenum = 0x0BE0;\n#[allow(dead_code, non_upper_case_globals)] pub const BLEND_DST_ALPHA: types::GLenum = 0x80CA;\n#[allow(dead_code, non_upper_case_globals)] pub const BLEND_DST_RGB: types::GLenum = 0x80C8;\n#[allow(dead_code, non_upper_case_globals)] pub const BLEND_EQUATION: types::GLenum = 0x8009;\n#[allow(dead_code, non_upper_case_globals)] pub const BLEND_EQUATION_ALPHA: types::GLenum = 0x883D;\n#[allow(dead_code, non_upper_case_globals)] pub const BLEND_EQUATION_RGB: types::GLenum = 0x8009;\n#[allow(dead_code, non_upper_case_globals)] pub const BLEND_SRC: types::GLenum = 0x0BE1;\n#[allow(dead_code, non_upper_case_globals)] pub const BLEND_SRC_ALPHA: types::GLenum = 0x80CB;\n#[allow(dead_code, non_upper_case_globals)] pub const BLEND_SRC_RGB: types::GLenum = 0x80C9;\n#[allow(dead_code, non_upper_case_globals)] pub const BLUE: types::GLenum = 0x1905;\n#[allow(dead_code, non_upper_case_globals)] pub const BLUE_INTEGER: types::GLenum = 0x8D96;\n#[allow(dead_code, non_upper_case_globals)] pub const BOOL: types::GLenum = 0x8B56;\n#[allow(dead_code, non_upper_case_globals)] pub const BOOL_VEC2: types::GLenum = 0x8B57;\n#[allow(dead_code, non_upper_case_globals)] pub const BOOL_VEC3: types::GLenum = 0x8B58;\n#[allow(dead_code, non_upper_case_globals)] pub const BOOL_VEC4: types::GLenum = 0x8B59;\n#[allow(dead_code, non_upper_case_globals)] pub const BUFFER_ACCESS: types::GLenum = 0x88BB;\n#[allow(dead_code, non_upper_case_globals)] pub const BUFFER_ACCESS_FLAGS: types::GLenum = 0x911F;\n#[allow(dead_code, non_upper_case_globals)] pub const BUFFER_MAPPED: types::GLenum = 0x88BC;\n#[allow(dead_code, non_upper_case_globals)] pub const BUFFER_MAP_LENGTH: types::GLenum = 0x9120;\n#[allow(dead_code, non_upper_case_globals)] pub const BUFFER_MAP_OFFSET: types::GLenum = 0x9121;\n#[allow(dead_code, non_upper_case_globals)] pub const BUFFER_MAP_POINTER: types::GLenum = 0x88BD;\n#[allow(dead_code, non_upper_case_globals)] pub const BUFFER_SIZE: types::GLenum = 0x8764;\n#[allow(dead_code, non_upper_case_globals)] pub const BUFFER_USAGE: types::GLenum = 0x8765;\n#[allow(dead_code, non_upper_case_globals)] pub const BYTE: types::GLenum = 0x1400;\n#[allow(dead_code, non_upper_case_globals)] pub const CCW: types::GLenum = 0x0901;\n#[allow(dead_code, non_upper_case_globals)] pub const CLAMP_READ_COLOR: types::GLenum = 0x891C;\n#[allow(dead_code, non_upper_case_globals)] pub const CLAMP_TO_BORDER: types::GLenum = 0x812D;\n#[allow(dead_code, non_upper_case_globals)] pub const CLAMP_TO_EDGE: types::GLenum = 0x812F;\n#[allow(dead_code, non_upper_case_globals)] pub const CLEAR: types::GLenum = 0x1500;\n#[allow(dead_code, non_upper_case_globals)] pub const CLIP_DISTANCE0: types::GLenum = 0x3000;\n#[allow(dead_code, non_upper_case_globals)] pub const CLIP_DISTANCE1: types::GLenum = 0x3001;\n#[allow(dead_code, non_upper_case_globals)] pub const CLIP_DISTANCE2: types::GLenum = 0x3002;\n#[allow(dead_code, non_upper_case_globals)] pub const CLIP_DISTANCE3: types::GLenum = 0x3003;\n#[allow(dead_code, non_upper_case_globals)] pub const CLIP_DISTANCE4: types::GLenum = 0x3004;\n#[allow(dead_code, non_upper_case_globals)] pub const CLIP_DISTANCE5: types::GLenum = 0x3005;\n#[allow(dead_code, non_upper_case_globals)] pub const CLIP_DISTANCE6: types::GLenum = 0x3006;\n#[allow(dead_code, non_upper_case_globals)] pub const CLIP_DISTANCE7: types::GLenum = 0x3007;\n#[allow(dead_code, non_upper_case_globals)] pub const COLOR: types::GLenum = 0x1800;\n#[allow(dead_code, non_upper_case_globals)] pub const COLOR_ATTACHMENT0: types::GLenum = 0x8CE0;\n#[allow(dead_code, non_upper_case_globals)] pub const COLOR_ATTACHMENT1: types::GLenum = 0x8CE1;\n#[allow(dead_code, non_upper_case_globals)] pub const COLOR_ATTACHMENT10: types::GLenum = 0x8CEA;\n#[allow(dead_code, non_upper_case_globals)] pub const COLOR_ATTACHMENT11: types::GLenum = 0x8CEB;\n#[allow(dead_code, non_upper_case_globals)] pub const COLOR_ATTACHMENT12: types::GLenum = 0x8CEC;\n#[allow(dead_code, non_upper_case_globals)] pub const COLOR_ATTACHMENT13: types::GLenum = 0x8CED;\n#[allow(dead_code, non_upper_case_globals)] pub const COLOR_ATTACHMENT14: types::GLenum = 0x8CEE;\n#[allow(dead_code, non_upper_case_globals)] pub const COLOR_ATTACHMENT15: types::GLenum = 0x8CEF;\n#[allow(dead_code, non_upper_case_globals)] pub const COLOR_ATTACHMENT16: types::GLenum = 0x8CF0;\n#[allow(dead_code, non_upper_case_globals)] pub const COLOR_ATTACHMENT17: types::GLenum = 0x8CF1;\n#[allow(dead_code, non_upper_case_globals)] pub const COLOR_ATTACHMENT18: types::GLenum = 0x8CF2;\n#[allow(dead_code, non_upper_case_globals)] pub const COLOR_ATTACHMENT19: types::GLenum = 0x8CF3;\n#[allow(dead_code, non_upper_case_globals)] pub const COLOR_ATTACHMENT2: types::GLenum = 0x8CE2;\n#[allow(dead_code, non_upper_case_globals)] pub const COLOR_ATTACHMENT20: types::GLenum = 0x8CF4;\n#[allow(dead_code, non_upper_case_globals)] pub const COLOR_ATTACHMENT21: types::GLenum = 0x8CF5;\n#[allow(dead_code, non_upper_case_globals)] pub const COLOR_ATTACHMENT22: types::GLenum = 0x8CF6;\n#[allow(dead_code, non_upper_case_globals)] pub const COLOR_ATTACHMENT23: types::GLenum = 0x8CF7;\n#[allow(dead_code, non_upper_case_globals)] pub const COLOR_ATTACHMENT24: types::GLenum = 0x8CF8;\n#[allow(dead_code, non_upper_case_globals)] pub const COLOR_ATTACHMENT25: types::GLenum = 0x8CF9;\n#[allow(dead_code, non_upper_case_globals)] pub const COLOR_ATTACHMENT26: types::GLenum = 0x8CFA;\n#[allow(dead_code, non_upper_case_globals)] pub const COLOR_ATTACHMENT27: types::GLenum = 0x8CFB;\n#[allow(dead_code, non_upper_case_globals)] pub const COLOR_ATTACHMENT28: types::GLenum = 0x8CFC;\n#[allow(dead_code, non_upper_case_globals)] pub const COLOR_ATTACHMENT29: types::GLenum = 0x8CFD;\n#[allow(dead_code, non_upper_case_globals)] pub const COLOR_ATTACHMENT3: types::GLenum = 0x8CE3;\n#[allow(dead_code, non_upper_case_globals)] pub const COLOR_ATTACHMENT30: types::GLenum = 0x8CFE;\n#[allow(dead_code, non_upper_case_globals)] pub const COLOR_ATTACHMENT31: types::GLenum = 0x8CFF;\n#[allow(dead_code, non_upper_case_globals)] pub const COLOR_ATTACHMENT4: types::GLenum = 0x8CE4;\n#[allow(dead_code, non_upper_case_globals)] pub const COLOR_ATTACHMENT5: types::GLenum = 0x8CE5;\n#[allow(dead_code, non_upper_case_globals)] pub const COLOR_ATTACHMENT6: types::GLenum = 0x8CE6;\n#[allow(dead_code, non_upper_case_globals)] pub const COLOR_ATTACHMENT7: types::GLenum = 0x8CE7;\n#[allow(dead_code, non_upper_case_globals)] pub const COLOR_ATTACHMENT8: types::GLenum = 0x8CE8;\n#[allow(dead_code, non_upper_case_globals)] pub const COLOR_ATTACHMENT9: types::GLenum = 0x8CE9;\n#[allow(dead_code, non_upper_case_globals)] pub const COLOR_BUFFER_BIT: types::GLenum = 0x00004000;\n#[allow(dead_code, non_upper_case_globals)] pub const COLOR_CLEAR_VALUE: types::GLenum = 0x0C22;\n#[allow(dead_code, non_upper_case_globals)] pub const COLOR_LOGIC_OP: types::GLenum = 0x0BF2;\n#[allow(dead_code, non_upper_case_globals)] pub const COLOR_WRITEMASK: types::GLenum = 0x0C23;\n#[allow(dead_code, non_upper_case_globals)] pub const COMPARE_REF_TO_TEXTURE: types::GLenum = 0x884E;\n#[allow(dead_code, non_upper_case_globals)] pub const COMPILE_STATUS: types::GLenum = 0x8B81;\n#[allow(dead_code, non_upper_case_globals)] pub const COMPRESSED_RED: types::GLenum = 0x8225;\n#[allow(dead_code, non_upper_case_globals)] pub const COMPRESSED_RED_RGTC1: types::GLenum = 0x8DBB;\n#[allow(dead_code, non_upper_case_globals)] pub const COMPRESSED_RG: types::GLenum = 0x8226;\n#[allow(dead_code, non_upper_case_globals)] pub const COMPRESSED_RGB: types::GLenum = 0x84ED;\n#[allow(dead_code, non_upper_case_globals)] pub const COMPRESSED_RGBA: types::GLenum = 0x84EE;\n#[allow(dead_code, non_upper_case_globals)] pub const COMPRESSED_RG_RGTC2: types::GLenum = 0x8DBD;\n#[allow(dead_code, non_upper_case_globals)] pub const COMPRESSED_SIGNED_RED_RGTC1: types::GLenum = 0x8DBC;\n#[allow(dead_code, non_upper_case_globals)] pub const COMPRESSED_SIGNED_RG_RGTC2: types::GLenum = 0x8DBE;\n#[allow(dead_code, non_upper_case_globals)] pub const COMPRESSED_SRGB: types::GLenum = 0x8C48;\n#[allow(dead_code, non_upper_case_globals)] pub const COMPRESSED_SRGB_ALPHA: types::GLenum = 0x8C49;\n#[allow(dead_code, non_upper_case_globals)] pub const COMPRESSED_TEXTURE_FORMATS: types::GLenum = 0x86A3;\n#[allow(dead_code, non_upper_case_globals)] pub const CONDITION_SATISFIED: types::GLenum = 0x911C;\n#[allow(dead_code, non_upper_case_globals)] pub const CONSTANT_ALPHA: types::GLenum = 0x8003;\n#[allow(dead_code, non_upper_case_globals)] pub const CONSTANT_COLOR: types::GLenum = 0x8001;\n#[allow(dead_code, non_upper_case_globals)] pub const CONTEXT_COMPATIBILITY_PROFILE_BIT: types::GLenum = 0x00000002;\n#[allow(dead_code, non_upper_case_globals)] pub const CONTEXT_CORE_PROFILE_BIT: types::GLenum = 0x00000001;\n#[allow(dead_code, non_upper_case_globals)] pub const CONTEXT_FLAGS: types::GLenum = 0x821E;\n#[allow(dead_code, non_upper_case_globals)] pub const CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT: types::GLenum = 0x00000001;\n#[allow(dead_code, non_upper_case_globals)] pub const CONTEXT_PROFILE_MASK: types::GLenum = 0x9126;\n#[allow(dead_code, non_upper_case_globals)] pub const COPY: types::GLenum = 0x1503;\n#[allow(dead_code, non_upper_case_globals)] pub const COPY_INVERTED: types::GLenum = 0x150C;\n#[allow(dead_code, non_upper_case_globals)] pub const COPY_READ_BUFFER: types::GLenum = 0x8F36;\n#[allow(dead_code, non_upper_case_globals)] pub const COPY_WRITE_BUFFER: types::GLenum = 0x8F37;\n#[allow(dead_code, non_upper_case_globals)] pub const CULL_FACE: types::GLenum = 0x0B44;\n#[allow(dead_code, non_upper_case_globals)] pub const CULL_FACE_MODE: types::GLenum = 0x0B45;\n#[allow(dead_code, non_upper_case_globals)] pub const CURRENT_PROGRAM: types::GLenum = 0x8B8D;\n#[allow(dead_code, non_upper_case_globals)] pub const CURRENT_QUERY: types::GLenum = 0x8865;\n#[allow(dead_code, non_upper_case_globals)] pub const CURRENT_VERTEX_ATTRIB: types::GLenum = 0x8626;\n#[allow(dead_code, non_upper_case_globals)] pub const CW: types::GLenum = 0x0900;\n#[allow(dead_code, non_upper_case_globals)] pub const DECR: types::GLenum = 0x1E03;\n#[allow(dead_code, non_upper_case_globals)] pub const DECR_WRAP: types::GLenum = 0x8508;\n#[allow(dead_code, non_upper_case_globals)] pub const DELETE_STATUS: types::GLenum = 0x8B80;\n#[allow(dead_code, non_upper_case_globals)] pub const DEPTH: types::GLenum = 0x1801;\n#[allow(dead_code, non_upper_case_globals)] pub const DEPTH24_STENCIL8: types::GLenum = 0x88F0;\n#[allow(dead_code, non_upper_case_globals)] pub const DEPTH32F_STENCIL8: types::GLenum = 0x8CAD;\n#[allow(dead_code, non_upper_case_globals)] pub const DEPTH_ATTACHMENT: types::GLenum = 0x8D00;\n#[allow(dead_code, non_upper_case_globals)] pub const DEPTH_BUFFER_BIT: types::GLenum = 0x00000100;\n#[allow(dead_code, non_upper_case_globals)] pub const DEPTH_CLAMP: types::GLenum = 0x864F;\n#[allow(dead_code, non_upper_case_globals)] pub const DEPTH_CLEAR_VALUE: types::GLenum = 0x0B73;\n#[allow(dead_code, non_upper_case_globals)] pub const DEPTH_COMPONENT: types::GLenum = 0x1902;\n#[allow(dead_code, non_upper_case_globals)] pub const DEPTH_COMPONENT16: types::GLenum = 0x81A5;\n#[allow(dead_code, non_upper_case_globals)] pub const DEPTH_COMPONENT24: types::GLenum = 0x81A6;\n#[allow(dead_code, non_upper_case_globals)] pub const DEPTH_COMPONENT32: types::GLenum = 0x81A7;\n#[allow(dead_code, non_upper_case_globals)] pub const DEPTH_COMPONENT32F: types::GLenum = 0x8CAC;\n#[allow(dead_code, non_upper_case_globals)] pub const DEPTH_FUNC: types::GLenum = 0x0B74;\n#[allow(dead_code, non_upper_case_globals)] pub const DEPTH_RANGE: types::GLenum = 0x0B70;\n#[allow(dead_code, non_upper_case_globals)] pub const DEPTH_STENCIL: types::GLenum = 0x84F9;\n#[allow(dead_code, non_upper_case_globals)] pub const DEPTH_STENCIL_ATTACHMENT: types::GLenum = 0x821A;\n#[allow(dead_code, non_upper_case_globals)] pub const DEPTH_TEST: types::GLenum = 0x0B71;\n#[allow(dead_code, non_upper_case_globals)] pub const DEPTH_WRITEMASK: types::GLenum = 0x0B72;\n#[allow(dead_code, non_upper_case_globals)] pub const DITHER: types::GLenum = 0x0BD0;\n#[allow(dead_code, non_upper_case_globals)] pub const DONT_CARE: types::GLenum = 0x1100;\n#[allow(dead_code, non_upper_case_globals)] pub const DOUBLE: types::GLenum = 0x140A;\n#[allow(dead_code, non_upper_case_globals)] pub const DOUBLEBUFFER: types::GLenum = 0x0C32;\n#[allow(dead_code, non_upper_case_globals)] pub const DRAW_BUFFER: types::GLenum = 0x0C01;\n#[allow(dead_code, non_upper_case_globals)] pub const DRAW_BUFFER0: types::GLenum = 0x8825;\n#[allow(dead_code, non_upper_case_globals)] pub const DRAW_BUFFER1: types::GLenum = 0x8826;\n#[allow(dead_code, non_upper_case_globals)] pub const DRAW_BUFFER10: types::GLenum = 0x882F;\n#[allow(dead_code, non_upper_case_globals)] pub const DRAW_BUFFER11: types::GLenum = 0x8830;\n#[allow(dead_code, non_upper_case_globals)] pub const DRAW_BUFFER12: types::GLenum = 0x8831;\n#[allow(dead_code, non_upper_case_globals)] pub const DRAW_BUFFER13: types::GLenum = 0x8832;\n#[allow(dead_code, non_upper_case_globals)] pub const DRAW_BUFFER14: types::GLenum = 0x8833;\n#[allow(dead_code, non_upper_case_globals)] pub const DRAW_BUFFER15: types::GLenum = 0x8834;\n#[allow(dead_code, non_upper_case_globals)] pub const DRAW_BUFFER2: types::GLenum = 0x8827;\n#[allow(dead_code, non_upper_case_globals)] pub const DRAW_BUFFER3: types::GLenum = 0x8828;\n#[allow(dead_code, non_upper_case_globals)] pub const DRAW_BUFFER4: types::GLenum = 0x8829;\n#[allow(dead_code, non_upper_case_globals)] pub const DRAW_BUFFER5: types::GLenum = 0x882A;\n#[allow(dead_code, non_upper_case_globals)] pub const DRAW_BUFFER6: types::GLenum = 0x882B;\n#[allow(dead_code, non_upper_case_globals)] pub const DRAW_BUFFER7: types::GLenum = 0x882C;\n#[allow(dead_code, non_upper_case_globals)] pub const DRAW_BUFFER8: types::GLenum = 0x882D;\n#[allow(dead_code, non_upper_case_globals)] pub const DRAW_BUFFER9: types::GLenum = 0x882E;\n#[allow(dead_code, non_upper_case_globals)] pub const DRAW_FRAMEBUFFER: types::GLenum = 0x8CA9;\n#[allow(dead_code, non_upper_case_globals)] pub const DRAW_FRAMEBUFFER_BINDING: types::GLenum = 0x8CA6;\n#[allow(dead_code, non_upper_case_globals)] pub const DST_ALPHA: types::GLenum = 0x0304;\n#[allow(dead_code, non_upper_case_globals)] pub const DST_COLOR: types::GLenum = 0x0306;\n#[allow(dead_code, non_upper_case_globals)] pub const DYNAMIC_COPY: types::GLenum = 0x88EA;\n#[allow(dead_code, non_upper_case_globals)] pub const DYNAMIC_DRAW: types::GLenum = 0x88E8;\n#[allow(dead_code, non_upper_case_globals)] pub const DYNAMIC_READ: types::GLenum = 0x88E9;\n#[allow(dead_code, non_upper_case_globals)] pub const ELEMENT_ARRAY_BUFFER: types::GLenum = 0x8893;\n#[allow(dead_code, non_upper_case_globals)] pub const ELEMENT_ARRAY_BUFFER_BINDING: types::GLenum = 0x8895;\n#[allow(dead_code, non_upper_case_globals)] pub const EQUAL: types::GLenum = 0x0202;\n#[allow(dead_code, non_upper_case_globals)] pub const EQUIV: types::GLenum = 0x1509;\n#[allow(dead_code, non_upper_case_globals)] pub const EXTENSIONS: types::GLenum = 0x1F03;\n#[allow(dead_code, non_upper_case_globals)] pub const FALSE: types::GLboolean = 0;\n#[allow(dead_code, non_upper_case_globals)] pub const FASTEST: types::GLenum = 0x1101;\n#[allow(dead_code, non_upper_case_globals)] pub const FILL: types::GLenum = 0x1B02;\n#[allow(dead_code, non_upper_case_globals)] pub const FIRST_VERTEX_CONVENTION: types::GLenum = 0x8E4D;\n#[allow(dead_code, non_upper_case_globals)] pub const FIXED_ONLY: types::GLenum = 0x891D;\n#[allow(dead_code, non_upper_case_globals)] pub const FLOAT: types::GLenum = 0x1406;\n#[allow(dead_code, non_upper_case_globals)] pub const FLOAT_32_UNSIGNED_INT_24_8_REV: types::GLenum = 0x8DAD;\n#[allow(dead_code, non_upper_case_globals)] pub const FLOAT_MAT2: types::GLenum = 0x8B5A;\n#[allow(dead_code, non_upper_case_globals)] pub const FLOAT_MAT2x3: types::GLenum = 0x8B65;\n#[allow(dead_code, non_upper_case_globals)] pub const FLOAT_MAT2x4: types::GLenum = 0x8B66;\n#[allow(dead_code, non_upper_case_globals)] pub const FLOAT_MAT3: types::GLenum = 0x8B5B;\n#[allow(dead_code, non_upper_case_globals)] pub const FLOAT_MAT3x2: types::GLenum = 0x8B67;\n#[allow(dead_code, non_upper_case_globals)] pub const FLOAT_MAT3x4: types::GLenum = 0x8B68;\n#[allow(dead_code, non_upper_case_globals)] pub const FLOAT_MAT4: types::GLenum = 0x8B5C;\n#[allow(dead_code, non_upper_case_globals)] pub const FLOAT_MAT4x2: types::GLenum = 0x8B69;\n#[allow(dead_code, non_upper_case_globals)] pub const FLOAT_MAT4x3: types::GLenum = 0x8B6A;\n#[allow(dead_code, non_upper_case_globals)] pub const FLOAT_VEC2: types::GLenum = 0x8B50;\n#[allow(dead_code, non_upper_case_globals)] pub const FLOAT_VEC3: types::GLenum = 0x8B51;\n#[allow(dead_code, non_upper_case_globals)] pub const FLOAT_VEC4: types::GLenum = 0x8B52;\n#[allow(dead_code, non_upper_case_globals)] pub const FRAGMENT_SHADER: types::GLenum = 0x8B30;\n#[allow(dead_code, non_upper_case_globals)] pub const FRAGMENT_SHADER_DERIVATIVE_HINT: types::GLenum = 0x8B8B;\n#[allow(dead_code, non_upper_case_globals)] pub const FRAMEBUFFER: types::GLenum = 0x8D40;\n#[allow(dead_code, non_upper_case_globals)] pub const FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE: types::GLenum = 0x8215;\n#[allow(dead_code, non_upper_case_globals)] pub const FRAMEBUFFER_ATTACHMENT_BLUE_SIZE: types::GLenum = 0x8214;\n#[allow(dead_code, non_upper_case_globals)] pub const FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING: types::GLenum = 0x8210;\n#[allow(dead_code, non_upper_case_globals)] pub const FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE: types::GLenum = 0x8211;\n#[allow(dead_code, non_upper_case_globals)] pub const FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE: types::GLenum = 0x8216;\n#[allow(dead_code, non_upper_case_globals)] pub const FRAMEBUFFER_ATTACHMENT_GREEN_SIZE: types::GLenum = 0x8213;\n#[allow(dead_code, non_upper_case_globals)] pub const FRAMEBUFFER_ATTACHMENT_LAYERED: types::GLenum = 0x8DA7;\n#[allow(dead_code, non_upper_case_globals)] pub const FRAMEBUFFER_ATTACHMENT_OBJECT_NAME: types::GLenum = 0x8CD1;\n#[allow(dead_code, non_upper_case_globals)] pub const FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE: types::GLenum = 0x8CD0;\n#[allow(dead_code, non_upper_case_globals)] pub const FRAMEBUFFER_ATTACHMENT_RED_SIZE: types::GLenum = 0x8212;\n#[allow(dead_code, non_upper_case_globals)] pub const FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE: types::GLenum = 0x8217;\n#[allow(dead_code, non_upper_case_globals)] pub const FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE: types::GLenum = 0x8CD3;\n#[allow(dead_code, non_upper_case_globals)] pub const FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER: types::GLenum = 0x8CD4;\n#[allow(dead_code, non_upper_case_globals)] pub const FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL: types::GLenum = 0x8CD2;\n#[allow(dead_code, non_upper_case_globals)] pub const FRAMEBUFFER_BINDING: types::GLenum = 0x8CA6;\n#[allow(dead_code, non_upper_case_globals)] pub const FRAMEBUFFER_COMPLETE: types::GLenum = 0x8CD5;\n#[allow(dead_code, non_upper_case_globals)] pub const FRAMEBUFFER_DEFAULT: types::GLenum = 0x8218;\n#[allow(dead_code, non_upper_case_globals)] pub const FRAMEBUFFER_INCOMPLETE_ATTACHMENT: types::GLenum = 0x8CD6;\n#[allow(dead_code, non_upper_case_globals)] pub const FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER: types::GLenum = 0x8CDB;\n#[allow(dead_code, non_upper_case_globals)] pub const FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS: types::GLenum = 0x8DA8;\n#[allow(dead_code, non_upper_case_globals)] pub const FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT: types::GLenum = 0x8CD7;\n#[allow(dead_code, non_upper_case_globals)] pub const FRAMEBUFFER_INCOMPLETE_MULTISAMPLE: types::GLenum = 0x8D56;\n#[allow(dead_code, non_upper_case_globals)] pub const FRAMEBUFFER_INCOMPLETE_READ_BUFFER: types::GLenum = 0x8CDC;\n#[allow(dead_code, non_upper_case_globals)] pub const FRAMEBUFFER_SRGB: types::GLenum = 0x8DB9;\n#[allow(dead_code, non_upper_case_globals)] pub const FRAMEBUFFER_UNDEFINED: types::GLenum = 0x8219;\n#[allow(dead_code, non_upper_case_globals)] pub const FRAMEBUFFER_UNSUPPORTED: types::GLenum = 0x8CDD;\n#[allow(dead_code, non_upper_case_globals)] pub const FRONT: types::GLenum = 0x0404;\n#[allow(dead_code, non_upper_case_globals)] pub const FRONT_AND_BACK: types::GLenum = 0x0408;\n#[allow(dead_code, non_upper_case_globals)] pub const FRONT_FACE: types::GLenum = 0x0B46;\n#[allow(dead_code, non_upper_case_globals)] pub const FRONT_LEFT: types::GLenum = 0x0400;\n#[allow(dead_code, non_upper_case_globals)] pub const FRONT_RIGHT: types::GLenum = 0x0401;\n#[allow(dead_code, non_upper_case_globals)] pub const FUNC_ADD: types::GLenum = 0x8006;\n#[allow(dead_code, non_upper_case_globals)] pub const FUNC_REVERSE_SUBTRACT: types::GLenum = 0x800B;\n#[allow(dead_code, non_upper_case_globals)] pub const FUNC_SUBTRACT: types::GLenum = 0x800A;\n#[allow(dead_code, non_upper_case_globals)] pub const GEOMETRY_INPUT_TYPE: types::GLenum = 0x8917;\n#[allow(dead_code, non_upper_case_globals)] pub const GEOMETRY_OUTPUT_TYPE: types::GLenum = 0x8918;\n#[allow(dead_code, non_upper_case_globals)] pub const GEOMETRY_SHADER: types::GLenum = 0x8DD9;\n#[allow(dead_code, non_upper_case_globals)] pub const GEOMETRY_VERTICES_OUT: types::GLenum = 0x8916;\n#[allow(dead_code, non_upper_case_globals)] pub const GEQUAL: types::GLenum = 0x0206;\n#[allow(dead_code, non_upper_case_globals)] pub const GREATER: types::GLenum = 0x0204;\n#[allow(dead_code, non_upper_case_globals)] pub const GREEN: types::GLenum = 0x1904;\n#[allow(dead_code, non_upper_case_globals)] pub const GREEN_INTEGER: types::GLenum = 0x8D95;\n#[allow(dead_code, non_upper_case_globals)] pub const HALF_FLOAT: types::GLenum = 0x140B;\n#[allow(dead_code, non_upper_case_globals)] pub const INCR: types::GLenum = 0x1E02;\n#[allow(dead_code, non_upper_case_globals)] pub const INCR_WRAP: types::GLenum = 0x8507;\n#[allow(dead_code, non_upper_case_globals)] pub const INFO_LOG_LENGTH: types::GLenum = 0x8B84;\n#[allow(dead_code, non_upper_case_globals)] pub const INT: types::GLenum = 0x1404;\n#[allow(dead_code, non_upper_case_globals)] pub const INTERLEAVED_ATTRIBS: types::GLenum = 0x8C8C;\n#[allow(dead_code, non_upper_case_globals)] pub const INT_2_10_10_10_REV: types::GLenum = 0x8D9F;\n#[allow(dead_code, non_upper_case_globals)] pub const INT_SAMPLER_1D: types::GLenum = 0x8DC9;\n#[allow(dead_code, non_upper_case_globals)] pub const INT_SAMPLER_1D_ARRAY: types::GLenum = 0x8DCE;\n#[allow(dead_code, non_upper_case_globals)] pub const INT_SAMPLER_2D: types::GLenum = 0x8DCA;\n#[allow(dead_code, non_upper_case_globals)] pub const INT_SAMPLER_2D_ARRAY: types::GLenum = 0x8DCF;\n#[allow(dead_code, non_upper_case_globals)] pub const INT_SAMPLER_2D_MULTISAMPLE: types::GLenum = 0x9109;\n#[allow(dead_code, non_upper_case_globals)] pub const INT_SAMPLER_2D_MULTISAMPLE_ARRAY: types::GLenum = 0x910C;\n#[allow(dead_code, non_upper_case_globals)] pub const INT_SAMPLER_2D_RECT: types::GLenum = 0x8DCD;\n#[allow(dead_code, non_upper_case_globals)] pub const INT_SAMPLER_3D: types::GLenum = 0x8DCB;\n#[allow(dead_code, non_upper_case_globals)] pub const INT_SAMPLER_BUFFER: types::GLenum = 0x8DD0;\n#[allow(dead_code, non_upper_case_globals)] pub const INT_SAMPLER_CUBE: types::GLenum = 0x8DCC;\n#[allow(dead_code, non_upper_case_globals)] pub const INT_VEC2: types::GLenum = 0x8B53;\n#[allow(dead_code, non_upper_case_globals)] pub const INT_VEC3: types::GLenum = 0x8B54;\n#[allow(dead_code, non_upper_case_globals)] pub const INT_VEC4: types::GLenum = 0x8B55;\n#[allow(dead_code, non_upper_case_globals)] pub const INVALID_ENUM: types::GLenum = 0x0500;\n#[allow(dead_code, non_upper_case_globals)] pub const INVALID_FRAMEBUFFER_OPERATION: types::GLenum = 0x0506;\n#[allow(dead_code, non_upper_case_globals)] pub const INVALID_INDEX: types::GLuint = 0xFFFFFFFF;\n#[allow(dead_code, non_upper_case_globals)] pub const INVALID_OPERATION: types::GLenum = 0x0502;\n#[allow(dead_code, non_upper_case_globals)] pub const INVALID_VALUE: types::GLenum = 0x0501;\n#[allow(dead_code, non_upper_case_globals)] pub const INVERT: types::GLenum = 0x150A;\n#[allow(dead_code, non_upper_case_globals)] pub const KEEP: types::GLenum = 0x1E00;\n#[allow(dead_code, non_upper_case_globals)] pub const LAST_VERTEX_CONVENTION: types::GLenum = 0x8E4E;\n#[allow(dead_code, non_upper_case_globals)] pub const LEFT: types::GLenum = 0x0406;\n#[allow(dead_code, non_upper_case_globals)] pub const LEQUAL: types::GLenum = 0x0203;\n#[allow(dead_code, non_upper_case_globals)] pub const LESS: types::GLenum = 0x0201;\n#[allow(dead_code, non_upper_case_globals)] pub const LINE: types::GLenum = 0x1B01;\n#[allow(dead_code, non_upper_case_globals)] pub const LINEAR: types::GLenum = 0x2601;\n#[allow(dead_code, non_upper_case_globals)] pub const LINEAR_MIPMAP_LINEAR: types::GLenum = 0x2703;\n#[allow(dead_code, non_upper_case_globals)] pub const LINEAR_MIPMAP_NEAREST: types::GLenum = 0x2701;\n#[allow(dead_code, non_upper_case_globals)] pub const LINES: types::GLenum = 0x0001;\n#[allow(dead_code, non_upper_case_globals)] pub const LINES_ADJACENCY: types::GLenum = 0x000A;\n#[allow(dead_code, non_upper_case_globals)] pub const LINE_LOOP: types::GLenum = 0x0002;\n#[allow(dead_code, non_upper_case_globals)] pub const LINE_SMOOTH: types::GLenum = 0x0B20;\n#[allow(dead_code, non_upper_case_globals)] pub const LINE_SMOOTH_HINT: types::GLenum = 0x0C52;\n#[allow(dead_code, non_upper_case_globals)] pub const LINE_STRIP: types::GLenum = 0x0003;\n#[allow(dead_code, non_upper_case_globals)] pub const LINE_STRIP_ADJACENCY: types::GLenum = 0x000B;\n#[allow(dead_code, non_upper_case_globals)] pub const LINE_WIDTH: types::GLenum = 0x0B21;\n#[allow(dead_code, non_upper_case_globals)] pub const LINE_WIDTH_GRANULARITY: types::GLenum = 0x0B23;\n#[allow(dead_code, non_upper_case_globals)] pub const LINE_WIDTH_RANGE: types::GLenum = 0x0B22;\n#[allow(dead_code, non_upper_case_globals)] pub const LINK_STATUS: types::GLenum = 0x8B82;\n#[allow(dead_code, non_upper_case_globals)] pub const LOGIC_OP_MODE: types::GLenum = 0x0BF0;\n#[allow(dead_code, non_upper_case_globals)] pub const LOWER_LEFT: types::GLenum = 0x8CA1;\n#[allow(dead_code, non_upper_case_globals)] pub const MAJOR_VERSION: types::GLenum = 0x821B;\n#[allow(dead_code, non_upper_case_globals)] pub const MAP_FLUSH_EXPLICIT_BIT: types::GLenum = 0x0010;\n#[allow(dead_code, non_upper_case_globals)] pub const MAP_INVALIDATE_BUFFER_BIT: types::GLenum = 0x0008;\n#[allow(dead_code, non_upper_case_globals)] pub const MAP_INVALIDATE_RANGE_BIT: types::GLenum = 0x0004;\n#[allow(dead_code, non_upper_case_globals)] pub const MAP_READ_BIT: types::GLenum = 0x0001;\n#[allow(dead_code, non_upper_case_globals)] pub const MAP_UNSYNCHRONIZED_BIT: types::GLenum = 0x0020;\n#[allow(dead_code, non_upper_case_globals)] pub const MAP_WRITE_BIT: types::GLenum = 0x0002;\n#[allow(dead_code, non_upper_case_globals)] pub const MAX: types::GLenum = 0x8008;\n#[allow(dead_code, non_upper_case_globals)] pub const MAX_3D_TEXTURE_SIZE: types::GLenum = 0x8073;\n#[allow(dead_code, non_upper_case_globals)] pub const MAX_ARRAY_TEXTURE_LAYERS: types::GLenum = 0x88FF;\n#[allow(dead_code, non_upper_case_globals)] pub const MAX_CLIP_DISTANCES: types::GLenum = 0x0D32;\n#[allow(dead_code, non_upper_case_globals)] pub const MAX_COLOR_ATTACHMENTS: types::GLenum = 0x8CDF;\n#[allow(dead_code, non_upper_case_globals)] pub const MAX_COLOR_TEXTURE_SAMPLES: types::GLenum = 0x910E;\n#[allow(dead_code, non_upper_case_globals)] pub const MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS: types::GLenum = 0x8A33;\n#[allow(dead_code, non_upper_case_globals)] pub const MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS: types::GLenum = 0x8A32;\n#[allow(dead_code, non_upper_case_globals)] pub const MAX_COMBINED_TEXTURE_IMAGE_UNITS: types::GLenum = 0x8B4D;\n#[allow(dead_code, non_upper_case_globals)] pub const MAX_COMBINED_UNIFORM_BLOCKS: types::GLenum = 0x8A2E;\n#[allow(dead_code, non_upper_case_globals)] pub const MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS: types::GLenum = 0x8A31;\n#[allow(dead_code, non_upper_case_globals)] pub const MAX_CUBE_MAP_TEXTURE_SIZE: types::GLenum = 0x851C;\n#[allow(dead_code, non_upper_case_globals)] pub const MAX_DEPTH_TEXTURE_SAMPLES: types::GLenum = 0x910F;\n#[allow(dead_code, non_upper_case_globals)] pub const MAX_DRAW_BUFFERS: types::GLenum = 0x8824;\n#[allow(dead_code, non_upper_case_globals)] pub const MAX_DUAL_SOURCE_DRAW_BUFFERS: types::GLenum = 0x88FC;\n#[allow(dead_code, non_upper_case_globals)] pub const MAX_ELEMENTS_INDICES: types::GLenum = 0x80E9;\n#[allow(dead_code, non_upper_case_globals)] pub const MAX_ELEMENTS_VERTICES: types::GLenum = 0x80E8;\n#[allow(dead_code, non_upper_case_globals)] pub const MAX_FRAGMENT_INPUT_COMPONENTS: types::GLenum = 0x9125;\n#[allow(dead_code, non_upper_case_globals)] pub const MAX_FRAGMENT_UNIFORM_BLOCKS: types::GLenum = 0x8A2D;\n#[allow(dead_code, non_upper_case_globals)] pub const MAX_FRAGMENT_UNIFORM_COMPONENTS: types::GLenum = 0x8B49;\n#[allow(dead_code, non_upper_case_globals)] pub const MAX_GEOMETRY_INPUT_COMPONENTS: types::GLenum = 0x9123;\n#[allow(dead_code, non_upper_case_globals)] pub const MAX_GEOMETRY_OUTPUT_COMPONENTS: types::GLenum = 0x9124;\n#[allow(dead_code, non_upper_case_globals)] pub const MAX_GEOMETRY_OUTPUT_VERTICES: types::GLenum = 0x8DE0;\n#[allow(dead_code, non_upper_case_globals)] pub const MAX_GEOMETRY_TEXTURE_IMAGE_UNITS: types::GLenum = 0x8C29;\n#[allow(dead_code, non_upper_case_globals)] pub const MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS: types::GLenum = 0x8DE1;\n#[allow(dead_code, non_upper_case_globals)] pub const MAX_GEOMETRY_UNIFORM_BLOCKS: types::GLenum = 0x8A2C;\n#[allow(dead_code, non_upper_case_globals)] pub const MAX_GEOMETRY_UNIFORM_COMPONENTS: types::GLenum = 0x8DDF;\n#[allow(dead_code, non_upper_case_globals)] pub const MAX_INTEGER_SAMPLES: types::GLenum = 0x9110;\n#[allow(dead_code, non_upper_case_globals)] pub const MAX_PROGRAM_TEXEL_OFFSET: types::GLenum = 0x8905;\n#[allow(dead_code, non_upper_case_globals)] pub const MAX_RECTANGLE_TEXTURE_SIZE: types::GLenum = 0x84F8;\n#[allow(dead_code, non_upper_case_globals)] pub const MAX_RENDERBUFFER_SIZE: types::GLenum = 0x84E8;\n#[allow(dead_code, non_upper_case_globals)] pub const MAX_SAMPLES: types::GLenum = 0x8D57;\n#[allow(dead_code, non_upper_case_globals)] pub const MAX_SAMPLE_MASK_WORDS: types::GLenum = 0x8E59;\n#[allow(dead_code, non_upper_case_globals)] pub const MAX_SERVER_WAIT_TIMEOUT: types::GLenum = 0x9111;\n#[allow(dead_code, non_upper_case_globals)] pub const MAX_TEXTURE_BUFFER_SIZE: types::GLenum = 0x8C2B;\n#[allow(dead_code, non_upper_case_globals)] pub const MAX_TEXTURE_IMAGE_UNITS: types::GLenum = 0x8872;\n#[allow(dead_code, non_upper_case_globals)] pub const MAX_TEXTURE_LOD_BIAS: types::GLenum = 0x84FD;\n#[allow(dead_code, non_upper_case_globals)] pub const MAX_TEXTURE_SIZE: types::GLenum = 0x0D33;\n#[allow(dead_code, non_upper_case_globals)] pub const MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS: types::GLenum = 0x8C8A;\n#[allow(dead_code, non_upper_case_globals)] pub const MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS: types::GLenum = 0x8C8B;\n#[allow(dead_code, non_upper_case_globals)] pub const MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS: types::GLenum = 0x8C80;\n#[allow(dead_code, non_upper_case_globals)] pub const MAX_UNIFORM_BLOCK_SIZE: types::GLenum = 0x8A30;\n#[allow(dead_code, non_upper_case_globals)] pub const MAX_UNIFORM_BUFFER_BINDINGS: types::GLenum = 0x8A2F;\n#[allow(dead_code, non_upper_case_globals)] pub const MAX_VARYING_COMPONENTS: types::GLenum = 0x8B4B;\n#[allow(dead_code, non_upper_case_globals)] pub const MAX_VARYING_FLOATS: types::GLenum = 0x8B4B;\n#[allow(dead_code, non_upper_case_globals)] pub const MAX_VERTEX_ATTRIBS: types::GLenum = 0x8869;\n#[allow(dead_code, non_upper_case_globals)] pub const MAX_VERTEX_OUTPUT_COMPONENTS: types::GLenum = 0x9122;\n#[allow(dead_code, non_upper_case_globals)] pub const MAX_VERTEX_TEXTURE_IMAGE_UNITS: types::GLenum = 0x8B4C;\n#[allow(dead_code, non_upper_case_globals)] pub const MAX_VERTEX_UNIFORM_BLOCKS: types::GLenum = 0x8A2B;\n#[allow(dead_code, non_upper_case_globals)] pub const MAX_VERTEX_UNIFORM_COMPONENTS: types::GLenum = 0x8B4A;\n#[allow(dead_code, non_upper_case_globals)] pub const MAX_VIEWPORT_DIMS: types::GLenum = 0x0D3A;\n#[allow(dead_code, non_upper_case_globals)] pub const MIN: types::GLenum = 0x8007;\n#[allow(dead_code, non_upper_case_globals)] pub const MINOR_VERSION: types::GLenum = 0x821C;\n#[allow(dead_code, non_upper_case_globals)] pub const MIN_PROGRAM_TEXEL_OFFSET: types::GLenum = 0x8904;\n#[allow(dead_code, non_upper_case_globals)] pub const MIRRORED_REPEAT: types::GLenum = 0x8370;\n#[allow(dead_code, non_upper_case_globals)] pub const MULTISAMPLE: types::GLenum = 0x809D;\n#[allow(dead_code, non_upper_case_globals)] pub const NAND: types::GLenum = 0x150E;\n#[allow(dead_code, non_upper_case_globals)] pub const NEAREST: types::GLenum = 0x2600;\n#[allow(dead_code, non_upper_case_globals)] pub const NEAREST_MIPMAP_LINEAR: types::GLenum = 0x2702;\n#[allow(dead_code, non_upper_case_globals)] pub const NEAREST_MIPMAP_NEAREST: types::GLenum = 0x2700;\n#[allow(dead_code, non_upper_case_globals)] pub const NEVER: types::GLenum = 0x0200;\n#[allow(dead_code, non_upper_case_globals)] pub const NICEST: types::GLenum = 0x1102;\n#[allow(dead_code, non_upper_case_globals)] pub const NONE: types::GLenum = 0;\n#[allow(dead_code, non_upper_case_globals)] pub const NOOP: types::GLenum = 0x1505;\n#[allow(dead_code, non_upper_case_globals)] pub const NOR: types::GLenum = 0x1508;\n#[allow(dead_code, non_upper_case_globals)] pub const NOTEQUAL: types::GLenum = 0x0205;\n#[allow(dead_code, non_upper_case_globals)] pub const NO_ERROR: types::GLenum = 0;\n#[allow(dead_code, non_upper_case_globals)] pub const NUM_COMPRESSED_TEXTURE_FORMATS: types::GLenum = 0x86A2;\n#[allow(dead_code, non_upper_case_globals)] pub const NUM_EXTENSIONS: types::GLenum = 0x821D;\n#[allow(dead_code, non_upper_case_globals)] pub const OBJECT_TYPE: types::GLenum = 0x9112;\n#[allow(dead_code, non_upper_case_globals)] pub const ONE: types::GLenum = 1;\n#[allow(dead_code, non_upper_case_globals)] pub const ONE_MINUS_CONSTANT_ALPHA: types::GLenum = 0x8004;\n#[allow(dead_code, non_upper_case_globals)] pub const ONE_MINUS_CONSTANT_COLOR: types::GLenum = 0x8002;\n#[allow(dead_code, non_upper_case_globals)] pub const ONE_MINUS_DST_ALPHA: types::GLenum = 0x0305;\n#[allow(dead_code, non_upper_case_globals)] pub const ONE_MINUS_DST_COLOR: types::GLenum = 0x0307;\n#[allow(dead_code, non_upper_case_globals)] pub const ONE_MINUS_SRC1_ALPHA: types::GLenum = 0x88FB;\n#[allow(dead_code, non_upper_case_globals)] pub const ONE_MINUS_SRC1_COLOR: types::GLenum = 0x88FA;\n#[allow(dead_code, non_upper_case_globals)] pub const ONE_MINUS_SRC_ALPHA: types::GLenum = 0x0303;\n#[allow(dead_code, non_upper_case_globals)] pub const ONE_MINUS_SRC_COLOR: types::GLenum = 0x0301;\n#[allow(dead_code, non_upper_case_globals)] pub const OR: types::GLenum = 0x1507;\n#[allow(dead_code, non_upper_case_globals)] pub const OR_INVERTED: types::GLenum = 0x150D;\n#[allow(dead_code, non_upper_case_globals)] pub const OR_REVERSE: types::GLenum = 0x150B;\n#[allow(dead_code, non_upper_case_globals)] pub const OUT_OF_MEMORY: types::GLenum = 0x0505;\n#[allow(dead_code, non_upper_case_globals)] pub const PACK_ALIGNMENT: types::GLenum = 0x0D05;\n#[allow(dead_code, non_upper_case_globals)] pub const PACK_IMAGE_HEIGHT: types::GLenum = 0x806C;\n#[allow(dead_code, non_upper_case_globals)] pub const PACK_LSB_FIRST: types::GLenum = 0x0D01;\n#[allow(dead_code, non_upper_case_globals)] pub const PACK_ROW_LENGTH: types::GLenum = 0x0D02;\n#[allow(dead_code, non_upper_case_globals)] pub const PACK_SKIP_IMAGES: types::GLenum = 0x806B;\n#[allow(dead_code, non_upper_case_globals)] pub const PACK_SKIP_PIXELS: types::GLenum = 0x0D04;\n#[allow(dead_code, non_upper_case_globals)] pub const PACK_SKIP_ROWS: types::GLenum = 0x0D03;\n#[allow(dead_code, non_upper_case_globals)] pub const PACK_SWAP_BYTES: types::GLenum = 0x0D00;\n#[allow(dead_code, non_upper_case_globals)] pub const PIXEL_PACK_BUFFER: types::GLenum = 0x88EB;\n#[allow(dead_code, non_upper_case_globals)] pub const PIXEL_PACK_BUFFER_BINDING: types::GLenum = 0x88ED;\n#[allow(dead_code, non_upper_case_globals)] pub const PIXEL_UNPACK_BUFFER: types::GLenum = 0x88EC;\n#[allow(dead_code, non_upper_case_globals)] pub const PIXEL_UNPACK_BUFFER_BINDING: types::GLenum = 0x88EF;\n#[allow(dead_code, non_upper_case_globals)] pub const POINT: types::GLenum = 0x1B00;\n#[allow(dead_code, non_upper_case_globals)] pub const POINTS: types::GLenum = 0x0000;\n#[allow(dead_code, non_upper_case_globals)] pub const POINT_FADE_THRESHOLD_SIZE: types::GLenum = 0x8128;\n#[allow(dead_code, non_upper_case_globals)] pub const POINT_SIZE: types::GLenum = 0x0B11;\n#[allow(dead_code, non_upper_case_globals)] pub const POINT_SIZE_GRANULARITY: types::GLenum = 0x0B13;\n#[allow(dead_code, non_upper_case_globals)] pub const POINT_SIZE_RANGE: types::GLenum = 0x0B12;\n#[allow(dead_code, non_upper_case_globals)] pub const POINT_SPRITE_COORD_ORIGIN: types::GLenum = 0x8CA0;\n#[allow(dead_code, non_upper_case_globals)] pub const POLYGON_MODE: types::GLenum = 0x0B40;\n#[allow(dead_code, non_upper_case_globals)] pub const POLYGON_OFFSET_FACTOR: types::GLenum = 0x8038;\n#[allow(dead_code, non_upper_case_globals)] pub const POLYGON_OFFSET_FILL: types::GLenum = 0x8037;\n#[allow(dead_code, non_upper_case_globals)] pub const POLYGON_OFFSET_LINE: types::GLenum = 0x2A02;\n#[allow(dead_code, non_upper_case_globals)] pub const POLYGON_OFFSET_POINT: types::GLenum = 0x2A01;\n#[allow(dead_code, non_upper_case_globals)] pub const POLYGON_OFFSET_UNITS: types::GLenum = 0x2A00;\n#[allow(dead_code, non_upper_case_globals)] pub const POLYGON_SMOOTH: types::GLenum = 0x0B41;\n#[allow(dead_code, non_upper_case_globals)] pub const POLYGON_SMOOTH_HINT: types::GLenum = 0x0C53;\n#[allow(dead_code, non_upper_case_globals)] pub const PRIMITIVES_GENERATED: types::GLenum = 0x8C87;\n#[allow(dead_code, non_upper_case_globals)] pub const PRIMITIVE_RESTART: types::GLenum = 0x8F9D;\n#[allow(dead_code, non_upper_case_globals)] pub const PRIMITIVE_RESTART_INDEX: types::GLenum = 0x8F9E;\n#[allow(dead_code, non_upper_case_globals)] pub const PROGRAM_POINT_SIZE: types::GLenum = 0x8642;\n#[allow(dead_code, non_upper_case_globals)] pub const PROVOKING_VERTEX: types::GLenum = 0x8E4F;\n#[allow(dead_code, non_upper_case_globals)] pub const PROXY_TEXTURE_1D: types::GLenum = 0x8063;\n#[allow(dead_code, non_upper_case_globals)] pub const PROXY_TEXTURE_1D_ARRAY: types::GLenum = 0x8C19;\n#[allow(dead_code, non_upper_case_globals)] pub const PROXY_TEXTURE_2D: types::GLenum = 0x8064;\n#[allow(dead_code, non_upper_case_globals)] pub const PROXY_TEXTURE_2D_ARRAY: types::GLenum = 0x8C1B;\n#[allow(dead_code, non_upper_case_globals)] pub const PROXY_TEXTURE_2D_MULTISAMPLE: types::GLenum = 0x9101;\n#[allow(dead_code, non_upper_case_globals)] pub const PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY: types::GLenum = 0x9103;\n#[allow(dead_code, non_upper_case_globals)] pub const PROXY_TEXTURE_3D: types::GLenum = 0x8070;\n#[allow(dead_code, non_upper_case_globals)] pub const PROXY_TEXTURE_CUBE_MAP: types::GLenum = 0x851B;\n#[allow(dead_code, non_upper_case_globals)] pub const PROXY_TEXTURE_RECTANGLE: types::GLenum = 0x84F7;\n#[allow(dead_code, non_upper_case_globals)] pub const QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION: types::GLenum = 0x8E4C;\n#[allow(dead_code, non_upper_case_globals)] pub const QUERY_BY_REGION_NO_WAIT: types::GLenum = 0x8E16;\n#[allow(dead_code, non_upper_case_globals)] pub const QUERY_BY_REGION_WAIT: types::GLenum = 0x8E15;\n#[allow(dead_code, non_upper_case_globals)] pub const QUERY_COUNTER_BITS: types::GLenum = 0x8864;\n#[allow(dead_code, non_upper_case_globals)] pub const QUERY_NO_WAIT: types::GLenum = 0x8E14;\n#[allow(dead_code, non_upper_case_globals)] pub const QUERY_RESULT: types::GLenum = 0x8866;\n#[allow(dead_code, non_upper_case_globals)] pub const QUERY_RESULT_AVAILABLE: types::GLenum = 0x8867;\n#[allow(dead_code, non_upper_case_globals)] pub const QUERY_WAIT: types::GLenum = 0x8E13;\n#[allow(dead_code, non_upper_case_globals)] pub const R11F_G11F_B10F: types::GLenum = 0x8C3A;\n#[allow(dead_code, non_upper_case_globals)] pub const R16: types::GLenum = 0x822A;\n#[allow(dead_code, non_upper_case_globals)] pub const R16F: types::GLenum = 0x822D;\n#[allow(dead_code, non_upper_case_globals)] pub const R16I: types::GLenum = 0x8233;\n#[allow(dead_code, non_upper_case_globals)] pub const R16UI: types::GLenum = 0x8234;\n#[allow(dead_code, non_upper_case_globals)] pub const R16_SNORM: types::GLenum = 0x8F98;\n#[allow(dead_code, non_upper_case_globals)] pub const R32F: types::GLenum = 0x822E;\n#[allow(dead_code, non_upper_case_globals)] pub const R32I: types::GLenum = 0x8235;\n#[allow(dead_code, non_upper_case_globals)] pub const R32UI: types::GLenum = 0x8236;\n#[allow(dead_code, non_upper_case_globals)] pub const R3_G3_B2: types::GLenum = 0x2A10;\n#[allow(dead_code, non_upper_case_globals)] pub const R8: types::GLenum = 0x8229;\n#[allow(dead_code, non_upper_case_globals)] pub const R8I: types::GLenum = 0x8231;\n#[allow(dead_code, non_upper_case_globals)] pub const R8UI: types::GLenum = 0x8232;\n#[allow(dead_code, non_upper_case_globals)] pub const R8_SNORM: types::GLenum = 0x8F94;\n#[allow(dead_code, non_upper_case_globals)] pub const RASTERIZER_DISCARD: types::GLenum = 0x8C89;\n#[allow(dead_code, non_upper_case_globals)] pub const READ_BUFFER: types::GLenum = 0x0C02;\n#[allow(dead_code, non_upper_case_globals)] pub const READ_FRAMEBUFFER: types::GLenum = 0x8CA8;\n#[allow(dead_code, non_upper_case_globals)] pub const READ_FRAMEBUFFER_BINDING: types::GLenum = 0x8CAA;\n#[allow(dead_code, non_upper_case_globals)] pub const READ_ONLY: types::GLenum = 0x88B8;\n#[allow(dead_code, non_upper_case_globals)] pub const READ_WRITE: types::GLenum = 0x88BA;\n#[allow(dead_code, non_upper_case_globals)] pub const RED: types::GLenum = 0x1903;\n#[allow(dead_code, non_upper_case_globals)] pub const RED_INTEGER: types::GLenum = 0x8D94;\n#[allow(dead_code, non_upper_case_globals)] pub const RENDERBUFFER: types::GLenum = 0x8D41;\n#[allow(dead_code, non_upper_case_globals)] pub const RENDERBUFFER_ALPHA_SIZE: types::GLenum = 0x8D53;\n#[allow(dead_code, non_upper_case_globals)] pub const RENDERBUFFER_BINDING: types::GLenum = 0x8CA7;\n#[allow(dead_code, non_upper_case_globals)] pub const RENDERBUFFER_BLUE_SIZE: types::GLenum = 0x8D52;\n#[allow(dead_code, non_upper_case_globals)] pub const RENDERBUFFER_DEPTH_SIZE: types::GLenum = 0x8D54;\n#[allow(dead_code, non_upper_case_globals)] pub const RENDERBUFFER_GREEN_SIZE: types::GLenum = 0x8D51;\n#[allow(dead_code, non_upper_case_globals)] pub const RENDERBUFFER_HEIGHT: types::GLenum = 0x8D43;\n#[allow(dead_code, non_upper_case_globals)] pub const RENDERBUFFER_INTERNAL_FORMAT: types::GLenum = 0x8D44;\n#[allow(dead_code, non_upper_case_globals)] pub const RENDERBUFFER_RED_SIZE: types::GLenum = 0x8D50;\n#[allow(dead_code, non_upper_case_globals)] pub const RENDERBUFFER_SAMPLES: types::GLenum = 0x8CAB;\n#[allow(dead_code, non_upper_case_globals)] pub const RENDERBUFFER_STENCIL_SIZE: types::GLenum = 0x8D55;\n#[allow(dead_code, non_upper_case_globals)] pub const RENDERBUFFER_WIDTH: types::GLenum = 0x8D42;\n#[allow(dead_code, non_upper_case_globals)] pub const RENDERER: types::GLenum = 0x1F01;\n#[allow(dead_code, non_upper_case_globals)] pub const REPEAT: types::GLenum = 0x2901;\n#[allow(dead_code, non_upper_case_globals)] pub const REPLACE: types::GLenum = 0x1E01;\n#[allow(dead_code, non_upper_case_globals)] pub const RG: types::GLenum = 0x8227;\n#[allow(dead_code, non_upper_case_globals)] pub const RG16: types::GLenum = 0x822C;\n#[allow(dead_code, non_upper_case_globals)] pub const RG16F: types::GLenum = 0x822F;\n#[allow(dead_code, non_upper_case_globals)] pub const RG16I: types::GLenum = 0x8239;\n#[allow(dead_code, non_upper_case_globals)] pub const RG16UI: types::GLenum = 0x823A;\n#[allow(dead_code, non_upper_case_globals)] pub const RG16_SNORM: types::GLenum = 0x8F99;\n#[allow(dead_code, non_upper_case_globals)] pub const RG32F: types::GLenum = 0x8230;\n#[allow(dead_code, non_upper_case_globals)] pub const RG32I: types::GLenum = 0x823B;\n#[allow(dead_code, non_upper_case_globals)] pub const RG32UI: types::GLenum = 0x823C;\n#[allow(dead_code, non_upper_case_globals)] pub const RG8: types::GLenum = 0x822B;\n#[allow(dead_code, non_upper_case_globals)] pub const RG8I: types::GLenum = 0x8237;\n#[allow(dead_code, non_upper_case_globals)] pub const RG8UI: types::GLenum = 0x8238;\n#[allow(dead_code, non_upper_case_globals)] pub const RG8_SNORM: types::GLenum = 0x8F95;\n#[allow(dead_code, non_upper_case_globals)] pub const RGB: types::GLenum = 0x1907;\n#[allow(dead_code, non_upper_case_globals)] pub const RGB10: types::GLenum = 0x8052;\n#[allow(dead_code, non_upper_case_globals)] pub const RGB10_A2: types::GLenum = 0x8059;\n#[allow(dead_code, non_upper_case_globals)] pub const RGB10_A2UI: types::GLenum = 0x906F;\n#[allow(dead_code, non_upper_case_globals)] pub const RGB12: types::GLenum = 0x8053;\n#[allow(dead_code, non_upper_case_globals)] pub const RGB16: types::GLenum = 0x8054;\n#[allow(dead_code, non_upper_case_globals)] pub const RGB16F: types::GLenum = 0x881B;\n#[allow(dead_code, non_upper_case_globals)] pub const RGB16I: types::GLenum = 0x8D89;\n#[allow(dead_code, non_upper_case_globals)] pub const RGB16UI: types::GLenum = 0x8D77;\n#[allow(dead_code, non_upper_case_globals)] pub const RGB16_SNORM: types::GLenum = 0x8F9A;\n#[allow(dead_code, non_upper_case_globals)] pub const RGB32F: types::GLenum = 0x8815;\n#[allow(dead_code, non_upper_case_globals)] pub const RGB32I: types::GLenum = 0x8D83;\n#[allow(dead_code, non_upper_case_globals)] pub const RGB32UI: types::GLenum = 0x8D71;\n#[allow(dead_code, non_upper_case_globals)] pub const RGB4: types::GLenum = 0x804F;\n#[allow(dead_code, non_upper_case_globals)] pub const RGB5: types::GLenum = 0x8050;\n#[allow(dead_code, non_upper_case_globals)] pub const RGB5_A1: types::GLenum = 0x8057;\n#[allow(dead_code, non_upper_case_globals)] pub const RGB8: types::GLenum = 0x8051;\n#[allow(dead_code, non_upper_case_globals)] pub const RGB8I: types::GLenum = 0x8D8F;\n#[allow(dead_code, non_upper_case_globals)] pub const RGB8UI: types::GLenum = 0x8D7D;\n#[allow(dead_code, non_upper_case_globals)] pub const RGB8_SNORM: types::GLenum = 0x8F96;\n#[allow(dead_code, non_upper_case_globals)] pub const RGB9_E5: types::GLenum = 0x8C3D;\n#[allow(dead_code, non_upper_case_globals)] pub const RGBA: types::GLenum = 0x1908;\n#[allow(dead_code, non_upper_case_globals)] pub const RGBA12: types::GLenum = 0x805A;\n#[allow(dead_code, non_upper_case_globals)] pub const RGBA16: types::GLenum = 0x805B;\n#[allow(dead_code, non_upper_case_globals)] pub const RGBA16F: types::GLenum = 0x881A;\n#[allow(dead_code, non_upper_case_globals)] pub const RGBA16I: types::GLenum = 0x8D88;\n#[allow(dead_code, non_upper_case_globals)] pub const RGBA16UI: types::GLenum = 0x8D76;\n#[allow(dead_code, non_upper_case_globals)] pub const RGBA16_SNORM: types::GLenum = 0x8F9B;\n#[allow(dead_code, non_upper_case_globals)] pub const RGBA2: types::GLenum = 0x8055;\n#[allow(dead_code, non_upper_case_globals)] pub const RGBA32F: types::GLenum = 0x8814;\n#[allow(dead_code, non_upper_case_globals)] pub const RGBA32I: types::GLenum = 0x8D82;\n#[allow(dead_code, non_upper_case_globals)] pub const RGBA32UI: types::GLenum = 0x8D70;\n#[allow(dead_code, non_upper_case_globals)] pub const RGBA4: types::GLenum = 0x8056;\n#[allow(dead_code, non_upper_case_globals)] pub const RGBA8: types::GLenum = 0x8058;\n#[allow(dead_code, non_upper_case_globals)] pub const RGBA8I: types::GLenum = 0x8D8E;\n#[allow(dead_code, non_upper_case_globals)] pub const RGBA8UI: types::GLenum = 0x8D7C;\n#[allow(dead_code, non_upper_case_globals)] pub const RGBA8_SNORM: types::GLenum = 0x8F97;\n#[allow(dead_code, non_upper_case_globals)] pub const RGBA_INTEGER: types::GLenum = 0x8D99;\n#[allow(dead_code, non_upper_case_globals)] pub const RGB_INTEGER: types::GLenum = 0x8D98;\n#[allow(dead_code, non_upper_case_globals)] pub const RG_INTEGER: types::GLenum = 0x8228;\n#[allow(dead_code, non_upper_case_globals)] pub const RIGHT: types::GLenum = 0x0407;\n#[allow(dead_code, non_upper_case_globals)] pub const SAMPLER_1D: types::GLenum = 0x8B5D;\n#[allow(dead_code, non_upper_case_globals)] pub const SAMPLER_1D_ARRAY: types::GLenum = 0x8DC0;\n#[allow(dead_code, non_upper_case_globals)] pub const SAMPLER_1D_ARRAY_SHADOW: types::GLenum = 0x8DC3;\n#[allow(dead_code, non_upper_case_globals)] pub const SAMPLER_1D_SHADOW: types::GLenum = 0x8B61;\n#[allow(dead_code, non_upper_case_globals)] pub const SAMPLER_2D: types::GLenum = 0x8B5E;\n#[allow(dead_code, non_upper_case_globals)] pub const SAMPLER_2D_ARRAY: types::GLenum = 0x8DC1;\n#[allow(dead_code, non_upper_case_globals)] pub const SAMPLER_2D_ARRAY_SHADOW: types::GLenum = 0x8DC4;\n#[allow(dead_code, non_upper_case_globals)] pub const SAMPLER_2D_MULTISAMPLE: types::GLenum = 0x9108;\n#[allow(dead_code, non_upper_case_globals)] pub const SAMPLER_2D_MULTISAMPLE_ARRAY: types::GLenum = 0x910B;\n#[allow(dead_code, non_upper_case_globals)] pub const SAMPLER_2D_RECT: types::GLenum = 0x8B63;\n#[allow(dead_code, non_upper_case_globals)] pub const SAMPLER_2D_RECT_SHADOW: types::GLenum = 0x8B64;\n#[allow(dead_code, non_upper_case_globals)] pub const SAMPLER_2D_SHADOW: types::GLenum = 0x8B62;\n#[allow(dead_code, non_upper_case_globals)] pub const SAMPLER_3D: types::GLenum = 0x8B5F;\n#[allow(dead_code, non_upper_case_globals)] pub const SAMPLER_BINDING: types::GLenum = 0x8919;\n#[allow(dead_code, non_upper_case_globals)] pub const SAMPLER_BUFFER: types::GLenum = 0x8DC2;\n#[allow(dead_code, non_upper_case_globals)] pub const SAMPLER_CUBE: types::GLenum = 0x8B60;\n#[allow(dead_code, non_upper_case_globals)] pub const SAMPLER_CUBE_SHADOW: types::GLenum = 0x8DC5;\n#[allow(dead_code, non_upper_case_globals)] pub const SAMPLES: types::GLenum = 0x80A9;\n#[allow(dead_code, non_upper_case_globals)] pub const SAMPLES_PASSED: types::GLenum = 0x8914;\n#[allow(dead_code, non_upper_case_globals)] pub const SAMPLE_ALPHA_TO_COVERAGE: types::GLenum = 0x809E;\n#[allow(dead_code, non_upper_case_globals)] pub const SAMPLE_ALPHA_TO_ONE: types::GLenum = 0x809F;\n#[allow(dead_code, non_upper_case_globals)] pub const SAMPLE_BUFFERS: types::GLenum = 0x80A8;\n#[allow(dead_code, non_upper_case_globals)] pub const SAMPLE_COVERAGE: types::GLenum = 0x80A0;\n#[allow(dead_code, non_upper_case_globals)] pub const SAMPLE_COVERAGE_INVERT: types::GLenum = 0x80AB;\n#[allow(dead_code, non_upper_case_globals)] pub const SAMPLE_COVERAGE_VALUE: types::GLenum = 0x80AA;\n#[allow(dead_code, non_upper_case_globals)] pub const SAMPLE_MASK: types::GLenum = 0x8E51;\n#[allow(dead_code, non_upper_case_globals)] pub const SAMPLE_MASK_VALUE: types::GLenum = 0x8E52;\n#[allow(dead_code, non_upper_case_globals)] pub const SAMPLE_POSITION: types::GLenum = 0x8E50;\n#[allow(dead_code, non_upper_case_globals)] pub const SCISSOR_BOX: types::GLenum = 0x0C10;\n#[allow(dead_code, non_upper_case_globals)] pub const SCISSOR_TEST: types::GLenum = 0x0C11;\n#[allow(dead_code, non_upper_case_globals)] pub const SEPARATE_ATTRIBS: types::GLenum = 0x8C8D;\n#[allow(dead_code, non_upper_case_globals)] pub const SET: types::GLenum = 0x150F;\n#[allow(dead_code, non_upper_case_globals)] pub const SHADER_SOURCE_LENGTH: types::GLenum = 0x8B88;\n#[allow(dead_code, non_upper_case_globals)] pub const SHADER_TYPE: types::GLenum = 0x8B4F;\n#[allow(dead_code, non_upper_case_globals)] pub const SHADING_LANGUAGE_VERSION: types::GLenum = 0x8B8C;\n#[allow(dead_code, non_upper_case_globals)] pub const SHORT: types::GLenum = 0x1402;\n#[allow(dead_code, non_upper_case_globals)] pub const SIGNALED: types::GLenum = 0x9119;\n#[allow(dead_code, non_upper_case_globals)] pub const SIGNED_NORMALIZED: types::GLenum = 0x8F9C;\n#[allow(dead_code, non_upper_case_globals)] pub const SMOOTH_LINE_WIDTH_GRANULARITY: types::GLenum = 0x0B23;\n#[allow(dead_code, non_upper_case_globals)] pub const SMOOTH_LINE_WIDTH_RANGE: types::GLenum = 0x0B22;\n#[allow(dead_code, non_upper_case_globals)] pub const SMOOTH_POINT_SIZE_GRANULARITY: types::GLenum = 0x0B13;\n#[allow(dead_code, non_upper_case_globals)] pub const SMOOTH_POINT_SIZE_RANGE: types::GLenum = 0x0B12;\n#[allow(dead_code, non_upper_case_globals)] pub const SRC1_ALPHA: types::GLenum = 0x8589;\n#[allow(dead_code, non_upper_case_globals)] pub const SRC1_COLOR: types::GLenum = 0x88F9;\n#[allow(dead_code, non_upper_case_globals)] pub const SRC_ALPHA: types::GLenum = 0x0302;\n#[allow(dead_code, non_upper_case_globals)] pub const SRC_ALPHA_SATURATE: types::GLenum = 0x0308;\n#[allow(dead_code, non_upper_case_globals)] pub const SRC_COLOR: types::GLenum = 0x0300;\n#[allow(dead_code, non_upper_case_globals)] pub const SRGB: types::GLenum = 0x8C40;\n#[allow(dead_code, non_upper_case_globals)] pub const SRGB8: types::GLenum = 0x8C41;\n#[allow(dead_code, non_upper_case_globals)] pub const SRGB8_ALPHA8: types::GLenum = 0x8C43;\n#[allow(dead_code, non_upper_case_globals)] pub const SRGB_ALPHA: types::GLenum = 0x8C42;\n#[allow(dead_code, non_upper_case_globals)] pub const STATIC_COPY: types::GLenum = 0x88E6;\n#[allow(dead_code, non_upper_case_globals)] pub const STATIC_DRAW: types::GLenum = 0x88E4;\n#[allow(dead_code, non_upper_case_globals)] pub const STATIC_READ: types::GLenum = 0x88E5;\n#[allow(dead_code, non_upper_case_globals)] pub const STENCIL: types::GLenum = 0x1802;\n#[allow(dead_code, non_upper_case_globals)] pub const STENCIL_ATTACHMENT: types::GLenum = 0x8D20;\n#[allow(dead_code, non_upper_case_globals)] pub const STENCIL_BACK_FAIL: types::GLenum = 0x8801;\n#[allow(dead_code, non_upper_case_globals)] pub const STENCIL_BACK_FUNC: types::GLenum = 0x8800;\n#[allow(dead_code, non_upper_case_globals)] pub const STENCIL_BACK_PASS_DEPTH_FAIL: types::GLenum = 0x8802;\n#[allow(dead_code, non_upper_case_globals)] pub const STENCIL_BACK_PASS_DEPTH_PASS: types::GLenum = 0x8803;\n#[allow(dead_code, non_upper_case_globals)] pub const STENCIL_BACK_REF: types::GLenum = 0x8CA3;\n#[allow(dead_code, non_upper_case_globals)] pub const STENCIL_BACK_VALUE_MASK: types::GLenum = 0x8CA4;\n#[allow(dead_code, non_upper_case_globals)] pub const STENCIL_BACK_WRITEMASK: types::GLenum = 0x8CA5;\n#[allow(dead_code, non_upper_case_globals)] pub const STENCIL_BUFFER_BIT: types::GLenum = 0x00000400;\n#[allow(dead_code, non_upper_case_globals)] pub const STENCIL_CLEAR_VALUE: types::GLenum = 0x0B91;\n#[allow(dead_code, non_upper_case_globals)] pub const STENCIL_FAIL: types::GLenum = 0x0B94;\n#[allow(dead_code, non_upper_case_globals)] pub const STENCIL_FUNC: types::GLenum = 0x0B92;\n#[allow(dead_code, non_upper_case_globals)] pub const STENCIL_INDEX: types::GLenum = 0x1901;\n#[allow(dead_code, non_upper_case_globals)] pub const STENCIL_INDEX1: types::GLenum = 0x8D46;\n#[allow(dead_code, non_upper_case_globals)] pub const STENCIL_INDEX16: types::GLenum = 0x8D49;\n#[allow(dead_code, non_upper_case_globals)] pub const STENCIL_INDEX4: types::GLenum = 0x8D47;\n#[allow(dead_code, non_upper_case_globals)] pub const STENCIL_INDEX8: types::GLenum = 0x8D48;\n#[allow(dead_code, non_upper_case_globals)] pub const STENCIL_PASS_DEPTH_FAIL: types::GLenum = 0x0B95;\n#[allow(dead_code, non_upper_case_globals)] pub const STENCIL_PASS_DEPTH_PASS: types::GLenum = 0x0B96;\n#[allow(dead_code, non_upper_case_globals)] pub const STENCIL_REF: types::GLenum = 0x0B97;\n#[allow(dead_code, non_upper_case_globals)] pub const STENCIL_TEST: types::GLenum = 0x0B90;\n#[allow(dead_code, non_upper_case_globals)] pub const STENCIL_VALUE_MASK: types::GLenum = 0x0B93;\n#[allow(dead_code, non_upper_case_globals)] pub const STENCIL_WRITEMASK: types::GLenum = 0x0B98;\n#[allow(dead_code, non_upper_case_globals)] pub const STEREO: types::GLenum = 0x0C33;\n#[allow(dead_code, non_upper_case_globals)] pub const STREAM_COPY: types::GLenum = 0x88E2;\n#[allow(dead_code, non_upper_case_globals)] pub const STREAM_DRAW: types::GLenum = 0x88E0;\n#[allow(dead_code, non_upper_case_globals)] pub const STREAM_READ: types::GLenum = 0x88E1;\n#[allow(dead_code, non_upper_case_globals)] pub const SUBPIXEL_BITS: types::GLenum = 0x0D50;\n#[allow(dead_code, non_upper_case_globals)] pub const SYNC_CONDITION: types::GLenum = 0x9113;\n#[allow(dead_code, non_upper_case_globals)] pub const SYNC_FENCE: types::GLenum = 0x9116;\n#[allow(dead_code, non_upper_case_globals)] pub const SYNC_FLAGS: types::GLenum = 0x9115;\n#[allow(dead_code, non_upper_case_globals)] pub const SYNC_FLUSH_COMMANDS_BIT: types::GLenum = 0x00000001;\n#[allow(dead_code, non_upper_case_globals)] pub const SYNC_GPU_COMMANDS_COMPLETE: types::GLenum = 0x9117;\n#[allow(dead_code, non_upper_case_globals)] pub const SYNC_STATUS: types::GLenum = 0x9114;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE: types::GLenum = 0x1702;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE0: types::GLenum = 0x84C0;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE1: types::GLenum = 0x84C1;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE10: types::GLenum = 0x84CA;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE11: types::GLenum = 0x84CB;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE12: types::GLenum = 0x84CC;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE13: types::GLenum = 0x84CD;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE14: types::GLenum = 0x84CE;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE15: types::GLenum = 0x84CF;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE16: types::GLenum = 0x84D0;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE17: types::GLenum = 0x84D1;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE18: types::GLenum = 0x84D2;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE19: types::GLenum = 0x84D3;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE2: types::GLenum = 0x84C2;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE20: types::GLenum = 0x84D4;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE21: types::GLenum = 0x84D5;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE22: types::GLenum = 0x84D6;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE23: types::GLenum = 0x84D7;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE24: types::GLenum = 0x84D8;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE25: types::GLenum = 0x84D9;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE26: types::GLenum = 0x84DA;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE27: types::GLenum = 0x84DB;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE28: types::GLenum = 0x84DC;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE29: types::GLenum = 0x84DD;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE3: types::GLenum = 0x84C3;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE30: types::GLenum = 0x84DE;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE31: types::GLenum = 0x84DF;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE4: types::GLenum = 0x84C4;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE5: types::GLenum = 0x84C5;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE6: types::GLenum = 0x84C6;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE7: types::GLenum = 0x84C7;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE8: types::GLenum = 0x84C8;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE9: types::GLenum = 0x84C9;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE_1D: types::GLenum = 0x0DE0;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE_1D_ARRAY: types::GLenum = 0x8C18;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE_2D: types::GLenum = 0x0DE1;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE_2D_ARRAY: types::GLenum = 0x8C1A;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE_2D_MULTISAMPLE: types::GLenum = 0x9100;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE_2D_MULTISAMPLE_ARRAY: types::GLenum = 0x9102;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE_3D: types::GLenum = 0x806F;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE_ALPHA_SIZE: types::GLenum = 0x805F;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE_ALPHA_TYPE: types::GLenum = 0x8C13;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE_BASE_LEVEL: types::GLenum = 0x813C;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE_BINDING_1D: types::GLenum = 0x8068;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE_BINDING_1D_ARRAY: types::GLenum = 0x8C1C;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE_BINDING_2D: types::GLenum = 0x8069;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE_BINDING_2D_ARRAY: types::GLenum = 0x8C1D;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE_BINDING_2D_MULTISAMPLE: types::GLenum = 0x9104;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY: types::GLenum = 0x9105;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE_BINDING_3D: types::GLenum = 0x806A;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE_BINDING_BUFFER: types::GLenum = 0x8C2C;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE_BINDING_CUBE_MAP: types::GLenum = 0x8514;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE_BINDING_RECTANGLE: types::GLenum = 0x84F6;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE_BLUE_SIZE: types::GLenum = 0x805E;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE_BLUE_TYPE: types::GLenum = 0x8C12;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE_BORDER_COLOR: types::GLenum = 0x1004;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE_BUFFER: types::GLenum = 0x8C2A;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE_BUFFER_DATA_STORE_BINDING: types::GLenum = 0x8C2D;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE_COMPARE_FUNC: types::GLenum = 0x884D;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE_COMPARE_MODE: types::GLenum = 0x884C;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE_COMPRESSED: types::GLenum = 0x86A1;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE_COMPRESSED_IMAGE_SIZE: types::GLenum = 0x86A0;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE_COMPRESSION_HINT: types::GLenum = 0x84EF;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE_CUBE_MAP: types::GLenum = 0x8513;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE_CUBE_MAP_NEGATIVE_X: types::GLenum = 0x8516;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE_CUBE_MAP_NEGATIVE_Y: types::GLenum = 0x8518;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE_CUBE_MAP_NEGATIVE_Z: types::GLenum = 0x851A;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE_CUBE_MAP_POSITIVE_X: types::GLenum = 0x8515;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE_CUBE_MAP_POSITIVE_Y: types::GLenum = 0x8517;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE_CUBE_MAP_POSITIVE_Z: types::GLenum = 0x8519;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE_CUBE_MAP_SEAMLESS: types::GLenum = 0x884F;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE_DEPTH: types::GLenum = 0x8071;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE_DEPTH_SIZE: types::GLenum = 0x884A;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE_DEPTH_TYPE: types::GLenum = 0x8C16;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE_FIXED_SAMPLE_LOCATIONS: types::GLenum = 0x9107;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE_GREEN_SIZE: types::GLenum = 0x805D;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE_GREEN_TYPE: types::GLenum = 0x8C11;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE_HEIGHT: types::GLenum = 0x1001;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE_INTERNAL_FORMAT: types::GLenum = 0x1003;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE_LOD_BIAS: types::GLenum = 0x8501;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE_MAG_FILTER: types::GLenum = 0x2800;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE_MAX_LEVEL: types::GLenum = 0x813D;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE_MAX_LOD: types::GLenum = 0x813B;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE_MIN_FILTER: types::GLenum = 0x2801;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE_MIN_LOD: types::GLenum = 0x813A;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE_RECTANGLE: types::GLenum = 0x84F5;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE_RED_SIZE: types::GLenum = 0x805C;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE_RED_TYPE: types::GLenum = 0x8C10;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE_SAMPLES: types::GLenum = 0x9106;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE_SHARED_SIZE: types::GLenum = 0x8C3F;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE_STENCIL_SIZE: types::GLenum = 0x88F1;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE_SWIZZLE_A: types::GLenum = 0x8E45;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE_SWIZZLE_B: types::GLenum = 0x8E44;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE_SWIZZLE_G: types::GLenum = 0x8E43;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE_SWIZZLE_R: types::GLenum = 0x8E42;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE_SWIZZLE_RGBA: types::GLenum = 0x8E46;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE_WIDTH: types::GLenum = 0x1000;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE_WRAP_R: types::GLenum = 0x8072;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE_WRAP_S: types::GLenum = 0x2802;\n#[allow(dead_code, non_upper_case_globals)] pub const TEXTURE_WRAP_T: types::GLenum = 0x2803;\n#[allow(dead_code, non_upper_case_globals)] pub const TIMEOUT_EXPIRED: types::GLenum = 0x911B;\n#[allow(dead_code, non_upper_case_globals)] pub const TIMEOUT_IGNORED: types::GLuint64 = 0xFFFFFFFFFFFFFFFF;\n#[allow(dead_code, non_upper_case_globals)] pub const TIMESTAMP: types::GLenum = 0x8E28;\n#[allow(dead_code, non_upper_case_globals)] pub const TIME_ELAPSED: types::GLenum = 0x88BF;\n#[allow(dead_code, non_upper_case_globals)] pub const TRANSFORM_FEEDBACK_BUFFER: types::GLenum = 0x8C8E;\n#[allow(dead_code, non_upper_case_globals)] pub const TRANSFORM_FEEDBACK_BUFFER_BINDING: types::GLenum = 0x8C8F;\n#[allow(dead_code, non_upper_case_globals)] pub const TRANSFORM_FEEDBACK_BUFFER_MODE: types::GLenum = 0x8C7F;\n#[allow(dead_code, non_upper_case_globals)] pub const TRANSFORM_FEEDBACK_BUFFER_SIZE: types::GLenum = 0x8C85;\n#[allow(dead_code, non_upper_case_globals)] pub const TRANSFORM_FEEDBACK_BUFFER_START: types::GLenum = 0x8C84;\n#[allow(dead_code, non_upper_case_globals)] pub const TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN: types::GLenum = 0x8C88;\n#[allow(dead_code, non_upper_case_globals)] pub const TRANSFORM_FEEDBACK_VARYINGS: types::GLenum = 0x8C83;\n#[allow(dead_code, non_upper_case_globals)] pub const TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH: types::GLenum = 0x8C76;\n#[allow(dead_code, non_upper_case_globals)] pub const TRIANGLES: types::GLenum = 0x0004;\n#[allow(dead_code, non_upper_case_globals)] pub const TRIANGLES_ADJACENCY: types::GLenum = 0x000C;\n#[allow(dead_code, non_upper_case_globals)] pub const TRIANGLE_FAN: types::GLenum = 0x0006;\n#[allow(dead_code, non_upper_case_globals)] pub const TRIANGLE_STRIP: types::GLenum = 0x0005;\n#[allow(dead_code, non_upper_case_globals)] pub const TRIANGLE_STRIP_ADJACENCY: types::GLenum = 0x000D;\n#[allow(dead_code, non_upper_case_globals)] pub const TRUE: types::GLboolean = 1;\n#[allow(dead_code, non_upper_case_globals)] pub const UNIFORM_ARRAY_STRIDE: types::GLenum = 0x8A3C;\n#[allow(dead_code, non_upper_case_globals)] pub const UNIFORM_BLOCK_ACTIVE_UNIFORMS: types::GLenum = 0x8A42;\n#[allow(dead_code, non_upper_case_globals)] pub const UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES: types::GLenum = 0x8A43;\n#[allow(dead_code, non_upper_case_globals)] pub const UNIFORM_BLOCK_BINDING: types::GLenum = 0x8A3F;\n#[allow(dead_code, non_upper_case_globals)] pub const UNIFORM_BLOCK_DATA_SIZE: types::GLenum = 0x8A40;\n#[allow(dead_code, non_upper_case_globals)] pub const UNIFORM_BLOCK_INDEX: types::GLenum = 0x8A3A;\n#[allow(dead_code, non_upper_case_globals)] pub const UNIFORM_BLOCK_NAME_LENGTH: types::GLenum = 0x8A41;\n#[allow(dead_code, non_upper_case_globals)] pub const UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER: types::GLenum = 0x8A46;\n#[allow(dead_code, non_upper_case_globals)] pub const UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER: types::GLenum = 0x8A45;\n#[allow(dead_code, non_upper_case_globals)] pub const UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER: types::GLenum = 0x8A44;\n#[allow(dead_code, non_upper_case_globals)] pub const UNIFORM_BUFFER: types::GLenum = 0x8A11;\n#[allow(dead_code, non_upper_case_globals)] pub const UNIFORM_BUFFER_BINDING: types::GLenum = 0x8A28;\n#[allow(dead_code, non_upper_case_globals)] pub const UNIFORM_BUFFER_OFFSET_ALIGNMENT: types::GLenum = 0x8A34;\n#[allow(dead_code, non_upper_case_globals)] pub const UNIFORM_BUFFER_SIZE: types::GLenum = 0x8A2A;\n#[allow(dead_code, non_upper_case_globals)] pub const UNIFORM_BUFFER_START: types::GLenum = 0x8A29;\n#[allow(dead_code, non_upper_case_globals)] pub const UNIFORM_IS_ROW_MAJOR: types::GLenum = 0x8A3E;\n#[allow(dead_code, non_upper_case_globals)] pub const UNIFORM_MATRIX_STRIDE: types::GLenum = 0x8A3D;\n#[allow(dead_code, non_upper_case_globals)] pub const UNIFORM_NAME_LENGTH: types::GLenum = 0x8A39;\n#[allow(dead_code, non_upper_case_globals)] pub const UNIFORM_OFFSET: types::GLenum = 0x8A3B;\n#[allow(dead_code, non_upper_case_globals)] pub const UNIFORM_SIZE: types::GLenum = 0x8A38;\n#[allow(dead_code, non_upper_case_globals)] pub const UNIFORM_TYPE: types::GLenum = 0x8A37;\n#[allow(dead_code, non_upper_case_globals)] pub const UNPACK_ALIGNMENT: types::GLenum = 0x0CF5;\n#[allow(dead_code, non_upper_case_globals)] pub const UNPACK_IMAGE_HEIGHT: types::GLenum = 0x806E;\n#[allow(dead_code, non_upper_case_globals)] pub const UNPACK_LSB_FIRST: types::GLenum = 0x0CF1;\n#[allow(dead_code, non_upper_case_globals)] pub const UNPACK_ROW_LENGTH: types::GLenum = 0x0CF2;\n#[allow(dead_code, non_upper_case_globals)] pub const UNPACK_SKIP_IMAGES: types::GLenum = 0x806D;\n#[allow(dead_code, non_upper_case_globals)] pub const UNPACK_SKIP_PIXELS: types::GLenum = 0x0CF4;\n#[allow(dead_code, non_upper_case_globals)] pub const UNPACK_SKIP_ROWS: types::GLenum = 0x0CF3;\n#[allow(dead_code, non_upper_case_globals)] pub const UNPACK_SWAP_BYTES: types::GLenum = 0x0CF0;\n#[allow(dead_code, non_upper_case_globals)] pub const UNSIGNALED: types::GLenum = 0x9118;\n#[allow(dead_code, non_upper_case_globals)] pub const UNSIGNED_BYTE: types::GLenum = 0x1401;\n#[allow(dead_code, non_upper_case_globals)] pub const UNSIGNED_BYTE_2_3_3_REV: types::GLenum = 0x8362;\n#[allow(dead_code, non_upper_case_globals)] pub const UNSIGNED_BYTE_3_3_2: types::GLenum = 0x8032;\n#[allow(dead_code, non_upper_case_globals)] pub const UNSIGNED_INT: types::GLenum = 0x1405;\n#[allow(dead_code, non_upper_case_globals)] pub const UNSIGNED_INT_10F_11F_11F_REV: types::GLenum = 0x8C3B;\n#[allow(dead_code, non_upper_case_globals)] pub const UNSIGNED_INT_10_10_10_2: types::GLenum = 0x8036;\n#[allow(dead_code, non_upper_case_globals)] pub const UNSIGNED_INT_24_8: types::GLenum = 0x84FA;\n#[allow(dead_code, non_upper_case_globals)] pub const UNSIGNED_INT_2_10_10_10_REV: types::GLenum = 0x8368;\n#[allow(dead_code, non_upper_case_globals)] pub const UNSIGNED_INT_5_9_9_9_REV: types::GLenum = 0x8C3E;\n#[allow(dead_code, non_upper_case_globals)] pub const UNSIGNED_INT_8_8_8_8: types::GLenum = 0x8035;\n#[allow(dead_code, non_upper_case_globals)] pub const UNSIGNED_INT_8_8_8_8_REV: types::GLenum = 0x8367;\n#[allow(dead_code, non_upper_case_globals)] pub const UNSIGNED_INT_SAMPLER_1D: types::GLenum = 0x8DD1;\n#[allow(dead_code, non_upper_case_globals)] pub const UNSIGNED_INT_SAMPLER_1D_ARRAY: types::GLenum = 0x8DD6;\n#[allow(dead_code, non_upper_case_globals)] pub const UNSIGNED_INT_SAMPLER_2D: types::GLenum = 0x8DD2;\n#[allow(dead_code, non_upper_case_globals)] pub const UNSIGNED_INT_SAMPLER_2D_ARRAY: types::GLenum = 0x8DD7;\n#[allow(dead_code, non_upper_case_globals)] pub const UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE: types::GLenum = 0x910A;\n#[allow(dead_code, non_upper_case_globals)] pub const UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY: types::GLenum = 0x910D;\n#[allow(dead_code, non_upper_case_globals)] pub const UNSIGNED_INT_SAMPLER_2D_RECT: types::GLenum = 0x8DD5;\n#[allow(dead_code, non_upper_case_globals)] pub const UNSIGNED_INT_SAMPLER_3D: types::GLenum = 0x8DD3;\n#[allow(dead_code, non_upper_case_globals)] pub const UNSIGNED_INT_SAMPLER_BUFFER: types::GLenum = 0x8DD8;\n#[allow(dead_code, non_upper_case_globals)] pub const UNSIGNED_INT_SAMPLER_CUBE: types::GLenum = 0x8DD4;\n#[allow(dead_code, non_upper_case_globals)] pub const UNSIGNED_INT_VEC2: types::GLenum = 0x8DC6;\n#[allow(dead_code, non_upper_case_globals)] pub const UNSIGNED_INT_VEC3: types::GLenum = 0x8DC7;\n#[allow(dead_code, non_upper_case_globals)] pub const UNSIGNED_INT_VEC4: types::GLenum = 0x8DC8;\n#[allow(dead_code, non_upper_case_globals)] pub const UNSIGNED_NORMALIZED: types::GLenum = 0x8C17;\n#[allow(dead_code, non_upper_case_globals)] pub const UNSIGNED_SHORT: types::GLenum = 0x1403;\n#[allow(dead_code, non_upper_case_globals)] pub const UNSIGNED_SHORT_1_5_5_5_REV: types::GLenum = 0x8366;\n#[allow(dead_code, non_upper_case_globals)] pub const UNSIGNED_SHORT_4_4_4_4: types::GLenum = 0x8033;\n#[allow(dead_code, non_upper_case_globals)] pub const UNSIGNED_SHORT_4_4_4_4_REV: types::GLenum = 0x8365;\n#[allow(dead_code, non_upper_case_globals)] pub const UNSIGNED_SHORT_5_5_5_1: types::GLenum = 0x8034;\n#[allow(dead_code, non_upper_case_globals)] pub const UNSIGNED_SHORT_5_6_5: types::GLenum = 0x8363;\n#[allow(dead_code, non_upper_case_globals)] pub const UNSIGNED_SHORT_5_6_5_REV: types::GLenum = 0x8364;\n#[allow(dead_code, non_upper_case_globals)] pub const UPPER_LEFT: types::GLenum = 0x8CA2;\n#[allow(dead_code, non_upper_case_globals)] pub const VALIDATE_STATUS: types::GLenum = 0x8B83;\n#[allow(dead_code, non_upper_case_globals)] pub const VENDOR: types::GLenum = 0x1F00;\n#[allow(dead_code, non_upper_case_globals)] pub const VERSION: types::GLenum = 0x1F02;\n#[allow(dead_code, non_upper_case_globals)] pub const VERTEX_ARRAY_BINDING: types::GLenum = 0x85B5;\n#[allow(dead_code, non_upper_case_globals)] pub const VERTEX_ATTRIB_ARRAY_BUFFER_BINDING: types::GLenum = 0x889F;\n#[allow(dead_code, non_upper_case_globals)] pub const VERTEX_ATTRIB_ARRAY_DIVISOR: types::GLenum = 0x88FE;\n#[allow(dead_code, non_upper_case_globals)] pub const VERTEX_ATTRIB_ARRAY_ENABLED: types::GLenum = 0x8622;\n#[allow(dead_code, non_upper_case_globals)] pub const VERTEX_ATTRIB_ARRAY_INTEGER: types::GLenum = 0x88FD;\n#[allow(dead_code, non_upper_case_globals)] pub const VERTEX_ATTRIB_ARRAY_NORMALIZED: types::GLenum = 0x886A;\n#[allow(dead_code, non_upper_case_globals)] pub const VERTEX_ATTRIB_ARRAY_POINTER: types::GLenum = 0x8645;\n#[allow(dead_code, non_upper_case_globals)] pub const VERTEX_ATTRIB_ARRAY_SIZE: types::GLenum = 0x8623;\n#[allow(dead_code, non_upper_case_globals)] pub const VERTEX_ATTRIB_ARRAY_STRIDE: types::GLenum = 0x8624;\n#[allow(dead_code, non_upper_case_globals)] pub const VERTEX_ATTRIB_ARRAY_TYPE: types::GLenum = 0x8625;\n#[allow(dead_code, non_upper_case_globals)] pub const VERTEX_PROGRAM_POINT_SIZE: types::GLenum = 0x8642;\n#[allow(dead_code, non_upper_case_globals)] pub const VERTEX_SHADER: types::GLenum = 0x8B31;\n#[allow(dead_code, non_upper_case_globals)] pub const VIEWPORT: types::GLenum = 0x0BA2;\n#[allow(dead_code, non_upper_case_globals)] pub const WAIT_FAILED: types::GLenum = 0x911D;\n#[allow(dead_code, non_upper_case_globals)] pub const WRITE_ONLY: types::GLenum = 0x88B9;\n#[allow(dead_code, non_upper_case_globals)] pub const XOR: types::GLenum = 0x1506;\n#[allow(dead_code, non_upper_case_globals)] pub const ZERO: types::GLenum = 0;\n/// Fallbacks: ActiveTextureARB\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn ActiveTexture(texture: types::GLenum) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum) -> ()>(storage::ActiveTexture.f)(texture) }\n/// Fallbacks: AttachObjectARB\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn AttachShader(program: types::GLuint, shader: types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, types::GLuint) -> ()>(storage::AttachShader.f)(program, shader) }\n/// Fallbacks: BeginConditionalRenderNV\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn BeginConditionalRender(id: types::GLuint, mode: types::GLenum) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, types::GLenum) -> ()>(storage::BeginConditionalRender.f)(id, mode) }\n/// Fallbacks: BeginQueryARB\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn BeginQuery(target: types::GLenum, id: types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLuint) -> ()>(storage::BeginQuery.f)(target, id) }\n/// Fallbacks: BeginTransformFeedbackEXT, BeginTransformFeedbackNV\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn BeginTransformFeedback(primitiveMode: types::GLenum) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum) -> ()>(storage::BeginTransformFeedback.f)(primitiveMode) }\n/// Fallbacks: BindAttribLocationARB\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn BindAttribLocation(program: types::GLuint, index: types::GLuint, name: *const types::GLchar) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, types::GLuint, *const types::GLchar) -> ()>(storage::BindAttribLocation.f)(program, index, name) }\n/// Fallbacks: BindBufferARB\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn BindBuffer(target: types::GLenum, buffer: types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLuint) -> ()>(storage::BindBuffer.f)(target, buffer) }\n/// Fallbacks: BindBufferBaseEXT, BindBufferBaseNV\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn BindBufferBase(target: types::GLenum, index: types::GLuint, buffer: types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLuint, types::GLuint) -> ()>(storage::BindBufferBase.f)(target, index, buffer) }\n/// Fallbacks: BindBufferRangeEXT, BindBufferRangeNV\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn BindBufferRange(target: types::GLenum, index: types::GLuint, buffer: types::GLuint, offset: types::GLintptr, size: types::GLsizeiptr) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLuint, types::GLuint, types::GLintptr, types::GLsizeiptr) -> ()>(storage::BindBufferRange.f)(target, index, buffer, offset, size) }\n/// Fallbacks: BindFragDataLocationEXT\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn BindFragDataLocation(program: types::GLuint, color: types::GLuint, name: *const types::GLchar) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, types::GLuint, *const types::GLchar) -> ()>(storage::BindFragDataLocation.f)(program, color, name) }\n/// Fallbacks: BindFragDataLocationIndexedEXT\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn BindFragDataLocationIndexed(program: types::GLuint, colorNumber: types::GLuint, index: types::GLuint, name: *const types::GLchar) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, types::GLuint, types::GLuint, *const types::GLchar) -> ()>(storage::BindFragDataLocationIndexed.f)(program, colorNumber, index, name) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn BindFramebuffer(target: types::GLenum, framebuffer: types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLuint) -> ()>(storage::BindFramebuffer.f)(target, framebuffer) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn BindRenderbuffer(target: types::GLenum, renderbuffer: types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLuint) -> ()>(storage::BindRenderbuffer.f)(target, renderbuffer) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn BindSampler(unit: types::GLuint, sampler: types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, types::GLuint) -> ()>(storage::BindSampler.f)(unit, sampler) }\n/// Fallbacks: BindTextureEXT\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn BindTexture(target: types::GLenum, texture: types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLuint) -> ()>(storage::BindTexture.f)(target, texture) }\n/// Fallbacks: BindVertexArrayOES\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn BindVertexArray(array: types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint) -> ()>(storage::BindVertexArray.f)(array) }\n/// Fallbacks: BlendColorEXT\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn BlendColor(red: types::GLfloat, green: types::GLfloat, blue: types::GLfloat, alpha: types::GLfloat) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLfloat, types::GLfloat, types::GLfloat, types::GLfloat) -> ()>(storage::BlendColor.f)(red, green, blue, alpha) }\n/// Fallbacks: BlendEquationEXT\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn BlendEquation(mode: types::GLenum) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum) -> ()>(storage::BlendEquation.f)(mode) }\n/// Fallbacks: BlendEquationSeparateEXT\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn BlendEquationSeparate(modeRGB: types::GLenum, modeAlpha: types::GLenum) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLenum) -> ()>(storage::BlendEquationSeparate.f)(modeRGB, modeAlpha) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn BlendFunc(sfactor: types::GLenum, dfactor: types::GLenum) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLenum) -> ()>(storage::BlendFunc.f)(sfactor, dfactor) }\n/// Fallbacks: BlendFuncSeparateEXT, BlendFuncSeparateINGR\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn BlendFuncSeparate(sfactorRGB: types::GLenum, dfactorRGB: types::GLenum, sfactorAlpha: types::GLenum, dfactorAlpha: types::GLenum) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLenum, types::GLenum, types::GLenum) -> ()>(storage::BlendFuncSeparate.f)(sfactorRGB, dfactorRGB, sfactorAlpha, dfactorAlpha) }\n/// Fallbacks: BlitFramebufferEXT, BlitFramebufferNV\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn BlitFramebuffer(srcX0: types::GLint, srcY0: types::GLint, srcX1: types::GLint, srcY1: types::GLint, dstX0: types::GLint, dstY0: types::GLint, dstX1: types::GLint, dstY1: types::GLint, mask: types::GLbitfield, filter: types::GLenum) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLint, types::GLint, types::GLint, types::GLint, types::GLint, types::GLint, types::GLint, types::GLint, types::GLbitfield, types::GLenum) -> ()>(storage::BlitFramebuffer.f)(srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter) }\n/// Fallbacks: BufferDataARB\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn BufferData(target: types::GLenum, size: types::GLsizeiptr, data: *const __gl_imports::raw::c_void, usage: types::GLenum) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLsizeiptr, *const __gl_imports::raw::c_void, types::GLenum) -> ()>(storage::BufferData.f)(target, size, data, usage) }\n/// Fallbacks: BufferSubDataARB\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn BufferSubData(target: types::GLenum, offset: types::GLintptr, size: types::GLsizeiptr, data: *const __gl_imports::raw::c_void) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLintptr, types::GLsizeiptr, *const __gl_imports::raw::c_void) -> ()>(storage::BufferSubData.f)(target, offset, size, data) }\n/// Fallbacks: CheckFramebufferStatusEXT\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn CheckFramebufferStatus(target: types::GLenum) -> types::GLenum { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum) -> types::GLenum>(storage::CheckFramebufferStatus.f)(target) }\n/// Fallbacks: ClampColorARB\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn ClampColor(target: types::GLenum, clamp: types::GLenum) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLenum) -> ()>(storage::ClampColor.f)(target, clamp) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn Clear(mask: types::GLbitfield) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLbitfield) -> ()>(storage::Clear.f)(mask) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn ClearBufferfi(buffer: types::GLenum, drawbuffer: types::GLint, depth: types::GLfloat, stencil: types::GLint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLint, types::GLfloat, types::GLint) -> ()>(storage::ClearBufferfi.f)(buffer, drawbuffer, depth, stencil) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn ClearBufferfv(buffer: types::GLenum, drawbuffer: types::GLint, value: *const types::GLfloat) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLint, *const types::GLfloat) -> ()>(storage::ClearBufferfv.f)(buffer, drawbuffer, value) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn ClearBufferiv(buffer: types::GLenum, drawbuffer: types::GLint, value: *const types::GLint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLint, *const types::GLint) -> ()>(storage::ClearBufferiv.f)(buffer, drawbuffer, value) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn ClearBufferuiv(buffer: types::GLenum, drawbuffer: types::GLint, value: *const types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLint, *const types::GLuint) -> ()>(storage::ClearBufferuiv.f)(buffer, drawbuffer, value) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn ClearColor(red: types::GLfloat, green: types::GLfloat, blue: types::GLfloat, alpha: types::GLfloat) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLfloat, types::GLfloat, types::GLfloat, types::GLfloat) -> ()>(storage::ClearColor.f)(red, green, blue, alpha) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn ClearDepth(depth: types::GLdouble) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLdouble) -> ()>(storage::ClearDepth.f)(depth) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn ClearStencil(s: types::GLint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLint) -> ()>(storage::ClearStencil.f)(s) }\n/// Fallbacks: ClientWaitSyncAPPLE\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn ClientWaitSync(sync: types::GLsync, flags: types::GLbitfield, timeout: types::GLuint64) -> types::GLenum { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLsync, types::GLbitfield, types::GLuint64) -> types::GLenum>(storage::ClientWaitSync.f)(sync, flags, timeout) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn ColorMask(red: types::GLboolean, green: types::GLboolean, blue: types::GLboolean, alpha: types::GLboolean) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLboolean, types::GLboolean, types::GLboolean, types::GLboolean) -> ()>(storage::ColorMask.f)(red, green, blue, alpha) }\n/// Fallbacks: ColorMaskIndexedEXT, ColorMaskiEXT, ColorMaskiOES\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn ColorMaski(index: types::GLuint, r: types::GLboolean, g: types::GLboolean, b: types::GLboolean, a: types::GLboolean) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, types::GLboolean, types::GLboolean, types::GLboolean, types::GLboolean) -> ()>(storage::ColorMaski.f)(index, r, g, b, a) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn ColorP3ui(type_: types::GLenum, color: types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLuint) -> ()>(storage::ColorP3ui.f)(type_, color) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn ColorP3uiv(type_: types::GLenum, color: *const types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, *const types::GLuint) -> ()>(storage::ColorP3uiv.f)(type_, color) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn ColorP4ui(type_: types::GLenum, color: types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLuint) -> ()>(storage::ColorP4ui.f)(type_, color) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn ColorP4uiv(type_: types::GLenum, color: *const types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, *const types::GLuint) -> ()>(storage::ColorP4uiv.f)(type_, color) }\n/// Fallbacks: CompileShaderARB\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn CompileShader(shader: types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint) -> ()>(storage::CompileShader.f)(shader) }\n/// Fallbacks: CompressedTexImage1DARB\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn CompressedTexImage1D(target: types::GLenum, level: types::GLint, internalformat: types::GLenum, width: types::GLsizei, border: types::GLint, imageSize: types::GLsizei, data: *const __gl_imports::raw::c_void) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLint, types::GLenum, types::GLsizei, types::GLint, types::GLsizei, *const __gl_imports::raw::c_void) -> ()>(storage::CompressedTexImage1D.f)(target, level, internalformat, width, border, imageSize, data) }\n/// Fallbacks: CompressedTexImage2DARB\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn CompressedTexImage2D(target: types::GLenum, level: types::GLint, internalformat: types::GLenum, width: types::GLsizei, height: types::GLsizei, border: types::GLint, imageSize: types::GLsizei, data: *const __gl_imports::raw::c_void) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLint, types::GLenum, types::GLsizei, types::GLsizei, types::GLint, types::GLsizei, *const __gl_imports::raw::c_void) -> ()>(storage::CompressedTexImage2D.f)(target, level, internalformat, width, height, border, imageSize, data) }\n/// Fallbacks: CompressedTexImage3DARB\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn CompressedTexImage3D(target: types::GLenum, level: types::GLint, internalformat: types::GLenum, width: types::GLsizei, height: types::GLsizei, depth: types::GLsizei, border: types::GLint, imageSize: types::GLsizei, data: *const __gl_imports::raw::c_void) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLint, types::GLenum, types::GLsizei, types::GLsizei, types::GLsizei, types::GLint, types::GLsizei, *const __gl_imports::raw::c_void) -> ()>(storage::CompressedTexImage3D.f)(target, level, internalformat, width, height, depth, border, imageSize, data) }\n/// Fallbacks: CompressedTexSubImage1DARB\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn CompressedTexSubImage1D(target: types::GLenum, level: types::GLint, xoffset: types::GLint, width: types::GLsizei, format: types::GLenum, imageSize: types::GLsizei, data: *const __gl_imports::raw::c_void) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLint, types::GLint, types::GLsizei, types::GLenum, types::GLsizei, *const __gl_imports::raw::c_void) -> ()>(storage::CompressedTexSubImage1D.f)(target, level, xoffset, width, format, imageSize, data) }\n/// Fallbacks: CompressedTexSubImage2DARB\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn CompressedTexSubImage2D(target: types::GLenum, level: types::GLint, xoffset: types::GLint, yoffset: types::GLint, width: types::GLsizei, height: types::GLsizei, format: types::GLenum, imageSize: types::GLsizei, data: *const __gl_imports::raw::c_void) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLint, types::GLint, types::GLint, types::GLsizei, types::GLsizei, types::GLenum, types::GLsizei, *const __gl_imports::raw::c_void) -> ()>(storage::CompressedTexSubImage2D.f)(target, level, xoffset, yoffset, width, height, format, imageSize, data) }\n/// Fallbacks: CompressedTexSubImage3DARB\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn CompressedTexSubImage3D(target: types::GLenum, level: types::GLint, xoffset: types::GLint, yoffset: types::GLint, zoffset: types::GLint, width: types::GLsizei, height: types::GLsizei, depth: types::GLsizei, format: types::GLenum, imageSize: types::GLsizei, data: *const __gl_imports::raw::c_void) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLint, types::GLint, types::GLint, types::GLint, types::GLsizei, types::GLsizei, types::GLsizei, types::GLenum, types::GLsizei, *const __gl_imports::raw::c_void) -> ()>(storage::CompressedTexSubImage3D.f)(target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data) }\n/// Fallbacks: CopyBufferSubDataNV\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn CopyBufferSubData(readTarget: types::GLenum, writeTarget: types::GLenum, readOffset: types::GLintptr, writeOffset: types::GLintptr, size: types::GLsizeiptr) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLenum, types::GLintptr, types::GLintptr, types::GLsizeiptr) -> ()>(storage::CopyBufferSubData.f)(readTarget, writeTarget, readOffset, writeOffset, size) }\n/// Fallbacks: CopyTexImage1DEXT\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn CopyTexImage1D(target: types::GLenum, level: types::GLint, internalformat: types::GLenum, x: types::GLint, y: types::GLint, width: types::GLsizei, border: types::GLint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLint, types::GLenum, types::GLint, types::GLint, types::GLsizei, types::GLint) -> ()>(storage::CopyTexImage1D.f)(target, level, internalformat, x, y, width, border) }\n/// Fallbacks: CopyTexImage2DEXT\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn CopyTexImage2D(target: types::GLenum, level: types::GLint, internalformat: types::GLenum, x: types::GLint, y: types::GLint, width: types::GLsizei, height: types::GLsizei, border: types::GLint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLint, types::GLenum, types::GLint, types::GLint, types::GLsizei, types::GLsizei, types::GLint) -> ()>(storage::CopyTexImage2D.f)(target, level, internalformat, x, y, width, height, border) }\n/// Fallbacks: CopyTexSubImage1DEXT\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn CopyTexSubImage1D(target: types::GLenum, level: types::GLint, xoffset: types::GLint, x: types::GLint, y: types::GLint, width: types::GLsizei) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLint, types::GLint, types::GLint, types::GLint, types::GLsizei) -> ()>(storage::CopyTexSubImage1D.f)(target, level, xoffset, x, y, width) }\n/// Fallbacks: CopyTexSubImage2DEXT\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn CopyTexSubImage2D(target: types::GLenum, level: types::GLint, xoffset: types::GLint, yoffset: types::GLint, x: types::GLint, y: types::GLint, width: types::GLsizei, height: types::GLsizei) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLint, types::GLint, types::GLint, types::GLint, types::GLint, types::GLsizei, types::GLsizei) -> ()>(storage::CopyTexSubImage2D.f)(target, level, xoffset, yoffset, x, y, width, height) }\n/// Fallbacks: CopyTexSubImage3DEXT\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn CopyTexSubImage3D(target: types::GLenum, level: types::GLint, xoffset: types::GLint, yoffset: types::GLint, zoffset: types::GLint, x: types::GLint, y: types::GLint, width: types::GLsizei, height: types::GLsizei) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLint, types::GLint, types::GLint, types::GLint, types::GLint, types::GLint, types::GLsizei, types::GLsizei) -> ()>(storage::CopyTexSubImage3D.f)(target, level, xoffset, yoffset, zoffset, x, y, width, height) }\n/// Fallbacks: CreateProgramObjectARB\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn CreateProgram() -> types::GLuint { __gl_imports::mem::transmute::<_, extern \"system\" fn() -> types::GLuint>(storage::CreateProgram.f)() }\n/// Fallbacks: CreateShaderObjectARB\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn CreateShader(type_: types::GLenum) -> types::GLuint { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum) -> types::GLuint>(storage::CreateShader.f)(type_) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn CullFace(mode: types::GLenum) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum) -> ()>(storage::CullFace.f)(mode) }\n/// Fallbacks: DeleteBuffersARB\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn DeleteBuffers(n: types::GLsizei, buffers: *const types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLsizei, *const types::GLuint) -> ()>(storage::DeleteBuffers.f)(n, buffers) }\n/// Fallbacks: DeleteFramebuffersEXT\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn DeleteFramebuffers(n: types::GLsizei, framebuffers: *const types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLsizei, *const types::GLuint) -> ()>(storage::DeleteFramebuffers.f)(n, framebuffers) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn DeleteProgram(program: types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint) -> ()>(storage::DeleteProgram.f)(program) }\n/// Fallbacks: DeleteQueriesARB\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn DeleteQueries(n: types::GLsizei, ids: *const types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLsizei, *const types::GLuint) -> ()>(storage::DeleteQueries.f)(n, ids) }\n/// Fallbacks: DeleteRenderbuffersEXT\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn DeleteRenderbuffers(n: types::GLsizei, renderbuffers: *const types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLsizei, *const types::GLuint) -> ()>(storage::DeleteRenderbuffers.f)(n, renderbuffers) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn DeleteSamplers(count: types::GLsizei, samplers: *const types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLsizei, *const types::GLuint) -> ()>(storage::DeleteSamplers.f)(count, samplers) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn DeleteShader(shader: types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint) -> ()>(storage::DeleteShader.f)(shader) }\n/// Fallbacks: DeleteSyncAPPLE\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn DeleteSync(sync: types::GLsync) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLsync) -> ()>(storage::DeleteSync.f)(sync) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn DeleteTextures(n: types::GLsizei, textures: *const types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLsizei, *const types::GLuint) -> ()>(storage::DeleteTextures.f)(n, textures) }\n/// Fallbacks: DeleteVertexArraysAPPLE, DeleteVertexArraysOES\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn DeleteVertexArrays(n: types::GLsizei, arrays: *const types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLsizei, *const types::GLuint) -> ()>(storage::DeleteVertexArrays.f)(n, arrays) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn DepthFunc(func: types::GLenum) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum) -> ()>(storage::DepthFunc.f)(func) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn DepthMask(flag: types::GLboolean) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLboolean) -> ()>(storage::DepthMask.f)(flag) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn DepthRange(n: types::GLdouble, f: types::GLdouble) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLdouble, types::GLdouble) -> ()>(storage::DepthRange.f)(n, f) }\n/// Fallbacks: DetachObjectARB\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn DetachShader(program: types::GLuint, shader: types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, types::GLuint) -> ()>(storage::DetachShader.f)(program, shader) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn Disable(cap: types::GLenum) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum) -> ()>(storage::Disable.f)(cap) }\n/// Fallbacks: DisableVertexAttribArrayARB\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn DisableVertexAttribArray(index: types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint) -> ()>(storage::DisableVertexAttribArray.f)(index) }\n/// Fallbacks: DisableIndexedEXT, DisableiEXT, DisableiNV, DisableiOES\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn Disablei(target: types::GLenum, index: types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLuint) -> ()>(storage::Disablei.f)(target, index) }\n/// Fallbacks: DrawArraysEXT\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn DrawArrays(mode: types::GLenum, first: types::GLint, count: types::GLsizei) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLint, types::GLsizei) -> ()>(storage::DrawArrays.f)(mode, first, count) }\n/// Fallbacks: DrawArraysInstancedANGLE, DrawArraysInstancedARB, DrawArraysInstancedEXT, DrawArraysInstancedNV\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn DrawArraysInstanced(mode: types::GLenum, first: types::GLint, count: types::GLsizei, instancecount: types::GLsizei) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLint, types::GLsizei, types::GLsizei) -> ()>(storage::DrawArraysInstanced.f)(mode, first, count, instancecount) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn DrawBuffer(buf: types::GLenum) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum) -> ()>(storage::DrawBuffer.f)(buf) }\n/// Fallbacks: DrawBuffersARB, DrawBuffersATI, DrawBuffersEXT\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn DrawBuffers(n: types::GLsizei, bufs: *const types::GLenum) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLsizei, *const types::GLenum) -> ()>(storage::DrawBuffers.f)(n, bufs) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn DrawElements(mode: types::GLenum, count: types::GLsizei, type_: types::GLenum, indices: *const __gl_imports::raw::c_void) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLsizei, types::GLenum, *const __gl_imports::raw::c_void) -> ()>(storage::DrawElements.f)(mode, count, type_, indices) }\n/// Fallbacks: DrawElementsBaseVertexEXT, DrawElementsBaseVertexOES\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn DrawElementsBaseVertex(mode: types::GLenum, count: types::GLsizei, type_: types::GLenum, indices: *const __gl_imports::raw::c_void, basevertex: types::GLint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLsizei, types::GLenum, *const __gl_imports::raw::c_void, types::GLint) -> ()>(storage::DrawElementsBaseVertex.f)(mode, count, type_, indices, basevertex) }\n/// Fallbacks: DrawElementsInstancedANGLE, DrawElementsInstancedARB, DrawElementsInstancedEXT, DrawElementsInstancedNV\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn DrawElementsInstanced(mode: types::GLenum, count: types::GLsizei, type_: types::GLenum, indices: *const __gl_imports::raw::c_void, instancecount: types::GLsizei) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLsizei, types::GLenum, *const __gl_imports::raw::c_void, types::GLsizei) -> ()>(storage::DrawElementsInstanced.f)(mode, count, type_, indices, instancecount) }\n/// Fallbacks: DrawElementsInstancedBaseVertexEXT, DrawElementsInstancedBaseVertexOES\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn DrawElementsInstancedBaseVertex(mode: types::GLenum, count: types::GLsizei, type_: types::GLenum, indices: *const __gl_imports::raw::c_void, instancecount: types::GLsizei, basevertex: types::GLint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLsizei, types::GLenum, *const __gl_imports::raw::c_void, types::GLsizei, types::GLint) -> ()>(storage::DrawElementsInstancedBaseVertex.f)(mode, count, type_, indices, instancecount, basevertex) }\n/// Fallbacks: DrawRangeElementsEXT\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn DrawRangeElements(mode: types::GLenum, start: types::GLuint, end: types::GLuint, count: types::GLsizei, type_: types::GLenum, indices: *const __gl_imports::raw::c_void) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLuint, types::GLuint, types::GLsizei, types::GLenum, *const __gl_imports::raw::c_void) -> ()>(storage::DrawRangeElements.f)(mode, start, end, count, type_, indices) }\n/// Fallbacks: DrawRangeElementsBaseVertexEXT, DrawRangeElementsBaseVertexOES\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn DrawRangeElementsBaseVertex(mode: types::GLenum, start: types::GLuint, end: types::GLuint, count: types::GLsizei, type_: types::GLenum, indices: *const __gl_imports::raw::c_void, basevertex: types::GLint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLuint, types::GLuint, types::GLsizei, types::GLenum, *const __gl_imports::raw::c_void, types::GLint) -> ()>(storage::DrawRangeElementsBaseVertex.f)(mode, start, end, count, type_, indices, basevertex) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn Enable(cap: types::GLenum) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum) -> ()>(storage::Enable.f)(cap) }\n/// Fallbacks: EnableVertexAttribArrayARB\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn EnableVertexAttribArray(index: types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint) -> ()>(storage::EnableVertexAttribArray.f)(index) }\n/// Fallbacks: EnableIndexedEXT, EnableiEXT, EnableiNV, EnableiOES\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn Enablei(target: types::GLenum, index: types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLuint) -> ()>(storage::Enablei.f)(target, index) }\n/// Fallbacks: EndConditionalRenderNV, EndConditionalRenderNVX\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn EndConditionalRender() -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn() -> ()>(storage::EndConditionalRender.f)() }\n/// Fallbacks: EndQueryARB\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn EndQuery(target: types::GLenum) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum) -> ()>(storage::EndQuery.f)(target) }\n/// Fallbacks: EndTransformFeedbackEXT, EndTransformFeedbackNV\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn EndTransformFeedback() -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn() -> ()>(storage::EndTransformFeedback.f)() }\n/// Fallbacks: FenceSyncAPPLE\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn FenceSync(condition: types::GLenum, flags: types::GLbitfield) -> types::GLsync { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLbitfield) -> types::GLsync>(storage::FenceSync.f)(condition, flags) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn Finish() -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn() -> ()>(storage::Finish.f)() }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn Flush() -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn() -> ()>(storage::Flush.f)() }\n/// Fallbacks: FlushMappedBufferRangeAPPLE, FlushMappedBufferRangeEXT\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn FlushMappedBufferRange(target: types::GLenum, offset: types::GLintptr, length: types::GLsizeiptr) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLintptr, types::GLsizeiptr) -> ()>(storage::FlushMappedBufferRange.f)(target, offset, length) }\n/// Fallbacks: FramebufferRenderbufferEXT\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn FramebufferRenderbuffer(target: types::GLenum, attachment: types::GLenum, renderbuffertarget: types::GLenum, renderbuffer: types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLenum, types::GLenum, types::GLuint) -> ()>(storage::FramebufferRenderbuffer.f)(target, attachment, renderbuffertarget, renderbuffer) }\n/// Fallbacks: FramebufferTextureARB, FramebufferTextureEXT, FramebufferTextureOES\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn FramebufferTexture(target: types::GLenum, attachment: types::GLenum, texture: types::GLuint, level: types::GLint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLenum, types::GLuint, types::GLint) -> ()>(storage::FramebufferTexture.f)(target, attachment, texture, level) }\n/// Fallbacks: FramebufferTexture1DEXT\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn FramebufferTexture1D(target: types::GLenum, attachment: types::GLenum, textarget: types::GLenum, texture: types::GLuint, level: types::GLint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLenum, types::GLenum, types::GLuint, types::GLint) -> ()>(storage::FramebufferTexture1D.f)(target, attachment, textarget, texture, level) }\n/// Fallbacks: FramebufferTexture2DEXT\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn FramebufferTexture2D(target: types::GLenum, attachment: types::GLenum, textarget: types::GLenum, texture: types::GLuint, level: types::GLint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLenum, types::GLenum, types::GLuint, types::GLint) -> ()>(storage::FramebufferTexture2D.f)(target, attachment, textarget, texture, level) }\n/// Fallbacks: FramebufferTexture3DEXT\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn FramebufferTexture3D(target: types::GLenum, attachment: types::GLenum, textarget: types::GLenum, texture: types::GLuint, level: types::GLint, zoffset: types::GLint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLenum, types::GLenum, types::GLuint, types::GLint, types::GLint) -> ()>(storage::FramebufferTexture3D.f)(target, attachment, textarget, texture, level, zoffset) }\n/// Fallbacks: FramebufferTextureLayerARB, FramebufferTextureLayerEXT\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn FramebufferTextureLayer(target: types::GLenum, attachment: types::GLenum, texture: types::GLuint, level: types::GLint, layer: types::GLint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLenum, types::GLuint, types::GLint, types::GLint) -> ()>(storage::FramebufferTextureLayer.f)(target, attachment, texture, level, layer) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn FrontFace(mode: types::GLenum) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum) -> ()>(storage::FrontFace.f)(mode) }\n/// Fallbacks: GenBuffersARB\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn GenBuffers(n: types::GLsizei, buffers: *mut types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLsizei, *mut types::GLuint) -> ()>(storage::GenBuffers.f)(n, buffers) }\n/// Fallbacks: GenFramebuffersEXT\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn GenFramebuffers(n: types::GLsizei, framebuffers: *mut types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLsizei, *mut types::GLuint) -> ()>(storage::GenFramebuffers.f)(n, framebuffers) }\n/// Fallbacks: GenQueriesARB\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn GenQueries(n: types::GLsizei, ids: *mut types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLsizei, *mut types::GLuint) -> ()>(storage::GenQueries.f)(n, ids) }\n/// Fallbacks: GenRenderbuffersEXT\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn GenRenderbuffers(n: types::GLsizei, renderbuffers: *mut types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLsizei, *mut types::GLuint) -> ()>(storage::GenRenderbuffers.f)(n, renderbuffers) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn GenSamplers(count: types::GLsizei, samplers: *mut types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLsizei, *mut types::GLuint) -> ()>(storage::GenSamplers.f)(count, samplers) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn GenTextures(n: types::GLsizei, textures: *mut types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLsizei, *mut types::GLuint) -> ()>(storage::GenTextures.f)(n, textures) }\n/// Fallbacks: GenVertexArraysAPPLE, GenVertexArraysOES\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn GenVertexArrays(n: types::GLsizei, arrays: *mut types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLsizei, *mut types::GLuint) -> ()>(storage::GenVertexArrays.f)(n, arrays) }\n/// Fallbacks: GenerateMipmapEXT\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn GenerateMipmap(target: types::GLenum) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum) -> ()>(storage::GenerateMipmap.f)(target) }\n/// Fallbacks: GetActiveAttribARB\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn GetActiveAttrib(program: types::GLuint, index: types::GLuint, bufSize: types::GLsizei, length: *mut types::GLsizei, size: *mut types::GLint, type_: *mut types::GLenum, name: *mut types::GLchar) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, types::GLuint, types::GLsizei, *mut types::GLsizei, *mut types::GLint, *mut types::GLenum, *mut types::GLchar) -> ()>(storage::GetActiveAttrib.f)(program, index, bufSize, length, size, type_, name) }\n/// Fallbacks: GetActiveUniformARB\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn GetActiveUniform(program: types::GLuint, index: types::GLuint, bufSize: types::GLsizei, length: *mut types::GLsizei, size: *mut types::GLint, type_: *mut types::GLenum, name: *mut types::GLchar) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, types::GLuint, types::GLsizei, *mut types::GLsizei, *mut types::GLint, *mut types::GLenum, *mut types::GLchar) -> ()>(storage::GetActiveUniform.f)(program, index, bufSize, length, size, type_, name) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn GetActiveUniformBlockName(program: types::GLuint, uniformBlockIndex: types::GLuint, bufSize: types::GLsizei, length: *mut types::GLsizei, uniformBlockName: *mut types::GLchar) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, types::GLuint, types::GLsizei, *mut types::GLsizei, *mut types::GLchar) -> ()>(storage::GetActiveUniformBlockName.f)(program, uniformBlockIndex, bufSize, length, uniformBlockName) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn GetActiveUniformBlockiv(program: types::GLuint, uniformBlockIndex: types::GLuint, pname: types::GLenum, params: *mut types::GLint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, types::GLuint, types::GLenum, *mut types::GLint) -> ()>(storage::GetActiveUniformBlockiv.f)(program, uniformBlockIndex, pname, params) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn GetActiveUniformName(program: types::GLuint, uniformIndex: types::GLuint, bufSize: types::GLsizei, length: *mut types::GLsizei, uniformName: *mut types::GLchar) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, types::GLuint, types::GLsizei, *mut types::GLsizei, *mut types::GLchar) -> ()>(storage::GetActiveUniformName.f)(program, uniformIndex, bufSize, length, uniformName) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn GetActiveUniformsiv(program: types::GLuint, uniformCount: types::GLsizei, uniformIndices: *const types::GLuint, pname: types::GLenum, params: *mut types::GLint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, types::GLsizei, *const types::GLuint, types::GLenum, *mut types::GLint) -> ()>(storage::GetActiveUniformsiv.f)(program, uniformCount, uniformIndices, pname, params) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn GetAttachedShaders(program: types::GLuint, maxCount: types::GLsizei, count: *mut types::GLsizei, shaders: *mut types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, types::GLsizei, *mut types::GLsizei, *mut types::GLuint) -> ()>(storage::GetAttachedShaders.f)(program, maxCount, count, shaders) }\n/// Fallbacks: GetAttribLocationARB\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn GetAttribLocation(program: types::GLuint, name: *const types::GLchar) -> types::GLint { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, *const types::GLchar) -> types::GLint>(storage::GetAttribLocation.f)(program, name) }\n/// Fallbacks: GetBooleanIndexedvEXT\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn GetBooleani_v(target: types::GLenum, index: types::GLuint, data: *mut types::GLboolean) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLuint, *mut types::GLboolean) -> ()>(storage::GetBooleani_v.f)(target, index, data) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn GetBooleanv(pname: types::GLenum, data: *mut types::GLboolean) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, *mut types::GLboolean) -> ()>(storage::GetBooleanv.f)(pname, data) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn GetBufferParameteri64v(target: types::GLenum, pname: types::GLenum, params: *mut types::GLint64) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLenum, *mut types::GLint64) -> ()>(storage::GetBufferParameteri64v.f)(target, pname, params) }\n/// Fallbacks: GetBufferParameterivARB\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn GetBufferParameteriv(target: types::GLenum, pname: types::GLenum, params: *mut types::GLint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLenum, *mut types::GLint) -> ()>(storage::GetBufferParameteriv.f)(target, pname, params) }\n/// Fallbacks: GetBufferPointervARB, GetBufferPointervOES\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn GetBufferPointerv(target: types::GLenum, pname: types::GLenum, params: *const *mut __gl_imports::raw::c_void) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLenum, *const *mut __gl_imports::raw::c_void) -> ()>(storage::GetBufferPointerv.f)(target, pname, params) }\n/// Fallbacks: GetBufferSubDataARB\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn GetBufferSubData(target: types::GLenum, offset: types::GLintptr, size: types::GLsizeiptr, data: *mut __gl_imports::raw::c_void) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLintptr, types::GLsizeiptr, *mut __gl_imports::raw::c_void) -> ()>(storage::GetBufferSubData.f)(target, offset, size, data) }\n/// Fallbacks: GetCompressedTexImageARB\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn GetCompressedTexImage(target: types::GLenum, level: types::GLint, img: *mut __gl_imports::raw::c_void) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLint, *mut __gl_imports::raw::c_void) -> ()>(storage::GetCompressedTexImage.f)(target, level, img) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn GetDoublev(pname: types::GLenum, data: *mut types::GLdouble) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, *mut types::GLdouble) -> ()>(storage::GetDoublev.f)(pname, data) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn GetError() -> types::GLenum { __gl_imports::mem::transmute::<_, extern \"system\" fn() -> types::GLenum>(storage::GetError.f)() }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn GetFloatv(pname: types::GLenum, data: *mut types::GLfloat) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, *mut types::GLfloat) -> ()>(storage::GetFloatv.f)(pname, data) }\n/// Fallbacks: GetFragDataIndexEXT\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn GetFragDataIndex(program: types::GLuint, name: *const types::GLchar) -> types::GLint { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, *const types::GLchar) -> types::GLint>(storage::GetFragDataIndex.f)(program, name) }\n/// Fallbacks: GetFragDataLocationEXT\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn GetFragDataLocation(program: types::GLuint, name: *const types::GLchar) -> types::GLint { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, *const types::GLchar) -> types::GLint>(storage::GetFragDataLocation.f)(program, name) }\n/// Fallbacks: GetFramebufferAttachmentParameterivEXT\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn GetFramebufferAttachmentParameteriv(target: types::GLenum, attachment: types::GLenum, pname: types::GLenum, params: *mut types::GLint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLenum, types::GLenum, *mut types::GLint) -> ()>(storage::GetFramebufferAttachmentParameteriv.f)(target, attachment, pname, params) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn GetInteger64i_v(target: types::GLenum, index: types::GLuint, data: *mut types::GLint64) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLuint, *mut types::GLint64) -> ()>(storage::GetInteger64i_v.f)(target, index, data) }\n/// Fallbacks: GetInteger64vAPPLE\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn GetInteger64v(pname: types::GLenum, data: *mut types::GLint64) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, *mut types::GLint64) -> ()>(storage::GetInteger64v.f)(pname, data) }\n/// Fallbacks: GetIntegerIndexedvEXT\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn GetIntegeri_v(target: types::GLenum, index: types::GLuint, data: *mut types::GLint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLuint, *mut types::GLint) -> ()>(storage::GetIntegeri_v.f)(target, index, data) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn GetIntegerv(pname: types::GLenum, data: *mut types::GLint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, *mut types::GLint) -> ()>(storage::GetIntegerv.f)(pname, data) }\n/// Fallbacks: GetMultisamplefvNV\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn GetMultisamplefv(pname: types::GLenum, index: types::GLuint, val: *mut types::GLfloat) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLuint, *mut types::GLfloat) -> ()>(storage::GetMultisamplefv.f)(pname, index, val) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn GetProgramInfoLog(program: types::GLuint, bufSize: types::GLsizei, length: *mut types::GLsizei, infoLog: *mut types::GLchar) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, types::GLsizei, *mut types::GLsizei, *mut types::GLchar) -> ()>(storage::GetProgramInfoLog.f)(program, bufSize, length, infoLog) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn GetProgramiv(program: types::GLuint, pname: types::GLenum, params: *mut types::GLint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, types::GLenum, *mut types::GLint) -> ()>(storage::GetProgramiv.f)(program, pname, params) }\n/// Fallbacks: GetQueryObjecti64vEXT\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn GetQueryObjecti64v(id: types::GLuint, pname: types::GLenum, params: *mut types::GLint64) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, types::GLenum, *mut types::GLint64) -> ()>(storage::GetQueryObjecti64v.f)(id, pname, params) }\n/// Fallbacks: GetQueryObjectivARB, GetQueryObjectivEXT\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn GetQueryObjectiv(id: types::GLuint, pname: types::GLenum, params: *mut types::GLint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, types::GLenum, *mut types::GLint) -> ()>(storage::GetQueryObjectiv.f)(id, pname, params) }\n/// Fallbacks: GetQueryObjectui64vEXT\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn GetQueryObjectui64v(id: types::GLuint, pname: types::GLenum, params: *mut types::GLuint64) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, types::GLenum, *mut types::GLuint64) -> ()>(storage::GetQueryObjectui64v.f)(id, pname, params) }\n/// Fallbacks: GetQueryObjectuivARB\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn GetQueryObjectuiv(id: types::GLuint, pname: types::GLenum, params: *mut types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, types::GLenum, *mut types::GLuint) -> ()>(storage::GetQueryObjectuiv.f)(id, pname, params) }\n/// Fallbacks: GetQueryivARB\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn GetQueryiv(target: types::GLenum, pname: types::GLenum, params: *mut types::GLint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLenum, *mut types::GLint) -> ()>(storage::GetQueryiv.f)(target, pname, params) }\n/// Fallbacks: GetRenderbufferParameterivEXT\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn GetRenderbufferParameteriv(target: types::GLenum, pname: types::GLenum, params: *mut types::GLint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLenum, *mut types::GLint) -> ()>(storage::GetRenderbufferParameteriv.f)(target, pname, params) }\n/// Fallbacks: GetSamplerParameterIivEXT, GetSamplerParameterIivOES\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn GetSamplerParameterIiv(sampler: types::GLuint, pname: types::GLenum, params: *mut types::GLint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, types::GLenum, *mut types::GLint) -> ()>(storage::GetSamplerParameterIiv.f)(sampler, pname, params) }\n/// Fallbacks: GetSamplerParameterIuivEXT, GetSamplerParameterIuivOES\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn GetSamplerParameterIuiv(sampler: types::GLuint, pname: types::GLenum, params: *mut types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, types::GLenum, *mut types::GLuint) -> ()>(storage::GetSamplerParameterIuiv.f)(sampler, pname, params) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn GetSamplerParameterfv(sampler: types::GLuint, pname: types::GLenum, params: *mut types::GLfloat) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, types::GLenum, *mut types::GLfloat) -> ()>(storage::GetSamplerParameterfv.f)(sampler, pname, params) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn GetSamplerParameteriv(sampler: types::GLuint, pname: types::GLenum, params: *mut types::GLint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, types::GLenum, *mut types::GLint) -> ()>(storage::GetSamplerParameteriv.f)(sampler, pname, params) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn GetShaderInfoLog(shader: types::GLuint, bufSize: types::GLsizei, length: *mut types::GLsizei, infoLog: *mut types::GLchar) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, types::GLsizei, *mut types::GLsizei, *mut types::GLchar) -> ()>(storage::GetShaderInfoLog.f)(shader, bufSize, length, infoLog) }\n/// Fallbacks: GetShaderSourceARB\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn GetShaderSource(shader: types::GLuint, bufSize: types::GLsizei, length: *mut types::GLsizei, source: *mut types::GLchar) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, types::GLsizei, *mut types::GLsizei, *mut types::GLchar) -> ()>(storage::GetShaderSource.f)(shader, bufSize, length, source) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn GetShaderiv(shader: types::GLuint, pname: types::GLenum, params: *mut types::GLint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, types::GLenum, *mut types::GLint) -> ()>(storage::GetShaderiv.f)(shader, pname, params) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn GetString(name: types::GLenum) -> *const types::GLubyte { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum) -> *const types::GLubyte>(storage::GetString.f)(name) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn GetStringi(name: types::GLenum, index: types::GLuint) -> *const types::GLubyte { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLuint) -> *const types::GLubyte>(storage::GetStringi.f)(name, index) }\n/// Fallbacks: GetSyncivAPPLE\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn GetSynciv(sync: types::GLsync, pname: types::GLenum, bufSize: types::GLsizei, length: *mut types::GLsizei, values: *mut types::GLint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLsync, types::GLenum, types::GLsizei, *mut types::GLsizei, *mut types::GLint) -> ()>(storage::GetSynciv.f)(sync, pname, bufSize, length, values) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn GetTexImage(target: types::GLenum, level: types::GLint, format: types::GLenum, type_: types::GLenum, pixels: *mut __gl_imports::raw::c_void) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLint, types::GLenum, types::GLenum, *mut __gl_imports::raw::c_void) -> ()>(storage::GetTexImage.f)(target, level, format, type_, pixels) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn GetTexLevelParameterfv(target: types::GLenum, level: types::GLint, pname: types::GLenum, params: *mut types::GLfloat) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLint, types::GLenum, *mut types::GLfloat) -> ()>(storage::GetTexLevelParameterfv.f)(target, level, pname, params) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn GetTexLevelParameteriv(target: types::GLenum, level: types::GLint, pname: types::GLenum, params: *mut types::GLint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLint, types::GLenum, *mut types::GLint) -> ()>(storage::GetTexLevelParameteriv.f)(target, level, pname, params) }\n/// Fallbacks: GetTexParameterIivEXT, GetTexParameterIivOES\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn GetTexParameterIiv(target: types::GLenum, pname: types::GLenum, params: *mut types::GLint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLenum, *mut types::GLint) -> ()>(storage::GetTexParameterIiv.f)(target, pname, params) }\n/// Fallbacks: GetTexParameterIuivEXT, GetTexParameterIuivOES\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn GetTexParameterIuiv(target: types::GLenum, pname: types::GLenum, params: *mut types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLenum, *mut types::GLuint) -> ()>(storage::GetTexParameterIuiv.f)(target, pname, params) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn GetTexParameterfv(target: types::GLenum, pname: types::GLenum, params: *mut types::GLfloat) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLenum, *mut types::GLfloat) -> ()>(storage::GetTexParameterfv.f)(target, pname, params) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn GetTexParameteriv(target: types::GLenum, pname: types::GLenum, params: *mut types::GLint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLenum, *mut types::GLint) -> ()>(storage::GetTexParameteriv.f)(target, pname, params) }\n/// Fallbacks: GetTransformFeedbackVaryingEXT\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn GetTransformFeedbackVarying(program: types::GLuint, index: types::GLuint, bufSize: types::GLsizei, length: *mut types::GLsizei, size: *mut types::GLsizei, type_: *mut types::GLenum, name: *mut types::GLchar) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, types::GLuint, types::GLsizei, *mut types::GLsizei, *mut types::GLsizei, *mut types::GLenum, *mut types::GLchar) -> ()>(storage::GetTransformFeedbackVarying.f)(program, index, bufSize, length, size, type_, name) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn GetUniformBlockIndex(program: types::GLuint, uniformBlockName: *const types::GLchar) -> types::GLuint { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, *const types::GLchar) -> types::GLuint>(storage::GetUniformBlockIndex.f)(program, uniformBlockName) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn GetUniformIndices(program: types::GLuint, uniformCount: types::GLsizei, uniformNames: *const *const types::GLchar, uniformIndices: *mut types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, types::GLsizei, *const *const types::GLchar, *mut types::GLuint) -> ()>(storage::GetUniformIndices.f)(program, uniformCount, uniformNames, uniformIndices) }\n/// Fallbacks: GetUniformLocationARB\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn GetUniformLocation(program: types::GLuint, name: *const types::GLchar) -> types::GLint { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, *const types::GLchar) -> types::GLint>(storage::GetUniformLocation.f)(program, name) }\n/// Fallbacks: GetUniformfvARB\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn GetUniformfv(program: types::GLuint, location: types::GLint, params: *mut types::GLfloat) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, types::GLint, *mut types::GLfloat) -> ()>(storage::GetUniformfv.f)(program, location, params) }\n/// Fallbacks: GetUniformivARB\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn GetUniformiv(program: types::GLuint, location: types::GLint, params: *mut types::GLint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, types::GLint, *mut types::GLint) -> ()>(storage::GetUniformiv.f)(program, location, params) }\n/// Fallbacks: GetUniformuivEXT\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn GetUniformuiv(program: types::GLuint, location: types::GLint, params: *mut types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, types::GLint, *mut types::GLuint) -> ()>(storage::GetUniformuiv.f)(program, location, params) }\n/// Fallbacks: GetVertexAttribIivEXT\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn GetVertexAttribIiv(index: types::GLuint, pname: types::GLenum, params: *mut types::GLint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, types::GLenum, *mut types::GLint) -> ()>(storage::GetVertexAttribIiv.f)(index, pname, params) }\n/// Fallbacks: GetVertexAttribIuivEXT\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn GetVertexAttribIuiv(index: types::GLuint, pname: types::GLenum, params: *mut types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, types::GLenum, *mut types::GLuint) -> ()>(storage::GetVertexAttribIuiv.f)(index, pname, params) }\n/// Fallbacks: GetVertexAttribPointervARB, GetVertexAttribPointervNV\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn GetVertexAttribPointerv(index: types::GLuint, pname: types::GLenum, pointer: *const *mut __gl_imports::raw::c_void) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, types::GLenum, *const *mut __gl_imports::raw::c_void) -> ()>(storage::GetVertexAttribPointerv.f)(index, pname, pointer) }\n/// Fallbacks: GetVertexAttribdvARB, GetVertexAttribdvNV\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn GetVertexAttribdv(index: types::GLuint, pname: types::GLenum, params: *mut types::GLdouble) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, types::GLenum, *mut types::GLdouble) -> ()>(storage::GetVertexAttribdv.f)(index, pname, params) }\n/// Fallbacks: GetVertexAttribfvARB, GetVertexAttribfvNV\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn GetVertexAttribfv(index: types::GLuint, pname: types::GLenum, params: *mut types::GLfloat) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, types::GLenum, *mut types::GLfloat) -> ()>(storage::GetVertexAttribfv.f)(index, pname, params) }\n/// Fallbacks: GetVertexAttribivARB, GetVertexAttribivNV\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn GetVertexAttribiv(index: types::GLuint, pname: types::GLenum, params: *mut types::GLint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, types::GLenum, *mut types::GLint) -> ()>(storage::GetVertexAttribiv.f)(index, pname, params) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn Hint(target: types::GLenum, mode: types::GLenum) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLenum) -> ()>(storage::Hint.f)(target, mode) }\n/// Fallbacks: IsBufferARB\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn IsBuffer(buffer: types::GLuint) -> types::GLboolean { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint) -> types::GLboolean>(storage::IsBuffer.f)(buffer) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn IsEnabled(cap: types::GLenum) -> types::GLboolean { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum) -> types::GLboolean>(storage::IsEnabled.f)(cap) }\n/// Fallbacks: IsEnabledIndexedEXT, IsEnablediEXT, IsEnablediNV, IsEnablediOES\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn IsEnabledi(target: types::GLenum, index: types::GLuint) -> types::GLboolean { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLuint) -> types::GLboolean>(storage::IsEnabledi.f)(target, index) }\n/// Fallbacks: IsFramebufferEXT\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn IsFramebuffer(framebuffer: types::GLuint) -> types::GLboolean { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint) -> types::GLboolean>(storage::IsFramebuffer.f)(framebuffer) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn IsProgram(program: types::GLuint) -> types::GLboolean { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint) -> types::GLboolean>(storage::IsProgram.f)(program) }\n/// Fallbacks: IsQueryARB\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn IsQuery(id: types::GLuint) -> types::GLboolean { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint) -> types::GLboolean>(storage::IsQuery.f)(id) }\n/// Fallbacks: IsRenderbufferEXT\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn IsRenderbuffer(renderbuffer: types::GLuint) -> types::GLboolean { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint) -> types::GLboolean>(storage::IsRenderbuffer.f)(renderbuffer) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn IsSampler(sampler: types::GLuint) -> types::GLboolean { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint) -> types::GLboolean>(storage::IsSampler.f)(sampler) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn IsShader(shader: types::GLuint) -> types::GLboolean { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint) -> types::GLboolean>(storage::IsShader.f)(shader) }\n/// Fallbacks: IsSyncAPPLE\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn IsSync(sync: types::GLsync) -> types::GLboolean { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLsync) -> types::GLboolean>(storage::IsSync.f)(sync) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn IsTexture(texture: types::GLuint) -> types::GLboolean { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint) -> types::GLboolean>(storage::IsTexture.f)(texture) }\n/// Fallbacks: IsVertexArrayAPPLE, IsVertexArrayOES\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn IsVertexArray(array: types::GLuint) -> types::GLboolean { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint) -> types::GLboolean>(storage::IsVertexArray.f)(array) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn LineWidth(width: types::GLfloat) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLfloat) -> ()>(storage::LineWidth.f)(width) }\n/// Fallbacks: LinkProgramARB\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn LinkProgram(program: types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint) -> ()>(storage::LinkProgram.f)(program) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn LogicOp(opcode: types::GLenum) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum) -> ()>(storage::LogicOp.f)(opcode) }\n/// Fallbacks: MapBufferARB, MapBufferOES\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn MapBuffer(target: types::GLenum, access: types::GLenum) -> *mut __gl_imports::raw::c_void { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLenum) -> *mut __gl_imports::raw::c_void>(storage::MapBuffer.f)(target, access) }\n/// Fallbacks: MapBufferRangeEXT\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn MapBufferRange(target: types::GLenum, offset: types::GLintptr, length: types::GLsizeiptr, access: types::GLbitfield) -> *mut __gl_imports::raw::c_void { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLintptr, types::GLsizeiptr, types::GLbitfield) -> *mut __gl_imports::raw::c_void>(storage::MapBufferRange.f)(target, offset, length, access) }\n/// Fallbacks: MultiDrawArraysEXT\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn MultiDrawArrays(mode: types::GLenum, first: *const types::GLint, count: *const types::GLsizei, drawcount: types::GLsizei) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, *const types::GLint, *const types::GLsizei, types::GLsizei) -> ()>(storage::MultiDrawArrays.f)(mode, first, count, drawcount) }\n/// Fallbacks: MultiDrawElementsEXT\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn MultiDrawElements(mode: types::GLenum, count: *const types::GLsizei, type_: types::GLenum, indices: *const *const __gl_imports::raw::c_void, drawcount: types::GLsizei) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, *const types::GLsizei, types::GLenum, *const *const __gl_imports::raw::c_void, types::GLsizei) -> ()>(storage::MultiDrawElements.f)(mode, count, type_, indices, drawcount) }\n/// Fallbacks: MultiDrawElementsBaseVertexEXT\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn MultiDrawElementsBaseVertex(mode: types::GLenum, count: *const types::GLsizei, type_: types::GLenum, indices: *const *const __gl_imports::raw::c_void, drawcount: types::GLsizei, basevertex: *const types::GLint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, *const types::GLsizei, types::GLenum, *const *const __gl_imports::raw::c_void, types::GLsizei, *const types::GLint) -> ()>(storage::MultiDrawElementsBaseVertex.f)(mode, count, type_, indices, drawcount, basevertex) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn MultiTexCoordP1ui(texture: types::GLenum, type_: types::GLenum, coords: types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLenum, types::GLuint) -> ()>(storage::MultiTexCoordP1ui.f)(texture, type_, coords) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn MultiTexCoordP1uiv(texture: types::GLenum, type_: types::GLenum, coords: *const types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLenum, *const types::GLuint) -> ()>(storage::MultiTexCoordP1uiv.f)(texture, type_, coords) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn MultiTexCoordP2ui(texture: types::GLenum, type_: types::GLenum, coords: types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLenum, types::GLuint) -> ()>(storage::MultiTexCoordP2ui.f)(texture, type_, coords) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn MultiTexCoordP2uiv(texture: types::GLenum, type_: types::GLenum, coords: *const types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLenum, *const types::GLuint) -> ()>(storage::MultiTexCoordP2uiv.f)(texture, type_, coords) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn MultiTexCoordP3ui(texture: types::GLenum, type_: types::GLenum, coords: types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLenum, types::GLuint) -> ()>(storage::MultiTexCoordP3ui.f)(texture, type_, coords) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn MultiTexCoordP3uiv(texture: types::GLenum, type_: types::GLenum, coords: *const types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLenum, *const types::GLuint) -> ()>(storage::MultiTexCoordP3uiv.f)(texture, type_, coords) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn MultiTexCoordP4ui(texture: types::GLenum, type_: types::GLenum, coords: types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLenum, types::GLuint) -> ()>(storage::MultiTexCoordP4ui.f)(texture, type_, coords) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn MultiTexCoordP4uiv(texture: types::GLenum, type_: types::GLenum, coords: *const types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLenum, *const types::GLuint) -> ()>(storage::MultiTexCoordP4uiv.f)(texture, type_, coords) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn NormalP3ui(type_: types::GLenum, coords: types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLuint) -> ()>(storage::NormalP3ui.f)(type_, coords) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn NormalP3uiv(type_: types::GLenum, coords: *const types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, *const types::GLuint) -> ()>(storage::NormalP3uiv.f)(type_, coords) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn PixelStoref(pname: types::GLenum, param: types::GLfloat) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLfloat) -> ()>(storage::PixelStoref.f)(pname, param) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn PixelStorei(pname: types::GLenum, param: types::GLint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLint) -> ()>(storage::PixelStorei.f)(pname, param) }\n/// Fallbacks: PointParameterfARB, PointParameterfEXT, PointParameterfSGIS\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn PointParameterf(pname: types::GLenum, param: types::GLfloat) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLfloat) -> ()>(storage::PointParameterf.f)(pname, param) }\n/// Fallbacks: PointParameterfvARB, PointParameterfvEXT, PointParameterfvSGIS\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn PointParameterfv(pname: types::GLenum, params: *const types::GLfloat) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, *const types::GLfloat) -> ()>(storage::PointParameterfv.f)(pname, params) }\n/// Fallbacks: PointParameteriNV\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn PointParameteri(pname: types::GLenum, param: types::GLint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLint) -> ()>(storage::PointParameteri.f)(pname, param) }\n/// Fallbacks: PointParameterivNV\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn PointParameteriv(pname: types::GLenum, params: *const types::GLint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, *const types::GLint) -> ()>(storage::PointParameteriv.f)(pname, params) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn PointSize(size: types::GLfloat) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLfloat) -> ()>(storage::PointSize.f)(size) }\n/// Fallbacks: PolygonModeNV\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn PolygonMode(face: types::GLenum, mode: types::GLenum) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLenum) -> ()>(storage::PolygonMode.f)(face, mode) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn PolygonOffset(factor: types::GLfloat, units: types::GLfloat) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLfloat, types::GLfloat) -> ()>(storage::PolygonOffset.f)(factor, units) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn PrimitiveRestartIndex(index: types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint) -> ()>(storage::PrimitiveRestartIndex.f)(index) }\n/// Fallbacks: ProvokingVertexEXT\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn ProvokingVertex(mode: types::GLenum) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum) -> ()>(storage::ProvokingVertex.f)(mode) }\n/// Fallbacks: QueryCounterEXT\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn QueryCounter(id: types::GLuint, target: types::GLenum) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, types::GLenum) -> ()>(storage::QueryCounter.f)(id, target) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn ReadBuffer(src: types::GLenum) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum) -> ()>(storage::ReadBuffer.f)(src) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn ReadPixels(x: types::GLint, y: types::GLint, width: types::GLsizei, height: types::GLsizei, format: types::GLenum, type_: types::GLenum, pixels: *mut __gl_imports::raw::c_void) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLint, types::GLint, types::GLsizei, types::GLsizei, types::GLenum, types::GLenum, *mut __gl_imports::raw::c_void) -> ()>(storage::ReadPixels.f)(x, y, width, height, format, type_, pixels) }\n/// Fallbacks: RenderbufferStorageEXT\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn RenderbufferStorage(target: types::GLenum, internalformat: types::GLenum, width: types::GLsizei, height: types::GLsizei) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLenum, types::GLsizei, types::GLsizei) -> ()>(storage::RenderbufferStorage.f)(target, internalformat, width, height) }\n/// Fallbacks: RenderbufferStorageMultisampleEXT, RenderbufferStorageMultisampleNV\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn RenderbufferStorageMultisample(target: types::GLenum, samples: types::GLsizei, internalformat: types::GLenum, width: types::GLsizei, height: types::GLsizei) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLsizei, types::GLenum, types::GLsizei, types::GLsizei) -> ()>(storage::RenderbufferStorageMultisample.f)(target, samples, internalformat, width, height) }\n/// Fallbacks: SampleCoverageARB\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn SampleCoverage(value: types::GLfloat, invert: types::GLboolean) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLfloat, types::GLboolean) -> ()>(storage::SampleCoverage.f)(value, invert) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn SampleMaski(maskNumber: types::GLuint, mask: types::GLbitfield) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, types::GLbitfield) -> ()>(storage::SampleMaski.f)(maskNumber, mask) }\n/// Fallbacks: SamplerParameterIivEXT, SamplerParameterIivOES\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn SamplerParameterIiv(sampler: types::GLuint, pname: types::GLenum, param: *const types::GLint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, types::GLenum, *const types::GLint) -> ()>(storage::SamplerParameterIiv.f)(sampler, pname, param) }\n/// Fallbacks: SamplerParameterIuivEXT, SamplerParameterIuivOES\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn SamplerParameterIuiv(sampler: types::GLuint, pname: types::GLenum, param: *const types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, types::GLenum, *const types::GLuint) -> ()>(storage::SamplerParameterIuiv.f)(sampler, pname, param) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn SamplerParameterf(sampler: types::GLuint, pname: types::GLenum, param: types::GLfloat) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, types::GLenum, types::GLfloat) -> ()>(storage::SamplerParameterf.f)(sampler, pname, param) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn SamplerParameterfv(sampler: types::GLuint, pname: types::GLenum, param: *const types::GLfloat) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, types::GLenum, *const types::GLfloat) -> ()>(storage::SamplerParameterfv.f)(sampler, pname, param) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn SamplerParameteri(sampler: types::GLuint, pname: types::GLenum, param: types::GLint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, types::GLenum, types::GLint) -> ()>(storage::SamplerParameteri.f)(sampler, pname, param) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn SamplerParameteriv(sampler: types::GLuint, pname: types::GLenum, param: *const types::GLint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, types::GLenum, *const types::GLint) -> ()>(storage::SamplerParameteriv.f)(sampler, pname, param) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn Scissor(x: types::GLint, y: types::GLint, width: types::GLsizei, height: types::GLsizei) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLint, types::GLint, types::GLsizei, types::GLsizei) -> ()>(storage::Scissor.f)(x, y, width, height) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn SecondaryColorP3ui(type_: types::GLenum, color: types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLuint) -> ()>(storage::SecondaryColorP3ui.f)(type_, color) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn SecondaryColorP3uiv(type_: types::GLenum, color: *const types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, *const types::GLuint) -> ()>(storage::SecondaryColorP3uiv.f)(type_, color) }\n/// Fallbacks: ShaderSourceARB\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn ShaderSource(shader: types::GLuint, count: types::GLsizei, string: *const *const types::GLchar, length: *const types::GLint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, types::GLsizei, *const *const types::GLchar, *const types::GLint) -> ()>(storage::ShaderSource.f)(shader, count, string, length) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn StencilFunc(func: types::GLenum, ref_: types::GLint, mask: types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLint, types::GLuint) -> ()>(storage::StencilFunc.f)(func, ref_, mask) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn StencilFuncSeparate(face: types::GLenum, func: types::GLenum, ref_: types::GLint, mask: types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLenum, types::GLint, types::GLuint) -> ()>(storage::StencilFuncSeparate.f)(face, func, ref_, mask) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn StencilMask(mask: types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint) -> ()>(storage::StencilMask.f)(mask) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn StencilMaskSeparate(face: types::GLenum, mask: types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLuint) -> ()>(storage::StencilMaskSeparate.f)(face, mask) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn StencilOp(fail: types::GLenum, zfail: types::GLenum, zpass: types::GLenum) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLenum, types::GLenum) -> ()>(storage::StencilOp.f)(fail, zfail, zpass) }\n/// Fallbacks: StencilOpSeparateATI\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn StencilOpSeparate(face: types::GLenum, sfail: types::GLenum, dpfail: types::GLenum, dppass: types::GLenum) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLenum, types::GLenum, types::GLenum) -> ()>(storage::StencilOpSeparate.f)(face, sfail, dpfail, dppass) }\n/// Fallbacks: TexBufferARB, TexBufferEXT, TexBufferOES\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn TexBuffer(target: types::GLenum, internalformat: types::GLenum, buffer: types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLenum, types::GLuint) -> ()>(storage::TexBuffer.f)(target, internalformat, buffer) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn TexCoordP1ui(type_: types::GLenum, coords: types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLuint) -> ()>(storage::TexCoordP1ui.f)(type_, coords) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn TexCoordP1uiv(type_: types::GLenum, coords: *const types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, *const types::GLuint) -> ()>(storage::TexCoordP1uiv.f)(type_, coords) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn TexCoordP2ui(type_: types::GLenum, coords: types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLuint) -> ()>(storage::TexCoordP2ui.f)(type_, coords) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn TexCoordP2uiv(type_: types::GLenum, coords: *const types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, *const types::GLuint) -> ()>(storage::TexCoordP2uiv.f)(type_, coords) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn TexCoordP3ui(type_: types::GLenum, coords: types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLuint) -> ()>(storage::TexCoordP3ui.f)(type_, coords) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn TexCoordP3uiv(type_: types::GLenum, coords: *const types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, *const types::GLuint) -> ()>(storage::TexCoordP3uiv.f)(type_, coords) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn TexCoordP4ui(type_: types::GLenum, coords: types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLuint) -> ()>(storage::TexCoordP4ui.f)(type_, coords) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn TexCoordP4uiv(type_: types::GLenum, coords: *const types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, *const types::GLuint) -> ()>(storage::TexCoordP4uiv.f)(type_, coords) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn TexImage1D(target: types::GLenum, level: types::GLint, internalformat: types::GLint, width: types::GLsizei, border: types::GLint, format: types::GLenum, type_: types::GLenum, pixels: *const __gl_imports::raw::c_void) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLint, types::GLint, types::GLsizei, types::GLint, types::GLenum, types::GLenum, *const __gl_imports::raw::c_void) -> ()>(storage::TexImage1D.f)(target, level, internalformat, width, border, format, type_, pixels) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn TexImage2D(target: types::GLenum, level: types::GLint, internalformat: types::GLint, width: types::GLsizei, height: types::GLsizei, border: types::GLint, format: types::GLenum, type_: types::GLenum, pixels: *const __gl_imports::raw::c_void) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLint, types::GLint, types::GLsizei, types::GLsizei, types::GLint, types::GLenum, types::GLenum, *const __gl_imports::raw::c_void) -> ()>(storage::TexImage2D.f)(target, level, internalformat, width, height, border, format, type_, pixels) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn TexImage2DMultisample(target: types::GLenum, samples: types::GLsizei, internalformat: types::GLenum, width: types::GLsizei, height: types::GLsizei, fixedsamplelocations: types::GLboolean) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLsizei, types::GLenum, types::GLsizei, types::GLsizei, types::GLboolean) -> ()>(storage::TexImage2DMultisample.f)(target, samples, internalformat, width, height, fixedsamplelocations) }\n/// Fallbacks: TexImage3DEXT\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn TexImage3D(target: types::GLenum, level: types::GLint, internalformat: types::GLint, width: types::GLsizei, height: types::GLsizei, depth: types::GLsizei, border: types::GLint, format: types::GLenum, type_: types::GLenum, pixels: *const __gl_imports::raw::c_void) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLint, types::GLint, types::GLsizei, types::GLsizei, types::GLsizei, types::GLint, types::GLenum, types::GLenum, *const __gl_imports::raw::c_void) -> ()>(storage::TexImage3D.f)(target, level, internalformat, width, height, depth, border, format, type_, pixels) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn TexImage3DMultisample(target: types::GLenum, samples: types::GLsizei, internalformat: types::GLenum, width: types::GLsizei, height: types::GLsizei, depth: types::GLsizei, fixedsamplelocations: types::GLboolean) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLsizei, types::GLenum, types::GLsizei, types::GLsizei, types::GLsizei, types::GLboolean) -> ()>(storage::TexImage3DMultisample.f)(target, samples, internalformat, width, height, depth, fixedsamplelocations) }\n/// Fallbacks: TexParameterIivEXT, TexParameterIivOES\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn TexParameterIiv(target: types::GLenum, pname: types::GLenum, params: *const types::GLint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLenum, *const types::GLint) -> ()>(storage::TexParameterIiv.f)(target, pname, params) }\n/// Fallbacks: TexParameterIuivEXT, TexParameterIuivOES\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn TexParameterIuiv(target: types::GLenum, pname: types::GLenum, params: *const types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLenum, *const types::GLuint) -> ()>(storage::TexParameterIuiv.f)(target, pname, params) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn TexParameterf(target: types::GLenum, pname: types::GLenum, param: types::GLfloat) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLenum, types::GLfloat) -> ()>(storage::TexParameterf.f)(target, pname, param) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn TexParameterfv(target: types::GLenum, pname: types::GLenum, params: *const types::GLfloat) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLenum, *const types::GLfloat) -> ()>(storage::TexParameterfv.f)(target, pname, params) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn TexParameteri(target: types::GLenum, pname: types::GLenum, param: types::GLint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLenum, types::GLint) -> ()>(storage::TexParameteri.f)(target, pname, param) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn TexParameteriv(target: types::GLenum, pname: types::GLenum, params: *const types::GLint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLenum, *const types::GLint) -> ()>(storage::TexParameteriv.f)(target, pname, params) }\n/// Fallbacks: TexSubImage1DEXT\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn TexSubImage1D(target: types::GLenum, level: types::GLint, xoffset: types::GLint, width: types::GLsizei, format: types::GLenum, type_: types::GLenum, pixels: *const __gl_imports::raw::c_void) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLint, types::GLint, types::GLsizei, types::GLenum, types::GLenum, *const __gl_imports::raw::c_void) -> ()>(storage::TexSubImage1D.f)(target, level, xoffset, width, format, type_, pixels) }\n/// Fallbacks: TexSubImage2DEXT\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn TexSubImage2D(target: types::GLenum, level: types::GLint, xoffset: types::GLint, yoffset: types::GLint, width: types::GLsizei, height: types::GLsizei, format: types::GLenum, type_: types::GLenum, pixels: *const __gl_imports::raw::c_void) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLint, types::GLint, types::GLint, types::GLsizei, types::GLsizei, types::GLenum, types::GLenum, *const __gl_imports::raw::c_void) -> ()>(storage::TexSubImage2D.f)(target, level, xoffset, yoffset, width, height, format, type_, pixels) }\n/// Fallbacks: TexSubImage3DEXT\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn TexSubImage3D(target: types::GLenum, level: types::GLint, xoffset: types::GLint, yoffset: types::GLint, zoffset: types::GLint, width: types::GLsizei, height: types::GLsizei, depth: types::GLsizei, format: types::GLenum, type_: types::GLenum, pixels: *const __gl_imports::raw::c_void) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLint, types::GLint, types::GLint, types::GLint, types::GLsizei, types::GLsizei, types::GLsizei, types::GLenum, types::GLenum, *const __gl_imports::raw::c_void) -> ()>(storage::TexSubImage3D.f)(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type_, pixels) }\n/// Fallbacks: TransformFeedbackVaryingsEXT\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn TransformFeedbackVaryings(program: types::GLuint, count: types::GLsizei, varyings: *const *const types::GLchar, bufferMode: types::GLenum) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, types::GLsizei, *const *const types::GLchar, types::GLenum) -> ()>(storage::TransformFeedbackVaryings.f)(program, count, varyings, bufferMode) }\n/// Fallbacks: Uniform1fARB\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn Uniform1f(location: types::GLint, v0: types::GLfloat) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLint, types::GLfloat) -> ()>(storage::Uniform1f.f)(location, v0) }\n/// Fallbacks: Uniform1fvARB\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn Uniform1fv(location: types::GLint, count: types::GLsizei, value: *const types::GLfloat) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLint, types::GLsizei, *const types::GLfloat) -> ()>(storage::Uniform1fv.f)(location, count, value) }\n/// Fallbacks: Uniform1iARB\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn Uniform1i(location: types::GLint, v0: types::GLint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLint, types::GLint) -> ()>(storage::Uniform1i.f)(location, v0) }\n/// Fallbacks: Uniform1ivARB\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn Uniform1iv(location: types::GLint, count: types::GLsizei, value: *const types::GLint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLint, types::GLsizei, *const types::GLint) -> ()>(storage::Uniform1iv.f)(location, count, value) }\n/// Fallbacks: Uniform1uiEXT\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn Uniform1ui(location: types::GLint, v0: types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLint, types::GLuint) -> ()>(storage::Uniform1ui.f)(location, v0) }\n/// Fallbacks: Uniform1uivEXT\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn Uniform1uiv(location: types::GLint, count: types::GLsizei, value: *const types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLint, types::GLsizei, *const types::GLuint) -> ()>(storage::Uniform1uiv.f)(location, count, value) }\n/// Fallbacks: Uniform2fARB\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn Uniform2f(location: types::GLint, v0: types::GLfloat, v1: types::GLfloat) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLint, types::GLfloat, types::GLfloat) -> ()>(storage::Uniform2f.f)(location, v0, v1) }\n/// Fallbacks: Uniform2fvARB\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn Uniform2fv(location: types::GLint, count: types::GLsizei, value: *const types::GLfloat) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLint, types::GLsizei, *const types::GLfloat) -> ()>(storage::Uniform2fv.f)(location, count, value) }\n/// Fallbacks: Uniform2iARB\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn Uniform2i(location: types::GLint, v0: types::GLint, v1: types::GLint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLint, types::GLint, types::GLint) -> ()>(storage::Uniform2i.f)(location, v0, v1) }\n/// Fallbacks: Uniform2ivARB\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn Uniform2iv(location: types::GLint, count: types::GLsizei, value: *const types::GLint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLint, types::GLsizei, *const types::GLint) -> ()>(storage::Uniform2iv.f)(location, count, value) }\n/// Fallbacks: Uniform2uiEXT\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn Uniform2ui(location: types::GLint, v0: types::GLuint, v1: types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLint, types::GLuint, types::GLuint) -> ()>(storage::Uniform2ui.f)(location, v0, v1) }\n/// Fallbacks: Uniform2uivEXT\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn Uniform2uiv(location: types::GLint, count: types::GLsizei, value: *const types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLint, types::GLsizei, *const types::GLuint) -> ()>(storage::Uniform2uiv.f)(location, count, value) }\n/// Fallbacks: Uniform3fARB\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn Uniform3f(location: types::GLint, v0: types::GLfloat, v1: types::GLfloat, v2: types::GLfloat) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLint, types::GLfloat, types::GLfloat, types::GLfloat) -> ()>(storage::Uniform3f.f)(location, v0, v1, v2) }\n/// Fallbacks: Uniform3fvARB\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn Uniform3fv(location: types::GLint, count: types::GLsizei, value: *const types::GLfloat) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLint, types::GLsizei, *const types::GLfloat) -> ()>(storage::Uniform3fv.f)(location, count, value) }\n/// Fallbacks: Uniform3iARB\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn Uniform3i(location: types::GLint, v0: types::GLint, v1: types::GLint, v2: types::GLint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLint, types::GLint, types::GLint, types::GLint) -> ()>(storage::Uniform3i.f)(location, v0, v1, v2) }\n/// Fallbacks: Uniform3ivARB\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn Uniform3iv(location: types::GLint, count: types::GLsizei, value: *const types::GLint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLint, types::GLsizei, *const types::GLint) -> ()>(storage::Uniform3iv.f)(location, count, value) }\n/// Fallbacks: Uniform3uiEXT\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn Uniform3ui(location: types::GLint, v0: types::GLuint, v1: types::GLuint, v2: types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLint, types::GLuint, types::GLuint, types::GLuint) -> ()>(storage::Uniform3ui.f)(location, v0, v1, v2) }\n/// Fallbacks: Uniform3uivEXT\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn Uniform3uiv(location: types::GLint, count: types::GLsizei, value: *const types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLint, types::GLsizei, *const types::GLuint) -> ()>(storage::Uniform3uiv.f)(location, count, value) }\n/// Fallbacks: Uniform4fARB\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn Uniform4f(location: types::GLint, v0: types::GLfloat, v1: types::GLfloat, v2: types::GLfloat, v3: types::GLfloat) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLint, types::GLfloat, types::GLfloat, types::GLfloat, types::GLfloat) -> ()>(storage::Uniform4f.f)(location, v0, v1, v2, v3) }\n/// Fallbacks: Uniform4fvARB\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn Uniform4fv(location: types::GLint, count: types::GLsizei, value: *const types::GLfloat) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLint, types::GLsizei, *const types::GLfloat) -> ()>(storage::Uniform4fv.f)(location, count, value) }\n/// Fallbacks: Uniform4iARB\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn Uniform4i(location: types::GLint, v0: types::GLint, v1: types::GLint, v2: types::GLint, v3: types::GLint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLint, types::GLint, types::GLint, types::GLint, types::GLint) -> ()>(storage::Uniform4i.f)(location, v0, v1, v2, v3) }\n/// Fallbacks: Uniform4ivARB\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn Uniform4iv(location: types::GLint, count: types::GLsizei, value: *const types::GLint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLint, types::GLsizei, *const types::GLint) -> ()>(storage::Uniform4iv.f)(location, count, value) }\n/// Fallbacks: Uniform4uiEXT\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn Uniform4ui(location: types::GLint, v0: types::GLuint, v1: types::GLuint, v2: types::GLuint, v3: types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLint, types::GLuint, types::GLuint, types::GLuint, types::GLuint) -> ()>(storage::Uniform4ui.f)(location, v0, v1, v2, v3) }\n/// Fallbacks: Uniform4uivEXT\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn Uniform4uiv(location: types::GLint, count: types::GLsizei, value: *const types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLint, types::GLsizei, *const types::GLuint) -> ()>(storage::Uniform4uiv.f)(location, count, value) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn UniformBlockBinding(program: types::GLuint, uniformBlockIndex: types::GLuint, uniformBlockBinding: types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, types::GLuint, types::GLuint) -> ()>(storage::UniformBlockBinding.f)(program, uniformBlockIndex, uniformBlockBinding) }\n/// Fallbacks: UniformMatrix2fvARB\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn UniformMatrix2fv(location: types::GLint, count: types::GLsizei, transpose: types::GLboolean, value: *const types::GLfloat) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLint, types::GLsizei, types::GLboolean, *const types::GLfloat) -> ()>(storage::UniformMatrix2fv.f)(location, count, transpose, value) }\n/// Fallbacks: UniformMatrix2x3fvNV\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn UniformMatrix2x3fv(location: types::GLint, count: types::GLsizei, transpose: types::GLboolean, value: *const types::GLfloat) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLint, types::GLsizei, types::GLboolean, *const types::GLfloat) -> ()>(storage::UniformMatrix2x3fv.f)(location, count, transpose, value) }\n/// Fallbacks: UniformMatrix2x4fvNV\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn UniformMatrix2x4fv(location: types::GLint, count: types::GLsizei, transpose: types::GLboolean, value: *const types::GLfloat) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLint, types::GLsizei, types::GLboolean, *const types::GLfloat) -> ()>(storage::UniformMatrix2x4fv.f)(location, count, transpose, value) }\n/// Fallbacks: UniformMatrix3fvARB\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn UniformMatrix3fv(location: types::GLint, count: types::GLsizei, transpose: types::GLboolean, value: *const types::GLfloat) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLint, types::GLsizei, types::GLboolean, *const types::GLfloat) -> ()>(storage::UniformMatrix3fv.f)(location, count, transpose, value) }\n/// Fallbacks: UniformMatrix3x2fvNV\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn UniformMatrix3x2fv(location: types::GLint, count: types::GLsizei, transpose: types::GLboolean, value: *const types::GLfloat) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLint, types::GLsizei, types::GLboolean, *const types::GLfloat) -> ()>(storage::UniformMatrix3x2fv.f)(location, count, transpose, value) }\n/// Fallbacks: UniformMatrix3x4fvNV\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn UniformMatrix3x4fv(location: types::GLint, count: types::GLsizei, transpose: types::GLboolean, value: *const types::GLfloat) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLint, types::GLsizei, types::GLboolean, *const types::GLfloat) -> ()>(storage::UniformMatrix3x4fv.f)(location, count, transpose, value) }\n/// Fallbacks: UniformMatrix4fvARB\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn UniformMatrix4fv(location: types::GLint, count: types::GLsizei, transpose: types::GLboolean, value: *const types::GLfloat) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLint, types::GLsizei, types::GLboolean, *const types::GLfloat) -> ()>(storage::UniformMatrix4fv.f)(location, count, transpose, value) }\n/// Fallbacks: UniformMatrix4x2fvNV\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn UniformMatrix4x2fv(location: types::GLint, count: types::GLsizei, transpose: types::GLboolean, value: *const types::GLfloat) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLint, types::GLsizei, types::GLboolean, *const types::GLfloat) -> ()>(storage::UniformMatrix4x2fv.f)(location, count, transpose, value) }\n/// Fallbacks: UniformMatrix4x3fvNV\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn UniformMatrix4x3fv(location: types::GLint, count: types::GLsizei, transpose: types::GLboolean, value: *const types::GLfloat) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLint, types::GLsizei, types::GLboolean, *const types::GLfloat) -> ()>(storage::UniformMatrix4x3fv.f)(location, count, transpose, value) }\n/// Fallbacks: UnmapBufferARB, UnmapBufferOES\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn UnmapBuffer(target: types::GLenum) -> types::GLboolean { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum) -> types::GLboolean>(storage::UnmapBuffer.f)(target) }\n/// Fallbacks: UseProgramObjectARB\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn UseProgram(program: types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint) -> ()>(storage::UseProgram.f)(program) }\n/// Fallbacks: ValidateProgramARB\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn ValidateProgram(program: types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint) -> ()>(storage::ValidateProgram.f)(program) }\n/// Fallbacks: VertexAttrib1dARB, VertexAttrib1dNV\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn VertexAttrib1d(index: types::GLuint, x: types::GLdouble) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, types::GLdouble) -> ()>(storage::VertexAttrib1d.f)(index, x) }\n/// Fallbacks: VertexAttrib1dvARB, VertexAttrib1dvNV\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn VertexAttrib1dv(index: types::GLuint, v: *const types::GLdouble) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, *const types::GLdouble) -> ()>(storage::VertexAttrib1dv.f)(index, v) }\n/// Fallbacks: VertexAttrib1fARB, VertexAttrib1fNV\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn VertexAttrib1f(index: types::GLuint, x: types::GLfloat) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, types::GLfloat) -> ()>(storage::VertexAttrib1f.f)(index, x) }\n/// Fallbacks: VertexAttrib1fvARB, VertexAttrib1fvNV\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn VertexAttrib1fv(index: types::GLuint, v: *const types::GLfloat) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, *const types::GLfloat) -> ()>(storage::VertexAttrib1fv.f)(index, v) }\n/// Fallbacks: VertexAttrib1sARB, VertexAttrib1sNV\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn VertexAttrib1s(index: types::GLuint, x: types::GLshort) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, types::GLshort) -> ()>(storage::VertexAttrib1s.f)(index, x) }\n/// Fallbacks: VertexAttrib1svARB, VertexAttrib1svNV\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn VertexAttrib1sv(index: types::GLuint, v: *const types::GLshort) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, *const types::GLshort) -> ()>(storage::VertexAttrib1sv.f)(index, v) }\n/// Fallbacks: VertexAttrib2dARB, VertexAttrib2dNV\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn VertexAttrib2d(index: types::GLuint, x: types::GLdouble, y: types::GLdouble) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, types::GLdouble, types::GLdouble) -> ()>(storage::VertexAttrib2d.f)(index, x, y) }\n/// Fallbacks: VertexAttrib2dvARB, VertexAttrib2dvNV\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn VertexAttrib2dv(index: types::GLuint, v: *const types::GLdouble) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, *const types::GLdouble) -> ()>(storage::VertexAttrib2dv.f)(index, v) }\n/// Fallbacks: VertexAttrib2fARB, VertexAttrib2fNV\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn VertexAttrib2f(index: types::GLuint, x: types::GLfloat, y: types::GLfloat) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, types::GLfloat, types::GLfloat) -> ()>(storage::VertexAttrib2f.f)(index, x, y) }\n/// Fallbacks: VertexAttrib2fvARB, VertexAttrib2fvNV\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn VertexAttrib2fv(index: types::GLuint, v: *const types::GLfloat) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, *const types::GLfloat) -> ()>(storage::VertexAttrib2fv.f)(index, v) }\n/// Fallbacks: VertexAttrib2sARB, VertexAttrib2sNV\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn VertexAttrib2s(index: types::GLuint, x: types::GLshort, y: types::GLshort) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, types::GLshort, types::GLshort) -> ()>(storage::VertexAttrib2s.f)(index, x, y) }\n/// Fallbacks: VertexAttrib2svARB, VertexAttrib2svNV\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn VertexAttrib2sv(index: types::GLuint, v: *const types::GLshort) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, *const types::GLshort) -> ()>(storage::VertexAttrib2sv.f)(index, v) }\n/// Fallbacks: VertexAttrib3dARB, VertexAttrib3dNV\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn VertexAttrib3d(index: types::GLuint, x: types::GLdouble, y: types::GLdouble, z: types::GLdouble) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, types::GLdouble, types::GLdouble, types::GLdouble) -> ()>(storage::VertexAttrib3d.f)(index, x, y, z) }\n/// Fallbacks: VertexAttrib3dvARB, VertexAttrib3dvNV\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn VertexAttrib3dv(index: types::GLuint, v: *const types::GLdouble) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, *const types::GLdouble) -> ()>(storage::VertexAttrib3dv.f)(index, v) }\n/// Fallbacks: VertexAttrib3fARB, VertexAttrib3fNV\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn VertexAttrib3f(index: types::GLuint, x: types::GLfloat, y: types::GLfloat, z: types::GLfloat) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, types::GLfloat, types::GLfloat, types::GLfloat) -> ()>(storage::VertexAttrib3f.f)(index, x, y, z) }\n/// Fallbacks: VertexAttrib3fvARB, VertexAttrib3fvNV\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn VertexAttrib3fv(index: types::GLuint, v: *const types::GLfloat) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, *const types::GLfloat) -> ()>(storage::VertexAttrib3fv.f)(index, v) }\n/// Fallbacks: VertexAttrib3sARB, VertexAttrib3sNV\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn VertexAttrib3s(index: types::GLuint, x: types::GLshort, y: types::GLshort, z: types::GLshort) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, types::GLshort, types::GLshort, types::GLshort) -> ()>(storage::VertexAttrib3s.f)(index, x, y, z) }\n/// Fallbacks: VertexAttrib3svARB, VertexAttrib3svNV\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn VertexAttrib3sv(index: types::GLuint, v: *const types::GLshort) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, *const types::GLshort) -> ()>(storage::VertexAttrib3sv.f)(index, v) }\n/// Fallbacks: VertexAttrib4NbvARB\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn VertexAttrib4Nbv(index: types::GLuint, v: *const types::GLbyte) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, *const types::GLbyte) -> ()>(storage::VertexAttrib4Nbv.f)(index, v) }\n/// Fallbacks: VertexAttrib4NivARB\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn VertexAttrib4Niv(index: types::GLuint, v: *const types::GLint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, *const types::GLint) -> ()>(storage::VertexAttrib4Niv.f)(index, v) }\n/// Fallbacks: VertexAttrib4NsvARB\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn VertexAttrib4Nsv(index: types::GLuint, v: *const types::GLshort) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, *const types::GLshort) -> ()>(storage::VertexAttrib4Nsv.f)(index, v) }\n/// Fallbacks: VertexAttrib4NubARB, VertexAttrib4ubNV\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn VertexAttrib4Nub(index: types::GLuint, x: types::GLubyte, y: types::GLubyte, z: types::GLubyte, w: types::GLubyte) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, types::GLubyte, types::GLubyte, types::GLubyte, types::GLubyte) -> ()>(storage::VertexAttrib4Nub.f)(index, x, y, z, w) }\n/// Fallbacks: VertexAttrib4NubvARB, VertexAttrib4ubvNV\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn VertexAttrib4Nubv(index: types::GLuint, v: *const types::GLubyte) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, *const types::GLubyte) -> ()>(storage::VertexAttrib4Nubv.f)(index, v) }\n/// Fallbacks: VertexAttrib4NuivARB\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn VertexAttrib4Nuiv(index: types::GLuint, v: *const types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, *const types::GLuint) -> ()>(storage::VertexAttrib4Nuiv.f)(index, v) }\n/// Fallbacks: VertexAttrib4NusvARB\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn VertexAttrib4Nusv(index: types::GLuint, v: *const types::GLushort) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, *const types::GLushort) -> ()>(storage::VertexAttrib4Nusv.f)(index, v) }\n/// Fallbacks: VertexAttrib4bvARB\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn VertexAttrib4bv(index: types::GLuint, v: *const types::GLbyte) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, *const types::GLbyte) -> ()>(storage::VertexAttrib4bv.f)(index, v) }\n/// Fallbacks: VertexAttrib4dARB, VertexAttrib4dNV\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn VertexAttrib4d(index: types::GLuint, x: types::GLdouble, y: types::GLdouble, z: types::GLdouble, w: types::GLdouble) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, types::GLdouble, types::GLdouble, types::GLdouble, types::GLdouble) -> ()>(storage::VertexAttrib4d.f)(index, x, y, z, w) }\n/// Fallbacks: VertexAttrib4dvARB, VertexAttrib4dvNV\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn VertexAttrib4dv(index: types::GLuint, v: *const types::GLdouble) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, *const types::GLdouble) -> ()>(storage::VertexAttrib4dv.f)(index, v) }\n/// Fallbacks: VertexAttrib4fARB, VertexAttrib4fNV\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn VertexAttrib4f(index: types::GLuint, x: types::GLfloat, y: types::GLfloat, z: types::GLfloat, w: types::GLfloat) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, types::GLfloat, types::GLfloat, types::GLfloat, types::GLfloat) -> ()>(storage::VertexAttrib4f.f)(index, x, y, z, w) }\n/// Fallbacks: VertexAttrib4fvARB, VertexAttrib4fvNV\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn VertexAttrib4fv(index: types::GLuint, v: *const types::GLfloat) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, *const types::GLfloat) -> ()>(storage::VertexAttrib4fv.f)(index, v) }\n/// Fallbacks: VertexAttrib4ivARB\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn VertexAttrib4iv(index: types::GLuint, v: *const types::GLint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, *const types::GLint) -> ()>(storage::VertexAttrib4iv.f)(index, v) }\n/// Fallbacks: VertexAttrib4sARB, VertexAttrib4sNV\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn VertexAttrib4s(index: types::GLuint, x: types::GLshort, y: types::GLshort, z: types::GLshort, w: types::GLshort) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, types::GLshort, types::GLshort, types::GLshort, types::GLshort) -> ()>(storage::VertexAttrib4s.f)(index, x, y, z, w) }\n/// Fallbacks: VertexAttrib4svARB, VertexAttrib4svNV\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn VertexAttrib4sv(index: types::GLuint, v: *const types::GLshort) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, *const types::GLshort) -> ()>(storage::VertexAttrib4sv.f)(index, v) }\n/// Fallbacks: VertexAttrib4ubvARB\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn VertexAttrib4ubv(index: types::GLuint, v: *const types::GLubyte) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, *const types::GLubyte) -> ()>(storage::VertexAttrib4ubv.f)(index, v) }\n/// Fallbacks: VertexAttrib4uivARB\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn VertexAttrib4uiv(index: types::GLuint, v: *const types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, *const types::GLuint) -> ()>(storage::VertexAttrib4uiv.f)(index, v) }\n/// Fallbacks: VertexAttrib4usvARB\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn VertexAttrib4usv(index: types::GLuint, v: *const types::GLushort) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, *const types::GLushort) -> ()>(storage::VertexAttrib4usv.f)(index, v) }\n/// Fallbacks: VertexAttribDivisorANGLE, VertexAttribDivisorARB, VertexAttribDivisorEXT, VertexAttribDivisorNV\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn VertexAttribDivisor(index: types::GLuint, divisor: types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, types::GLuint) -> ()>(storage::VertexAttribDivisor.f)(index, divisor) }\n/// Fallbacks: VertexAttribI1iEXT\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn VertexAttribI1i(index: types::GLuint, x: types::GLint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, types::GLint) -> ()>(storage::VertexAttribI1i.f)(index, x) }\n/// Fallbacks: VertexAttribI1ivEXT\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn VertexAttribI1iv(index: types::GLuint, v: *const types::GLint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, *const types::GLint) -> ()>(storage::VertexAttribI1iv.f)(index, v) }\n/// Fallbacks: VertexAttribI1uiEXT\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn VertexAttribI1ui(index: types::GLuint, x: types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, types::GLuint) -> ()>(storage::VertexAttribI1ui.f)(index, x) }\n/// Fallbacks: VertexAttribI1uivEXT\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn VertexAttribI1uiv(index: types::GLuint, v: *const types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, *const types::GLuint) -> ()>(storage::VertexAttribI1uiv.f)(index, v) }\n/// Fallbacks: VertexAttribI2iEXT\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn VertexAttribI2i(index: types::GLuint, x: types::GLint, y: types::GLint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, types::GLint, types::GLint) -> ()>(storage::VertexAttribI2i.f)(index, x, y) }\n/// Fallbacks: VertexAttribI2ivEXT\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn VertexAttribI2iv(index: types::GLuint, v: *const types::GLint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, *const types::GLint) -> ()>(storage::VertexAttribI2iv.f)(index, v) }\n/// Fallbacks: VertexAttribI2uiEXT\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn VertexAttribI2ui(index: types::GLuint, x: types::GLuint, y: types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, types::GLuint, types::GLuint) -> ()>(storage::VertexAttribI2ui.f)(index, x, y) }\n/// Fallbacks: VertexAttribI2uivEXT\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn VertexAttribI2uiv(index: types::GLuint, v: *const types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, *const types::GLuint) -> ()>(storage::VertexAttribI2uiv.f)(index, v) }\n/// Fallbacks: VertexAttribI3iEXT\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn VertexAttribI3i(index: types::GLuint, x: types::GLint, y: types::GLint, z: types::GLint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, types::GLint, types::GLint, types::GLint) -> ()>(storage::VertexAttribI3i.f)(index, x, y, z) }\n/// Fallbacks: VertexAttribI3ivEXT\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn VertexAttribI3iv(index: types::GLuint, v: *const types::GLint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, *const types::GLint) -> ()>(storage::VertexAttribI3iv.f)(index, v) }\n/// Fallbacks: VertexAttribI3uiEXT\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn VertexAttribI3ui(index: types::GLuint, x: types::GLuint, y: types::GLuint, z: types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, types::GLuint, types::GLuint, types::GLuint) -> ()>(storage::VertexAttribI3ui.f)(index, x, y, z) }\n/// Fallbacks: VertexAttribI3uivEXT\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn VertexAttribI3uiv(index: types::GLuint, v: *const types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, *const types::GLuint) -> ()>(storage::VertexAttribI3uiv.f)(index, v) }\n/// Fallbacks: VertexAttribI4bvEXT\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn VertexAttribI4bv(index: types::GLuint, v: *const types::GLbyte) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, *const types::GLbyte) -> ()>(storage::VertexAttribI4bv.f)(index, v) }\n/// Fallbacks: VertexAttribI4iEXT\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn VertexAttribI4i(index: types::GLuint, x: types::GLint, y: types::GLint, z: types::GLint, w: types::GLint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, types::GLint, types::GLint, types::GLint, types::GLint) -> ()>(storage::VertexAttribI4i.f)(index, x, y, z, w) }\n/// Fallbacks: VertexAttribI4ivEXT\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn VertexAttribI4iv(index: types::GLuint, v: *const types::GLint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, *const types::GLint) -> ()>(storage::VertexAttribI4iv.f)(index, v) }\n/// Fallbacks: VertexAttribI4svEXT\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn VertexAttribI4sv(index: types::GLuint, v: *const types::GLshort) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, *const types::GLshort) -> ()>(storage::VertexAttribI4sv.f)(index, v) }\n/// Fallbacks: VertexAttribI4ubvEXT\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn VertexAttribI4ubv(index: types::GLuint, v: *const types::GLubyte) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, *const types::GLubyte) -> ()>(storage::VertexAttribI4ubv.f)(index, v) }\n/// Fallbacks: VertexAttribI4uiEXT\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn VertexAttribI4ui(index: types::GLuint, x: types::GLuint, y: types::GLuint, z: types::GLuint, w: types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, types::GLuint, types::GLuint, types::GLuint, types::GLuint) -> ()>(storage::VertexAttribI4ui.f)(index, x, y, z, w) }\n/// Fallbacks: VertexAttribI4uivEXT\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn VertexAttribI4uiv(index: types::GLuint, v: *const types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, *const types::GLuint) -> ()>(storage::VertexAttribI4uiv.f)(index, v) }\n/// Fallbacks: VertexAttribI4usvEXT\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn VertexAttribI4usv(index: types::GLuint, v: *const types::GLushort) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, *const types::GLushort) -> ()>(storage::VertexAttribI4usv.f)(index, v) }\n/// Fallbacks: VertexAttribIPointerEXT\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn VertexAttribIPointer(index: types::GLuint, size: types::GLint, type_: types::GLenum, stride: types::GLsizei, pointer: *const __gl_imports::raw::c_void) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, types::GLint, types::GLenum, types::GLsizei, *const __gl_imports::raw::c_void) -> ()>(storage::VertexAttribIPointer.f)(index, size, type_, stride, pointer) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn VertexAttribP1ui(index: types::GLuint, type_: types::GLenum, normalized: types::GLboolean, value: types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, types::GLenum, types::GLboolean, types::GLuint) -> ()>(storage::VertexAttribP1ui.f)(index, type_, normalized, value) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn VertexAttribP1uiv(index: types::GLuint, type_: types::GLenum, normalized: types::GLboolean, value: *const types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, types::GLenum, types::GLboolean, *const types::GLuint) -> ()>(storage::VertexAttribP1uiv.f)(index, type_, normalized, value) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn VertexAttribP2ui(index: types::GLuint, type_: types::GLenum, normalized: types::GLboolean, value: types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, types::GLenum, types::GLboolean, types::GLuint) -> ()>(storage::VertexAttribP2ui.f)(index, type_, normalized, value) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn VertexAttribP2uiv(index: types::GLuint, type_: types::GLenum, normalized: types::GLboolean, value: *const types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, types::GLenum, types::GLboolean, *const types::GLuint) -> ()>(storage::VertexAttribP2uiv.f)(index, type_, normalized, value) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn VertexAttribP3ui(index: types::GLuint, type_: types::GLenum, normalized: types::GLboolean, value: types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, types::GLenum, types::GLboolean, types::GLuint) -> ()>(storage::VertexAttribP3ui.f)(index, type_, normalized, value) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn VertexAttribP3uiv(index: types::GLuint, type_: types::GLenum, normalized: types::GLboolean, value: *const types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, types::GLenum, types::GLboolean, *const types::GLuint) -> ()>(storage::VertexAttribP3uiv.f)(index, type_, normalized, value) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn VertexAttribP4ui(index: types::GLuint, type_: types::GLenum, normalized: types::GLboolean, value: types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, types::GLenum, types::GLboolean, types::GLuint) -> ()>(storage::VertexAttribP4ui.f)(index, type_, normalized, value) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn VertexAttribP4uiv(index: types::GLuint, type_: types::GLenum, normalized: types::GLboolean, value: *const types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, types::GLenum, types::GLboolean, *const types::GLuint) -> ()>(storage::VertexAttribP4uiv.f)(index, type_, normalized, value) }\n/// Fallbacks: VertexAttribPointerARB\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn VertexAttribPointer(index: types::GLuint, size: types::GLint, type_: types::GLenum, normalized: types::GLboolean, stride: types::GLsizei, pointer: *const __gl_imports::raw::c_void) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLuint, types::GLint, types::GLenum, types::GLboolean, types::GLsizei, *const __gl_imports::raw::c_void) -> ()>(storage::VertexAttribPointer.f)(index, size, type_, normalized, stride, pointer) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn VertexP2ui(type_: types::GLenum, value: types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLuint) -> ()>(storage::VertexP2ui.f)(type_, value) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn VertexP2uiv(type_: types::GLenum, value: *const types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, *const types::GLuint) -> ()>(storage::VertexP2uiv.f)(type_, value) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn VertexP3ui(type_: types::GLenum, value: types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLuint) -> ()>(storage::VertexP3ui.f)(type_, value) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn VertexP3uiv(type_: types::GLenum, value: *const types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, *const types::GLuint) -> ()>(storage::VertexP3uiv.f)(type_, value) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn VertexP4ui(type_: types::GLenum, value: types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, types::GLuint) -> ()>(storage::VertexP4ui.f)(type_, value) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn VertexP4uiv(type_: types::GLenum, value: *const types::GLuint) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLenum, *const types::GLuint) -> ()>(storage::VertexP4uiv.f)(type_, value) }\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn Viewport(x: types::GLint, y: types::GLint, width: types::GLsizei, height: types::GLsizei) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLint, types::GLint, types::GLsizei, types::GLsizei) -> ()>(storage::Viewport.f)(x, y, width, height) }\n/// Fallbacks: WaitSyncAPPLE\n#[allow(non_snake_case, unused_variables, dead_code)] #[inline]\n            pub unsafe fn WaitSync(sync: types::GLsync, flags: types::GLbitfield, timeout: types::GLuint64) -> () { __gl_imports::mem::transmute::<_, extern \"system\" fn(types::GLsync, types::GLbitfield, types::GLuint64) -> ()>(storage::WaitSync.f)(sync, flags, timeout) }\n\n        #[allow(missing_copy_implementations)]\n        pub struct FnPtr {\n            /// The function pointer that will be used when calling the function.\n            f: *const __gl_imports::raw::c_void,\n            /// True if the pointer points to a real function, false if points to a `panic!` fn.\n            is_loaded: bool,\n        }\n\n        impl FnPtr {\n            /// Creates a `FnPtr` from a load attempt.\n            pub fn new(ptr: *const __gl_imports::raw::c_void) -> FnPtr {\n                if ptr.is_null() {\n                    FnPtr { f: missing_fn_panic as *const __gl_imports::raw::c_void, is_loaded: false }\n                } else {\n                    FnPtr { f: ptr, is_loaded: true }\n                }\n            }\n        }\n    \nmod storage {\n            #![allow(non_snake_case)]\n            #![allow(non_upper_case_globals)]\n            use super::__gl_imports::raw;\n            use super::FnPtr;\npub static mut ActiveTexture: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut AttachShader: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut BeginConditionalRender: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut BeginQuery: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut BeginTransformFeedback: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut BindAttribLocation: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut BindBuffer: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut BindBufferBase: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut BindBufferRange: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut BindFragDataLocation: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut BindFragDataLocationIndexed: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut BindFramebuffer: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut BindRenderbuffer: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut BindSampler: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut BindTexture: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut BindVertexArray: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut BlendColor: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut BlendEquation: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut BlendEquationSeparate: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut BlendFunc: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut BlendFuncSeparate: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut BlitFramebuffer: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut BufferData: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut BufferSubData: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut CheckFramebufferStatus: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut ClampColor: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut Clear: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut ClearBufferfi: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut ClearBufferfv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut ClearBufferiv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut ClearBufferuiv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut ClearColor: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut ClearDepth: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut ClearStencil: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut ClientWaitSync: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut ColorMask: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut ColorMaski: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut ColorP3ui: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut ColorP3uiv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut ColorP4ui: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut ColorP4uiv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut CompileShader: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut CompressedTexImage1D: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut CompressedTexImage2D: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut CompressedTexImage3D: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut CompressedTexSubImage1D: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut CompressedTexSubImage2D: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut CompressedTexSubImage3D: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut CopyBufferSubData: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut CopyTexImage1D: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut CopyTexImage2D: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut CopyTexSubImage1D: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut CopyTexSubImage2D: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut CopyTexSubImage3D: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut CreateProgram: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut CreateShader: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut CullFace: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut DeleteBuffers: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut DeleteFramebuffers: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut DeleteProgram: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut DeleteQueries: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut DeleteRenderbuffers: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut DeleteSamplers: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut DeleteShader: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut DeleteSync: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut DeleteTextures: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut DeleteVertexArrays: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut DepthFunc: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut DepthMask: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut DepthRange: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut DetachShader: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut Disable: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut DisableVertexAttribArray: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut Disablei: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut DrawArrays: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut DrawArraysInstanced: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut DrawBuffer: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut DrawBuffers: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut DrawElements: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut DrawElementsBaseVertex: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut DrawElementsInstanced: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut DrawElementsInstancedBaseVertex: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut DrawRangeElements: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut DrawRangeElementsBaseVertex: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut Enable: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut EnableVertexAttribArray: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut Enablei: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut EndConditionalRender: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut EndQuery: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut EndTransformFeedback: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut FenceSync: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut Finish: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut Flush: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut FlushMappedBufferRange: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut FramebufferRenderbuffer: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut FramebufferTexture: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut FramebufferTexture1D: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut FramebufferTexture2D: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut FramebufferTexture3D: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut FramebufferTextureLayer: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut FrontFace: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut GenBuffers: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut GenFramebuffers: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut GenQueries: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut GenRenderbuffers: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut GenSamplers: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut GenTextures: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut GenVertexArrays: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut GenerateMipmap: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut GetActiveAttrib: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut GetActiveUniform: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut GetActiveUniformBlockName: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut GetActiveUniformBlockiv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut GetActiveUniformName: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut GetActiveUniformsiv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut GetAttachedShaders: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut GetAttribLocation: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut GetBooleani_v: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut GetBooleanv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut GetBufferParameteri64v: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut GetBufferParameteriv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut GetBufferPointerv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut GetBufferSubData: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut GetCompressedTexImage: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut GetDoublev: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut GetError: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut GetFloatv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut GetFragDataIndex: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut GetFragDataLocation: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut GetFramebufferAttachmentParameteriv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut GetInteger64i_v: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut GetInteger64v: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut GetIntegeri_v: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut GetIntegerv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut GetMultisamplefv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut GetProgramInfoLog: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut GetProgramiv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut GetQueryObjecti64v: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut GetQueryObjectiv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut GetQueryObjectui64v: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut GetQueryObjectuiv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut GetQueryiv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut GetRenderbufferParameteriv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut GetSamplerParameterIiv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut GetSamplerParameterIuiv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut GetSamplerParameterfv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut GetSamplerParameteriv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut GetShaderInfoLog: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut GetShaderSource: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut GetShaderiv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut GetString: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut GetStringi: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut GetSynciv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut GetTexImage: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut GetTexLevelParameterfv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut GetTexLevelParameteriv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut GetTexParameterIiv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut GetTexParameterIuiv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut GetTexParameterfv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut GetTexParameteriv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut GetTransformFeedbackVarying: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut GetUniformBlockIndex: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut GetUniformIndices: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut GetUniformLocation: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut GetUniformfv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut GetUniformiv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut GetUniformuiv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut GetVertexAttribIiv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut GetVertexAttribIuiv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut GetVertexAttribPointerv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut GetVertexAttribdv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut GetVertexAttribfv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut GetVertexAttribiv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut Hint: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut IsBuffer: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut IsEnabled: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut IsEnabledi: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut IsFramebuffer: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut IsProgram: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut IsQuery: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut IsRenderbuffer: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut IsSampler: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut IsShader: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut IsSync: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut IsTexture: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut IsVertexArray: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut LineWidth: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut LinkProgram: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut LogicOp: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut MapBuffer: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut MapBufferRange: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut MultiDrawArrays: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut MultiDrawElements: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut MultiDrawElementsBaseVertex: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut MultiTexCoordP1ui: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut MultiTexCoordP1uiv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut MultiTexCoordP2ui: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut MultiTexCoordP2uiv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut MultiTexCoordP3ui: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut MultiTexCoordP3uiv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut MultiTexCoordP4ui: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut MultiTexCoordP4uiv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut NormalP3ui: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut NormalP3uiv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut PixelStoref: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut PixelStorei: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut PointParameterf: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut PointParameterfv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut PointParameteri: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut PointParameteriv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut PointSize: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut PolygonMode: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut PolygonOffset: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut PrimitiveRestartIndex: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut ProvokingVertex: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut QueryCounter: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut ReadBuffer: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut ReadPixels: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut RenderbufferStorage: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut RenderbufferStorageMultisample: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut SampleCoverage: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut SampleMaski: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut SamplerParameterIiv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut SamplerParameterIuiv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut SamplerParameterf: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut SamplerParameterfv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut SamplerParameteri: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut SamplerParameteriv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut Scissor: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut SecondaryColorP3ui: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut SecondaryColorP3uiv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut ShaderSource: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut StencilFunc: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut StencilFuncSeparate: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut StencilMask: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut StencilMaskSeparate: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut StencilOp: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut StencilOpSeparate: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut TexBuffer: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut TexCoordP1ui: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut TexCoordP1uiv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut TexCoordP2ui: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut TexCoordP2uiv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut TexCoordP3ui: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut TexCoordP3uiv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut TexCoordP4ui: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut TexCoordP4uiv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut TexImage1D: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut TexImage2D: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut TexImage2DMultisample: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut TexImage3D: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut TexImage3DMultisample: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut TexParameterIiv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut TexParameterIuiv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut TexParameterf: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut TexParameterfv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut TexParameteri: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut TexParameteriv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut TexSubImage1D: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut TexSubImage2D: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut TexSubImage3D: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut TransformFeedbackVaryings: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut Uniform1f: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut Uniform1fv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut Uniform1i: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut Uniform1iv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut Uniform1ui: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut Uniform1uiv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut Uniform2f: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut Uniform2fv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut Uniform2i: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut Uniform2iv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut Uniform2ui: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut Uniform2uiv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut Uniform3f: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut Uniform3fv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut Uniform3i: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut Uniform3iv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut Uniform3ui: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut Uniform3uiv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut Uniform4f: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut Uniform4fv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut Uniform4i: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut Uniform4iv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut Uniform4ui: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut Uniform4uiv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut UniformBlockBinding: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut UniformMatrix2fv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut UniformMatrix2x3fv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut UniformMatrix2x4fv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut UniformMatrix3fv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut UniformMatrix3x2fv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut UniformMatrix3x4fv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut UniformMatrix4fv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut UniformMatrix4x2fv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut UniformMatrix4x3fv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut UnmapBuffer: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut UseProgram: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut ValidateProgram: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut VertexAttrib1d: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut VertexAttrib1dv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut VertexAttrib1f: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut VertexAttrib1fv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut VertexAttrib1s: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut VertexAttrib1sv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut VertexAttrib2d: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut VertexAttrib2dv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut VertexAttrib2f: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut VertexAttrib2fv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut VertexAttrib2s: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut VertexAttrib2sv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut VertexAttrib3d: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut VertexAttrib3dv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut VertexAttrib3f: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut VertexAttrib3fv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut VertexAttrib3s: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut VertexAttrib3sv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut VertexAttrib4Nbv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut VertexAttrib4Niv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut VertexAttrib4Nsv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut VertexAttrib4Nub: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut VertexAttrib4Nubv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut VertexAttrib4Nuiv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut VertexAttrib4Nusv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut VertexAttrib4bv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut VertexAttrib4d: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut VertexAttrib4dv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut VertexAttrib4f: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut VertexAttrib4fv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut VertexAttrib4iv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut VertexAttrib4s: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut VertexAttrib4sv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut VertexAttrib4ubv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut VertexAttrib4uiv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut VertexAttrib4usv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut VertexAttribDivisor: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut VertexAttribI1i: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut VertexAttribI1iv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut VertexAttribI1ui: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut VertexAttribI1uiv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut VertexAttribI2i: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut VertexAttribI2iv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut VertexAttribI2ui: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut VertexAttribI2uiv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut VertexAttribI3i: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut VertexAttribI3iv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut VertexAttribI3ui: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut VertexAttribI3uiv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut VertexAttribI4bv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut VertexAttribI4i: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut VertexAttribI4iv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut VertexAttribI4sv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut VertexAttribI4ubv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut VertexAttribI4ui: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut VertexAttribI4uiv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut VertexAttribI4usv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut VertexAttribIPointer: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut VertexAttribP1ui: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut VertexAttribP1uiv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut VertexAttribP2ui: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut VertexAttribP2uiv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut VertexAttribP3ui: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut VertexAttribP3uiv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut VertexAttribP4ui: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut VertexAttribP4uiv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut VertexAttribPointer: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut VertexP2ui: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut VertexP2uiv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut VertexP3ui: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut VertexP3uiv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut VertexP4ui: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut VertexP4uiv: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut Viewport: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\npub static mut WaitSync: FnPtr = FnPtr {\n                f: super::missing_fn_panic as *const raw::c_void,\n                is_loaded: false\n            };\n}\n\n            #[allow(non_snake_case)]\n            pub mod ActiveTexture {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::ActiveTexture.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::ActiveTexture = FnPtr::new(metaloadfn(&mut loadfn, \"glActiveTexture\", &[\"glActiveTextureARB\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod AttachShader {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::AttachShader.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::AttachShader = FnPtr::new(metaloadfn(&mut loadfn, \"glAttachShader\", &[\"glAttachObjectARB\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod BeginConditionalRender {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::BeginConditionalRender.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::BeginConditionalRender = FnPtr::new(metaloadfn(&mut loadfn, \"glBeginConditionalRender\", &[\"glBeginConditionalRenderNV\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod BeginQuery {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::BeginQuery.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::BeginQuery = FnPtr::new(metaloadfn(&mut loadfn, \"glBeginQuery\", &[\"glBeginQueryARB\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod BeginTransformFeedback {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::BeginTransformFeedback.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::BeginTransformFeedback = FnPtr::new(metaloadfn(&mut loadfn, \"glBeginTransformFeedback\", &[\"glBeginTransformFeedbackEXT\", \"glBeginTransformFeedbackNV\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod BindAttribLocation {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::BindAttribLocation.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::BindAttribLocation = FnPtr::new(metaloadfn(&mut loadfn, \"glBindAttribLocation\", &[\"glBindAttribLocationARB\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod BindBuffer {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::BindBuffer.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::BindBuffer = FnPtr::new(metaloadfn(&mut loadfn, \"glBindBuffer\", &[\"glBindBufferARB\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod BindBufferBase {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::BindBufferBase.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::BindBufferBase = FnPtr::new(metaloadfn(&mut loadfn, \"glBindBufferBase\", &[\"glBindBufferBaseEXT\", \"glBindBufferBaseNV\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod BindBufferRange {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::BindBufferRange.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::BindBufferRange = FnPtr::new(metaloadfn(&mut loadfn, \"glBindBufferRange\", &[\"glBindBufferRangeEXT\", \"glBindBufferRangeNV\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod BindFragDataLocation {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::BindFragDataLocation.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::BindFragDataLocation = FnPtr::new(metaloadfn(&mut loadfn, \"glBindFragDataLocation\", &[\"glBindFragDataLocationEXT\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod BindFragDataLocationIndexed {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::BindFragDataLocationIndexed.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::BindFragDataLocationIndexed = FnPtr::new(metaloadfn(&mut loadfn, \"glBindFragDataLocationIndexed\", &[\"glBindFragDataLocationIndexedEXT\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod BindFramebuffer {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::BindFramebuffer.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::BindFramebuffer = FnPtr::new(metaloadfn(&mut loadfn, \"glBindFramebuffer\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod BindRenderbuffer {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::BindRenderbuffer.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::BindRenderbuffer = FnPtr::new(metaloadfn(&mut loadfn, \"glBindRenderbuffer\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod BindSampler {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::BindSampler.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::BindSampler = FnPtr::new(metaloadfn(&mut loadfn, \"glBindSampler\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod BindTexture {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::BindTexture.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::BindTexture = FnPtr::new(metaloadfn(&mut loadfn, \"glBindTexture\", &[\"glBindTextureEXT\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod BindVertexArray {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::BindVertexArray.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::BindVertexArray = FnPtr::new(metaloadfn(&mut loadfn, \"glBindVertexArray\", &[\"glBindVertexArrayOES\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod BlendColor {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::BlendColor.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::BlendColor = FnPtr::new(metaloadfn(&mut loadfn, \"glBlendColor\", &[\"glBlendColorEXT\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod BlendEquation {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::BlendEquation.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::BlendEquation = FnPtr::new(metaloadfn(&mut loadfn, \"glBlendEquation\", &[\"glBlendEquationEXT\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod BlendEquationSeparate {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::BlendEquationSeparate.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::BlendEquationSeparate = FnPtr::new(metaloadfn(&mut loadfn, \"glBlendEquationSeparate\", &[\"glBlendEquationSeparateEXT\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod BlendFunc {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::BlendFunc.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::BlendFunc = FnPtr::new(metaloadfn(&mut loadfn, \"glBlendFunc\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod BlendFuncSeparate {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::BlendFuncSeparate.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::BlendFuncSeparate = FnPtr::new(metaloadfn(&mut loadfn, \"glBlendFuncSeparate\", &[\"glBlendFuncSeparateEXT\", \"glBlendFuncSeparateINGR\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod BlitFramebuffer {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::BlitFramebuffer.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::BlitFramebuffer = FnPtr::new(metaloadfn(&mut loadfn, \"glBlitFramebuffer\", &[\"glBlitFramebufferEXT\", \"glBlitFramebufferNV\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod BufferData {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::BufferData.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::BufferData = FnPtr::new(metaloadfn(&mut loadfn, \"glBufferData\", &[\"glBufferDataARB\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod BufferSubData {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::BufferSubData.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::BufferSubData = FnPtr::new(metaloadfn(&mut loadfn, \"glBufferSubData\", &[\"glBufferSubDataARB\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod CheckFramebufferStatus {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::CheckFramebufferStatus.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::CheckFramebufferStatus = FnPtr::new(metaloadfn(&mut loadfn, \"glCheckFramebufferStatus\", &[\"glCheckFramebufferStatusEXT\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod ClampColor {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::ClampColor.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::ClampColor = FnPtr::new(metaloadfn(&mut loadfn, \"glClampColor\", &[\"glClampColorARB\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod Clear {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::Clear.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::Clear = FnPtr::new(metaloadfn(&mut loadfn, \"glClear\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod ClearBufferfi {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::ClearBufferfi.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::ClearBufferfi = FnPtr::new(metaloadfn(&mut loadfn, \"glClearBufferfi\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod ClearBufferfv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::ClearBufferfv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::ClearBufferfv = FnPtr::new(metaloadfn(&mut loadfn, \"glClearBufferfv\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod ClearBufferiv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::ClearBufferiv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::ClearBufferiv = FnPtr::new(metaloadfn(&mut loadfn, \"glClearBufferiv\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod ClearBufferuiv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::ClearBufferuiv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::ClearBufferuiv = FnPtr::new(metaloadfn(&mut loadfn, \"glClearBufferuiv\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod ClearColor {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::ClearColor.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::ClearColor = FnPtr::new(metaloadfn(&mut loadfn, \"glClearColor\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod ClearDepth {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::ClearDepth.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::ClearDepth = FnPtr::new(metaloadfn(&mut loadfn, \"glClearDepth\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod ClearStencil {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::ClearStencil.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::ClearStencil = FnPtr::new(metaloadfn(&mut loadfn, \"glClearStencil\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod ClientWaitSync {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::ClientWaitSync.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::ClientWaitSync = FnPtr::new(metaloadfn(&mut loadfn, \"glClientWaitSync\", &[\"glClientWaitSyncAPPLE\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod ColorMask {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::ColorMask.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::ColorMask = FnPtr::new(metaloadfn(&mut loadfn, \"glColorMask\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod ColorMaski {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::ColorMaski.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::ColorMaski = FnPtr::new(metaloadfn(&mut loadfn, \"glColorMaski\", &[\"glColorMaskIndexedEXT\", \"glColorMaskiEXT\", \"glColorMaskiOES\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod ColorP3ui {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::ColorP3ui.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::ColorP3ui = FnPtr::new(metaloadfn(&mut loadfn, \"glColorP3ui\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod ColorP3uiv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::ColorP3uiv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::ColorP3uiv = FnPtr::new(metaloadfn(&mut loadfn, \"glColorP3uiv\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod ColorP4ui {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::ColorP4ui.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::ColorP4ui = FnPtr::new(metaloadfn(&mut loadfn, \"glColorP4ui\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod ColorP4uiv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::ColorP4uiv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::ColorP4uiv = FnPtr::new(metaloadfn(&mut loadfn, \"glColorP4uiv\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod CompileShader {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::CompileShader.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::CompileShader = FnPtr::new(metaloadfn(&mut loadfn, \"glCompileShader\", &[\"glCompileShaderARB\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod CompressedTexImage1D {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::CompressedTexImage1D.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::CompressedTexImage1D = FnPtr::new(metaloadfn(&mut loadfn, \"glCompressedTexImage1D\", &[\"glCompressedTexImage1DARB\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod CompressedTexImage2D {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::CompressedTexImage2D.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::CompressedTexImage2D = FnPtr::new(metaloadfn(&mut loadfn, \"glCompressedTexImage2D\", &[\"glCompressedTexImage2DARB\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod CompressedTexImage3D {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::CompressedTexImage3D.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::CompressedTexImage3D = FnPtr::new(metaloadfn(&mut loadfn, \"glCompressedTexImage3D\", &[\"glCompressedTexImage3DARB\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod CompressedTexSubImage1D {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::CompressedTexSubImage1D.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::CompressedTexSubImage1D = FnPtr::new(metaloadfn(&mut loadfn, \"glCompressedTexSubImage1D\", &[\"glCompressedTexSubImage1DARB\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod CompressedTexSubImage2D {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::CompressedTexSubImage2D.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::CompressedTexSubImage2D = FnPtr::new(metaloadfn(&mut loadfn, \"glCompressedTexSubImage2D\", &[\"glCompressedTexSubImage2DARB\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod CompressedTexSubImage3D {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::CompressedTexSubImage3D.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::CompressedTexSubImage3D = FnPtr::new(metaloadfn(&mut loadfn, \"glCompressedTexSubImage3D\", &[\"glCompressedTexSubImage3DARB\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod CopyBufferSubData {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::CopyBufferSubData.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::CopyBufferSubData = FnPtr::new(metaloadfn(&mut loadfn, \"glCopyBufferSubData\", &[\"glCopyBufferSubDataNV\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod CopyTexImage1D {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::CopyTexImage1D.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::CopyTexImage1D = FnPtr::new(metaloadfn(&mut loadfn, \"glCopyTexImage1D\", &[\"glCopyTexImage1DEXT\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod CopyTexImage2D {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::CopyTexImage2D.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::CopyTexImage2D = FnPtr::new(metaloadfn(&mut loadfn, \"glCopyTexImage2D\", &[\"glCopyTexImage2DEXT\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod CopyTexSubImage1D {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::CopyTexSubImage1D.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::CopyTexSubImage1D = FnPtr::new(metaloadfn(&mut loadfn, \"glCopyTexSubImage1D\", &[\"glCopyTexSubImage1DEXT\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod CopyTexSubImage2D {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::CopyTexSubImage2D.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::CopyTexSubImage2D = FnPtr::new(metaloadfn(&mut loadfn, \"glCopyTexSubImage2D\", &[\"glCopyTexSubImage2DEXT\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod CopyTexSubImage3D {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::CopyTexSubImage3D.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::CopyTexSubImage3D = FnPtr::new(metaloadfn(&mut loadfn, \"glCopyTexSubImage3D\", &[\"glCopyTexSubImage3DEXT\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod CreateProgram {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::CreateProgram.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::CreateProgram = FnPtr::new(metaloadfn(&mut loadfn, \"glCreateProgram\", &[\"glCreateProgramObjectARB\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod CreateShader {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::CreateShader.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::CreateShader = FnPtr::new(metaloadfn(&mut loadfn, \"glCreateShader\", &[\"glCreateShaderObjectARB\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod CullFace {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::CullFace.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::CullFace = FnPtr::new(metaloadfn(&mut loadfn, \"glCullFace\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod DeleteBuffers {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::DeleteBuffers.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::DeleteBuffers = FnPtr::new(metaloadfn(&mut loadfn, \"glDeleteBuffers\", &[\"glDeleteBuffersARB\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod DeleteFramebuffers {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::DeleteFramebuffers.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::DeleteFramebuffers = FnPtr::new(metaloadfn(&mut loadfn, \"glDeleteFramebuffers\", &[\"glDeleteFramebuffersEXT\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod DeleteProgram {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::DeleteProgram.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::DeleteProgram = FnPtr::new(metaloadfn(&mut loadfn, \"glDeleteProgram\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod DeleteQueries {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::DeleteQueries.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::DeleteQueries = FnPtr::new(metaloadfn(&mut loadfn, \"glDeleteQueries\", &[\"glDeleteQueriesARB\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod DeleteRenderbuffers {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::DeleteRenderbuffers.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::DeleteRenderbuffers = FnPtr::new(metaloadfn(&mut loadfn, \"glDeleteRenderbuffers\", &[\"glDeleteRenderbuffersEXT\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod DeleteSamplers {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::DeleteSamplers.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::DeleteSamplers = FnPtr::new(metaloadfn(&mut loadfn, \"glDeleteSamplers\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod DeleteShader {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::DeleteShader.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::DeleteShader = FnPtr::new(metaloadfn(&mut loadfn, \"glDeleteShader\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod DeleteSync {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::DeleteSync.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::DeleteSync = FnPtr::new(metaloadfn(&mut loadfn, \"glDeleteSync\", &[\"glDeleteSyncAPPLE\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod DeleteTextures {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::DeleteTextures.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::DeleteTextures = FnPtr::new(metaloadfn(&mut loadfn, \"glDeleteTextures\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod DeleteVertexArrays {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::DeleteVertexArrays.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::DeleteVertexArrays = FnPtr::new(metaloadfn(&mut loadfn, \"glDeleteVertexArrays\", &[\"glDeleteVertexArraysAPPLE\", \"glDeleteVertexArraysOES\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod DepthFunc {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::DepthFunc.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::DepthFunc = FnPtr::new(metaloadfn(&mut loadfn, \"glDepthFunc\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod DepthMask {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::DepthMask.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::DepthMask = FnPtr::new(metaloadfn(&mut loadfn, \"glDepthMask\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod DepthRange {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::DepthRange.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::DepthRange = FnPtr::new(metaloadfn(&mut loadfn, \"glDepthRange\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod DetachShader {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::DetachShader.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::DetachShader = FnPtr::new(metaloadfn(&mut loadfn, \"glDetachShader\", &[\"glDetachObjectARB\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod Disable {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::Disable.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::Disable = FnPtr::new(metaloadfn(&mut loadfn, \"glDisable\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod DisableVertexAttribArray {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::DisableVertexAttribArray.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::DisableVertexAttribArray = FnPtr::new(metaloadfn(&mut loadfn, \"glDisableVertexAttribArray\", &[\"glDisableVertexAttribArrayARB\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod Disablei {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::Disablei.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::Disablei = FnPtr::new(metaloadfn(&mut loadfn, \"glDisablei\", &[\"glDisableIndexedEXT\", \"glDisableiEXT\", \"glDisableiNV\", \"glDisableiOES\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod DrawArrays {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::DrawArrays.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::DrawArrays = FnPtr::new(metaloadfn(&mut loadfn, \"glDrawArrays\", &[\"glDrawArraysEXT\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod DrawArraysInstanced {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::DrawArraysInstanced.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::DrawArraysInstanced = FnPtr::new(metaloadfn(&mut loadfn, \"glDrawArraysInstanced\", &[\"glDrawArraysInstancedANGLE\", \"glDrawArraysInstancedARB\", \"glDrawArraysInstancedEXT\", \"glDrawArraysInstancedNV\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod DrawBuffer {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::DrawBuffer.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::DrawBuffer = FnPtr::new(metaloadfn(&mut loadfn, \"glDrawBuffer\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod DrawBuffers {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::DrawBuffers.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::DrawBuffers = FnPtr::new(metaloadfn(&mut loadfn, \"glDrawBuffers\", &[\"glDrawBuffersARB\", \"glDrawBuffersATI\", \"glDrawBuffersEXT\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod DrawElements {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::DrawElements.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::DrawElements = FnPtr::new(metaloadfn(&mut loadfn, \"glDrawElements\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod DrawElementsBaseVertex {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::DrawElementsBaseVertex.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::DrawElementsBaseVertex = FnPtr::new(metaloadfn(&mut loadfn, \"glDrawElementsBaseVertex\", &[\"glDrawElementsBaseVertexEXT\", \"glDrawElementsBaseVertexOES\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod DrawElementsInstanced {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::DrawElementsInstanced.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::DrawElementsInstanced = FnPtr::new(metaloadfn(&mut loadfn, \"glDrawElementsInstanced\", &[\"glDrawElementsInstancedANGLE\", \"glDrawElementsInstancedARB\", \"glDrawElementsInstancedEXT\", \"glDrawElementsInstancedNV\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod DrawElementsInstancedBaseVertex {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::DrawElementsInstancedBaseVertex.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::DrawElementsInstancedBaseVertex = FnPtr::new(metaloadfn(&mut loadfn, \"glDrawElementsInstancedBaseVertex\", &[\"glDrawElementsInstancedBaseVertexEXT\", \"glDrawElementsInstancedBaseVertexOES\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod DrawRangeElements {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::DrawRangeElements.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::DrawRangeElements = FnPtr::new(metaloadfn(&mut loadfn, \"glDrawRangeElements\", &[\"glDrawRangeElementsEXT\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod DrawRangeElementsBaseVertex {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::DrawRangeElementsBaseVertex.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::DrawRangeElementsBaseVertex = FnPtr::new(metaloadfn(&mut loadfn, \"glDrawRangeElementsBaseVertex\", &[\"glDrawRangeElementsBaseVertexEXT\", \"glDrawRangeElementsBaseVertexOES\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod Enable {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::Enable.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::Enable = FnPtr::new(metaloadfn(&mut loadfn, \"glEnable\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod EnableVertexAttribArray {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::EnableVertexAttribArray.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::EnableVertexAttribArray = FnPtr::new(metaloadfn(&mut loadfn, \"glEnableVertexAttribArray\", &[\"glEnableVertexAttribArrayARB\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod Enablei {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::Enablei.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::Enablei = FnPtr::new(metaloadfn(&mut loadfn, \"glEnablei\", &[\"glEnableIndexedEXT\", \"glEnableiEXT\", \"glEnableiNV\", \"glEnableiOES\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod EndConditionalRender {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::EndConditionalRender.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::EndConditionalRender = FnPtr::new(metaloadfn(&mut loadfn, \"glEndConditionalRender\", &[\"glEndConditionalRenderNV\", \"glEndConditionalRenderNVX\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod EndQuery {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::EndQuery.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::EndQuery = FnPtr::new(metaloadfn(&mut loadfn, \"glEndQuery\", &[\"glEndQueryARB\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod EndTransformFeedback {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::EndTransformFeedback.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::EndTransformFeedback = FnPtr::new(metaloadfn(&mut loadfn, \"glEndTransformFeedback\", &[\"glEndTransformFeedbackEXT\", \"glEndTransformFeedbackNV\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod FenceSync {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::FenceSync.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::FenceSync = FnPtr::new(metaloadfn(&mut loadfn, \"glFenceSync\", &[\"glFenceSyncAPPLE\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod Finish {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::Finish.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::Finish = FnPtr::new(metaloadfn(&mut loadfn, \"glFinish\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod Flush {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::Flush.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::Flush = FnPtr::new(metaloadfn(&mut loadfn, \"glFlush\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod FlushMappedBufferRange {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::FlushMappedBufferRange.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::FlushMappedBufferRange = FnPtr::new(metaloadfn(&mut loadfn, \"glFlushMappedBufferRange\", &[\"glFlushMappedBufferRangeAPPLE\", \"glFlushMappedBufferRangeEXT\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod FramebufferRenderbuffer {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::FramebufferRenderbuffer.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::FramebufferRenderbuffer = FnPtr::new(metaloadfn(&mut loadfn, \"glFramebufferRenderbuffer\", &[\"glFramebufferRenderbufferEXT\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod FramebufferTexture {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::FramebufferTexture.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::FramebufferTexture = FnPtr::new(metaloadfn(&mut loadfn, \"glFramebufferTexture\", &[\"glFramebufferTextureARB\", \"glFramebufferTextureEXT\", \"glFramebufferTextureOES\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod FramebufferTexture1D {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::FramebufferTexture1D.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::FramebufferTexture1D = FnPtr::new(metaloadfn(&mut loadfn, \"glFramebufferTexture1D\", &[\"glFramebufferTexture1DEXT\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod FramebufferTexture2D {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::FramebufferTexture2D.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::FramebufferTexture2D = FnPtr::new(metaloadfn(&mut loadfn, \"glFramebufferTexture2D\", &[\"glFramebufferTexture2DEXT\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod FramebufferTexture3D {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::FramebufferTexture3D.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::FramebufferTexture3D = FnPtr::new(metaloadfn(&mut loadfn, \"glFramebufferTexture3D\", &[\"glFramebufferTexture3DEXT\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod FramebufferTextureLayer {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::FramebufferTextureLayer.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::FramebufferTextureLayer = FnPtr::new(metaloadfn(&mut loadfn, \"glFramebufferTextureLayer\", &[\"glFramebufferTextureLayerARB\", \"glFramebufferTextureLayerEXT\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod FrontFace {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::FrontFace.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::FrontFace = FnPtr::new(metaloadfn(&mut loadfn, \"glFrontFace\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod GenBuffers {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::GenBuffers.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::GenBuffers = FnPtr::new(metaloadfn(&mut loadfn, \"glGenBuffers\", &[\"glGenBuffersARB\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod GenFramebuffers {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::GenFramebuffers.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::GenFramebuffers = FnPtr::new(metaloadfn(&mut loadfn, \"glGenFramebuffers\", &[\"glGenFramebuffersEXT\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod GenQueries {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::GenQueries.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::GenQueries = FnPtr::new(metaloadfn(&mut loadfn, \"glGenQueries\", &[\"glGenQueriesARB\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod GenRenderbuffers {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::GenRenderbuffers.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::GenRenderbuffers = FnPtr::new(metaloadfn(&mut loadfn, \"glGenRenderbuffers\", &[\"glGenRenderbuffersEXT\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod GenSamplers {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::GenSamplers.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::GenSamplers = FnPtr::new(metaloadfn(&mut loadfn, \"glGenSamplers\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod GenTextures {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::GenTextures.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::GenTextures = FnPtr::new(metaloadfn(&mut loadfn, \"glGenTextures\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod GenVertexArrays {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::GenVertexArrays.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::GenVertexArrays = FnPtr::new(metaloadfn(&mut loadfn, \"glGenVertexArrays\", &[\"glGenVertexArraysAPPLE\", \"glGenVertexArraysOES\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod GenerateMipmap {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::GenerateMipmap.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::GenerateMipmap = FnPtr::new(metaloadfn(&mut loadfn, \"glGenerateMipmap\", &[\"glGenerateMipmapEXT\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod GetActiveAttrib {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::GetActiveAttrib.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::GetActiveAttrib = FnPtr::new(metaloadfn(&mut loadfn, \"glGetActiveAttrib\", &[\"glGetActiveAttribARB\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod GetActiveUniform {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::GetActiveUniform.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::GetActiveUniform = FnPtr::new(metaloadfn(&mut loadfn, \"glGetActiveUniform\", &[\"glGetActiveUniformARB\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod GetActiveUniformBlockName {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::GetActiveUniformBlockName.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::GetActiveUniformBlockName = FnPtr::new(metaloadfn(&mut loadfn, \"glGetActiveUniformBlockName\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod GetActiveUniformBlockiv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::GetActiveUniformBlockiv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::GetActiveUniformBlockiv = FnPtr::new(metaloadfn(&mut loadfn, \"glGetActiveUniformBlockiv\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod GetActiveUniformName {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::GetActiveUniformName.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::GetActiveUniformName = FnPtr::new(metaloadfn(&mut loadfn, \"glGetActiveUniformName\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod GetActiveUniformsiv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::GetActiveUniformsiv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::GetActiveUniformsiv = FnPtr::new(metaloadfn(&mut loadfn, \"glGetActiveUniformsiv\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod GetAttachedShaders {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::GetAttachedShaders.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::GetAttachedShaders = FnPtr::new(metaloadfn(&mut loadfn, \"glGetAttachedShaders\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod GetAttribLocation {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::GetAttribLocation.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::GetAttribLocation = FnPtr::new(metaloadfn(&mut loadfn, \"glGetAttribLocation\", &[\"glGetAttribLocationARB\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod GetBooleani_v {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::GetBooleani_v.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::GetBooleani_v = FnPtr::new(metaloadfn(&mut loadfn, \"glGetBooleani_v\", &[\"glGetBooleanIndexedvEXT\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod GetBooleanv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::GetBooleanv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::GetBooleanv = FnPtr::new(metaloadfn(&mut loadfn, \"glGetBooleanv\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod GetBufferParameteri64v {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::GetBufferParameteri64v.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::GetBufferParameteri64v = FnPtr::new(metaloadfn(&mut loadfn, \"glGetBufferParameteri64v\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod GetBufferParameteriv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::GetBufferParameteriv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::GetBufferParameteriv = FnPtr::new(metaloadfn(&mut loadfn, \"glGetBufferParameteriv\", &[\"glGetBufferParameterivARB\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod GetBufferPointerv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::GetBufferPointerv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::GetBufferPointerv = FnPtr::new(metaloadfn(&mut loadfn, \"glGetBufferPointerv\", &[\"glGetBufferPointervARB\", \"glGetBufferPointervOES\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod GetBufferSubData {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::GetBufferSubData.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::GetBufferSubData = FnPtr::new(metaloadfn(&mut loadfn, \"glGetBufferSubData\", &[\"glGetBufferSubDataARB\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod GetCompressedTexImage {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::GetCompressedTexImage.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::GetCompressedTexImage = FnPtr::new(metaloadfn(&mut loadfn, \"glGetCompressedTexImage\", &[\"glGetCompressedTexImageARB\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod GetDoublev {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::GetDoublev.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::GetDoublev = FnPtr::new(metaloadfn(&mut loadfn, \"glGetDoublev\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod GetError {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::GetError.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::GetError = FnPtr::new(metaloadfn(&mut loadfn, \"glGetError\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod GetFloatv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::GetFloatv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::GetFloatv = FnPtr::new(metaloadfn(&mut loadfn, \"glGetFloatv\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod GetFragDataIndex {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::GetFragDataIndex.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::GetFragDataIndex = FnPtr::new(metaloadfn(&mut loadfn, \"glGetFragDataIndex\", &[\"glGetFragDataIndexEXT\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod GetFragDataLocation {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::GetFragDataLocation.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::GetFragDataLocation = FnPtr::new(metaloadfn(&mut loadfn, \"glGetFragDataLocation\", &[\"glGetFragDataLocationEXT\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod GetFramebufferAttachmentParameteriv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::GetFramebufferAttachmentParameteriv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::GetFramebufferAttachmentParameteriv = FnPtr::new(metaloadfn(&mut loadfn, \"glGetFramebufferAttachmentParameteriv\", &[\"glGetFramebufferAttachmentParameterivEXT\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod GetInteger64i_v {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::GetInteger64i_v.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::GetInteger64i_v = FnPtr::new(metaloadfn(&mut loadfn, \"glGetInteger64i_v\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod GetInteger64v {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::GetInteger64v.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::GetInteger64v = FnPtr::new(metaloadfn(&mut loadfn, \"glGetInteger64v\", &[\"glGetInteger64vAPPLE\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod GetIntegeri_v {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::GetIntegeri_v.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::GetIntegeri_v = FnPtr::new(metaloadfn(&mut loadfn, \"glGetIntegeri_v\", &[\"glGetIntegerIndexedvEXT\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod GetIntegerv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::GetIntegerv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::GetIntegerv = FnPtr::new(metaloadfn(&mut loadfn, \"glGetIntegerv\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod GetMultisamplefv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::GetMultisamplefv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::GetMultisamplefv = FnPtr::new(metaloadfn(&mut loadfn, \"glGetMultisamplefv\", &[\"glGetMultisamplefvNV\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod GetProgramInfoLog {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::GetProgramInfoLog.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::GetProgramInfoLog = FnPtr::new(metaloadfn(&mut loadfn, \"glGetProgramInfoLog\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod GetProgramiv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::GetProgramiv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::GetProgramiv = FnPtr::new(metaloadfn(&mut loadfn, \"glGetProgramiv\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod GetQueryObjecti64v {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::GetQueryObjecti64v.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::GetQueryObjecti64v = FnPtr::new(metaloadfn(&mut loadfn, \"glGetQueryObjecti64v\", &[\"glGetQueryObjecti64vEXT\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod GetQueryObjectiv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::GetQueryObjectiv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::GetQueryObjectiv = FnPtr::new(metaloadfn(&mut loadfn, \"glGetQueryObjectiv\", &[\"glGetQueryObjectivARB\", \"glGetQueryObjectivEXT\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod GetQueryObjectui64v {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::GetQueryObjectui64v.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::GetQueryObjectui64v = FnPtr::new(metaloadfn(&mut loadfn, \"glGetQueryObjectui64v\", &[\"glGetQueryObjectui64vEXT\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod GetQueryObjectuiv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::GetQueryObjectuiv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::GetQueryObjectuiv = FnPtr::new(metaloadfn(&mut loadfn, \"glGetQueryObjectuiv\", &[\"glGetQueryObjectuivARB\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod GetQueryiv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::GetQueryiv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::GetQueryiv = FnPtr::new(metaloadfn(&mut loadfn, \"glGetQueryiv\", &[\"glGetQueryivARB\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod GetRenderbufferParameteriv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::GetRenderbufferParameteriv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::GetRenderbufferParameteriv = FnPtr::new(metaloadfn(&mut loadfn, \"glGetRenderbufferParameteriv\", &[\"glGetRenderbufferParameterivEXT\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod GetSamplerParameterIiv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::GetSamplerParameterIiv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::GetSamplerParameterIiv = FnPtr::new(metaloadfn(&mut loadfn, \"glGetSamplerParameterIiv\", &[\"glGetSamplerParameterIivEXT\", \"glGetSamplerParameterIivOES\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod GetSamplerParameterIuiv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::GetSamplerParameterIuiv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::GetSamplerParameterIuiv = FnPtr::new(metaloadfn(&mut loadfn, \"glGetSamplerParameterIuiv\", &[\"glGetSamplerParameterIuivEXT\", \"glGetSamplerParameterIuivOES\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod GetSamplerParameterfv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::GetSamplerParameterfv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::GetSamplerParameterfv = FnPtr::new(metaloadfn(&mut loadfn, \"glGetSamplerParameterfv\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod GetSamplerParameteriv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::GetSamplerParameteriv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::GetSamplerParameteriv = FnPtr::new(metaloadfn(&mut loadfn, \"glGetSamplerParameteriv\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod GetShaderInfoLog {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::GetShaderInfoLog.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::GetShaderInfoLog = FnPtr::new(metaloadfn(&mut loadfn, \"glGetShaderInfoLog\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod GetShaderSource {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::GetShaderSource.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::GetShaderSource = FnPtr::new(metaloadfn(&mut loadfn, \"glGetShaderSource\", &[\"glGetShaderSourceARB\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod GetShaderiv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::GetShaderiv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::GetShaderiv = FnPtr::new(metaloadfn(&mut loadfn, \"glGetShaderiv\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod GetString {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::GetString.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::GetString = FnPtr::new(metaloadfn(&mut loadfn, \"glGetString\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod GetStringi {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::GetStringi.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::GetStringi = FnPtr::new(metaloadfn(&mut loadfn, \"glGetStringi\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod GetSynciv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::GetSynciv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::GetSynciv = FnPtr::new(metaloadfn(&mut loadfn, \"glGetSynciv\", &[\"glGetSyncivAPPLE\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod GetTexImage {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::GetTexImage.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::GetTexImage = FnPtr::new(metaloadfn(&mut loadfn, \"glGetTexImage\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod GetTexLevelParameterfv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::GetTexLevelParameterfv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::GetTexLevelParameterfv = FnPtr::new(metaloadfn(&mut loadfn, \"glGetTexLevelParameterfv\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod GetTexLevelParameteriv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::GetTexLevelParameteriv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::GetTexLevelParameteriv = FnPtr::new(metaloadfn(&mut loadfn, \"glGetTexLevelParameteriv\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod GetTexParameterIiv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::GetTexParameterIiv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::GetTexParameterIiv = FnPtr::new(metaloadfn(&mut loadfn, \"glGetTexParameterIiv\", &[\"glGetTexParameterIivEXT\", \"glGetTexParameterIivOES\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod GetTexParameterIuiv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::GetTexParameterIuiv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::GetTexParameterIuiv = FnPtr::new(metaloadfn(&mut loadfn, \"glGetTexParameterIuiv\", &[\"glGetTexParameterIuivEXT\", \"glGetTexParameterIuivOES\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod GetTexParameterfv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::GetTexParameterfv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::GetTexParameterfv = FnPtr::new(metaloadfn(&mut loadfn, \"glGetTexParameterfv\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod GetTexParameteriv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::GetTexParameteriv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::GetTexParameteriv = FnPtr::new(metaloadfn(&mut loadfn, \"glGetTexParameteriv\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod GetTransformFeedbackVarying {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::GetTransformFeedbackVarying.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::GetTransformFeedbackVarying = FnPtr::new(metaloadfn(&mut loadfn, \"glGetTransformFeedbackVarying\", &[\"glGetTransformFeedbackVaryingEXT\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod GetUniformBlockIndex {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::GetUniformBlockIndex.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::GetUniformBlockIndex = FnPtr::new(metaloadfn(&mut loadfn, \"glGetUniformBlockIndex\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod GetUniformIndices {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::GetUniformIndices.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::GetUniformIndices = FnPtr::new(metaloadfn(&mut loadfn, \"glGetUniformIndices\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod GetUniformLocation {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::GetUniformLocation.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::GetUniformLocation = FnPtr::new(metaloadfn(&mut loadfn, \"glGetUniformLocation\", &[\"glGetUniformLocationARB\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod GetUniformfv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::GetUniformfv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::GetUniformfv = FnPtr::new(metaloadfn(&mut loadfn, \"glGetUniformfv\", &[\"glGetUniformfvARB\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod GetUniformiv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::GetUniformiv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::GetUniformiv = FnPtr::new(metaloadfn(&mut loadfn, \"glGetUniformiv\", &[\"glGetUniformivARB\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod GetUniformuiv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::GetUniformuiv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::GetUniformuiv = FnPtr::new(metaloadfn(&mut loadfn, \"glGetUniformuiv\", &[\"glGetUniformuivEXT\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod GetVertexAttribIiv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::GetVertexAttribIiv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::GetVertexAttribIiv = FnPtr::new(metaloadfn(&mut loadfn, \"glGetVertexAttribIiv\", &[\"glGetVertexAttribIivEXT\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod GetVertexAttribIuiv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::GetVertexAttribIuiv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::GetVertexAttribIuiv = FnPtr::new(metaloadfn(&mut loadfn, \"glGetVertexAttribIuiv\", &[\"glGetVertexAttribIuivEXT\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod GetVertexAttribPointerv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::GetVertexAttribPointerv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::GetVertexAttribPointerv = FnPtr::new(metaloadfn(&mut loadfn, \"glGetVertexAttribPointerv\", &[\"glGetVertexAttribPointervARB\", \"glGetVertexAttribPointervNV\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod GetVertexAttribdv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::GetVertexAttribdv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::GetVertexAttribdv = FnPtr::new(metaloadfn(&mut loadfn, \"glGetVertexAttribdv\", &[\"glGetVertexAttribdvARB\", \"glGetVertexAttribdvNV\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod GetVertexAttribfv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::GetVertexAttribfv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::GetVertexAttribfv = FnPtr::new(metaloadfn(&mut loadfn, \"glGetVertexAttribfv\", &[\"glGetVertexAttribfvARB\", \"glGetVertexAttribfvNV\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod GetVertexAttribiv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::GetVertexAttribiv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::GetVertexAttribiv = FnPtr::new(metaloadfn(&mut loadfn, \"glGetVertexAttribiv\", &[\"glGetVertexAttribivARB\", \"glGetVertexAttribivNV\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod Hint {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::Hint.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::Hint = FnPtr::new(metaloadfn(&mut loadfn, \"glHint\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod IsBuffer {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::IsBuffer.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::IsBuffer = FnPtr::new(metaloadfn(&mut loadfn, \"glIsBuffer\", &[\"glIsBufferARB\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod IsEnabled {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::IsEnabled.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::IsEnabled = FnPtr::new(metaloadfn(&mut loadfn, \"glIsEnabled\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod IsEnabledi {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::IsEnabledi.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::IsEnabledi = FnPtr::new(metaloadfn(&mut loadfn, \"glIsEnabledi\", &[\"glIsEnabledIndexedEXT\", \"glIsEnablediEXT\", \"glIsEnablediNV\", \"glIsEnablediOES\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod IsFramebuffer {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::IsFramebuffer.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::IsFramebuffer = FnPtr::new(metaloadfn(&mut loadfn, \"glIsFramebuffer\", &[\"glIsFramebufferEXT\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod IsProgram {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::IsProgram.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::IsProgram = FnPtr::new(metaloadfn(&mut loadfn, \"glIsProgram\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod IsQuery {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::IsQuery.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::IsQuery = FnPtr::new(metaloadfn(&mut loadfn, \"glIsQuery\", &[\"glIsQueryARB\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod IsRenderbuffer {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::IsRenderbuffer.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::IsRenderbuffer = FnPtr::new(metaloadfn(&mut loadfn, \"glIsRenderbuffer\", &[\"glIsRenderbufferEXT\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod IsSampler {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::IsSampler.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::IsSampler = FnPtr::new(metaloadfn(&mut loadfn, \"glIsSampler\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod IsShader {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::IsShader.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::IsShader = FnPtr::new(metaloadfn(&mut loadfn, \"glIsShader\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod IsSync {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::IsSync.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::IsSync = FnPtr::new(metaloadfn(&mut loadfn, \"glIsSync\", &[\"glIsSyncAPPLE\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod IsTexture {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::IsTexture.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::IsTexture = FnPtr::new(metaloadfn(&mut loadfn, \"glIsTexture\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod IsVertexArray {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::IsVertexArray.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::IsVertexArray = FnPtr::new(metaloadfn(&mut loadfn, \"glIsVertexArray\", &[\"glIsVertexArrayAPPLE\", \"glIsVertexArrayOES\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod LineWidth {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::LineWidth.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::LineWidth = FnPtr::new(metaloadfn(&mut loadfn, \"glLineWidth\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod LinkProgram {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::LinkProgram.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::LinkProgram = FnPtr::new(metaloadfn(&mut loadfn, \"glLinkProgram\", &[\"glLinkProgramARB\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod LogicOp {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::LogicOp.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::LogicOp = FnPtr::new(metaloadfn(&mut loadfn, \"glLogicOp\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod MapBuffer {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::MapBuffer.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::MapBuffer = FnPtr::new(metaloadfn(&mut loadfn, \"glMapBuffer\", &[\"glMapBufferARB\", \"glMapBufferOES\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod MapBufferRange {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::MapBufferRange.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::MapBufferRange = FnPtr::new(metaloadfn(&mut loadfn, \"glMapBufferRange\", &[\"glMapBufferRangeEXT\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod MultiDrawArrays {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::MultiDrawArrays.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::MultiDrawArrays = FnPtr::new(metaloadfn(&mut loadfn, \"glMultiDrawArrays\", &[\"glMultiDrawArraysEXT\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod MultiDrawElements {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::MultiDrawElements.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::MultiDrawElements = FnPtr::new(metaloadfn(&mut loadfn, \"glMultiDrawElements\", &[\"glMultiDrawElementsEXT\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod MultiDrawElementsBaseVertex {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::MultiDrawElementsBaseVertex.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::MultiDrawElementsBaseVertex = FnPtr::new(metaloadfn(&mut loadfn, \"glMultiDrawElementsBaseVertex\", &[\"glMultiDrawElementsBaseVertexEXT\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod MultiTexCoordP1ui {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::MultiTexCoordP1ui.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::MultiTexCoordP1ui = FnPtr::new(metaloadfn(&mut loadfn, \"glMultiTexCoordP1ui\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod MultiTexCoordP1uiv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::MultiTexCoordP1uiv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::MultiTexCoordP1uiv = FnPtr::new(metaloadfn(&mut loadfn, \"glMultiTexCoordP1uiv\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod MultiTexCoordP2ui {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::MultiTexCoordP2ui.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::MultiTexCoordP2ui = FnPtr::new(metaloadfn(&mut loadfn, \"glMultiTexCoordP2ui\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod MultiTexCoordP2uiv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::MultiTexCoordP2uiv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::MultiTexCoordP2uiv = FnPtr::new(metaloadfn(&mut loadfn, \"glMultiTexCoordP2uiv\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod MultiTexCoordP3ui {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::MultiTexCoordP3ui.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::MultiTexCoordP3ui = FnPtr::new(metaloadfn(&mut loadfn, \"glMultiTexCoordP3ui\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod MultiTexCoordP3uiv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::MultiTexCoordP3uiv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::MultiTexCoordP3uiv = FnPtr::new(metaloadfn(&mut loadfn, \"glMultiTexCoordP3uiv\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod MultiTexCoordP4ui {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::MultiTexCoordP4ui.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::MultiTexCoordP4ui = FnPtr::new(metaloadfn(&mut loadfn, \"glMultiTexCoordP4ui\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod MultiTexCoordP4uiv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::MultiTexCoordP4uiv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::MultiTexCoordP4uiv = FnPtr::new(metaloadfn(&mut loadfn, \"glMultiTexCoordP4uiv\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod NormalP3ui {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::NormalP3ui.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::NormalP3ui = FnPtr::new(metaloadfn(&mut loadfn, \"glNormalP3ui\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod NormalP3uiv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::NormalP3uiv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::NormalP3uiv = FnPtr::new(metaloadfn(&mut loadfn, \"glNormalP3uiv\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod PixelStoref {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::PixelStoref.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::PixelStoref = FnPtr::new(metaloadfn(&mut loadfn, \"glPixelStoref\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod PixelStorei {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::PixelStorei.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::PixelStorei = FnPtr::new(metaloadfn(&mut loadfn, \"glPixelStorei\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod PointParameterf {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::PointParameterf.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::PointParameterf = FnPtr::new(metaloadfn(&mut loadfn, \"glPointParameterf\", &[\"glPointParameterfARB\", \"glPointParameterfEXT\", \"glPointParameterfSGIS\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod PointParameterfv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::PointParameterfv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::PointParameterfv = FnPtr::new(metaloadfn(&mut loadfn, \"glPointParameterfv\", &[\"glPointParameterfvARB\", \"glPointParameterfvEXT\", \"glPointParameterfvSGIS\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod PointParameteri {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::PointParameteri.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::PointParameteri = FnPtr::new(metaloadfn(&mut loadfn, \"glPointParameteri\", &[\"glPointParameteriNV\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod PointParameteriv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::PointParameteriv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::PointParameteriv = FnPtr::new(metaloadfn(&mut loadfn, \"glPointParameteriv\", &[\"glPointParameterivNV\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod PointSize {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::PointSize.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::PointSize = FnPtr::new(metaloadfn(&mut loadfn, \"glPointSize\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod PolygonMode {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::PolygonMode.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::PolygonMode = FnPtr::new(metaloadfn(&mut loadfn, \"glPolygonMode\", &[\"glPolygonModeNV\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod PolygonOffset {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::PolygonOffset.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::PolygonOffset = FnPtr::new(metaloadfn(&mut loadfn, \"glPolygonOffset\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod PrimitiveRestartIndex {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::PrimitiveRestartIndex.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::PrimitiveRestartIndex = FnPtr::new(metaloadfn(&mut loadfn, \"glPrimitiveRestartIndex\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod ProvokingVertex {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::ProvokingVertex.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::ProvokingVertex = FnPtr::new(metaloadfn(&mut loadfn, \"glProvokingVertex\", &[\"glProvokingVertexEXT\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod QueryCounter {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::QueryCounter.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::QueryCounter = FnPtr::new(metaloadfn(&mut loadfn, \"glQueryCounter\", &[\"glQueryCounterEXT\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod ReadBuffer {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::ReadBuffer.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::ReadBuffer = FnPtr::new(metaloadfn(&mut loadfn, \"glReadBuffer\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod ReadPixels {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::ReadPixels.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::ReadPixels = FnPtr::new(metaloadfn(&mut loadfn, \"glReadPixels\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod RenderbufferStorage {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::RenderbufferStorage.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::RenderbufferStorage = FnPtr::new(metaloadfn(&mut loadfn, \"glRenderbufferStorage\", &[\"glRenderbufferStorageEXT\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod RenderbufferStorageMultisample {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::RenderbufferStorageMultisample.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::RenderbufferStorageMultisample = FnPtr::new(metaloadfn(&mut loadfn, \"glRenderbufferStorageMultisample\", &[\"glRenderbufferStorageMultisampleEXT\", \"glRenderbufferStorageMultisampleNV\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod SampleCoverage {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::SampleCoverage.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::SampleCoverage = FnPtr::new(metaloadfn(&mut loadfn, \"glSampleCoverage\", &[\"glSampleCoverageARB\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod SampleMaski {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::SampleMaski.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::SampleMaski = FnPtr::new(metaloadfn(&mut loadfn, \"glSampleMaski\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod SamplerParameterIiv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::SamplerParameterIiv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::SamplerParameterIiv = FnPtr::new(metaloadfn(&mut loadfn, \"glSamplerParameterIiv\", &[\"glSamplerParameterIivEXT\", \"glSamplerParameterIivOES\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod SamplerParameterIuiv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::SamplerParameterIuiv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::SamplerParameterIuiv = FnPtr::new(metaloadfn(&mut loadfn, \"glSamplerParameterIuiv\", &[\"glSamplerParameterIuivEXT\", \"glSamplerParameterIuivOES\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod SamplerParameterf {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::SamplerParameterf.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::SamplerParameterf = FnPtr::new(metaloadfn(&mut loadfn, \"glSamplerParameterf\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod SamplerParameterfv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::SamplerParameterfv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::SamplerParameterfv = FnPtr::new(metaloadfn(&mut loadfn, \"glSamplerParameterfv\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod SamplerParameteri {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::SamplerParameteri.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::SamplerParameteri = FnPtr::new(metaloadfn(&mut loadfn, \"glSamplerParameteri\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod SamplerParameteriv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::SamplerParameteriv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::SamplerParameteriv = FnPtr::new(metaloadfn(&mut loadfn, \"glSamplerParameteriv\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod Scissor {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::Scissor.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::Scissor = FnPtr::new(metaloadfn(&mut loadfn, \"glScissor\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod SecondaryColorP3ui {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::SecondaryColorP3ui.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::SecondaryColorP3ui = FnPtr::new(metaloadfn(&mut loadfn, \"glSecondaryColorP3ui\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod SecondaryColorP3uiv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::SecondaryColorP3uiv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::SecondaryColorP3uiv = FnPtr::new(metaloadfn(&mut loadfn, \"glSecondaryColorP3uiv\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod ShaderSource {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::ShaderSource.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::ShaderSource = FnPtr::new(metaloadfn(&mut loadfn, \"glShaderSource\", &[\"glShaderSourceARB\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod StencilFunc {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::StencilFunc.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::StencilFunc = FnPtr::new(metaloadfn(&mut loadfn, \"glStencilFunc\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod StencilFuncSeparate {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::StencilFuncSeparate.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::StencilFuncSeparate = FnPtr::new(metaloadfn(&mut loadfn, \"glStencilFuncSeparate\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod StencilMask {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::StencilMask.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::StencilMask = FnPtr::new(metaloadfn(&mut loadfn, \"glStencilMask\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod StencilMaskSeparate {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::StencilMaskSeparate.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::StencilMaskSeparate = FnPtr::new(metaloadfn(&mut loadfn, \"glStencilMaskSeparate\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod StencilOp {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::StencilOp.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::StencilOp = FnPtr::new(metaloadfn(&mut loadfn, \"glStencilOp\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod StencilOpSeparate {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::StencilOpSeparate.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::StencilOpSeparate = FnPtr::new(metaloadfn(&mut loadfn, \"glStencilOpSeparate\", &[\"glStencilOpSeparateATI\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod TexBuffer {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::TexBuffer.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::TexBuffer = FnPtr::new(metaloadfn(&mut loadfn, \"glTexBuffer\", &[\"glTexBufferARB\", \"glTexBufferEXT\", \"glTexBufferOES\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod TexCoordP1ui {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::TexCoordP1ui.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::TexCoordP1ui = FnPtr::new(metaloadfn(&mut loadfn, \"glTexCoordP1ui\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod TexCoordP1uiv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::TexCoordP1uiv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::TexCoordP1uiv = FnPtr::new(metaloadfn(&mut loadfn, \"glTexCoordP1uiv\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod TexCoordP2ui {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::TexCoordP2ui.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::TexCoordP2ui = FnPtr::new(metaloadfn(&mut loadfn, \"glTexCoordP2ui\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod TexCoordP2uiv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::TexCoordP2uiv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::TexCoordP2uiv = FnPtr::new(metaloadfn(&mut loadfn, \"glTexCoordP2uiv\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod TexCoordP3ui {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::TexCoordP3ui.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::TexCoordP3ui = FnPtr::new(metaloadfn(&mut loadfn, \"glTexCoordP3ui\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod TexCoordP3uiv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::TexCoordP3uiv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::TexCoordP3uiv = FnPtr::new(metaloadfn(&mut loadfn, \"glTexCoordP3uiv\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod TexCoordP4ui {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::TexCoordP4ui.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::TexCoordP4ui = FnPtr::new(metaloadfn(&mut loadfn, \"glTexCoordP4ui\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod TexCoordP4uiv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::TexCoordP4uiv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::TexCoordP4uiv = FnPtr::new(metaloadfn(&mut loadfn, \"glTexCoordP4uiv\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod TexImage1D {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::TexImage1D.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::TexImage1D = FnPtr::new(metaloadfn(&mut loadfn, \"glTexImage1D\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod TexImage2D {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::TexImage2D.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::TexImage2D = FnPtr::new(metaloadfn(&mut loadfn, \"glTexImage2D\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod TexImage2DMultisample {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::TexImage2DMultisample.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::TexImage2DMultisample = FnPtr::new(metaloadfn(&mut loadfn, \"glTexImage2DMultisample\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod TexImage3D {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::TexImage3D.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::TexImage3D = FnPtr::new(metaloadfn(&mut loadfn, \"glTexImage3D\", &[\"glTexImage3DEXT\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod TexImage3DMultisample {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::TexImage3DMultisample.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::TexImage3DMultisample = FnPtr::new(metaloadfn(&mut loadfn, \"glTexImage3DMultisample\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod TexParameterIiv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::TexParameterIiv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::TexParameterIiv = FnPtr::new(metaloadfn(&mut loadfn, \"glTexParameterIiv\", &[\"glTexParameterIivEXT\", \"glTexParameterIivOES\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod TexParameterIuiv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::TexParameterIuiv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::TexParameterIuiv = FnPtr::new(metaloadfn(&mut loadfn, \"glTexParameterIuiv\", &[\"glTexParameterIuivEXT\", \"glTexParameterIuivOES\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod TexParameterf {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::TexParameterf.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::TexParameterf = FnPtr::new(metaloadfn(&mut loadfn, \"glTexParameterf\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod TexParameterfv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::TexParameterfv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::TexParameterfv = FnPtr::new(metaloadfn(&mut loadfn, \"glTexParameterfv\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod TexParameteri {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::TexParameteri.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::TexParameteri = FnPtr::new(metaloadfn(&mut loadfn, \"glTexParameteri\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod TexParameteriv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::TexParameteriv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::TexParameteriv = FnPtr::new(metaloadfn(&mut loadfn, \"glTexParameteriv\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod TexSubImage1D {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::TexSubImage1D.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::TexSubImage1D = FnPtr::new(metaloadfn(&mut loadfn, \"glTexSubImage1D\", &[\"glTexSubImage1DEXT\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod TexSubImage2D {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::TexSubImage2D.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::TexSubImage2D = FnPtr::new(metaloadfn(&mut loadfn, \"glTexSubImage2D\", &[\"glTexSubImage2DEXT\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod TexSubImage3D {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::TexSubImage3D.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::TexSubImage3D = FnPtr::new(metaloadfn(&mut loadfn, \"glTexSubImage3D\", &[\"glTexSubImage3DEXT\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod TransformFeedbackVaryings {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::TransformFeedbackVaryings.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::TransformFeedbackVaryings = FnPtr::new(metaloadfn(&mut loadfn, \"glTransformFeedbackVaryings\", &[\"glTransformFeedbackVaryingsEXT\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod Uniform1f {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::Uniform1f.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::Uniform1f = FnPtr::new(metaloadfn(&mut loadfn, \"glUniform1f\", &[\"glUniform1fARB\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod Uniform1fv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::Uniform1fv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::Uniform1fv = FnPtr::new(metaloadfn(&mut loadfn, \"glUniform1fv\", &[\"glUniform1fvARB\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod Uniform1i {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::Uniform1i.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::Uniform1i = FnPtr::new(metaloadfn(&mut loadfn, \"glUniform1i\", &[\"glUniform1iARB\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod Uniform1iv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::Uniform1iv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::Uniform1iv = FnPtr::new(metaloadfn(&mut loadfn, \"glUniform1iv\", &[\"glUniform1ivARB\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod Uniform1ui {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::Uniform1ui.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::Uniform1ui = FnPtr::new(metaloadfn(&mut loadfn, \"glUniform1ui\", &[\"glUniform1uiEXT\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod Uniform1uiv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::Uniform1uiv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::Uniform1uiv = FnPtr::new(metaloadfn(&mut loadfn, \"glUniform1uiv\", &[\"glUniform1uivEXT\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod Uniform2f {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::Uniform2f.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::Uniform2f = FnPtr::new(metaloadfn(&mut loadfn, \"glUniform2f\", &[\"glUniform2fARB\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod Uniform2fv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::Uniform2fv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::Uniform2fv = FnPtr::new(metaloadfn(&mut loadfn, \"glUniform2fv\", &[\"glUniform2fvARB\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod Uniform2i {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::Uniform2i.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::Uniform2i = FnPtr::new(metaloadfn(&mut loadfn, \"glUniform2i\", &[\"glUniform2iARB\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod Uniform2iv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::Uniform2iv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::Uniform2iv = FnPtr::new(metaloadfn(&mut loadfn, \"glUniform2iv\", &[\"glUniform2ivARB\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod Uniform2ui {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::Uniform2ui.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::Uniform2ui = FnPtr::new(metaloadfn(&mut loadfn, \"glUniform2ui\", &[\"glUniform2uiEXT\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod Uniform2uiv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::Uniform2uiv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::Uniform2uiv = FnPtr::new(metaloadfn(&mut loadfn, \"glUniform2uiv\", &[\"glUniform2uivEXT\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod Uniform3f {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::Uniform3f.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::Uniform3f = FnPtr::new(metaloadfn(&mut loadfn, \"glUniform3f\", &[\"glUniform3fARB\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod Uniform3fv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::Uniform3fv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::Uniform3fv = FnPtr::new(metaloadfn(&mut loadfn, \"glUniform3fv\", &[\"glUniform3fvARB\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod Uniform3i {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::Uniform3i.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::Uniform3i = FnPtr::new(metaloadfn(&mut loadfn, \"glUniform3i\", &[\"glUniform3iARB\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod Uniform3iv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::Uniform3iv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::Uniform3iv = FnPtr::new(metaloadfn(&mut loadfn, \"glUniform3iv\", &[\"glUniform3ivARB\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod Uniform3ui {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::Uniform3ui.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::Uniform3ui = FnPtr::new(metaloadfn(&mut loadfn, \"glUniform3ui\", &[\"glUniform3uiEXT\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod Uniform3uiv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::Uniform3uiv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::Uniform3uiv = FnPtr::new(metaloadfn(&mut loadfn, \"glUniform3uiv\", &[\"glUniform3uivEXT\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod Uniform4f {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::Uniform4f.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::Uniform4f = FnPtr::new(metaloadfn(&mut loadfn, \"glUniform4f\", &[\"glUniform4fARB\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod Uniform4fv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::Uniform4fv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::Uniform4fv = FnPtr::new(metaloadfn(&mut loadfn, \"glUniform4fv\", &[\"glUniform4fvARB\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod Uniform4i {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::Uniform4i.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::Uniform4i = FnPtr::new(metaloadfn(&mut loadfn, \"glUniform4i\", &[\"glUniform4iARB\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod Uniform4iv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::Uniform4iv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::Uniform4iv = FnPtr::new(metaloadfn(&mut loadfn, \"glUniform4iv\", &[\"glUniform4ivARB\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod Uniform4ui {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::Uniform4ui.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::Uniform4ui = FnPtr::new(metaloadfn(&mut loadfn, \"glUniform4ui\", &[\"glUniform4uiEXT\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod Uniform4uiv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::Uniform4uiv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::Uniform4uiv = FnPtr::new(metaloadfn(&mut loadfn, \"glUniform4uiv\", &[\"glUniform4uivEXT\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod UniformBlockBinding {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::UniformBlockBinding.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::UniformBlockBinding = FnPtr::new(metaloadfn(&mut loadfn, \"glUniformBlockBinding\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod UniformMatrix2fv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::UniformMatrix2fv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::UniformMatrix2fv = FnPtr::new(metaloadfn(&mut loadfn, \"glUniformMatrix2fv\", &[\"glUniformMatrix2fvARB\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod UniformMatrix2x3fv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::UniformMatrix2x3fv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::UniformMatrix2x3fv = FnPtr::new(metaloadfn(&mut loadfn, \"glUniformMatrix2x3fv\", &[\"glUniformMatrix2x3fvNV\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod UniformMatrix2x4fv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::UniformMatrix2x4fv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::UniformMatrix2x4fv = FnPtr::new(metaloadfn(&mut loadfn, \"glUniformMatrix2x4fv\", &[\"glUniformMatrix2x4fvNV\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod UniformMatrix3fv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::UniformMatrix3fv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::UniformMatrix3fv = FnPtr::new(metaloadfn(&mut loadfn, \"glUniformMatrix3fv\", &[\"glUniformMatrix3fvARB\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod UniformMatrix3x2fv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::UniformMatrix3x2fv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::UniformMatrix3x2fv = FnPtr::new(metaloadfn(&mut loadfn, \"glUniformMatrix3x2fv\", &[\"glUniformMatrix3x2fvNV\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod UniformMatrix3x4fv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::UniformMatrix3x4fv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::UniformMatrix3x4fv = FnPtr::new(metaloadfn(&mut loadfn, \"glUniformMatrix3x4fv\", &[\"glUniformMatrix3x4fvNV\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod UniformMatrix4fv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::UniformMatrix4fv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::UniformMatrix4fv = FnPtr::new(metaloadfn(&mut loadfn, \"glUniformMatrix4fv\", &[\"glUniformMatrix4fvARB\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod UniformMatrix4x2fv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::UniformMatrix4x2fv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::UniformMatrix4x2fv = FnPtr::new(metaloadfn(&mut loadfn, \"glUniformMatrix4x2fv\", &[\"glUniformMatrix4x2fvNV\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod UniformMatrix4x3fv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::UniformMatrix4x3fv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::UniformMatrix4x3fv = FnPtr::new(metaloadfn(&mut loadfn, \"glUniformMatrix4x3fv\", &[\"glUniformMatrix4x3fvNV\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod UnmapBuffer {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::UnmapBuffer.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::UnmapBuffer = FnPtr::new(metaloadfn(&mut loadfn, \"glUnmapBuffer\", &[\"glUnmapBufferARB\", \"glUnmapBufferOES\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod UseProgram {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::UseProgram.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::UseProgram = FnPtr::new(metaloadfn(&mut loadfn, \"glUseProgram\", &[\"glUseProgramObjectARB\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod ValidateProgram {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::ValidateProgram.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::ValidateProgram = FnPtr::new(metaloadfn(&mut loadfn, \"glValidateProgram\", &[\"glValidateProgramARB\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod VertexAttrib1d {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::VertexAttrib1d.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::VertexAttrib1d = FnPtr::new(metaloadfn(&mut loadfn, \"glVertexAttrib1d\", &[\"glVertexAttrib1dARB\", \"glVertexAttrib1dNV\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod VertexAttrib1dv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::VertexAttrib1dv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::VertexAttrib1dv = FnPtr::new(metaloadfn(&mut loadfn, \"glVertexAttrib1dv\", &[\"glVertexAttrib1dvARB\", \"glVertexAttrib1dvNV\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod VertexAttrib1f {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::VertexAttrib1f.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::VertexAttrib1f = FnPtr::new(metaloadfn(&mut loadfn, \"glVertexAttrib1f\", &[\"glVertexAttrib1fARB\", \"glVertexAttrib1fNV\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod VertexAttrib1fv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::VertexAttrib1fv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::VertexAttrib1fv = FnPtr::new(metaloadfn(&mut loadfn, \"glVertexAttrib1fv\", &[\"glVertexAttrib1fvARB\", \"glVertexAttrib1fvNV\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod VertexAttrib1s {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::VertexAttrib1s.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::VertexAttrib1s = FnPtr::new(metaloadfn(&mut loadfn, \"glVertexAttrib1s\", &[\"glVertexAttrib1sARB\", \"glVertexAttrib1sNV\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod VertexAttrib1sv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::VertexAttrib1sv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::VertexAttrib1sv = FnPtr::new(metaloadfn(&mut loadfn, \"glVertexAttrib1sv\", &[\"glVertexAttrib1svARB\", \"glVertexAttrib1svNV\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod VertexAttrib2d {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::VertexAttrib2d.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::VertexAttrib2d = FnPtr::new(metaloadfn(&mut loadfn, \"glVertexAttrib2d\", &[\"glVertexAttrib2dARB\", \"glVertexAttrib2dNV\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod VertexAttrib2dv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::VertexAttrib2dv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::VertexAttrib2dv = FnPtr::new(metaloadfn(&mut loadfn, \"glVertexAttrib2dv\", &[\"glVertexAttrib2dvARB\", \"glVertexAttrib2dvNV\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod VertexAttrib2f {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::VertexAttrib2f.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::VertexAttrib2f = FnPtr::new(metaloadfn(&mut loadfn, \"glVertexAttrib2f\", &[\"glVertexAttrib2fARB\", \"glVertexAttrib2fNV\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod VertexAttrib2fv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::VertexAttrib2fv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::VertexAttrib2fv = FnPtr::new(metaloadfn(&mut loadfn, \"glVertexAttrib2fv\", &[\"glVertexAttrib2fvARB\", \"glVertexAttrib2fvNV\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod VertexAttrib2s {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::VertexAttrib2s.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::VertexAttrib2s = FnPtr::new(metaloadfn(&mut loadfn, \"glVertexAttrib2s\", &[\"glVertexAttrib2sARB\", \"glVertexAttrib2sNV\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod VertexAttrib2sv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::VertexAttrib2sv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::VertexAttrib2sv = FnPtr::new(metaloadfn(&mut loadfn, \"glVertexAttrib2sv\", &[\"glVertexAttrib2svARB\", \"glVertexAttrib2svNV\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod VertexAttrib3d {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::VertexAttrib3d.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::VertexAttrib3d = FnPtr::new(metaloadfn(&mut loadfn, \"glVertexAttrib3d\", &[\"glVertexAttrib3dARB\", \"glVertexAttrib3dNV\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod VertexAttrib3dv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::VertexAttrib3dv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::VertexAttrib3dv = FnPtr::new(metaloadfn(&mut loadfn, \"glVertexAttrib3dv\", &[\"glVertexAttrib3dvARB\", \"glVertexAttrib3dvNV\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod VertexAttrib3f {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::VertexAttrib3f.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::VertexAttrib3f = FnPtr::new(metaloadfn(&mut loadfn, \"glVertexAttrib3f\", &[\"glVertexAttrib3fARB\", \"glVertexAttrib3fNV\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod VertexAttrib3fv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::VertexAttrib3fv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::VertexAttrib3fv = FnPtr::new(metaloadfn(&mut loadfn, \"glVertexAttrib3fv\", &[\"glVertexAttrib3fvARB\", \"glVertexAttrib3fvNV\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod VertexAttrib3s {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::VertexAttrib3s.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::VertexAttrib3s = FnPtr::new(metaloadfn(&mut loadfn, \"glVertexAttrib3s\", &[\"glVertexAttrib3sARB\", \"glVertexAttrib3sNV\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod VertexAttrib3sv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::VertexAttrib3sv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::VertexAttrib3sv = FnPtr::new(metaloadfn(&mut loadfn, \"glVertexAttrib3sv\", &[\"glVertexAttrib3svARB\", \"glVertexAttrib3svNV\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod VertexAttrib4Nbv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::VertexAttrib4Nbv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::VertexAttrib4Nbv = FnPtr::new(metaloadfn(&mut loadfn, \"glVertexAttrib4Nbv\", &[\"glVertexAttrib4NbvARB\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod VertexAttrib4Niv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::VertexAttrib4Niv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::VertexAttrib4Niv = FnPtr::new(metaloadfn(&mut loadfn, \"glVertexAttrib4Niv\", &[\"glVertexAttrib4NivARB\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod VertexAttrib4Nsv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::VertexAttrib4Nsv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::VertexAttrib4Nsv = FnPtr::new(metaloadfn(&mut loadfn, \"glVertexAttrib4Nsv\", &[\"glVertexAttrib4NsvARB\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod VertexAttrib4Nub {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::VertexAttrib4Nub.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::VertexAttrib4Nub = FnPtr::new(metaloadfn(&mut loadfn, \"glVertexAttrib4Nub\", &[\"glVertexAttrib4NubARB\", \"glVertexAttrib4ubNV\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod VertexAttrib4Nubv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::VertexAttrib4Nubv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::VertexAttrib4Nubv = FnPtr::new(metaloadfn(&mut loadfn, \"glVertexAttrib4Nubv\", &[\"glVertexAttrib4NubvARB\", \"glVertexAttrib4ubvNV\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod VertexAttrib4Nuiv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::VertexAttrib4Nuiv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::VertexAttrib4Nuiv = FnPtr::new(metaloadfn(&mut loadfn, \"glVertexAttrib4Nuiv\", &[\"glVertexAttrib4NuivARB\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod VertexAttrib4Nusv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::VertexAttrib4Nusv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::VertexAttrib4Nusv = FnPtr::new(metaloadfn(&mut loadfn, \"glVertexAttrib4Nusv\", &[\"glVertexAttrib4NusvARB\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod VertexAttrib4bv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::VertexAttrib4bv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::VertexAttrib4bv = FnPtr::new(metaloadfn(&mut loadfn, \"glVertexAttrib4bv\", &[\"glVertexAttrib4bvARB\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod VertexAttrib4d {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::VertexAttrib4d.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::VertexAttrib4d = FnPtr::new(metaloadfn(&mut loadfn, \"glVertexAttrib4d\", &[\"glVertexAttrib4dARB\", \"glVertexAttrib4dNV\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod VertexAttrib4dv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::VertexAttrib4dv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::VertexAttrib4dv = FnPtr::new(metaloadfn(&mut loadfn, \"glVertexAttrib4dv\", &[\"glVertexAttrib4dvARB\", \"glVertexAttrib4dvNV\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod VertexAttrib4f {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::VertexAttrib4f.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::VertexAttrib4f = FnPtr::new(metaloadfn(&mut loadfn, \"glVertexAttrib4f\", &[\"glVertexAttrib4fARB\", \"glVertexAttrib4fNV\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod VertexAttrib4fv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::VertexAttrib4fv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::VertexAttrib4fv = FnPtr::new(metaloadfn(&mut loadfn, \"glVertexAttrib4fv\", &[\"glVertexAttrib4fvARB\", \"glVertexAttrib4fvNV\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod VertexAttrib4iv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::VertexAttrib4iv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::VertexAttrib4iv = FnPtr::new(metaloadfn(&mut loadfn, \"glVertexAttrib4iv\", &[\"glVertexAttrib4ivARB\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod VertexAttrib4s {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::VertexAttrib4s.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::VertexAttrib4s = FnPtr::new(metaloadfn(&mut loadfn, \"glVertexAttrib4s\", &[\"glVertexAttrib4sARB\", \"glVertexAttrib4sNV\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod VertexAttrib4sv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::VertexAttrib4sv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::VertexAttrib4sv = FnPtr::new(metaloadfn(&mut loadfn, \"glVertexAttrib4sv\", &[\"glVertexAttrib4svARB\", \"glVertexAttrib4svNV\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod VertexAttrib4ubv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::VertexAttrib4ubv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::VertexAttrib4ubv = FnPtr::new(metaloadfn(&mut loadfn, \"glVertexAttrib4ubv\", &[\"glVertexAttrib4ubvARB\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod VertexAttrib4uiv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::VertexAttrib4uiv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::VertexAttrib4uiv = FnPtr::new(metaloadfn(&mut loadfn, \"glVertexAttrib4uiv\", &[\"glVertexAttrib4uivARB\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod VertexAttrib4usv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::VertexAttrib4usv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::VertexAttrib4usv = FnPtr::new(metaloadfn(&mut loadfn, \"glVertexAttrib4usv\", &[\"glVertexAttrib4usvARB\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod VertexAttribDivisor {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::VertexAttribDivisor.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::VertexAttribDivisor = FnPtr::new(metaloadfn(&mut loadfn, \"glVertexAttribDivisor\", &[\"glVertexAttribDivisorANGLE\", \"glVertexAttribDivisorARB\", \"glVertexAttribDivisorEXT\", \"glVertexAttribDivisorNV\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod VertexAttribI1i {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::VertexAttribI1i.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::VertexAttribI1i = FnPtr::new(metaloadfn(&mut loadfn, \"glVertexAttribI1i\", &[\"glVertexAttribI1iEXT\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod VertexAttribI1iv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::VertexAttribI1iv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::VertexAttribI1iv = FnPtr::new(metaloadfn(&mut loadfn, \"glVertexAttribI1iv\", &[\"glVertexAttribI1ivEXT\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod VertexAttribI1ui {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::VertexAttribI1ui.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::VertexAttribI1ui = FnPtr::new(metaloadfn(&mut loadfn, \"glVertexAttribI1ui\", &[\"glVertexAttribI1uiEXT\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod VertexAttribI1uiv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::VertexAttribI1uiv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::VertexAttribI1uiv = FnPtr::new(metaloadfn(&mut loadfn, \"glVertexAttribI1uiv\", &[\"glVertexAttribI1uivEXT\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod VertexAttribI2i {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::VertexAttribI2i.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::VertexAttribI2i = FnPtr::new(metaloadfn(&mut loadfn, \"glVertexAttribI2i\", &[\"glVertexAttribI2iEXT\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod VertexAttribI2iv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::VertexAttribI2iv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::VertexAttribI2iv = FnPtr::new(metaloadfn(&mut loadfn, \"glVertexAttribI2iv\", &[\"glVertexAttribI2ivEXT\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod VertexAttribI2ui {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::VertexAttribI2ui.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::VertexAttribI2ui = FnPtr::new(metaloadfn(&mut loadfn, \"glVertexAttribI2ui\", &[\"glVertexAttribI2uiEXT\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod VertexAttribI2uiv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::VertexAttribI2uiv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::VertexAttribI2uiv = FnPtr::new(metaloadfn(&mut loadfn, \"glVertexAttribI2uiv\", &[\"glVertexAttribI2uivEXT\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod VertexAttribI3i {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::VertexAttribI3i.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::VertexAttribI3i = FnPtr::new(metaloadfn(&mut loadfn, \"glVertexAttribI3i\", &[\"glVertexAttribI3iEXT\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod VertexAttribI3iv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::VertexAttribI3iv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::VertexAttribI3iv = FnPtr::new(metaloadfn(&mut loadfn, \"glVertexAttribI3iv\", &[\"glVertexAttribI3ivEXT\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod VertexAttribI3ui {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::VertexAttribI3ui.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::VertexAttribI3ui = FnPtr::new(metaloadfn(&mut loadfn, \"glVertexAttribI3ui\", &[\"glVertexAttribI3uiEXT\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod VertexAttribI3uiv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::VertexAttribI3uiv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::VertexAttribI3uiv = FnPtr::new(metaloadfn(&mut loadfn, \"glVertexAttribI3uiv\", &[\"glVertexAttribI3uivEXT\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod VertexAttribI4bv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::VertexAttribI4bv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::VertexAttribI4bv = FnPtr::new(metaloadfn(&mut loadfn, \"glVertexAttribI4bv\", &[\"glVertexAttribI4bvEXT\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod VertexAttribI4i {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::VertexAttribI4i.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::VertexAttribI4i = FnPtr::new(metaloadfn(&mut loadfn, \"glVertexAttribI4i\", &[\"glVertexAttribI4iEXT\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod VertexAttribI4iv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::VertexAttribI4iv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::VertexAttribI4iv = FnPtr::new(metaloadfn(&mut loadfn, \"glVertexAttribI4iv\", &[\"glVertexAttribI4ivEXT\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod VertexAttribI4sv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::VertexAttribI4sv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::VertexAttribI4sv = FnPtr::new(metaloadfn(&mut loadfn, \"glVertexAttribI4sv\", &[\"glVertexAttribI4svEXT\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod VertexAttribI4ubv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::VertexAttribI4ubv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::VertexAttribI4ubv = FnPtr::new(metaloadfn(&mut loadfn, \"glVertexAttribI4ubv\", &[\"glVertexAttribI4ubvEXT\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod VertexAttribI4ui {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::VertexAttribI4ui.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::VertexAttribI4ui = FnPtr::new(metaloadfn(&mut loadfn, \"glVertexAttribI4ui\", &[\"glVertexAttribI4uiEXT\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod VertexAttribI4uiv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::VertexAttribI4uiv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::VertexAttribI4uiv = FnPtr::new(metaloadfn(&mut loadfn, \"glVertexAttribI4uiv\", &[\"glVertexAttribI4uivEXT\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod VertexAttribI4usv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::VertexAttribI4usv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::VertexAttribI4usv = FnPtr::new(metaloadfn(&mut loadfn, \"glVertexAttribI4usv\", &[\"glVertexAttribI4usvEXT\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod VertexAttribIPointer {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::VertexAttribIPointer.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::VertexAttribIPointer = FnPtr::new(metaloadfn(&mut loadfn, \"glVertexAttribIPointer\", &[\"glVertexAttribIPointerEXT\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod VertexAttribP1ui {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::VertexAttribP1ui.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::VertexAttribP1ui = FnPtr::new(metaloadfn(&mut loadfn, \"glVertexAttribP1ui\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod VertexAttribP1uiv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::VertexAttribP1uiv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::VertexAttribP1uiv = FnPtr::new(metaloadfn(&mut loadfn, \"glVertexAttribP1uiv\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod VertexAttribP2ui {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::VertexAttribP2ui.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::VertexAttribP2ui = FnPtr::new(metaloadfn(&mut loadfn, \"glVertexAttribP2ui\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod VertexAttribP2uiv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::VertexAttribP2uiv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::VertexAttribP2uiv = FnPtr::new(metaloadfn(&mut loadfn, \"glVertexAttribP2uiv\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod VertexAttribP3ui {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::VertexAttribP3ui.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::VertexAttribP3ui = FnPtr::new(metaloadfn(&mut loadfn, \"glVertexAttribP3ui\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod VertexAttribP3uiv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::VertexAttribP3uiv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::VertexAttribP3uiv = FnPtr::new(metaloadfn(&mut loadfn, \"glVertexAttribP3uiv\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod VertexAttribP4ui {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::VertexAttribP4ui.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::VertexAttribP4ui = FnPtr::new(metaloadfn(&mut loadfn, \"glVertexAttribP4ui\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod VertexAttribP4uiv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::VertexAttribP4uiv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::VertexAttribP4uiv = FnPtr::new(metaloadfn(&mut loadfn, \"glVertexAttribP4uiv\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod VertexAttribPointer {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::VertexAttribPointer.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::VertexAttribPointer = FnPtr::new(metaloadfn(&mut loadfn, \"glVertexAttribPointer\", &[\"glVertexAttribPointerARB\"]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod VertexP2ui {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::VertexP2ui.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::VertexP2ui = FnPtr::new(metaloadfn(&mut loadfn, \"glVertexP2ui\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod VertexP2uiv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::VertexP2uiv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::VertexP2uiv = FnPtr::new(metaloadfn(&mut loadfn, \"glVertexP2uiv\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod VertexP3ui {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::VertexP3ui.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::VertexP3ui = FnPtr::new(metaloadfn(&mut loadfn, \"glVertexP3ui\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod VertexP3uiv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::VertexP3uiv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::VertexP3uiv = FnPtr::new(metaloadfn(&mut loadfn, \"glVertexP3uiv\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod VertexP4ui {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::VertexP4ui.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::VertexP4ui = FnPtr::new(metaloadfn(&mut loadfn, \"glVertexP4ui\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod VertexP4uiv {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::VertexP4uiv.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::VertexP4uiv = FnPtr::new(metaloadfn(&mut loadfn, \"glVertexP4uiv\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod Viewport {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::Viewport.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::Viewport = FnPtr::new(metaloadfn(&mut loadfn, \"glViewport\", &[]))\n                    }\n                }\n            }\n        \n\n            #[allow(non_snake_case)]\n            pub mod WaitSync {\n                use super::{storage, metaloadfn};\n                use super::__gl_imports::raw;\n                use super::FnPtr;\n\n                #[inline]\n                #[allow(dead_code)]\n                pub fn is_loaded() -> bool {\n                    unsafe { storage::WaitSync.is_loaded }\n                }\n\n                #[allow(dead_code)]\n                pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const raw::c_void {\n                    unsafe {\n                        storage::WaitSync = FnPtr::new(metaloadfn(&mut loadfn, \"glWaitSync\", &[\"glWaitSyncAPPLE\"]))\n                    }\n                }\n            }\n        \n#[inline(never)]\n        fn missing_fn_panic() -> ! {\n            panic!(\"gl function was not loaded\")\n        }\n        \n\n        /// Load each OpenGL symbol using a custom load function. This allows for the\n        /// use of functions like `glfwGetProcAddress` or `SDL_GL_GetProcAddress`.\n        /// ~~~ignore\n        /// gl::load_with(|s| glfw.get_proc_address(s));\n        /// ~~~\n        #[allow(dead_code)]\n        pub fn load_with<F>(mut loadfn: F) where F: FnMut(&'static str) -> *const __gl_imports::raw::c_void {\n            #[inline(never)]\n            fn inner(loadfn: &mut dyn FnMut(&'static str) -> *const __gl_imports::raw::c_void) {\n    \nActiveTexture::load_with(&mut *loadfn);\nAttachShader::load_with(&mut *loadfn);\nBeginConditionalRender::load_with(&mut *loadfn);\nBeginQuery::load_with(&mut *loadfn);\nBeginTransformFeedback::load_with(&mut *loadfn);\nBindAttribLocation::load_with(&mut *loadfn);\nBindBuffer::load_with(&mut *loadfn);\nBindBufferBase::load_with(&mut *loadfn);\nBindBufferRange::load_with(&mut *loadfn);\nBindFragDataLocation::load_with(&mut *loadfn);\nBindFragDataLocationIndexed::load_with(&mut *loadfn);\nBindFramebuffer::load_with(&mut *loadfn);\nBindRenderbuffer::load_with(&mut *loadfn);\nBindSampler::load_with(&mut *loadfn);\nBindTexture::load_with(&mut *loadfn);\nBindVertexArray::load_with(&mut *loadfn);\nBlendColor::load_with(&mut *loadfn);\nBlendEquation::load_with(&mut *loadfn);\nBlendEquationSeparate::load_with(&mut *loadfn);\nBlendFunc::load_with(&mut *loadfn);\nBlendFuncSeparate::load_with(&mut *loadfn);\nBlitFramebuffer::load_with(&mut *loadfn);\nBufferData::load_with(&mut *loadfn);\nBufferSubData::load_with(&mut *loadfn);\nCheckFramebufferStatus::load_with(&mut *loadfn);\nClampColor::load_with(&mut *loadfn);\nClear::load_with(&mut *loadfn);\nClearBufferfi::load_with(&mut *loadfn);\nClearBufferfv::load_with(&mut *loadfn);\nClearBufferiv::load_with(&mut *loadfn);\nClearBufferuiv::load_with(&mut *loadfn);\nClearColor::load_with(&mut *loadfn);\nClearDepth::load_with(&mut *loadfn);\nClearStencil::load_with(&mut *loadfn);\nClientWaitSync::load_with(&mut *loadfn);\nColorMask::load_with(&mut *loadfn);\nColorMaski::load_with(&mut *loadfn);\nColorP3ui::load_with(&mut *loadfn);\nColorP3uiv::load_with(&mut *loadfn);\nColorP4ui::load_with(&mut *loadfn);\nColorP4uiv::load_with(&mut *loadfn);\nCompileShader::load_with(&mut *loadfn);\nCompressedTexImage1D::load_with(&mut *loadfn);\nCompressedTexImage2D::load_with(&mut *loadfn);\nCompressedTexImage3D::load_with(&mut *loadfn);\nCompressedTexSubImage1D::load_with(&mut *loadfn);\nCompressedTexSubImage2D::load_with(&mut *loadfn);\nCompressedTexSubImage3D::load_with(&mut *loadfn);\nCopyBufferSubData::load_with(&mut *loadfn);\nCopyTexImage1D::load_with(&mut *loadfn);\nCopyTexImage2D::load_with(&mut *loadfn);\nCopyTexSubImage1D::load_with(&mut *loadfn);\nCopyTexSubImage2D::load_with(&mut *loadfn);\nCopyTexSubImage3D::load_with(&mut *loadfn);\nCreateProgram::load_with(&mut *loadfn);\nCreateShader::load_with(&mut *loadfn);\nCullFace::load_with(&mut *loadfn);\nDeleteBuffers::load_with(&mut *loadfn);\nDeleteFramebuffers::load_with(&mut *loadfn);\nDeleteProgram::load_with(&mut *loadfn);\nDeleteQueries::load_with(&mut *loadfn);\nDeleteRenderbuffers::load_with(&mut *loadfn);\nDeleteSamplers::load_with(&mut *loadfn);\nDeleteShader::load_with(&mut *loadfn);\nDeleteSync::load_with(&mut *loadfn);\nDeleteTextures::load_with(&mut *loadfn);\nDeleteVertexArrays::load_with(&mut *loadfn);\nDepthFunc::load_with(&mut *loadfn);\nDepthMask::load_with(&mut *loadfn);\nDepthRange::load_with(&mut *loadfn);\nDetachShader::load_with(&mut *loadfn);\nDisable::load_with(&mut *loadfn);\nDisableVertexAttribArray::load_with(&mut *loadfn);\nDisablei::load_with(&mut *loadfn);\nDrawArrays::load_with(&mut *loadfn);\nDrawArraysInstanced::load_with(&mut *loadfn);\nDrawBuffer::load_with(&mut *loadfn);\nDrawBuffers::load_with(&mut *loadfn);\nDrawElements::load_with(&mut *loadfn);\nDrawElementsBaseVertex::load_with(&mut *loadfn);\nDrawElementsInstanced::load_with(&mut *loadfn);\nDrawElementsInstancedBaseVertex::load_with(&mut *loadfn);\nDrawRangeElements::load_with(&mut *loadfn);\nDrawRangeElementsBaseVertex::load_with(&mut *loadfn);\nEnable::load_with(&mut *loadfn);\nEnableVertexAttribArray::load_with(&mut *loadfn);\nEnablei::load_with(&mut *loadfn);\nEndConditionalRender::load_with(&mut *loadfn);\nEndQuery::load_with(&mut *loadfn);\nEndTransformFeedback::load_with(&mut *loadfn);\nFenceSync::load_with(&mut *loadfn);\nFinish::load_with(&mut *loadfn);\nFlush::load_with(&mut *loadfn);\nFlushMappedBufferRange::load_with(&mut *loadfn);\nFramebufferRenderbuffer::load_with(&mut *loadfn);\nFramebufferTexture::load_with(&mut *loadfn);\nFramebufferTexture1D::load_with(&mut *loadfn);\nFramebufferTexture2D::load_with(&mut *loadfn);\nFramebufferTexture3D::load_with(&mut *loadfn);\nFramebufferTextureLayer::load_with(&mut *loadfn);\nFrontFace::load_with(&mut *loadfn);\nGenBuffers::load_with(&mut *loadfn);\nGenFramebuffers::load_with(&mut *loadfn);\nGenQueries::load_with(&mut *loadfn);\nGenRenderbuffers::load_with(&mut *loadfn);\nGenSamplers::load_with(&mut *loadfn);\nGenTextures::load_with(&mut *loadfn);\nGenVertexArrays::load_with(&mut *loadfn);\nGenerateMipmap::load_with(&mut *loadfn);\nGetActiveAttrib::load_with(&mut *loadfn);\nGetActiveUniform::load_with(&mut *loadfn);\nGetActiveUniformBlockName::load_with(&mut *loadfn);\nGetActiveUniformBlockiv::load_with(&mut *loadfn);\nGetActiveUniformName::load_with(&mut *loadfn);\nGetActiveUniformsiv::load_with(&mut *loadfn);\nGetAttachedShaders::load_with(&mut *loadfn);\nGetAttribLocation::load_with(&mut *loadfn);\nGetBooleani_v::load_with(&mut *loadfn);\nGetBooleanv::load_with(&mut *loadfn);\nGetBufferParameteri64v::load_with(&mut *loadfn);\nGetBufferParameteriv::load_with(&mut *loadfn);\nGetBufferPointerv::load_with(&mut *loadfn);\nGetBufferSubData::load_with(&mut *loadfn);\nGetCompressedTexImage::load_with(&mut *loadfn);\nGetDoublev::load_with(&mut *loadfn);\nGetError::load_with(&mut *loadfn);\nGetFloatv::load_with(&mut *loadfn);\nGetFragDataIndex::load_with(&mut *loadfn);\nGetFragDataLocation::load_with(&mut *loadfn);\nGetFramebufferAttachmentParameteriv::load_with(&mut *loadfn);\nGetInteger64i_v::load_with(&mut *loadfn);\nGetInteger64v::load_with(&mut *loadfn);\nGetIntegeri_v::load_with(&mut *loadfn);\nGetIntegerv::load_with(&mut *loadfn);\nGetMultisamplefv::load_with(&mut *loadfn);\nGetProgramInfoLog::load_with(&mut *loadfn);\nGetProgramiv::load_with(&mut *loadfn);\nGetQueryObjecti64v::load_with(&mut *loadfn);\nGetQueryObjectiv::load_with(&mut *loadfn);\nGetQueryObjectui64v::load_with(&mut *loadfn);\nGetQueryObjectuiv::load_with(&mut *loadfn);\nGetQueryiv::load_with(&mut *loadfn);\nGetRenderbufferParameteriv::load_with(&mut *loadfn);\nGetSamplerParameterIiv::load_with(&mut *loadfn);\nGetSamplerParameterIuiv::load_with(&mut *loadfn);\nGetSamplerParameterfv::load_with(&mut *loadfn);\nGetSamplerParameteriv::load_with(&mut *loadfn);\nGetShaderInfoLog::load_with(&mut *loadfn);\nGetShaderSource::load_with(&mut *loadfn);\nGetShaderiv::load_with(&mut *loadfn);\nGetString::load_with(&mut *loadfn);\nGetStringi::load_with(&mut *loadfn);\nGetSynciv::load_with(&mut *loadfn);\nGetTexImage::load_with(&mut *loadfn);\nGetTexLevelParameterfv::load_with(&mut *loadfn);\nGetTexLevelParameteriv::load_with(&mut *loadfn);\nGetTexParameterIiv::load_with(&mut *loadfn);\nGetTexParameterIuiv::load_with(&mut *loadfn);\nGetTexParameterfv::load_with(&mut *loadfn);\nGetTexParameteriv::load_with(&mut *loadfn);\nGetTransformFeedbackVarying::load_with(&mut *loadfn);\nGetUniformBlockIndex::load_with(&mut *loadfn);\nGetUniformIndices::load_with(&mut *loadfn);\nGetUniformLocation::load_with(&mut *loadfn);\nGetUniformfv::load_with(&mut *loadfn);\nGetUniformiv::load_with(&mut *loadfn);\nGetUniformuiv::load_with(&mut *loadfn);\nGetVertexAttribIiv::load_with(&mut *loadfn);\nGetVertexAttribIuiv::load_with(&mut *loadfn);\nGetVertexAttribPointerv::load_with(&mut *loadfn);\nGetVertexAttribdv::load_with(&mut *loadfn);\nGetVertexAttribfv::load_with(&mut *loadfn);\nGetVertexAttribiv::load_with(&mut *loadfn);\nHint::load_with(&mut *loadfn);\nIsBuffer::load_with(&mut *loadfn);\nIsEnabled::load_with(&mut *loadfn);\nIsEnabledi::load_with(&mut *loadfn);\nIsFramebuffer::load_with(&mut *loadfn);\nIsProgram::load_with(&mut *loadfn);\nIsQuery::load_with(&mut *loadfn);\nIsRenderbuffer::load_with(&mut *loadfn);\nIsSampler::load_with(&mut *loadfn);\nIsShader::load_with(&mut *loadfn);\nIsSync::load_with(&mut *loadfn);\nIsTexture::load_with(&mut *loadfn);\nIsVertexArray::load_with(&mut *loadfn);\nLineWidth::load_with(&mut *loadfn);\nLinkProgram::load_with(&mut *loadfn);\nLogicOp::load_with(&mut *loadfn);\nMapBuffer::load_with(&mut *loadfn);\nMapBufferRange::load_with(&mut *loadfn);\nMultiDrawArrays::load_with(&mut *loadfn);\nMultiDrawElements::load_with(&mut *loadfn);\nMultiDrawElementsBaseVertex::load_with(&mut *loadfn);\nMultiTexCoordP1ui::load_with(&mut *loadfn);\nMultiTexCoordP1uiv::load_with(&mut *loadfn);\nMultiTexCoordP2ui::load_with(&mut *loadfn);\nMultiTexCoordP2uiv::load_with(&mut *loadfn);\nMultiTexCoordP3ui::load_with(&mut *loadfn);\nMultiTexCoordP3uiv::load_with(&mut *loadfn);\nMultiTexCoordP4ui::load_with(&mut *loadfn);\nMultiTexCoordP4uiv::load_with(&mut *loadfn);\nNormalP3ui::load_with(&mut *loadfn);\nNormalP3uiv::load_with(&mut *loadfn);\nPixelStoref::load_with(&mut *loadfn);\nPixelStorei::load_with(&mut *loadfn);\nPointParameterf::load_with(&mut *loadfn);\nPointParameterfv::load_with(&mut *loadfn);\nPointParameteri::load_with(&mut *loadfn);\nPointParameteriv::load_with(&mut *loadfn);\nPointSize::load_with(&mut *loadfn);\nPolygonMode::load_with(&mut *loadfn);\nPolygonOffset::load_with(&mut *loadfn);\nPrimitiveRestartIndex::load_with(&mut *loadfn);\nProvokingVertex::load_with(&mut *loadfn);\nQueryCounter::load_with(&mut *loadfn);\nReadBuffer::load_with(&mut *loadfn);\nReadPixels::load_with(&mut *loadfn);\nRenderbufferStorage::load_with(&mut *loadfn);\nRenderbufferStorageMultisample::load_with(&mut *loadfn);\nSampleCoverage::load_with(&mut *loadfn);\nSampleMaski::load_with(&mut *loadfn);\nSamplerParameterIiv::load_with(&mut *loadfn);\nSamplerParameterIuiv::load_with(&mut *loadfn);\nSamplerParameterf::load_with(&mut *loadfn);\nSamplerParameterfv::load_with(&mut *loadfn);\nSamplerParameteri::load_with(&mut *loadfn);\nSamplerParameteriv::load_with(&mut *loadfn);\nScissor::load_with(&mut *loadfn);\nSecondaryColorP3ui::load_with(&mut *loadfn);\nSecondaryColorP3uiv::load_with(&mut *loadfn);\nShaderSource::load_with(&mut *loadfn);\nStencilFunc::load_with(&mut *loadfn);\nStencilFuncSeparate::load_with(&mut *loadfn);\nStencilMask::load_with(&mut *loadfn);\nStencilMaskSeparate::load_with(&mut *loadfn);\nStencilOp::load_with(&mut *loadfn);\nStencilOpSeparate::load_with(&mut *loadfn);\nTexBuffer::load_with(&mut *loadfn);\nTexCoordP1ui::load_with(&mut *loadfn);\nTexCoordP1uiv::load_with(&mut *loadfn);\nTexCoordP2ui::load_with(&mut *loadfn);\nTexCoordP2uiv::load_with(&mut *loadfn);\nTexCoordP3ui::load_with(&mut *loadfn);\nTexCoordP3uiv::load_with(&mut *loadfn);\nTexCoordP4ui::load_with(&mut *loadfn);\nTexCoordP4uiv::load_with(&mut *loadfn);\nTexImage1D::load_with(&mut *loadfn);\nTexImage2D::load_with(&mut *loadfn);\nTexImage2DMultisample::load_with(&mut *loadfn);\nTexImage3D::load_with(&mut *loadfn);\nTexImage3DMultisample::load_with(&mut *loadfn);\nTexParameterIiv::load_with(&mut *loadfn);\nTexParameterIuiv::load_with(&mut *loadfn);\nTexParameterf::load_with(&mut *loadfn);\nTexParameterfv::load_with(&mut *loadfn);\nTexParameteri::load_with(&mut *loadfn);\nTexParameteriv::load_with(&mut *loadfn);\nTexSubImage1D::load_with(&mut *loadfn);\nTexSubImage2D::load_with(&mut *loadfn);\nTexSubImage3D::load_with(&mut *loadfn);\nTransformFeedbackVaryings::load_with(&mut *loadfn);\nUniform1f::load_with(&mut *loadfn);\nUniform1fv::load_with(&mut *loadfn);\nUniform1i::load_with(&mut *loadfn);\nUniform1iv::load_with(&mut *loadfn);\nUniform1ui::load_with(&mut *loadfn);\nUniform1uiv::load_with(&mut *loadfn);\nUniform2f::load_with(&mut *loadfn);\nUniform2fv::load_with(&mut *loadfn);\nUniform2i::load_with(&mut *loadfn);\nUniform2iv::load_with(&mut *loadfn);\nUniform2ui::load_with(&mut *loadfn);\nUniform2uiv::load_with(&mut *loadfn);\nUniform3f::load_with(&mut *loadfn);\nUniform3fv::load_with(&mut *loadfn);\nUniform3i::load_with(&mut *loadfn);\nUniform3iv::load_with(&mut *loadfn);\nUniform3ui::load_with(&mut *loadfn);\nUniform3uiv::load_with(&mut *loadfn);\nUniform4f::load_with(&mut *loadfn);\nUniform4fv::load_with(&mut *loadfn);\nUniform4i::load_with(&mut *loadfn);\nUniform4iv::load_with(&mut *loadfn);\nUniform4ui::load_with(&mut *loadfn);\nUniform4uiv::load_with(&mut *loadfn);\nUniformBlockBinding::load_with(&mut *loadfn);\nUniformMatrix2fv::load_with(&mut *loadfn);\nUniformMatrix2x3fv::load_with(&mut *loadfn);\nUniformMatrix2x4fv::load_with(&mut *loadfn);\nUniformMatrix3fv::load_with(&mut *loadfn);\nUniformMatrix3x2fv::load_with(&mut *loadfn);\nUniformMatrix3x4fv::load_with(&mut *loadfn);\nUniformMatrix4fv::load_with(&mut *loadfn);\nUniformMatrix4x2fv::load_with(&mut *loadfn);\nUniformMatrix4x3fv::load_with(&mut *loadfn);\nUnmapBuffer::load_with(&mut *loadfn);\nUseProgram::load_with(&mut *loadfn);\nValidateProgram::load_with(&mut *loadfn);\nVertexAttrib1d::load_with(&mut *loadfn);\nVertexAttrib1dv::load_with(&mut *loadfn);\nVertexAttrib1f::load_with(&mut *loadfn);\nVertexAttrib1fv::load_with(&mut *loadfn);\nVertexAttrib1s::load_with(&mut *loadfn);\nVertexAttrib1sv::load_with(&mut *loadfn);\nVertexAttrib2d::load_with(&mut *loadfn);\nVertexAttrib2dv::load_with(&mut *loadfn);\nVertexAttrib2f::load_with(&mut *loadfn);\nVertexAttrib2fv::load_with(&mut *loadfn);\nVertexAttrib2s::load_with(&mut *loadfn);\nVertexAttrib2sv::load_with(&mut *loadfn);\nVertexAttrib3d::load_with(&mut *loadfn);\nVertexAttrib3dv::load_with(&mut *loadfn);\nVertexAttrib3f::load_with(&mut *loadfn);\nVertexAttrib3fv::load_with(&mut *loadfn);\nVertexAttrib3s::load_with(&mut *loadfn);\nVertexAttrib3sv::load_with(&mut *loadfn);\nVertexAttrib4Nbv::load_with(&mut *loadfn);\nVertexAttrib4Niv::load_with(&mut *loadfn);\nVertexAttrib4Nsv::load_with(&mut *loadfn);\nVertexAttrib4Nub::load_with(&mut *loadfn);\nVertexAttrib4Nubv::load_with(&mut *loadfn);\nVertexAttrib4Nuiv::load_with(&mut *loadfn);\nVertexAttrib4Nusv::load_with(&mut *loadfn);\nVertexAttrib4bv::load_with(&mut *loadfn);\nVertexAttrib4d::load_with(&mut *loadfn);\nVertexAttrib4dv::load_with(&mut *loadfn);\nVertexAttrib4f::load_with(&mut *loadfn);\nVertexAttrib4fv::load_with(&mut *loadfn);\nVertexAttrib4iv::load_with(&mut *loadfn);\nVertexAttrib4s::load_with(&mut *loadfn);\nVertexAttrib4sv::load_with(&mut *loadfn);\nVertexAttrib4ubv::load_with(&mut *loadfn);\nVertexAttrib4uiv::load_with(&mut *loadfn);\nVertexAttrib4usv::load_with(&mut *loadfn);\nVertexAttribDivisor::load_with(&mut *loadfn);\nVertexAttribI1i::load_with(&mut *loadfn);\nVertexAttribI1iv::load_with(&mut *loadfn);\nVertexAttribI1ui::load_with(&mut *loadfn);\nVertexAttribI1uiv::load_with(&mut *loadfn);\nVertexAttribI2i::load_with(&mut *loadfn);\nVertexAttribI2iv::load_with(&mut *loadfn);\nVertexAttribI2ui::load_with(&mut *loadfn);\nVertexAttribI2uiv::load_with(&mut *loadfn);\nVertexAttribI3i::load_with(&mut *loadfn);\nVertexAttribI3iv::load_with(&mut *loadfn);\nVertexAttribI3ui::load_with(&mut *loadfn);\nVertexAttribI3uiv::load_with(&mut *loadfn);\nVertexAttribI4bv::load_with(&mut *loadfn);\nVertexAttribI4i::load_with(&mut *loadfn);\nVertexAttribI4iv::load_with(&mut *loadfn);\nVertexAttribI4sv::load_with(&mut *loadfn);\nVertexAttribI4ubv::load_with(&mut *loadfn);\nVertexAttribI4ui::load_with(&mut *loadfn);\nVertexAttribI4uiv::load_with(&mut *loadfn);\nVertexAttribI4usv::load_with(&mut *loadfn);\nVertexAttribIPointer::load_with(&mut *loadfn);\nVertexAttribP1ui::load_with(&mut *loadfn);\nVertexAttribP1uiv::load_with(&mut *loadfn);\nVertexAttribP2ui::load_with(&mut *loadfn);\nVertexAttribP2uiv::load_with(&mut *loadfn);\nVertexAttribP3ui::load_with(&mut *loadfn);\nVertexAttribP3uiv::load_with(&mut *loadfn);\nVertexAttribP4ui::load_with(&mut *loadfn);\nVertexAttribP4uiv::load_with(&mut *loadfn);\nVertexAttribPointer::load_with(&mut *loadfn);\nVertexP2ui::load_with(&mut *loadfn);\nVertexP2uiv::load_with(&mut *loadfn);\nVertexP3ui::load_with(&mut *loadfn);\nVertexP3uiv::load_with(&mut *loadfn);\nVertexP4ui::load_with(&mut *loadfn);\nVertexP4uiv::load_with(&mut *loadfn);\nViewport::load_with(&mut *loadfn);\nWaitSync::load_with(&mut *loadfn);\n\n            }\n\n            inner(&mut loadfn)\n        }\n    \n",
			"file": "ghostly_game_windows/target/debug/build/gengar_renderapi_opengl_windows-a2551648e644c667/out/bindings.rs",
			"file_size": 589406,
			"file_write_time": 133661880752402157,
			"settings":
			{
				"buffer_size": 589406,
				"line_ending": "Unix"
			}
		},
		{
			"file": "gengar_engine/src/engine.rs",
			"settings":
			{
				"buffer_size": 1607,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					1235,
					1,
					"insert",
					{
						"characters": "MatrixFourFour"
					},
					"DgAAAJwAAAAAAAAAnQAAAAAAAAAAAAAAnQAAAAAAAACeAAAAAAAAAAAAAACeAAAAAAAAAJ8AAAAAAAAAAAAAAJ8AAAAAAAAAoAAAAAAAAAAAAAAAoAAAAAAAAAChAAAAAAAAAAAAAAChAAAAAAAAAKIAAAAAAAAAAAAAAKIAAAAAAAAAowAAAAAAAAAAAAAAowAAAAAAAACkAAAAAAAAAAAAAACkAAAAAAAAAKUAAAAAAAAAAAAAAKUAAAAAAAAApgAAAAAAAAAAAAAApgAAAAAAAACnAAAAAAAAAAAAAACnAAAAAAAAAKgAAAAAAAAAAAAAAKgAAAAAAAAAqQAAAAAAAAAAAAAAqQAAAAAAAACqAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAnAAAAAAAAACcAAAAAAAAAAAAAAAAAPC/AQAAAAEAAACeBQAAAAAAAJ4FAAAAAAAAAAAAAAAA8L8"
				],
				[
					1236,
					1,
					"cut",
					null,
					"AQAAAJwAAAAAAAAAnAAAAAAAAAAPAAAATWF0cml4Rm91ckZvdXIK",
					"AgAAAAAAAAABAAAAqgAAAAAAAACqAAAAAAAAAAAAAAAAAPC/AQAAAAEAAACsBQAAAAAAAKwFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1241,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAJsAAAAAAAAAnAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAmwAAAAAAAACbAAAAAAAAAP///////+9/AQAAAAEAAACdBQAAAAAAAJ0FAAAAAAAAAAAAAAAA8L8"
				],
				[
					1244,
					1,
					"insert",
					{
						"characters": "\npub"
					},
					"BAAAAIoAAAAAAAAAiwAAAAAAAAAAAAAAiwAAAAAAAACMAAAAAAAAAAAAAACMAAAAAAAAAI0AAAAAAAAAAAAAAI0AAAAAAAAAjgAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAigAAAAAAAACKAAAAAAAAAP///////+9/AQAAAAEAAACeBQAAAAAAAJ4FAAAAAAAAAAAAAAAA8L8"
				],
				[
					1245,
					1,
					"insert",
					{
						"characters": " mod"
					},
					"BAAAAI4AAAAAAAAAjwAAAAAAAAAAAAAAjwAAAAAAAACQAAAAAAAAAAAAAACQAAAAAAAAAJEAAAAAAAAAAAAAAJEAAAAAAAAAkgAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAjgAAAAAAAACOAAAAAAAAAAAAAAAAAPC/AQAAAAEAAACiBQAAAAAAAKIFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1246,
					1,
					"insert",
					{
						"characters": " matricies;"
					},
					"CwAAAJIAAAAAAAAAkwAAAAAAAAAAAAAAkwAAAAAAAACUAAAAAAAAAAAAAACUAAAAAAAAAJUAAAAAAAAAAAAAAJUAAAAAAAAAlgAAAAAAAAAAAAAAlgAAAAAAAACXAAAAAAAAAAAAAACXAAAAAAAAAJgAAAAAAAAAAAAAAJgAAAAAAAAAmQAAAAAAAAAAAAAAmQAAAAAAAACaAAAAAAAAAAAAAACaAAAAAAAAAJsAAAAAAAAAAAAAAJsAAAAAAAAAnAAAAAAAAAAAAAAAnAAAAAAAAACdAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAkgAAAAAAAACSAAAAAAAAAAAAAAAAAPC/AQAAAAEAAACmBQAAAAAAAKYFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1247,
					2,
					"rust_fmt_format_buffer",
					null,
					"BAAAAIIAAAAAAAAAggAAAAAAAAAGAAAAdmVjdG9yggAAAAAAAACKAAAAAAAAAAAAAACVAAAAAAAAAJUAAAAAAAAACAAAAG1hdHJpY2lllQAAAAAAAACbAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAnQAAAAAAAACdAAAAAAAAAAAAAAAAAPC/AQAAAAEAAACxBQAAAAAAALEFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1278,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAAMAAAAAAAAAAwAAAAAAAAAADAAAALy8g",
					"AgAAAAAAAAABAAAA0QAAAAAAAADRAAAAAAAAAP///////+9/AQAAAAEAAACxBQAAAAAAALEFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1292,
					1,
					"insert",
					{
						"characters": "Bo"
					},
					"AgAAALIBAAAAAAAAswEAAAAAAAAAAAAAswEAAAAAAAC0AQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAsgEAAAAAAACyAQAAAAAAAAAAAAAAAPC/AQAAAAEAAACuBQAAAAAAAK4FAAAAAAAAAAAAAAAA8L8"
				],
				[
					1293,
					2,
					"left_delete",
					null,
					"AgAAALMBAAAAAAAAswEAAAAAAAABAAAAb7IBAAAAAAAAsgEAAAAAAAABAAAAQg",
					"AgAAAAAAAAABAAAAtAEAAAAAAAC0AQAAAAAAAAAAAAAAAPC/AQAAAAEAAACwBQAAAAAAALAFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1294,
					1,
					"insert",
					{
						"characters": "satte"
					},
					"BQAAALIBAAAAAAAAswEAAAAAAAAAAAAAswEAAAAAAAC0AQAAAAAAAAAAAAC0AQAAAAAAALUBAAAAAAAAAAAAALUBAAAAAAAAtgEAAAAAAAAAAAAAtgEAAAAAAAC3AQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAsgEAAAAAAACyAQAAAAAAAAAAAAAAAPC/AQAAAAEAAACuBQAAAAAAAK4FAAAAAAAAAAAAAAAA8L8"
				],
				[
					1295,
					3,
					"left_delete",
					null,
					"AwAAALYBAAAAAAAAtgEAAAAAAAABAAAAZbUBAAAAAAAAtQEAAAAAAAABAAAAdLQBAAAAAAAAtAEAAAAAAAABAAAAdA",
					"AgAAAAAAAAABAAAAtwEAAAAAAAC3AQAAAAAAAAAAAAAAAPC/AQAAAAEAAACzBQAAAAAAALMFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1296,
					1,
					"insert",
					{
						"characters": "t"
					},
					"AQAAALQBAAAAAAAAtQEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAtAEAAAAAAAC0AQAAAAAAAAAAAAAAAPC/AQAAAAEAAACwBQAAAAAAALAFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1297,
					1,
					"left_delete",
					null,
					"AQAAALQBAAAAAAAAtAEAAAAAAAABAAAAdA",
					"AgAAAAAAAAABAAAAtQEAAAAAAAC1AQAAAAAAAAAAAAAAAPC/AQAAAAEAAACxBQAAAAAAALEFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1298,
					1,
					"insert",
					{
						"characters": "ate"
					},
					"AwAAALQBAAAAAAAAtQEAAAAAAAAAAAAAtQEAAAAAAAC2AQAAAAAAAAAAAAC2AQAAAAAAALcBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAtAEAAAAAAAC0AQAAAAAAAAAAAAAAAPC/AQAAAAEAAACwBQAAAAAAALAFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1299,
					4,
					"left_delete",
					null,
					"BAAAALYBAAAAAAAAtgEAAAAAAAABAAAAZbUBAAAAAAAAtQEAAAAAAAABAAAAdLQBAAAAAAAAtAEAAAAAAAABAAAAYbMBAAAAAAAAswEAAAAAAAABAAAAYQ",
					"AgAAAAAAAAABAAAAtwEAAAAAAAC3AQAAAAAAAAAAAAAAAPC/AQAAAAEAAACzBQAAAAAAALMFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1300,
					1,
					"insert",
					{
						"characters": "tate"
					},
					"BAAAALMBAAAAAAAAtAEAAAAAAAAAAAAAtAEAAAAAAAC1AQAAAAAAAAAAAAC1AQAAAAAAALYBAAAAAAAAAAAAALYBAAAAAAAAtwEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAswEAAAAAAACzAQAAAAAAAAAAAAAAAPC/AQAAAAEAAACvBQAAAAAAAK8FAAAAAAAAAAAAAAAA8L8"
				],
				[
					1301,
					3,
					"left_delete",
					null,
					"AwAAALYBAAAAAAAAtgEAAAAAAAABAAAAZbUBAAAAAAAAtQEAAAAAAAABAAAAdLQBAAAAAAAAtAEAAAAAAAABAAAAYQ",
					"AgAAAAAAAAABAAAAtwEAAAAAAAC3AQAAAAAAAAAAAAAAAPC/AQAAAAEAAACzBQAAAAAAALMFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1303,
					1,
					"insert",
					{
						"characters": "state:"
					},
					"BwAAALIBAAAAAAAAswEAAAAAAAAAAAAAswEAAAAAAACzAQAAAAAAAAIAAABzdLMBAAAAAAAAtAEAAAAAAAAAAAAAtAEAAAAAAAC1AQAAAAAAAAAAAAC1AQAAAAAAALYBAAAAAAAAAAAAALYBAAAAAAAAtwEAAAAAAAAAAAAAtwEAAAAAAAC4AQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAtAEAAAAAAACyAQAAAAAAAAAAAAAAAPC/AQAAAAEAAACwBQAAAAAAALAFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1304,
					1,
					"insert",
					{
						"characters": " state:"
					},
					"BwAAALgBAAAAAAAAuQEAAAAAAAAAAAAAuQEAAAAAAAC6AQAAAAAAAAAAAAC6AQAAAAAAALsBAAAAAAAAAAAAALsBAAAAAAAAvAEAAAAAAAAAAAAAvAEAAAAAAAC9AQAAAAAAAAAAAAC9AQAAAAAAAL4BAAAAAAAAAAAAAL4BAAAAAAAAvwEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAuAEAAAAAAAC4AQAAAAAAAAAAAAAAAPC/AQAAAAEAAAC0BQAAAAAAALQFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1305,
					1,
					"insert",
					{
						"characters": ":State,"
					},
					"BwAAAL8BAAAAAAAAwAEAAAAAAAAAAAAAwAEAAAAAAADBAQAAAAAAAAAAAADBAQAAAAAAAMIBAAAAAAAAAAAAAMIBAAAAAAAAwwEAAAAAAAAAAAAAwwEAAAAAAADEAQAAAAAAAAAAAADEAQAAAAAAAMUBAAAAAAAAAAAAAMUBAAAAAAAAxgEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAvwEAAAAAAAC/AQAAAAAAAAAAAAAAAPC/AQAAAAEAAAC7BQAAAAAAALsFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1306,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMYBAAAAAAAAxwEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAxgEAAAAAAADGAQAAAAAAAAAAAAAAAPC/AQAAAAEAAADCBQAAAAAAAMIFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1311,
					1,
					"insert",
					{
						"characters": "::State"
					},
					"BwAAAM0AAAAAAAAAzgAAAAAAAAAAAAAAzgAAAAAAAADPAAAAAAAAAAAAAADPAAAAAAAAANAAAAAAAAAAAAAAANAAAAAAAAAA0QAAAAAAAAAAAAAA0QAAAAAAAADSAAAAAAAAAAAAAADSAAAAAAAAANMAAAAAAAAAAAAAANMAAAAAAAAA1AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAzQAAAAAAAADNAAAAAAAAAAAAAAAAAPC/AQAAAAEAAADDBQAAAAAAAMMFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1313,
					1,
					"insert",
					{
						"characters": "*"
					},
					"AgAAAM8AAAAAAAAA0AAAAAAAAAAAAAAA0AAAAAAAAADQAAAAAAAAAAUAAABTdGF0ZQ",
					"AgAAAAAAAAABAAAA1AAAAAAAAADPAAAAAAAAAAAAAAAAAPC/AQAAAAEAAADKBQAAAAAAAMoFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1323,
					1,
					"insert",
					{
						"characters": "&sat"
					},
					"BQAAALwBAAAAAAAAvQEAAAAAAAAAAAAAvQEAAAAAAAC9AQAAAAAAAAwAAABzdGF0ZTo6U3RhdGW9AQAAAAAAAL4BAAAAAAAAAAAAAL4BAAAAAAAAvwEAAAAAAAAAAAAAvwEAAAAAAADAAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAyAEAAAAAAAC8AQAAAAAAAAAAAAAAAPC/AQAAAAEAAADGBQAAAAAAAMYFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1324,
					2,
					"left_delete",
					null,
					"AgAAAL8BAAAAAAAAvwEAAAAAAAABAAAAdL4BAAAAAAAAvgEAAAAAAAABAAAAYQ",
					"AgAAAAAAAAABAAAAwAEAAAAAAADAAQAAAAAAAAAAAAAAAPC/AQAAAAEAAAC+BQAAAAAAAL4FAAAAAAAAAAAAAAAA8L8"
				],
				[
					1325,
					1,
					"insert",
					{
						"characters": "State"
					},
					"BQAAAL4BAAAAAAAAvwEAAAAAAAAAAAAAvwEAAAAAAADAAQAAAAAAAAAAAADAAQAAAAAAAMEBAAAAAAAAAAAAAMEBAAAAAAAAwgEAAAAAAAAAAAAAwgEAAAAAAADDAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAvgEAAAAAAAC+AQAAAAAAAAAAAAAAAPC/AQAAAAEAAAC8BQAAAAAAALwFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1326,
					6,
					"left_delete",
					null,
					"BgAAAMIBAAAAAAAAwgEAAAAAAAABAAAAZcEBAAAAAAAAwQEAAAAAAAABAAAAdMABAAAAAAAAwAEAAAAAAAABAAAAYb8BAAAAAAAAvwEAAAAAAAABAAAAdL4BAAAAAAAAvgEAAAAAAAABAAAAU70BAAAAAAAAvQEAAAAAAAABAAAAcw",
					"AgAAAAAAAAABAAAAwwEAAAAAAADDAQAAAAAAAAAAAAAAAPC/AQAAAAEAAADBBQAAAAAAAMEFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1327,
					1,
					"insert",
					{
						"characters": "State"
					},
					"BQAAAL0BAAAAAAAAvgEAAAAAAAAAAAAAvgEAAAAAAAC/AQAAAAAAAAAAAAC/AQAAAAAAAMABAAAAAAAAAAAAAMABAAAAAAAAwQEAAAAAAAAAAAAAwQEAAAAAAADCAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAvQEAAAAAAAC9AQAAAAAAAAAAAAAAAPC/AQAAAAEAAAC7BQAAAAAAALsFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1331,
					1,
					"insert",
					{
						"characters": "mut"
					},
					"AwAAAL0BAAAAAAAAvgEAAAAAAAAAAAAAvgEAAAAAAAC/AQAAAAAAAAAAAAC/AQAAAAAAAMABAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAvQEAAAAAAAC9AQAAAAAAAAAAAAAAAPC/AQAAAAEAAADABQAAAAAAAMAFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1334,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMABAAAAAAAAwQEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAwAEAAAAAAADAAQAAAAAAAAAAAAAAAPC/AQAAAAEAAADDBQAAAAAAAMMFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1340,
					2,
					"left_delete",
					null,
					"AgAAAM4AAAAAAAAAzgAAAAAAAAABAAAAOs0AAAAAAAAAzQAAAAAAAAABAAAAOg",
					"AgAAAAAAAAABAAAAzwAAAAAAAADPAAAAAAAAAAAAAAAAAPC/AQAAAAEAAADEBQAAAAAAAMQFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1341,
					1,
					"insert",
					{
						"characters": "::"
					},
					"AgAAAM0AAAAAAAAAzgAAAAAAAAAAAAAAzgAAAAAAAADPAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAzQAAAAAAAADNAAAAAAAAAAAAAAAAAPC/AQAAAAEAAADCBQAAAAAAAMIFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1359,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAANEAAAAAAAAA0gAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0QAAAAAAAADRAAAAAAAAAP///////+9/AQAAAAEAAADEBQAAAAAAAMQFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1361,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAAMAAAAAAAAAAwwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAwAAAAAAAAADAAAAAAAAAAAAAAAAAAAAAAQAAAAEAAADFBQAAAAAAAMUFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1363,
					1,
					"insert",
					{
						"characters": "\nmod"
					},
					"BAAAANQAAAAAAAAA1QAAAAAAAAAAAAAA1QAAAAAAAADWAAAAAAAAAAAAAADWAAAAAAAAANcAAAAAAAAAAAAAANcAAAAAAAAA2AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA1AAAAAAAAADUAAAAAAAAAP///////+9/AQAAAAEAAADIBQAAAAAAAMgFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1364,
					1,
					"insert",
					{
						"characters": " file;"
					},
					"BgAAANgAAAAAAAAA2QAAAAAAAAAAAAAA2QAAAAAAAADaAAAAAAAAAAAAAADaAAAAAAAAANsAAAAAAAAAAAAAANsAAAAAAAAA3AAAAAAAAAAAAAAA3AAAAAAAAADdAAAAAAAAAAAAAADdAAAAAAAAAN4AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA2AAAAAAAAADYAAAAAAAAAAAAAAAAAPC/AQAAAAEAAADMBQAAAAAAAMwFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1365,
					2,
					"rust_fmt_format_buffer",
					null,
					"AQAAAOAAAAAAAAAA4AAAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAA3gAAAAAAAADeAAAAAAAAAAAAAAAAAPC/AQAAAAEAAADSBQAAAAAAANIFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1368,
					1,
					"insert",
					{
						"characters": "state"
					},
					"BgAAANkAAAAAAAAA2gAAAAAAAAAAAAAA2gAAAAAAAADaAAAAAAAAAAQAAABmaWxl2gAAAAAAAADbAAAAAAAAAAAAAADbAAAAAAAAANwAAAAAAAAAAAAAANwAAAAAAAAA3QAAAAAAAAAAAAAA3QAAAAAAAADeAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA3QAAAAAAAADZAAAAAAAAAAAAAAAAAPC/AQAAAAEAAADRBQAAAAAAANEFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1374,
					1,
					"insert",
					{
						"characters": "::*"
					},
					"AwAAAN4AAAAAAAAA3wAAAAAAAAAAAAAA3wAAAAAAAADgAAAAAAAAAAAAAADgAAAAAAAAAOEAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA3gAAAAAAAADeAAAAAAAAAAAAAAAAAPC/AQAAAAEAAADSBQAAAAAAANIFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1378,
					1,
					"left_delete",
					null,
					"AQAAAN8AAAAAAAAA3wAAAAAAAAABAAAAOg",
					"AgAAAAAAAAABAAAA4AAAAAAAAADgAAAAAAAAAAAAAAAAAPC/AQAAAAEAAADVBQAAAAAAANUFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1380,
					2,
					"left_delete",
					null,
					"AgAAAN8AAAAAAAAA3wAAAAAAAAABAAAAKt4AAAAAAAAA3gAAAAAAAAABAAAAOg",
					"AgAAAAAAAAABAAAA4AAAAAAAAADgAAAAAAAAAAAAAAAAAPC/AQAAAAEAAADUBQAAAAAAANQFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1383,
					1,
					"cut",
					null,
					"AQAAANUAAAAAAAAA1QAAAAAAAAALAAAAbW9kIHN0YXRlOwo",
					"AgAAAAAAAAABAAAA3gAAAAAAAADeAAAAAAAAAAAAAAAAAPC/AQAAAAEAAADSBQAAAAAAANIFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1385,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAAMAAAAAAAAAAwAAAAAAAAAADAAAALy8g",
					"AgAAAAAAAAABAAAAwAAAAAAAAADAAAAAAAAAAAAAAAAAAAAAAQAAAAEAAADHBQAAAAAAAMcFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1391,
					4,
					"swap_line_down",
					null,
					"CAAAALAAAAAAAAAAwAAAAAAAAAAAAAAAnwAAAAAAAACfAAAAAAAAABAAAAB1c2UgdmVjdG9yczo6KjsKwAAAAAAAAADQAAAAAAAAAAAAAACgAAAAAAAAAKAAAAAAAAAAEAAAAHVzZSB2ZWN0b3JzOjoqOwrSAAAAAAAAAOIAAAAAAAAAAAAAALAAAAAAAAAAsAAAAAAAAAAQAAAAdXNlIHZlY3RvcnM6Oio7CtMAAAAAAAAA4wAAAAAAAAAAAAAAwgAAAAAAAADCAAAAAAAAABAAAAB1c2UgdmVjdG9yczo6KjsK",
					"AgAAAAAAAAABAAAArgAAAAAAAACuAAAAAAAAAP///////+9/AQAAAAEAAADEBQAAAAAAAMQFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1395,
					1,
					"insert",
					{
						"characters": "\nuse"
					},
					"BAAAANIAAAAAAAAA0wAAAAAAAAAAAAAA0wAAAAAAAADUAAAAAAAAAAAAAADUAAAAAAAAANUAAAAAAAAAAAAAANUAAAAAAAAA1gAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0gAAAAAAAADSAAAAAAAAAP///////+9/AQAAAAEAAADEBQAAAAAAAMQFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1396,
					1,
					"insert",
					{
						"characters": " state::*;"
					},
					"CgAAANYAAAAAAAAA1wAAAAAAAAAAAAAA1wAAAAAAAADYAAAAAAAAAAAAAADYAAAAAAAAANkAAAAAAAAAAAAAANkAAAAAAAAA2gAAAAAAAAAAAAAA2gAAAAAAAADbAAAAAAAAAAAAAADbAAAAAAAAANwAAAAAAAAAAAAAANwAAAAAAAAA3QAAAAAAAAAAAAAA3QAAAAAAAADeAAAAAAAAAAAAAADeAAAAAAAAAN8AAAAAAAAAAAAAAN8AAAAAAAAA4AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA1gAAAAAAAADWAAAAAAAAAAAAAAAAAPC/AQAAAAEAAADIBQAAAAAAAMgFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1401,
					1,
					"cut",
					null,
					"AQAAAJ8AAAAAAAAAnwAAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAnwAAAAAAAACfAAAAAAAAAAAAAAAAAPC/AQAAAAEAAADSBQAAAAAAANIFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1407,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAN8AAAAAAAAA4AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA3wAAAAAAAADfAAAAAAAAAP///////+9/AQAAAAEAAADRBQAAAAAAANEFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1411,
					6,
					"cut",
					null,
					"BgAAAOEAAAAAAAAA4QAAAAAAAAAqAAAALy8gUGxhdGZvcm0gbmVlZHMgdG8gcHJvdmlkZSB0aGVzZSB0aGluZ3MK4QAAAAAAAADhAAAAAAAAAAMAAAAvKgrhAAAAAAAAAOEAAAAAAAAAGQAAAHB1YiBzdHJ1Y3QgUGxhdGZvcm1BcGkgewrhAAAAAAAAAOEAAAAAAAAAJwAAACAgICBwdWIgZ2xfZ2V0X3Byb2NfYWRkcmVzczogZm4oJnN0ciksCuEAAAAAAAAA4QAAAAAAAAACAAAAfQrhAAAAAAAAAOEAAAAAAAAAAwAAACovCg",
					"AgAAAAAAAAABAAAA4QAAAAAAAADhAAAAAAAAAAAAAAAAAAAAAQAAAAEAAADSBQAAAAAAANIFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1412,
					1,
					"left_delete",
					null,
					"AQAAAOAAAAAAAAAA4AAAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAA4QAAAAAAAADhAAAAAAAAAAAAAAAAAPC/AQAAAAEAAABgBQAAAAAAAGAFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1418,
					3,
					"left_delete",
					null,
					"AwAAAL4AAAAAAAAAvgAAAAAAAAABAAAAKr0AAAAAAAAAvQAAAAAAAAABAAAAOrwAAAAAAAAAvAAAAAAAAAABAAAAOg",
					"AgAAAAAAAAABAAAAvwAAAAAAAAC/AAAAAAAAAAAAAAAAAPC/AQAAAAEAAABfBQAAAAAAAF8FAAAAAAAAAAAAAAAA8L8"
				],
				[
					1419,
					2,
					"rust_fmt_format_buffer",
					null,
					"BAAAAMMAAAAAAAAAwwAAAAAAAAAGAAAAdmVjdG9yxAAAAAAAAADIAAAAAAAAAAAAAADRAAAAAAAAANEAAAAAAAAABQAAAHN0YXRl0QAAAAAAAADYAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAvAAAAAAAAAC8AAAAAAAAAAAAAAAAAPC/AQAAAAEAAABcBQAAAAAAAFwFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1424,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAABAEAAAAAAAAEQQAAAAAAAAAAAAAEQQAAAAAAAASBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAEAQAAAAAAAAQBAAAAAAAAAAAAAAAAAAAAQAAAAEAAABcBQAAAAAAAFwFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1426,
					1,
					"reindent",
					null,
					"AQAAABEEAAAAAAAAFQQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAEQQAAAAAAAARBAAAAAAAAAAAAAAAAAAAAQAAAAEAAABeBQAAAAAAAF4FAAAAAAAAAAAAAAAA8L8"
				],
				[
					1427,
					1,
					"insert",
					{
						"characters": "sate"
					},
					"BAAAABUEAAAAAAAAFgQAAAAAAAAAAAAAFgQAAAAAAAAXBAAAAAAAAAAAAAAXBAAAAAAAABgEAAAAAAAAAAAAABgEAAAAAAAAGQQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAFQQAAAAAAAAVBAAAAAAAAAAAAAAAAPC/AQAAAAEAAABiBQAAAAAAAGIFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1428,
					3,
					"left_delete",
					null,
					"AwAAABgEAAAAAAAAGAQAAAAAAAABAAAAZRcEAAAAAAAAFwQAAAAAAAABAAAAdBYEAAAAAAAAFgQAAAAAAAABAAAAYQ",
					"AgAAAAAAAAABAAAAGQQAAAAAAAAZBAAAAAAAAAAAAAAAAPC/AQAAAAEAAABmBQAAAAAAAGYFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1429,
					1,
					"insert",
					{
						"characters": "tate.prog_"
					},
					"CgAAABYEAAAAAAAAFwQAAAAAAAAAAAAAFwQAAAAAAAAYBAAAAAAAAAAAAAAYBAAAAAAAABkEAAAAAAAAAAAAABkEAAAAAAAAGgQAAAAAAAAAAAAAGgQAAAAAAAAbBAAAAAAAAAAAAAAbBAAAAAAAABwEAAAAAAAAAAAAABwEAAAAAAAAHQQAAAAAAAAAAAAAHQQAAAAAAAAeBAAAAAAAAAAAAAAeBAAAAAAAAB8EAAAAAAAAAAAAAB8EAAAAAAAAIAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAFgQAAAAAAAAWBAAAAAAAAAAAAAAAAPC/AQAAAAEAAABjBQAAAAAAAGMFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1430,
					1,
					"insert",
					{
						"characters": "id"
					},
					"AgAAACAEAAAAAAAAIQQAAAAAAAAAAAAAIQQAAAAAAAAiBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAIAQAAAAAAAAgBAAAAAAAAAAAAAAAAPC/AQAAAAEAAABtBQAAAAAAAG0FAAAAAAAAAAAAAAAA8L8"
				],
				[
					1431,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAACIEAAAAAAAAIwQAAAAAAAAAAAAAIwQAAAAAAAAkBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAIgQAAAAAAAAiBAAAAAAAAAAAAAAAAPC/AQAAAAEAAABvBQAAAAAAAG8FAAAAAAAAAAAAAAAA8L8"
				],
				[
					1432,
					1,
					"insert",
					{
						"characters": " prog"
					},
					"BQAAACQEAAAAAAAAJQQAAAAAAAAAAAAAJQQAAAAAAAAmBAAAAAAAAAAAAAAmBAAAAAAAACcEAAAAAAAAAAAAACcEAAAAAAAAKAQAAAAAAAAAAAAAKAQAAAAAAAApBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAJAQAAAAAAAAkBAAAAAAAAAAAAAAAAPC/AQAAAAEAAABxBQAAAAAAAHEFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1443,
					1,
					"insert",
					{
						"characters": "state.prog_id"
					},
					"DgAAADACAAAAAAAAMQIAAAAAAAAAAAAAMQIAAAAAAAAxAgAAAAAAAAsAAABsZXQgcHJvZ19pZDECAAAAAAAAMgIAAAAAAAAAAAAAMgIAAAAAAAAzAgAAAAAAAAAAAAAzAgAAAAAAADQCAAAAAAAAAAAAADQCAAAAAAAANQIAAAAAAAAAAAAANQIAAAAAAAA2AgAAAAAAAAAAAAA2AgAAAAAAADcCAAAAAAAAAAAAADcCAAAAAAAAOAIAAAAAAAAAAAAAOAIAAAAAAAA5AgAAAAAAAAAAAAA5AgAAAAAAADoCAAAAAAAAAAAAADoCAAAAAAAAOwIAAAAAAAAAAAAAOwIAAAAAAAA8AgAAAAAAAAAAAAA8AgAAAAAAAD0CAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAOwIAAAAAAAAwAgAAAAAAAAAAAAAAAD1AAQAAAAEAAAB2BQAAAAAAAHYFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1446,
					1,
					"cut",
					null,
					"AQAAABMEAAAAAAAAEwQAAAAAAAAZAAAAICAgIHN0YXRlLnByb2dfaWQgPSBwcm9nCg",
					"AgAAAAAAAAABAAAAEwQAAAAAAAATBAAAAAAAAAAAAAAAAAAAAQAAAAEAAAB4BQAAAAAAAHgFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1447,
					1,
					"left_delete",
					null,
					"AQAAABIEAAAAAAAAEgQAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAEwQAAAAAAAATBAAAAAAAAAAAAAAAAPC/AQAAAAEAAABfBQAAAAAAAF8FAAAAAAAAAAAAAAAA8L8"
				],
				[
					1452,
					1,
					"left_delete",
					null,
					"AQAAAD0CAAAAAAAAPQIAAAAAAAABAAAAOg",
					"AgAAAAAAAAABAAAAPgIAAAAAAAA+AgAAAAAAAAAAAAAAAPC/AQAAAAEAAABeBQAAAAAAAF4FAAAAAAAAAAAAAAAA8L8"
				],
				[
					1455,
					4,
					"left_delete",
					null,
					"BAAAAEECAAAAAAAAQQIAAAAAAAABAAAAIEACAAAAAAAAQAIAAAAAAAABAAAAMj8CAAAAAAAAPwIAAAAAAAABAAAAMz4CAAAAAAAAPgIAAAAAAAABAAAAdQ",
					"AgAAAAAAAAABAAAAQgIAAAAAAABCAgAAAAAAAAAAAAAAAPC/AQAAAAEAAABdBQAAAAAAAF0FAAAAAAAAAAAAAAAA8L8"
				],
				[
					1469,
					1,
					"cut",
					null,
					"AQAAAKECAAAAAAAAoQIAAAAAAAAqAAAAICAgIHByaW50bG4hKCJlbmdpbmUgcHJvZyBpZCB7cHJvZ19pZH0iKTsK",
					"AgAAAAAAAAABAAAAxgIAAAAAAADGAgAAAAAAAAAAAAAAAPC/AQAAAAEAAABZBQAAAAAAAFkFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1473,
					1,
					"cut",
					null,
					"AQAAABYEAAAAAAAAFgQAAAAAAAAlAAAAICAgICAgICBnbG9iYWxfcHJvZyA9IFNvbWUocHJvZ19pZCk7Cg",
					"AgAAAAAAAAABAAAAOAQAAAAAAAA4BAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAvBQAAAAAAAC8FAAAAAAAAAAAAAAAA8L8"
				],
				[
					1478,
					1,
					"cut",
					null,
					"AQAAAAoBAAAAAAAACgEAAAAAAAAsAAAAc3RhdGljIG11dCBnbG9iYWxfcHJvZzogT3B0aW9uPHUzMj4gPSBOb25lOwo",
					"AgAAAAAAAAABAAAACgEAAAAAAAAKAQAAAAAAAAAAAAAAAAAAAQAAAAEAAAAKBQAAAAAAAAoFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1487,
					1,
					"insert",
					{
						"characters": "state:"
					},
					"BgAAAAYEAAAAAAAABwQAAAAAAAAAAAAABwQAAAAAAAAIBAAAAAAAAAAAAAAIBAAAAAAAAAkEAAAAAAAAAAAAAAkEAAAAAAAACgQAAAAAAAAAAAAACgQAAAAAAAALBAAAAAAAAAAAAAALBAAAAAAAAAwEAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAABgQAAAAAAAAGBAAAAAAAAAAAAAAAAPC/AQAAAAEAAADeBAAAAAAAAN4EAAAAAAAAAAAAAAAA8L8"
				],
				[
					1488,
					1,
					"insert",
					{
						"characters": " &mut"
					},
					"BQAAAAwEAAAAAAAADQQAAAAAAAAAAAAADQQAAAAAAAAOBAAAAAAAAAAAAAAOBAAAAAAAAA8EAAAAAAAAAAAAAA8EAAAAAAAAEAQAAAAAAAAAAAAAEAQAAAAAAAARBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAADAQAAAAAAAAMBAAAAAAAAAAAAAAAAPC/AQAAAAEAAADkBAAAAAAAAOQEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1489,
					1,
					"insert",
					{
						"characters": " State,"
					},
					"BwAAABEEAAAAAAAAEgQAAAAAAAAAAAAAEgQAAAAAAAATBAAAAAAAAAAAAAATBAAAAAAAABQEAAAAAAAAAAAAABQEAAAAAAAAFQQAAAAAAAAAAAAAFQQAAAAAAAAWBAAAAAAAAAAAAAAWBAAAAAAAABcEAAAAAAAAAAAAABcEAAAAAAAAGAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAEQQAAAAAAAARBAAAAAAAAAAAAAAAAPC/AQAAAAEAAADpBAAAAAAAAOkEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1490,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABgEAAAAAAAAGQQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAGAQAAAAAAAAYBAAAAAAAAAAAAAAAAPC/AQAAAAEAAADwBAAAAAAAAPAEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1496,
					1,
					"insert",
					{
						"characters": "state.prog_id"
					},
					"DgAAALEEAAAAAAAAsgQAAAAAAAAAAAAAsgQAAAAAAACyBAAAAAAAABQAAABnbG9iYWxfcHJvZy51bndyYXAoKbIEAAAAAAAAswQAAAAAAAAAAAAAswQAAAAAAAC0BAAAAAAAAAAAAAC0BAAAAAAAALUEAAAAAAAAAAAAALUEAAAAAAAAtgQAAAAAAAAAAAAAtgQAAAAAAAC3BAAAAAAAAAAAAAC3BAAAAAAAALgEAAAAAAAAAAAAALgEAAAAAAAAuQQAAAAAAAAAAAAAuQQAAAAAAAC6BAAAAAAAAAAAAAC6BAAAAAAAALsEAAAAAAAAAAAAALsEAAAAAAAAvAQAAAAAAAAAAAAAvAQAAAAAAAC9BAAAAAAAAAAAAAC9BAAAAAAAAL4EAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAxQQAAAAAAACxBAAAAAAAAAAAAAAAAPC/AQAAAAEAAADxBAAAAAAAAPEEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1501,
					1,
					"cut",
					null,
					"AQAAAN4AAAAAAAAA3gAAAAAAAAAsAAAAc3RhdGljIG11dCBnbG9iYWxfY3ViZTogT3B0aW9uPHUzMj4gPSBOb25lOwo",
					"AgAAAAAAAAABAAAA3gAAAAAAAADeAAAAAAAAAAAAAAAAAAAAAQAAAAEAAADqBAAAAAAAAOoEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1502,
					1,
					"left_delete",
					null,
					"AQAAAN0AAAAAAAAA3QAAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAA3gAAAAAAAADeAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAC+BAAAAAAAAL4EAAAAAAAAAAAAAAAA8L8"
				],
				[
					1508,
					3,
					"cut",
					null,
					"AwAAAIsDAAAAAAAAiwMAAAAAAAANAAAAICAgIHVuc2FmZSB7CosDAAAAAAAAiwMAAAAAAAAlAAAAICAgICAgICBnbG9iYWxfY3ViZSA9IFNvbWUoY3ViZS5pZCk7CosDAAAAAAAAiwMAAAAAAAAGAAAAICAgIH0K",
					"AgAAAAAAAAABAAAAlwMAAAAAAACXAwAAAAAAAAAAAAAAIGFAAQAAAAEAAAC9BAAAAAAAAL0EAAAAAAAAAAAAAAAA8L8"
				],
				[
					1511,
					1,
					"insert",
					{
						"characters": "\nstate.cube_id"
					},
					"DwAAAIkDAAAAAAAAigMAAAAAAAAAAAAAigMAAAAAAACOAwAAAAAAAAAAAACOAwAAAAAAAI8DAAAAAAAAAAAAAI8DAAAAAAAAkAMAAAAAAAAAAAAAkAMAAAAAAACRAwAAAAAAAAAAAACRAwAAAAAAAJIDAAAAAAAAAAAAAJIDAAAAAAAAkwMAAAAAAAAAAAAAkwMAAAAAAACUAwAAAAAAAAAAAACUAwAAAAAAAJUDAAAAAAAAAAAAAJUDAAAAAAAAlgMAAAAAAAAAAAAAlgMAAAAAAACXAwAAAAAAAAAAAACXAwAAAAAAAJgDAAAAAAAAAAAAAJgDAAAAAAAAmQMAAAAAAAAAAAAAmQMAAAAAAACaAwAAAAAAAAAAAACaAwAAAAAAAJsDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAiQMAAAAAAACJAwAAAAAAAP///////+9/AQAAAAEAAACFBAAAAAAAAIUEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1512,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAJsDAAAAAAAAnAMAAAAAAAAAAAAAnAMAAAAAAACdAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAmwMAAAAAAACbAwAAAAAAAAAAAAAAAPC/AQAAAAEAAACXBAAAAAAAAJcEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1513,
					1,
					"insert",
					{
						"characters": " cube.id;"
					},
					"CQAAAJ0DAAAAAAAAngMAAAAAAAAAAAAAngMAAAAAAACfAwAAAAAAAAAAAACfAwAAAAAAAKADAAAAAAAAAAAAAKADAAAAAAAAoQMAAAAAAAAAAAAAoQMAAAAAAACiAwAAAAAAAAAAAACiAwAAAAAAAKMDAAAAAAAAAAAAAKMDAAAAAAAApAMAAAAAAAAAAAAApAMAAAAAAAClAwAAAAAAAAAAAAClAwAAAAAAAKYDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAnQMAAAAAAACdAwAAAAAAAAAAAAAAAPC/AQAAAAEAAACZBAAAAAAAAJkEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1515,
					1,
					"cut",
					null,
					"AQAAAKcDAAAAAAAApwMAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAApwMAAAAAAACnAwAAAAAAAAAAAAAAQGlAAQAAAAEAAACiBAAAAAAAAKIEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1520,
					2,
					"cut",
					null,
					"AgAAAPcDAAAAAAAA9wMAAAAAAAANAAAAICAgIHVuc2FmZSB7CvcDAAAAAAAA9wMAAAAAAAAaAAAAICAgICAgICAvLyBjdWJlLnVud3JhcCgpOwo",
					"AgAAAAAAAAABAAAAAwQAAAAAAAADBAAAAAAAAAAAAAAAYHdAAQAAAAEAAAChBAAAAAAAAKEEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1522,
					1,
					"cut",
					null,
					"AQAAAHIEAAAAAAAAcgQAAAAAAAAGAAAAICAgIH0K",
					"AgAAAAAAAAABAAAAcgQAAAAAAAByBAAAAAAAAAAAAAAAAAAAAQAAAAEAAAB6BAAAAAAAAHoEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1523,
					2,
					"rust_fmt_format_buffer",
					null,
					"AgAAAPsDAAAAAAAA+wMAAAAAAAAEAAAAICAgICMEAAAAAAAAIwQAAAAAAAAEAAAAICAgIA",
					"AgAAAAAAAAABAAAAcgQAAAAAAAByBAAAAAAAAAAAAAAAAPC/AQAAAAEAAAB0BAAAAAAAAHQEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1529,
					1,
					"insert",
					{
						"characters": "state.cube_id"
					},
					"DgAAAEgEAAAAAAAASQQAAAAAAAAAAAAASQQAAAAAAABJBAAAAAAAABQAAABnbG9iYWxfY3ViZS51bndyYXAoKUkEAAAAAAAASgQAAAAAAAAAAAAASgQAAAAAAABLBAAAAAAAAAAAAABLBAAAAAAAAEwEAAAAAAAAAAAAAEwEAAAAAAAATQQAAAAAAAAAAAAATQQAAAAAAABOBAAAAAAAAAAAAABOBAAAAAAAAE8EAAAAAAAAAAAAAE8EAAAAAAAAUAQAAAAAAAAAAAAAUAQAAAAAAABRBAAAAAAAAAAAAABRBAAAAAAAAFIEAAAAAAAAAAAAAFIEAAAAAAAAUwQAAAAAAAAAAAAAUwQAAAAAAABUBAAAAAAAAAAAAABUBAAAAAAAAFUEAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAXAQAAAAAAABIBAAAAAAAAAAAAAAAAPC/AQAAAAEAAABsBAAAAAAAAGwEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1571,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAAPYDAAAAAAAA9wMAAAAAAAAAAAAA9wMAAAAAAAD7AwAAAAAAAAAAAAD7AwAAAAAAAPwDAAAAAAAAAAAAAPwDAAAAAAAAAAQAAAAAAAAAAAAA9wMAAAAAAAD3AwAAAAAAAAQAAAAgICAg",
					"AgAAAAAAAAABAAAA9gMAAAAAAAD2AwAAAAAAAP///////+9/AQAAAAEAAABlBAAAAAAAAGUEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1573,
					1,
					"reindent",
					null,
					"AQAAAPcDAAAAAAAA+wMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA9wMAAAAAAAD3AwAAAAAAAAAAAAAAAD1AAQAAAAEAAABrBAAAAAAAAGsEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1574,
					1,
					"insert",
					{
						"characters": "state.frame"
					},
					"DAAAAPsDAAAAAAAA/AMAAAAAAAAAAAAA/QMAAAAAAAD9AwAAAAAAAAQAAAAgICAg/AMAAAAAAAD9AwAAAAAAAAAAAAD9AwAAAAAAAP4DAAAAAAAAAAAAAP4DAAAAAAAA/wMAAAAAAAAAAAAA/wMAAAAAAAAABAAAAAAAAAAAAAAABAAAAAAAAAEEAAAAAAAAAAAAAAEEAAAAAAAAAgQAAAAAAAAAAAAAAgQAAAAAAAADBAAAAAAAAAAAAAADBAAAAAAAAAQEAAAAAAAAAAAAAAQEAAAAAAAABQQAAAAAAAAAAAAABQQAAAAAAAAGBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA+wMAAAAAAAD7AwAAAAAAAAAAAAAAAPC/AQAAAAEAAABvBAAAAAAAAG8EAAAAAAAAAAAAAAAA8L8"
				],
				[
					1575,
					1,
					"insert",
					{
						"characters": " +"
					},
					"AgAAAAYEAAAAAAAABwQAAAAAAAAAAAAABwQAAAAAAAAIBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAABgQAAAAAAAAGBAAAAAAAAAAAAAAAAPC/AQAAAAEAAAB2BAAAAAAAAHYEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1576,
					1,
					"left_delete",
					null,
					"AQAAAAcEAAAAAAAABwQAAAAAAAABAAAAKw",
					"AgAAAAAAAAABAAAACAQAAAAAAAAIBAAAAAAAAAAAAAAAAPC/AQAAAAEAAAB4BAAAAAAAAHgEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1577,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAAAcEAAAAAAAACAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAABwQAAAAAAAAHBAAAAAAAAAAAAAAAAPC/AQAAAAEAAAB3BAAAAAAAAHcEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1578,
					1,
					"insert",
					{
						"characters": " state.frame"
					},
					"DAAAAAgEAAAAAAAACQQAAAAAAAAAAAAACQQAAAAAAAAKBAAAAAAAAAAAAAAKBAAAAAAAAAsEAAAAAAAAAAAAAAsEAAAAAAAADAQAAAAAAAAAAAAADAQAAAAAAAANBAAAAAAAAAAAAAANBAAAAAAAAA4EAAAAAAAAAAAAAA4EAAAAAAAADwQAAAAAAAAAAAAADwQAAAAAAAAQBAAAAAAAAAAAAAAQBAAAAAAAABEEAAAAAAAAAAAAABEEAAAAAAAAEgQAAAAAAAAAAAAAEgQAAAAAAAATBAAAAAAAAAAAAAATBAAAAAAAABQEAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAACAQAAAAAAAAIBAAAAAAAAAAAAAAAAPC/AQAAAAEAAAB4BAAAAAAAAHgEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1579,
					1,
					"insert",
					{
						"characters": " +"
					},
					"AgAAABQEAAAAAAAAFQQAAAAAAAAAAAAAFQQAAAAAAAAWBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAFAQAAAAAAAAUBAAAAAAAAAAAAAAAAPC/AQAAAAEAAACEBAAAAAAAAIQEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1580,
					1,
					"insert",
					{
						"characters": " 1;"
					},
					"AwAAABYEAAAAAAAAFwQAAAAAAAAAAAAAFwQAAAAAAAAYBAAAAAAAAAAAAAAYBAAAAAAAABkEAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAFgQAAAAAAAAWBAAAAAAAAAAAAAAAAPC/AQAAAAEAAACGBAAAAAAAAIYEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1609,
					1,
					"cut",
					null,
					"AQAAAE0CAAAAAAAATQIAAAAAAABZAQAAbGV0IG11dCBjdWJlX21lc2g6IFZlYzxWZWNUaHJlZUZsb2F0PiA9IHZlYyFbXTsKICAgIGN1YmVfbWVzaC5wdXNoKFZlY1RocmVlRmxvYXQ6Om5ldygtMC41LCAtMC41LCAwLjApKTsKICAgIGN1YmVfbWVzaC5wdXNoKFZlY1RocmVlRmxvYXQ6Om5ldygwLjUsIC0wLjUsIDAuMCkpOwogICAgY3ViZV9tZXNoLnB1c2goVmVjVGhyZWVGbG9hdDo6bmV3KDAuMCwgMC41LCAwLjApKTsKCiAgICBsZXQgbXV0IGN1YmUgPSByZW5kZXI6OnZhbzo6VmFvOjpuZXcocmVuZGVyX2FwaSk7CiAgICBjdWJlLnVwbG9hZF92MyhyZW5kZXJfYXBpLCBjdWJlX21lc2gsIDApOwogICAgc3RhdGUuY3ViZV9pZCA9IGN1YmUuaWQ7",
					"AgAAAAAAAAABAAAATQIAAAAAAACmAwAAAAAAAP///////+9/AQAAAAEAAACJBAAAAAAAAIkEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1610,
					2,
					"left_delete",
					null,
					"AgAAAEkCAAAAAAAASQIAAAAAAAAEAAAAICAgIEgCAAAAAAAASAIAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAATQIAAAAAAABNAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAwAwAAAAAAADADAAAAAAAAAAAAAAAA8L8"
				],
				[
					1611,
					2,
					"rust_fmt_format_buffer",
					null,
					"AQAAAEgCAAAAAAAASAIAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAASAIAAAAAAABIAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAArAwAAAAAAACsDAAAAAAAAAAAAAAAA8L8"
				],
				[
					1615,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAAOcCAAAAAAAA6AIAAAAAAAAAAAAA6AIAAAAAAADsAgAAAAAAAAAAAADsAgAAAAAAAO0CAAAAAAAAAAAAAO0CAAAAAAAA8QIAAAAAAAAAAAAA6AIAAAAAAADoAgAAAAAAAAQAAAAgICAg",
					"AgAAAAAAAAABAAAA5wIAAAAAAADnAgAAAAAAAP///////+9/AQAAAAEAAAAqAwAAAAAAACoDAAAAAAAAAAAAAAAA8L8"
				],
				[
					1616,
					1,
					"paste",
					null,
					"AQAAAO0CAAAAAAAARgQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA7QIAAAAAAADtAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAwAwAAAAAAADADAAAAAAAAAAAAAAAA8L8"
				],
				[
					1617,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAEYEAAAAAAAARwQAAAAAAAAAAAAARwQAAAAAAABLBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAARgQAAAAAAABGBAAAAAAAAAAAAAAAAPC/AQAAAAEAAACJBAAAAAAAAIkEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1618,
					2,
					"rust_fmt_format_buffer",
					null,
					"AQAAAEcEAAAAAAAARwQAAAAAAAAEAAAAICAgIA",
					"AgAAAAAAAAABAAAASwQAAAAAAABLBAAAAAAAAAAAAAAAAPC/AQAAAAEAAACOBAAAAAAAAI4EAAAAAAAAAAAAAAAA8L8"
				],
				[
					1633,
					1,
					"insert",
					{
						"characters": " +"
					},
					"AgAAAEcDAAAAAAAASAMAAAAAAAAAAAAASAMAAAAAAABJAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAARwMAAAAAAABHAwAAAAAAAAAAAAAAAPC/AQAAAAEAAACKBAAAAAAAAIoEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1634,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEkDAAAAAAAASgMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAASQMAAAAAAABJAwAAAAAAAAAAAAAAAPC/AQAAAAEAAACMBAAAAAAAAIwEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1635,
					1,
					"insert",
					{
						"characters": "state"
					},
					"BQAAAEoDAAAAAAAASwMAAAAAAAAAAAAASwMAAAAAAABMAwAAAAAAAAAAAABMAwAAAAAAAE0DAAAAAAAAAAAAAE0DAAAAAAAATgMAAAAAAAAAAAAATgMAAAAAAABPAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAASgMAAAAAAABKAwAAAAAAAAAAAAAAAPC/AQAAAAEAAACNBAAAAAAAAI0EAAAAAAAAAAAAAAAA8L8"
				],
				[
					1636,
					5,
					"left_delete",
					null,
					"BQAAAE4DAAAAAAAATgMAAAAAAAABAAAAZU0DAAAAAAAATQMAAAAAAAABAAAAdEwDAAAAAAAATAMAAAAAAAABAAAAYUsDAAAAAAAASwMAAAAAAAABAAAAdEoDAAAAAAAASgMAAAAAAAABAAAAcw",
					"AgAAAAAAAAABAAAATwMAAAAAAABPAwAAAAAAAAAAAAAAAPC/AQAAAAEAAACSBAAAAAAAAJIEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1637,
					1,
					"insert",
					{
						"characters": "("
					},
					"AQAAAEoDAAAAAAAASwMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAASgMAAAAAAABKAwAAAAAAAAAAAAAAAPC/AQAAAAEAAACNBAAAAAAAAI0EAAAAAAAAAAAAAAAA8L8"
				],
				[
					1638,
					4,
					"left_delete",
					null,
					"BAAAAEoDAAAAAAAASgMAAAAAAAABAAAAKEkDAAAAAAAASQMAAAAAAAABAAAAIEgDAAAAAAAASAMAAAAAAAABAAAAK0cDAAAAAAAARwMAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAASwMAAAAAAABLAwAAAAAAAAAAAAAAAPC/AQAAAAEAAACOBAAAAAAAAI4EAAAAAAAAAAAAAAAA8L8"
				],
				[
					1641,
					1,
					"insert",
					{
						"characters": "\nfloat"
					},
					"BwAAABwDAAAAAAAAHQMAAAAAAAAAAAAAHQMAAAAAAAAhAwAAAAAAAAAAAAAhAwAAAAAAACIDAAAAAAAAAAAAACIDAAAAAAAAIwMAAAAAAAAAAAAAIwMAAAAAAAAkAwAAAAAAAAAAAAAkAwAAAAAAACUDAAAAAAAAAAAAACUDAAAAAAAAJgMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAHAMAAAAAAAAcAwAAAAAAAP///////+9/AQAAAAEAAACKBAAAAAAAAIoEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1642,
					5,
					"left_delete",
					null,
					"BQAAACUDAAAAAAAAJQMAAAAAAAABAAAAdCQDAAAAAAAAJAMAAAAAAAABAAAAYSMDAAAAAAAAIwMAAAAAAAABAAAAbyIDAAAAAAAAIgMAAAAAAAABAAAAbCEDAAAAAAAAIQMAAAAAAAABAAAAZg",
					"AgAAAAAAAAABAAAAJgMAAAAAAAAmAwAAAAAAAAAAAAAAAPC/AQAAAAEAAACUBAAAAAAAAJQEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1643,
					1,
					"insert",
					{
						"characters": "let"
					},
					"AwAAACEDAAAAAAAAIgMAAAAAAAAAAAAAIgMAAAAAAAAjAwAAAAAAAAAAAAAjAwAAAAAAACQDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAIQMAAAAAAAAhAwAAAAAAAAAAAAAAAPC/AQAAAAEAAACPBAAAAAAAAI8EAAAAAAAAAAAAAAAA8L8"
				],
				[
					1644,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACQDAAAAAAAAJQMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAJAMAAAAAAAAkAwAAAAAAAAAAAAAAAPC/AQAAAAEAAACSBAAAAAAAAJIEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1645,
					1,
					"cut",
					null,
					"AQAAAB0DAAAAAAAAHQMAAAAAAAAJAAAAICAgIGxldCAK",
					"AgAAAAAAAAABAAAAJQMAAAAAAAAlAwAAAAAAAAAAAAAAAPC/AQAAAAEAAACTBAAAAAAAAJMEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1651,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAOgCAAAAAAAA6QIAAAAAAAAAAAAA6QIAAAAAAADqAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA6AIAAAAAAADoAgAAAAAAAAAAAAAAAAAAAQAAAAEAAACKBAAAAAAAAIoEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1653,
					1,
					"reindent",
					null,
					"AQAAAOkCAAAAAAAA7QIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA6QIAAAAAAADpAgAAAAAAAAAAAAAAAAAAAQAAAAEAAACMBAAAAAAAAIwEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1654,
					1,
					"insert",
					{
						"characters": "lset"
					},
					"BAAAAO0CAAAAAAAA7gIAAAAAAAAAAAAA7gIAAAAAAADvAgAAAAAAAAAAAADvAgAAAAAAAPACAAAAAAAAAAAAAPACAAAAAAAA8QIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA7QIAAAAAAADtAgAAAAAAAAAAAAAAAPC/AQAAAAEAAACQBAAAAAAAAJAEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1656,
					1,
					"cut",
					null,
					"AQAAALwCAAAAAAAAvAIAAAAAAAAsAAAAICAgIGxldCBpbmRlY2llczogVmVjPHUzMj4gPSB2ZWMhWzAsIDEsIDJdOwo",
					"AgAAAAAAAAABAAAAxAIAAAAAAADEAgAAAAAAAAAAAAAAAE1AAQAAAAEAAACUBAAAAAAAAJQEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1657,
					1,
					"left_delete",
					null,
					"AQAAALsCAAAAAAAAuwIAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAvAIAAAAAAAC8AgAAAAAAAAAAAAAAAPC/AQAAAAEAAABoBAAAAAAAAGgEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1659,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAACQEAAAAAAAAJQQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAJAQAAAAAAAAkBAAAAAAAAAAAAAAAAPC/AQAAAAEAAABnBAAAAAAAAGcEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1660,
					1,
					"paste",
					null,
					"AQAAACUEAAAAAAAAUQQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAJQQAAAAAAAAlBAAAAAAAAAAAAAAAAPC/AQAAAAEAAABoBAAAAAAAAGgEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1663,
					1,
					"cut",
					null,
					"AQAAAFEEAAAAAAAAUQQAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAUQQAAAAAAABRBAAAAAAAAAAAAAAAAPC/AQAAAAEAAACUBAAAAAAAAJQEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1667,
					3,
					"left_delete",
					null,
					"AwAAAMMCAAAAAAAAwwIAAAAAAAABAAAAdMICAAAAAAAAwgIAAAAAAAABAAAAZcECAAAAAAAAwQIAAAAAAAABAAAAcw",
					"AgAAAAAAAAABAAAAxAIAAAAAAADEAgAAAAAAAP///////+9/AQAAAAEAAACTBAAAAAAAAJMEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1668,
					1,
					"insert",
					{
						"characters": "etoffset"
					},
					"CAAAAMECAAAAAAAAwgIAAAAAAAAAAAAAwgIAAAAAAADDAgAAAAAAAAAAAADDAgAAAAAAAMQCAAAAAAAAAAAAAMQCAAAAAAAAxQIAAAAAAAAAAAAAxQIAAAAAAADGAgAAAAAAAAAAAADGAgAAAAAAAMcCAAAAAAAAAAAAAMcCAAAAAAAAyAIAAAAAAAAAAAAAyAIAAAAAAADJAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAwQIAAAAAAADBAgAAAAAAAAAAAAAAAPC/AQAAAAEAAACQBAAAAAAAAJAEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1669,
					6,
					"left_delete",
					null,
					"BgAAAMgCAAAAAAAAyAIAAAAAAAABAAAAdMcCAAAAAAAAxwIAAAAAAAABAAAAZcYCAAAAAAAAxgIAAAAAAAABAAAAc8UCAAAAAAAAxQIAAAAAAAABAAAAZsQCAAAAAAAAxAIAAAAAAAABAAAAZsMCAAAAAAAAwwIAAAAAAAABAAAAbw",
					"AgAAAAAAAAABAAAAyQIAAAAAAADJAgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYBAAAAAAAAJgEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1670,
					1,
					"insert",
					{
						"characters": " ff"
					},
					"AwAAAMMCAAAAAAAAxAIAAAAAAAAAAAAAxAIAAAAAAADFAgAAAAAAAAAAAADFAgAAAAAAAMYCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAwwIAAAAAAADDAgAAAAAAAAAAAAAAAPC/AQAAAAEAAACSBAAAAAAAAJIEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1671,
					2,
					"left_delete",
					null,
					"AgAAAMUCAAAAAAAAxQIAAAAAAAABAAAAZsQCAAAAAAAAxAIAAAAAAAABAAAAZg",
					"AgAAAAAAAAABAAAAxgIAAAAAAADGAgAAAAAAAAAAAAAAAPC/AQAAAAEAAACVBAAAAAAAAJUEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1672,
					1,
					"insert",
					{
						"characters": "f"
					},
					"AQAAAMQCAAAAAAAAxQIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAxAIAAAAAAADEAgAAAAAAAAAAAAAAAPC/AQAAAAEAAACTBAAAAAAAAJMEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1673,
					1,
					"left_delete",
					null,
					"AQAAAMQCAAAAAAAAxAIAAAAAAAABAAAAZg",
					"AgAAAAAAAAABAAAAxQIAAAAAAADFAgAAAAAAAAAAAAAAAPC/AQAAAAEAAACUBAAAAAAAAJQEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1674,
					1,
					"insert",
					{
						"characters": "offset:"
					},
					"BwAAAMQCAAAAAAAAxQIAAAAAAAAAAAAAxQIAAAAAAADGAgAAAAAAAAAAAADGAgAAAAAAAMcCAAAAAAAAAAAAAMcCAAAAAAAAyAIAAAAAAAAAAAAAyAIAAAAAAADJAgAAAAAAAAAAAADJAgAAAAAAAMoCAAAAAAAAAAAAAMoCAAAAAAAAywIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAxAIAAAAAAADEAgAAAAAAAAAAAAAAAPC/AQAAAAEAAACTBAAAAAAAAJMEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1675,
					1,
					"insert",
					{
						"characters": " f64"
					},
					"BAAAAMsCAAAAAAAAzAIAAAAAAAAAAAAAzAIAAAAAAADNAgAAAAAAAAAAAADNAgAAAAAAAM4CAAAAAAAAAAAAAM4CAAAAAAAAzwIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAywIAAAAAAADLAgAAAAAAAAAAAAAAAPC/AQAAAAEAAACaBAAAAAAAAJoEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1676,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAM8CAAAAAAAA0AIAAAAAAAAAAAAA0AIAAAAAAADRAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAzwIAAAAAAADPAgAAAAAAAAAAAAAAAPC/AQAAAAEAAACeBAAAAAAAAJ4EAAAAAAAAAAAAAAAA8L8"
				],
				[
					1677,
					1,
					"insert",
					{
						"characters": " state.frame"
					},
					"DAAAANECAAAAAAAA0gIAAAAAAAAAAAAA0gIAAAAAAADTAgAAAAAAAAAAAADTAgAAAAAAANQCAAAAAAAAAAAAANQCAAAAAAAA1QIAAAAAAAAAAAAA1QIAAAAAAADWAgAAAAAAAAAAAADWAgAAAAAAANcCAAAAAAAAAAAAANcCAAAAAAAA2AIAAAAAAAAAAAAA2AIAAAAAAADZAgAAAAAAAAAAAADZAgAAAAAAANoCAAAAAAAAAAAAANoCAAAAAAAA2wIAAAAAAAAAAAAA2wIAAAAAAADcAgAAAAAAAAAAAADcAgAAAAAAAN0CAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0QIAAAAAAADRAgAAAAAAAAAAAAAAAPC/AQAAAAEAAACgBAAAAAAAAKAEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1678,
					1,
					"insert",
					{
						"characters": " *"
					},
					"AgAAAN0CAAAAAAAA3gIAAAAAAAAAAAAA3gIAAAAAAADfAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA3QIAAAAAAADdAgAAAAAAAAAAAAAAAPC/AQAAAAEAAACsBAAAAAAAAKwEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1679,
					1,
					"insert",
					{
						"characters": " 0.001f;"
					},
					"CAAAAN8CAAAAAAAA4AIAAAAAAAAAAAAA4AIAAAAAAADhAgAAAAAAAAAAAADhAgAAAAAAAOICAAAAAAAAAAAAAOICAAAAAAAA4wIAAAAAAAAAAAAA4wIAAAAAAADkAgAAAAAAAAAAAADkAgAAAAAAAOUCAAAAAAAAAAAAAOUCAAAAAAAA5gIAAAAAAAAAAAAA5gIAAAAAAADnAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA3wIAAAAAAADfAgAAAAAAAAAAAAAAAPC/AQAAAAEAAACuBAAAAAAAAK4EAAAAAAAAAAAAAAAA8L8"
				],
				[
					1686,
					1,
					"left_delete",
					null,
					"AQAAAOUCAAAAAAAA5QIAAAAAAAABAAAAZg",
					"AgAAAAAAAAABAAAA5gIAAAAAAADmAgAAAAAAAAAAAAAA4HJAAQAAAAEAAAC2BAAAAAAAALYEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1689,
					1,
					"insert",
					{
						"characters": " +"
					},
					"AgAAAEYDAAAAAAAARwMAAAAAAAAAAAAARwMAAAAAAABIAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAARgMAAAAAAABGAwAAAAAAAAAAAAAAAPC/AQAAAAEAAAC1BAAAAAAAALUEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1690,
					1,
					"insert",
					{
						"characters": " fo"
					},
					"AwAAAEgDAAAAAAAASQMAAAAAAAAAAAAASQMAAAAAAABKAwAAAAAAAAAAAABKAwAAAAAAAEsDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAASAMAAAAAAABIAwAAAAAAAAAAAAAAAPC/AQAAAAEAAAC3BAAAAAAAALcEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1691,
					2,
					"left_delete",
					null,
					"AgAAAEoDAAAAAAAASgMAAAAAAAABAAAAb0kDAAAAAAAASQMAAAAAAAABAAAAZg",
					"AgAAAAAAAAABAAAASwMAAAAAAABLAwAAAAAAAAAAAAAAAPC/AQAAAAEAAAC6BAAAAAAAALoEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1692,
					1,
					"insert",
					{
						"characters": "offset"
					},
					"BgAAAEkDAAAAAAAASgMAAAAAAAAAAAAASgMAAAAAAABLAwAAAAAAAAAAAABLAwAAAAAAAEwDAAAAAAAAAAAAAEwDAAAAAAAATQMAAAAAAAAAAAAATQMAAAAAAABOAwAAAAAAAAAAAABOAwAAAAAAAE8DAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAASQMAAAAAAABJAwAAAAAAAAAAAAAAAPC/AQAAAAEAAAC4BAAAAAAAALgEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1694,
					1,
					"insert",
					{
						"characters": " +"
					},
					"AgAAAFUDAAAAAAAAVgMAAAAAAAAAAAAAVgMAAAAAAABXAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAVQMAAAAAAABVAwAAAAAAAAAAAAAAAPC/AQAAAAEAAAC+BAAAAAAAAL4EAAAAAAAAAAAAAAAA8L8"
				],
				[
					1695,
					1,
					"insert",
					{
						"characters": " offset"
					},
					"BwAAAFcDAAAAAAAAWAMAAAAAAAAAAAAAWAMAAAAAAABZAwAAAAAAAAAAAABZAwAAAAAAAFoDAAAAAAAAAAAAAFoDAAAAAAAAWwMAAAAAAAAAAAAAWwMAAAAAAABcAwAAAAAAAAAAAABcAwAAAAAAAF0DAAAAAAAAAAAAAF0DAAAAAAAAXgMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAVwMAAAAAAABXAwAAAAAAAAAAAAAAAPC/AQAAAAEAAADABAAAAAAAAMAEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1699,
					1,
					"insert",
					{
						"characters": " +"
					},
					"AgAAAJYDAAAAAAAAlwMAAAAAAAAAAAAAlwMAAAAAAACYAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAlgMAAAAAAACWAwAAAAAAAAAAAAAAAPC/AQAAAAEAAADHBAAAAAAAAMcEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1700,
					1,
					"insert",
					{
						"characters": " offset"
					},
					"BwAAAJgDAAAAAAAAmQMAAAAAAAAAAAAAmQMAAAAAAACaAwAAAAAAAAAAAACaAwAAAAAAAJsDAAAAAAAAAAAAAJsDAAAAAAAAnAMAAAAAAAAAAAAAnAMAAAAAAACdAwAAAAAAAAAAAACdAwAAAAAAAJ4DAAAAAAAAAAAAAJ4DAAAAAAAAnwMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAmAMAAAAAAACYAwAAAAAAAAAAAAAAAPC/AQAAAAEAAADJBAAAAAAAAMkEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1703,
					1,
					"insert",
					{
						"characters": " +"
					},
					"AgAAAJADAAAAAAAAkQMAAAAAAAAAAAAAkQMAAAAAAACSAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAkAMAAAAAAACQAwAAAAAAAAAAAAAAAPC/AQAAAAEAAADQBAAAAAAAANAEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1704,
					1,
					"insert",
					{
						"characters": " offset"
					},
					"BwAAAJIDAAAAAAAAkwMAAAAAAAAAAAAAkwMAAAAAAACUAwAAAAAAAAAAAACUAwAAAAAAAJUDAAAAAAAAAAAAAJUDAAAAAAAAlgMAAAAAAAAAAAAAlgMAAAAAAACXAwAAAAAAAAAAAACXAwAAAAAAAJgDAAAAAAAAAAAAAJgDAAAAAAAAmQMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAkgMAAAAAAACSAwAAAAAAAAAAAAAAAPC/AQAAAAEAAADSBAAAAAAAANIEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1707,
					1,
					"insert",
					{
						"characters": " +"
					},
					"AgAAAN8DAAAAAAAA4AMAAAAAAAAAAAAA4AMAAAAAAADhAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA3wMAAAAAAADfAwAAAAAAAAAAAAAAAPC/AQAAAAEAAADZBAAAAAAAANkEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1708,
					1,
					"insert",
					{
						"characters": " offset"
					},
					"BwAAAOEDAAAAAAAA4gMAAAAAAAAAAAAA4gMAAAAAAADjAwAAAAAAAAAAAADjAwAAAAAAAOQDAAAAAAAAAAAAAOQDAAAAAAAA5QMAAAAAAAAAAAAA5QMAAAAAAADmAwAAAAAAAAAAAADmAwAAAAAAAOcDAAAAAAAAAAAAAOcDAAAAAAAA6AMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA4QMAAAAAAADhAwAAAAAAAAAAAAAAAPC/AQAAAAEAAADbBAAAAAAAANsEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1713,
					1,
					"insert",
					{
						"characters": "("
					},
					"AQAAANICAAAAAAAA0wIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0gIAAAAAAADSAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADiBAAAAAAAAOIEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1715,
					1,
					"insert",
					{
						"characters": " as"
					},
					"AwAAAN4CAAAAAAAA3wIAAAAAAAAAAAAA3wIAAAAAAADgAgAAAAAAAAAAAADgAgAAAAAAAOECAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA3gIAAAAAAADeAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADjBAAAAAAAAOMEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1716,
					1,
					"insert",
					{
						"characters": " f4"
					},
					"AwAAAOECAAAAAAAA4gIAAAAAAAAAAAAA4gIAAAAAAADjAgAAAAAAAAAAAADjAgAAAAAAAOQCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA4QIAAAAAAADhAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADmBAAAAAAAAOYEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1717,
					1,
					"left_delete",
					null,
					"AQAAAOMCAAAAAAAA4wIAAAAAAAABAAAANA",
					"AgAAAAAAAAABAAAA5AIAAAAAAADkAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADpBAAAAAAAAOkEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1718,
					1,
					"insert",
					{
						"characters": "64)"
					},
					"AwAAAOMCAAAAAAAA5AIAAAAAAAAAAAAA5AIAAAAAAADlAgAAAAAAAAAAAADlAgAAAAAAAOYCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA4wIAAAAAAADjAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADoBAAAAAAAAOgEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1750,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAALsCAAAAAAAAvAIAAAAAAAAAAAAAvAIAAAAAAAC9AgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAuwIAAAAAAAC7AgAAAAAAAAAAAAAAAAAAAQAAAAEAAADrBAAAAAAAAOsEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1752,
					1,
					"reindent",
					null,
					"AQAAALwCAAAAAAAAwAIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAvAIAAAAAAAC8AgAAAAAAAAAAAAAAAAAAAQAAAAEAAADtBAAAAAAAAO0EAAAAAAAAAAAAAAAA8L8"
				],
				[
					1753,
					1,
					"insert",
					{
						"characters": "Matr"
					},
					"BAAAAMACAAAAAAAAwQIAAAAAAAAAAAAAwQIAAAAAAADCAgAAAAAAAAAAAADCAgAAAAAAAMMCAAAAAAAAAAAAAMMCAAAAAAAAxAIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAwAIAAAAAAADAAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADxBAAAAAAAAPEEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1754,
					4,
					"left_delete",
					null,
					"BAAAAMMCAAAAAAAAwwIAAAAAAAABAAAAcsICAAAAAAAAwgIAAAAAAAABAAAAdMECAAAAAAAAwQIAAAAAAAABAAAAYcACAAAAAAAAwAIAAAAAAAABAAAATQ",
					"AgAAAAAAAAABAAAAxAIAAAAAAADEAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAD1BAAAAAAAAPUEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1755,
					1,
					"insert",
					{
						"characters": "let"
					},
					"AwAAAMACAAAAAAAAwQIAAAAAAAAAAAAAwQIAAAAAAADCAgAAAAAAAAAAAADCAgAAAAAAAMMCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAwAIAAAAAAADAAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADxBAAAAAAAAPEEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1756,
					1,
					"insert",
					{
						"characters": " mat"
					},
					"BAAAAMMCAAAAAAAAxAIAAAAAAAAAAAAAxAIAAAAAAADFAgAAAAAAAAAAAADFAgAAAAAAAMYCAAAAAAAAAAAAAMYCAAAAAAAAxwIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAwwIAAAAAAADDAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAD0BAAAAAAAAPQEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1757,
					3,
					"left_delete",
					null,
					"AwAAAMYCAAAAAAAAxgIAAAAAAAABAAAAdMUCAAAAAAAAxQIAAAAAAAABAAAAYcQCAAAAAAAAxAIAAAAAAAABAAAAbQ",
					"AgAAAAAAAAABAAAAxwIAAAAAAADHAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAD4BAAAAAAAAPgEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1758,
					1,
					"insert",
					{
						"characters": "t"
					},
					"AQAAAMQCAAAAAAAAxQIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAxAIAAAAAAADEAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAD1BAAAAAAAAPUEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1759,
					1,
					"left_delete",
					null,
					"AQAAAMQCAAAAAAAAxAIAAAAAAAABAAAAdA",
					"AgAAAAAAAAABAAAAxQIAAAAAAADFAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAD2BAAAAAAAAPYEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1760,
					1,
					"insert",
					{
						"characters": "mat"
					},
					"AwAAAMQCAAAAAAAAxQIAAAAAAAAAAAAAxQIAAAAAAADGAgAAAAAAAAAAAADGAgAAAAAAAMcCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAxAIAAAAAAADEAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAD1BAAAAAAAAPUEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1761,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAMcCAAAAAAAAyAIAAAAAAAAAAAAAyAIAAAAAAADJAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAxwIAAAAAAADHAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAD4BAAAAAAAAPgEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1762,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMkCAAAAAAAAygIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAyQIAAAAAAADJAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAD6BAAAAAAAAPoEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1763,
					2,
					"left_delete",
					null,
					"AgAAAMkCAAAAAAAAyQIAAAAAAAABAAAAIMgCAAAAAAAAyAIAAAAAAAABAAAAPQ",
					"AgAAAAAAAAABAAAAygIAAAAAAADKAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAD7BAAAAAAAAPsEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1764,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAAMgCAAAAAAAAyQIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAyAIAAAAAAADIAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAD5BAAAAAAAAPkEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1765,
					1,
					"insert",
					{
						"characters": " MatrisFou"
					},
					"CgAAAMkCAAAAAAAAygIAAAAAAAAAAAAAygIAAAAAAADLAgAAAAAAAAAAAADLAgAAAAAAAMwCAAAAAAAAAAAAAMwCAAAAAAAAzQIAAAAAAAAAAAAAzQIAAAAAAADOAgAAAAAAAAAAAADOAgAAAAAAAM8CAAAAAAAAAAAAAM8CAAAAAAAA0AIAAAAAAAAAAAAA0AIAAAAAAADRAgAAAAAAAAAAAADRAgAAAAAAANICAAAAAAAAAAAAANICAAAAAAAA0wIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAyQIAAAAAAADJAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAD6BAAAAAAAAPoEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1767,
					1,
					"insert",
					{
						"characters": "MatriFour"
					},
					"CgAAAMoCAAAAAAAAywIAAAAAAAAAAAAAywIAAAAAAADLAgAAAAAAAAkAAABNYXRyaXNGb3XLAgAAAAAAAMwCAAAAAAAAAAAAAMwCAAAAAAAAzQIAAAAAAAAAAAAAzQIAAAAAAADOAgAAAAAAAAAAAADOAgAAAAAAAM8CAAAAAAAAAAAAAM8CAAAAAAAA0AIAAAAAAAAAAAAA0AIAAAAAAADRAgAAAAAAAAAAAADRAgAAAAAAANICAAAAAAAAAAAAANICAAAAAAAA0wIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0wIAAAAAAADKAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAEBQAAAAAAAAQFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1769,
					1,
					"insert",
					{
						"characters": "MatrixFourFour::new"
					},
					"FAAAAMoCAAAAAAAAywIAAAAAAAAAAAAAywIAAAAAAADLAgAAAAAAAAkAAABNYXRyaUZvdXLLAgAAAAAAAMwCAAAAAAAAAAAAAMwCAAAAAAAAzQIAAAAAAAAAAAAAzQIAAAAAAADOAgAAAAAAAAAAAADOAgAAAAAAAM8CAAAAAAAAAAAAAM8CAAAAAAAA0AIAAAAAAAAAAAAA0AIAAAAAAADRAgAAAAAAAAAAAADRAgAAAAAAANICAAAAAAAAAAAAANICAAAAAAAA0wIAAAAAAAAAAAAA0wIAAAAAAADUAgAAAAAAAAAAAADUAgAAAAAAANUCAAAAAAAAAAAAANUCAAAAAAAA1gIAAAAAAAAAAAAA1gIAAAAAAADXAgAAAAAAAAAAAADXAgAAAAAAANgCAAAAAAAAAAAAANgCAAAAAAAA2QIAAAAAAAAAAAAA2QIAAAAAAADaAgAAAAAAAAAAAADaAgAAAAAAANsCAAAAAAAAAAAAANsCAAAAAAAA3AIAAAAAAAAAAAAA3AIAAAAAAADdAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0wIAAAAAAADKAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAEBQAAAAAAAAQFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1770,
					1,
					"insert",
					{
						"characters": "_translation"
					},
					"DAAAAN0CAAAAAAAA3gIAAAAAAAAAAAAA3gIAAAAAAADfAgAAAAAAAAAAAADfAgAAAAAAAOACAAAAAAAAAAAAAOACAAAAAAAA4QIAAAAAAAAAAAAA4QIAAAAAAADiAgAAAAAAAAAAAADiAgAAAAAAAOMCAAAAAAAAAAAAAOMCAAAAAAAA5AIAAAAAAAAAAAAA5AIAAAAAAADlAgAAAAAAAAAAAADlAgAAAAAAAOYCAAAAAAAAAAAAAOYCAAAAAAAA5wIAAAAAAAAAAAAA5wIAAAAAAADoAgAAAAAAAAAAAADoAgAAAAAAAOkCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA3QIAAAAAAADdAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAOBQAAAAAAAA4FAAAAAAAAAAAAAAAA8L8"
				],
				[
					1772,
					1,
					"insert",
					{
						"characters": "ne_"
					},
					"BAAAANoCAAAAAAAA2wIAAAAAAAAAAAAA2wIAAAAAAADbAgAAAAAAAA8AAABuZXdfdHJhbnNsYXRpb27bAgAAAAAAANwCAAAAAAAAAAAAANwCAAAAAAAA3QIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA6QIAAAAAAADaAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAaBQAAAAAAABoFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1773,
					1,
					"left_delete",
					null,
					"AQAAANwCAAAAAAAA3AIAAAAAAAABAAAAXw",
					"AgAAAAAAAAABAAAA3QIAAAAAAADdAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAOBQAAAAAAAA4FAAAAAAAAAAAAAAAA8L8"
				],
				[
					1774,
					1,
					"insert",
					{
						"characters": "w_identity"
					},
					"CgAAANwCAAAAAAAA3QIAAAAAAAAAAAAA3QIAAAAAAADeAgAAAAAAAAAAAADeAgAAAAAAAN8CAAAAAAAAAAAAAN8CAAAAAAAA4AIAAAAAAAAAAAAA4AIAAAAAAADhAgAAAAAAAAAAAADhAgAAAAAAAOICAAAAAAAAAAAAAOICAAAAAAAA4wIAAAAAAAAAAAAA4wIAAAAAAADkAgAAAAAAAAAAAADkAgAAAAAAAOUCAAAAAAAAAAAAAOUCAAAAAAAA5gIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA3AIAAAAAAADcAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAANBQAAAAAAAA0FAAAAAAAAAAAAAAAA8L8"
				],
				[
					1775,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAOYCAAAAAAAA6AIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA5gIAAAAAAADmAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAXBQAAAAAAABcFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1776,
					1,
					"insert",
					{
						"characters": "r;"
					},
					"AgAAAOcCAAAAAAAA6AIAAAAAAAAAAAAA6AIAAAAAAADpAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA5wIAAAAAAADnAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAZBQAAAAAAABkFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1779,
					2,
					"left_delete",
					null,
					"AgAAAOgCAAAAAAAA6AIAAAAAAAABAAAAO+cCAAAAAAAA5wIAAAAAAAABAAAAcg",
					"AgAAAAAAAAABAAAA6QIAAAAAAADpAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAbBQAAAAAAABsFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1781,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAOgCAAAAAAAA6QIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA6AIAAAAAAADoAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAZBQAAAAAAABkFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1791,
					1,
					"insert",
					{
						"characters": "\nuse"
					},
					"BAAAANwAAAAAAAAA3QAAAAAAAAAAAAAA3QAAAAAAAADeAAAAAAAAAAAAAADeAAAAAAAAAN8AAAAAAAAAAAAAAN8AAAAAAAAA4AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA3AAAAAAAAADcAAAAAAAAAP///////+9/AQAAAAEAAAAaBQAAAAAAABoFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1792,
					1,
					"insert",
					{
						"characters": " matrix"
					},
					"BwAAAOAAAAAAAAAA4QAAAAAAAAAAAAAA4QAAAAAAAADiAAAAAAAAAAAAAADiAAAAAAAAAOMAAAAAAAAAAAAAAOMAAAAAAAAA5AAAAAAAAAAAAAAA5AAAAAAAAADlAAAAAAAAAAAAAADlAAAAAAAAAOYAAAAAAAAAAAAAAOYAAAAAAAAA5wAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA4AAAAAAAAADgAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAeBQAAAAAAAB4FAAAAAAAAAAAAAAAA8L8"
				],
				[
					1793,
					1,
					"insert_completion",
					{
						"completion": "MatrixFourFour",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "MatrixFourFour"
					},
					"AgAAAOEAAAAAAAAA4QAAAAAAAAAGAAAAbWF0cml44QAAAAAAAADvAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA5wAAAAAAAADnAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAlBQAAAAAAACUFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1794,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAO8AAAAAAAAA8AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA7wAAAAAAAADvAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAtBQAAAAAAAC0FAAAAAAAAAAAAAAAA8L8"
				],
				[
					1797,
					1,
					"insert",
					{
						"characters": "matric_fou"
					},
					"CwAAAOEAAAAAAAAA4gAAAAAAAAAAAAAA4gAAAAAAAADiAAAAAAAAAA4AAABNYXRyaXhGb3VyRm91cuIAAAAAAAAA4wAAAAAAAAAAAAAA4wAAAAAAAADkAAAAAAAAAAAAAADkAAAAAAAAAOUAAAAAAAAAAAAAAOUAAAAAAAAA5gAAAAAAAAAAAAAA5gAAAAAAAADnAAAAAAAAAAAAAADnAAAAAAAAAOgAAAAAAAAAAAAAAOgAAAAAAAAA6QAAAAAAAAAAAAAA6QAAAAAAAADqAAAAAAAAAAAAAADqAAAAAAAAAOsAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA7wAAAAAAAADhAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAuBQAAAAAAAC4FAAAAAAAAAAAAAAAA8L8"
				],
				[
					1798,
					1,
					"insert",
					{
						"characters": "rfour"
					},
					"BQAAAOsAAAAAAAAA7AAAAAAAAAAAAAAA7AAAAAAAAADtAAAAAAAAAAAAAADtAAAAAAAAAO4AAAAAAAAAAAAAAO4AAAAAAAAA7wAAAAAAAAAAAAAA7wAAAAAAAADwAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA6wAAAAAAAADrAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAqBQAAAAAAACoFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1800,
					1,
					"insert",
					{
						"characters": "matricies::*"
					},
					"DQAAAOEAAAAAAAAA4gAAAAAAAAAAAAAA4gAAAAAAAADiAAAAAAAAAA8AAABtYXRyaWNfZm91cmZvdXLiAAAAAAAAAOMAAAAAAAAAAAAAAOMAAAAAAAAA5AAAAAAAAAAAAAAA5AAAAAAAAADlAAAAAAAAAAAAAADlAAAAAAAAAOYAAAAAAAAAAAAAAOYAAAAAAAAA5wAAAAAAAAAAAAAA5wAAAAAAAADoAAAAAAAAAAAAAADoAAAAAAAAAOkAAAAAAAAAAAAAAOkAAAAAAAAA6gAAAAAAAAAAAAAA6gAAAAAAAADrAAAAAAAAAAAAAADrAAAAAAAAAOwAAAAAAAAAAAAAAOwAAAAAAAAA7QAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA8AAAAAAAAADhAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAvBQAAAAAAAC8FAAAAAAAAAAAAAAAA8L8"
				],
				[
					1801,
					2,
					"rust_fmt_format_buffer",
					null,
					"CAAAAMMAAAAAAAAAwwAAAAAAAAACAAAAc3TDAAAAAAAAAMQAAAAAAAAAAAAAAMYAAAAAAAAAygAAAAAAAAAAAAAAywAAAAAAAADMAAAAAAAAAAAAAADVAAAAAAAAANUAAAAAAAAABgAAAHZlY3RvctYAAAAAAAAA2gAAAAAAAAAAAAAA4wAAAAAAAADjAAAAAAAAAAgAAABtYXRyaWNpZeMAAAAAAAAA6QAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA7QAAAAAAAADtAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAsBQAAAAAAACwFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1807,
					1,
					"left_delete",
					null,
					"AQAAAM4AAAAAAAAAzgAAAAAAAAABAAAAKg",
					"AgAAAAAAAAABAAAAzwAAAAAAAADPAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAsBQAAAAAAACwFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1808,
					1,
					"insert",
					{
						"characters": "matric_four_four"
					},
					"EAAAAM4AAAAAAAAAzwAAAAAAAAAAAAAAzwAAAAAAAADQAAAAAAAAAAAAAADQAAAAAAAAANEAAAAAAAAAAAAAANEAAAAAAAAA0gAAAAAAAAAAAAAA0gAAAAAAAADTAAAAAAAAAAAAAADTAAAAAAAAANQAAAAAAAAAAAAAANQAAAAAAAAA1QAAAAAAAAAAAAAA1QAAAAAAAADWAAAAAAAAAAAAAADWAAAAAAAAANcAAAAAAAAAAAAAANcAAAAAAAAA2AAAAAAAAAAAAAAA2AAAAAAAAADZAAAAAAAAAAAAAADZAAAAAAAAANoAAAAAAAAAAAAAANoAAAAAAAAA2wAAAAAAAAAAAAAA2wAAAAAAAADcAAAAAAAAAAAAAADcAAAAAAAAAN0AAAAAAAAAAAAAAN0AAAAAAAAA3gAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAzgAAAAAAAADOAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAArBQAAAAAAACsFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1811,
					1,
					"left_delete",
					null,
					"AQAAANMAAAAAAAAA0wAAAAAAAAABAAAAYw",
					"AgAAAAAAAAABAAAA1AAAAAAAAADUAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAA7BQAAAAAAADsFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1812,
					1,
					"insert",
					{
						"characters": "x"
					},
					"AQAAANMAAAAAAAAA1AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0wAAAAAAAADTAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAA6BQAAAAAAADoFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1815,
					1,
					"insert",
					{
						"characters": "::*"
					},
					"AwAAAN4AAAAAAAAA3wAAAAAAAAAAAAAA3wAAAAAAAADgAAAAAAAAAAAAAADgAAAAAAAAAOEAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA3gAAAAAAAADeAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAA7BQAAAAAAADsFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1839,
					1,
					"insert",
					{
						"characters": "\nmat."
					},
					"BgAAAA0DAAAAAAAADgMAAAAAAAAAAAAADgMAAAAAAAASAwAAAAAAAAAAAAASAwAAAAAAABMDAAAAAAAAAAAAABMDAAAAAAAAFAMAAAAAAAAAAAAAFAMAAAAAAAAVAwAAAAAAAAAAAAAVAwAAAAAAABYDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAADQMAAAAAAAANAwAAAAAAAP///////+9/AQAAAAEAAAA+BQAAAAAAAD4FAAAAAAAAAAAAAAAA8L8"
				],
				[
					1845,
					1,
					"left_delete",
					null,
					"AQAAAAkAAAAAAAAACQAAAAAAAAASAAAAdW51c2VkX3ZhcmlhYmxlcywg",
					"AgAAAAAAAAABAAAAGwAAAAAAAAAJAAAAAAAAAAAAAAAAAPC/AQAAAAEAAABHBQAAAAAAAEcFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1849,
					1,
					"insert",
					{
						"characters": "?"
					},
					"AQAAAA0DAAAAAAAADgMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAADQMAAAAAAAANAwAAAAAAAAAAAAAAAPC/AQAAAAEAAAA1BQAAAAAAADUFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1850,
					1,
					"left_delete",
					null,
					"AQAAAA0DAAAAAAAADQMAAAAAAAABAAAAPw",
					"AgAAAAAAAAABAAAADgMAAAAAAAAOAwAAAAAAAAAAAAAAAPC/AQAAAAEAAAA2BQAAAAAAADYFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1851,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAAAoDAAAAAAAADQMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAADQMAAAAAAAANAwAAAAAAAAAAAAAAAPC/AQAAAAEAAAA1BQAAAAAAADUFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1862,
					1,
					"cut",
					null,
					"AQAAAPwCAAAAAAAA/AIAAAAAAAAJAAAAICAgIG1hdC4K",
					"AgAAAAAAAAABAAAABAMAAAAAAAAEAwAAAAAAAAAAAAAAgFVAAQAAAAEAAAA4BQAAAAAAADgFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1866,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAAAEDAAAAAAAAAQMAAAAAAAADAAAALy8g",
					"AgAAAAAAAAABAAAA/QIAAAAAAAD9AgAAAAAAAAAAAAAAAAAAAQAAAAEAAAAvBQAAAAAAAC8FAAAAAAAAAAAAAAAA8L8"
				],
				[
					1870,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAANICAAAAAAAA1QIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA2QIAAAAAAADZAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAsBQAAAAAAACwFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1888,
					1,
					"left_delete",
					null,
					"AQAAABcAAAAAAAAAFwAAAAAAAAAYAAAALCBub25fdXBwZXJfY2FzZV9nbG9iYWxz",
					"AgAAAAAAAAABAAAALwAAAAAAAAAXAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAvBQAAAAAAAC8FAAAAAAAAAAAAAAAA8L8"
				],
				[
					1896,
					1,
					"insert",
					{
						"characters": "?"
					},
					"AQAAABkAAAAAAAAAGgAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAGQAAAAAAAAAZAAAAAAAAAP///////+9/AQAAAAEAAAAXBQAAAAAAABcFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1899,
					1,
					"left_delete",
					null,
					"AQAAABkAAAAAAAAAGQAAAAAAAAABAAAAPw",
					"AgAAAAAAAAABAAAAGgAAAAAAAAAaAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAYBQAAAAAAABgFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1934,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAALoCAAAAAAAAugIAAAAAAAADAAAALy8g",
					"AgAAAAAAAAABAAAAugIAAAAAAAC6AgAAAAAAAAAAAAAAAD1AAQAAAAEAAAAXBQAAAAAAABcFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1942,
					1,
					"insert",
					{
						"characters": "\nmat.translate"
					},
					"DwAAAOMCAAAAAAAA5AIAAAAAAAAAAAAA5AIAAAAAAADoAgAAAAAAAAAAAADoAgAAAAAAAOkCAAAAAAAAAAAAAOkCAAAAAAAA6gIAAAAAAAAAAAAA6gIAAAAAAADrAgAAAAAAAAAAAADrAgAAAAAAAOwCAAAAAAAAAAAAAOwCAAAAAAAA7QIAAAAAAAAAAAAA7QIAAAAAAADuAgAAAAAAAAAAAADuAgAAAAAAAO8CAAAAAAAAAAAAAO8CAAAAAAAA8AIAAAAAAAAAAAAA8AIAAAAAAADxAgAAAAAAAAAAAADxAgAAAAAAAPICAAAAAAAAAAAAAPICAAAAAAAA8wIAAAAAAAAAAAAA8wIAAAAAAAD0AgAAAAAAAAAAAAD0AgAAAAAAAPUCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA4wIAAAAAAADjAgAAAAAAAP///////+9/AQAAAAEAAAAUBQAAAAAAABQFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1943,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAPUCAAAAAAAA9wIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA9QIAAAAAAAD1AgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAmBQAAAAAAACYFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1944,
					1,
					"insert",
					{
						"characters": "Vect"
					},
					"BAAAAPYCAAAAAAAA9wIAAAAAAAAAAAAA9wIAAAAAAAD4AgAAAAAAAAAAAAD4AgAAAAAAAPkCAAAAAAAAAAAAAPkCAAAAAAAA+gIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA9gIAAAAAAAD2AgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAoBQAAAAAAACgFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1945,
					1,
					"left_delete",
					null,
					"AQAAAPkCAAAAAAAA+QIAAAAAAAABAAAAdA",
					"AgAAAAAAAAABAAAA+gIAAAAAAAD6AgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAsBQAAAAAAACwFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1946,
					1,
					"insert_completion",
					{
						"completion": "VecThreeFloat",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "VecThreeFloat"
					},
					"AgAAAPYCAAAAAAAA9gIAAAAAAAADAAAAVmVj9gIAAAAAAAADAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA+QIAAAAAAAD5AgAAAAAAAAAAAAAAAPC/AQAAAAEAAAArBQAAAAAAACsFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1947,
					1,
					"insert",
					{
						"characters": "::new"
					},
					"BQAAAAMDAAAAAAAABAMAAAAAAAAAAAAABAMAAAAAAAAFAwAAAAAAAAAAAAAFAwAAAAAAAAYDAAAAAAAAAAAAAAYDAAAAAAAABwMAAAAAAAAAAAAABwMAAAAAAAAIAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAwMAAAAAAAADAwAAAAAAAAAAAAAAAPC/AQAAAAEAAAA1BQAAAAAAADUFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1948,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAAgDAAAAAAAACgMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAACAMAAAAAAAAIAwAAAAAAAAAAAAAAAPC/AQAAAAEAAAA6BQAAAAAAADoFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1949,
					1,
					"insert",
					{
						"characters": "1,1,1"
					},
					"BQAAAAkDAAAAAAAACgMAAAAAAAAAAAAACgMAAAAAAAALAwAAAAAAAAAAAAALAwAAAAAAAAwDAAAAAAAAAAAAAAwDAAAAAAAADQMAAAAAAAAAAAAADQMAAAAAAAAOAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAACQMAAAAAAAAJAwAAAAAAAAAAAAAAAPC/AQAAAAEAAAA8BQAAAAAAADwFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1951,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAsDAAAAAAAADAMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAACwMAAAAAAAALAwAAAAAAAAAAAAAAAPC/AQAAAAEAAABBBQAAAAAAAEEFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1954,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAA4DAAAAAAAADwMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAADgMAAAAAAAAOAwAAAAAAAAAAAAAAAPC/AQAAAAEAAABCBQAAAAAAAEIFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1958,
					7,
					"left_delete",
					null,
					"BwAAAA8DAAAAAAAADwMAAAAAAAABAAAAMQ4DAAAAAAAADgMAAAAAAAABAAAAIA0DAAAAAAAADQMAAAAAAAABAAAALAwDAAAAAAAADAMAAAAAAAABAAAAMQsDAAAAAAAACwMAAAAAAAABAAAAIAoDAAAAAAAACgMAAAAAAAABAAAALAkDAAAAAAAACQMAAAAAAAABAAAAMQ",
					"AgAAAAAAAAABAAAAEAMAAAAAAAAQAwAAAAAAAAAAAAAAAPC/AQAAAAEAAABDBQAAAAAAAEMFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1959,
					1,
					"insert",
					{
						"characters": "sate"
					},
					"BAAAAAkDAAAAAAAACgMAAAAAAAAAAAAACgMAAAAAAAALAwAAAAAAAAAAAAALAwAAAAAAAAwDAAAAAAAAAAAAAAwDAAAAAAAADQMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAACQMAAAAAAAAJAwAAAAAAAAAAAAAAAPC/AQAAAAEAAAA8BQAAAAAAADwFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1960,
					4,
					"left_delete",
					null,
					"BAAAAAwDAAAAAAAADAMAAAAAAAABAAAAZQsDAAAAAAAACwMAAAAAAAABAAAAdAoDAAAAAAAACgMAAAAAAAABAAAAYQkDAAAAAAAACQMAAAAAAAABAAAAcw",
					"AgAAAAAAAAABAAAADQMAAAAAAAANAwAAAAAAAAAAAAAAAPC/AQAAAAEAAABABQAAAAAAAEAFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1961,
					1,
					"insert",
					{
						"characters": "offset,"
					},
					"BwAAAAkDAAAAAAAACgMAAAAAAAAAAAAACgMAAAAAAAALAwAAAAAAAAAAAAALAwAAAAAAAAwDAAAAAAAAAAAAAAwDAAAAAAAADQMAAAAAAAAAAAAADQMAAAAAAAAOAwAAAAAAAAAAAAAOAwAAAAAAAA8DAAAAAAAAAAAAAA8DAAAAAAAAEAMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAACQMAAAAAAAAJAwAAAAAAAAAAAAAAAPC/AQAAAAEAAAA8BQAAAAAAADwFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1962,
					1,
					"insert",
					{
						"characters": " o"
					},
					"AgAAABADAAAAAAAAEQMAAAAAAAAAAAAAEQMAAAAAAAASAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAEAMAAAAAAAAQAwAAAAAAAAAAAAAAAPC/AQAAAAEAAABDBQAAAAAAAEMFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1963,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABIDAAAAAAAAEwMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAEgMAAAAAAAASAwAAAAAAAAAAAAAAAPC/AQAAAAEAAABFBQAAAAAAAEUFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1964,
					1,
					"left_delete",
					null,
					"AQAAABIDAAAAAAAAEgMAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAEwMAAAAAAAATAwAAAAAAAAAAAAAAAPC/AQAAAAEAAABGBQAAAAAAAEYFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1965,
					1,
					"insert",
					{
						"characters": "ffset,"
					},
					"BgAAABIDAAAAAAAAEwMAAAAAAAAAAAAAEwMAAAAAAAAUAwAAAAAAAAAAAAAUAwAAAAAAABUDAAAAAAAAAAAAABUDAAAAAAAAFgMAAAAAAAAAAAAAFgMAAAAAAAAXAwAAAAAAAAAAAAAXAwAAAAAAABgDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAEgMAAAAAAAASAwAAAAAAAAAAAAAAAPC/AQAAAAEAAABFBQAAAAAAAEUFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1966,
					1,
					"insert",
					{
						"characters": " offset"
					},
					"BwAAABgDAAAAAAAAGQMAAAAAAAAAAAAAGQMAAAAAAAAaAwAAAAAAAAAAAAAaAwAAAAAAABsDAAAAAAAAAAAAABsDAAAAAAAAHAMAAAAAAAAAAAAAHAMAAAAAAAAdAwAAAAAAAAAAAAAdAwAAAAAAAB4DAAAAAAAAAAAAAB4DAAAAAAAAHwMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAGAMAAAAAAAAYAwAAAAAAAAAAAAAAAPC/AQAAAAEAAABLBQAAAAAAAEsFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1968,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAACEDAAAAAAAAIgMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAIQMAAAAAAAAhAwAAAAAAAP///////+9/AQAAAAEAAABSBQAAAAAAAFIFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1970,
					1,
					"swap_line_up",
					null,
					"AgAAAFgDAAAAAAAAWAMAAAAAAAABAAAACiQDAAAAAAAAJQMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAWAMAAAAAAABYAwAAAAAAAAAAAAAA4HtAAQAAAAEAAABTBQAAAAAAAFMFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1971,
					1,
					"swap_line_down",
					null,
					"AgAAAFkDAAAAAAAAWgMAAAAAAAAAAAAAJAMAAAAAAAAkAwAAAAAAAAEAAAAK",
					"AgAAAAAAAAABAAAAJAMAAAAAAAAkAwAAAAAAAAAAAAAA4HtAAQAAAAEAAABTBQAAAAAAAFMFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1973,
					3,
					"swap_line_up",
					null,
					"BgAAACQDAAAAAAAAJAMAAAAAAAA0AAAAICAgIGxldCBvZmZzZXQ6IGY2NCA9IChzdGF0ZS5mcmFtZSBhcyBmNjQpICogMC4wMDE7CiMDAAAAAAAAVwMAAAAAAAAAAAAAIwMAAAAAAAAjAwAAAAAAADQAAAAgICAgbGV0IG9mZnNldDogZjY0ID0gKHN0YXRlLmZyYW1lIGFzIGY2NCkgKiAwLjAwMTsK5AIAAAAAAAAYAwAAAAAAAAAAAADkAgAAAAAAAOQCAAAAAAAANAAAACAgICBsZXQgb2Zmc2V0OiBmNjQgPSAoc3RhdGUuZnJhbWUgYXMgZjY0KSAqIDAuMDAxOwq2AgAAAAAAAOoCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAVwMAAAAAAABXAwAAAAAAAAAAAAAA4HtAAQAAAAEAAABTBQAAAAAAAFMFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1975,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAOkCAAAAAAAA6gIAAAAAAAAAAAAA6gIAAAAAAADuAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA6QIAAAAAAADpAgAAAAAAAP///////+9/AQAAAAEAAABTBQAAAAAAAFMFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1976,
					2,
					"rust_fmt_format_buffer",
					null,
					"AgAAAOoCAAAAAAAA6gIAAAAAAAAEAAAAICAgIFcDAAAAAAAAVwMAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAA7gIAAAAAAADuAgAAAAAAAAAAAAAAAPC/AQAAAAEAAABYBQAAAAAAAFgFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1979,
					1,
					"insert",
					{
						"characters": "m"
					},
					"AQAAAPICAAAAAAAA8wIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA8gIAAAAAAADyAgAAAAAAAAAAAAAAAElAAQAAAAEAAABTBQAAAAAAAFMFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1980,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAPMCAAAAAAAA9AIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA8wIAAAAAAADzAgAAAAAAAAAAAAAAAPC/AQAAAAEAAABUBQAAAAAAAFQFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1981,
					2,
					"left_delete",
					null,
					"AgAAAPMCAAAAAAAA8wIAAAAAAAABAAAAIPICAAAAAAAA8gIAAAAAAAABAAAAbQ",
					"AgAAAAAAAAABAAAA9AIAAAAAAAD0AgAAAAAAAAAAAAAAAPC/AQAAAAEAAABVBQAAAAAAAFUFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1982,
					1,
					"insert",
					{
						"characters": " ut"
					},
					"AwAAAPICAAAAAAAA8wIAAAAAAAAAAAAA8wIAAAAAAAD0AgAAAAAAAAAAAAD0AgAAAAAAAPUCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA8gIAAAAAAADyAgAAAAAAAAAAAAAAAPC/AQAAAAEAAABTBQAAAAAAAFMFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1985,
					1,
					"left_delete",
					null,
					"AQAAAPQCAAAAAAAA9AIAAAAAAAABAAAAdA",
					"AgAAAAAAAAABAAAA9QIAAAAAAAD1AgAAAAAAAAAAAAAAAPC/AQAAAAEAAABWBQAAAAAAAFYFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1986,
					1,
					"left_delete",
					null,
					"AQAAAPMCAAAAAAAA8wIAAAAAAAABAAAAdQ",
					"AgAAAAAAAAABAAAA9AIAAAAAAAD0AgAAAAAAAAAAAAAAAPC/AQAAAAEAAABVBQAAAAAAAFUFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1987,
					1,
					"insert",
					{
						"characters": "mut"
					},
					"AwAAAPMCAAAAAAAA9AIAAAAAAAAAAAAA9AIAAAAAAAD1AgAAAAAAAAAAAAD1AgAAAAAAAPYCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA8wIAAAAAAADzAgAAAAAAAAAAAAAAAPC/AQAAAAEAAABUBQAAAAAAAFQFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2013,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAFwDAAAAAAAAXQMAAAAAAAAAAAAAXQMAAAAAAABeAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAXAMAAAAAAABcAwAAAAAAAAAAAAAAcIBAAQAAAAEAAABXBQAAAAAAAFcFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2015,
					1,
					"reindent",
					null,
					"AQAAAF0DAAAAAAAAYQMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAXQMAAAAAAABdAwAAAAAAAAAAAAAAAAAAAQAAAAEAAABZBQAAAAAAAFkFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2022,
					2,
					"rust_fmt_format_buffer",
					null,
					"AQAAAGEDAAAAAAAAYQMAAAAAAAAGAAAACgogICAg",
					"AgAAAAAAAAABAAAA7gQAAAAAAADuBAAAAAAAAAAAAAAAAPC/AQAAAAEAAABdBQAAAAAAAF0FAAAAAAAAAAAAAAAA8L8"
				],
				[
					2026,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAFwDAAAAAAAAXQMAAAAAAAAAAAAAXQMAAAAAAABeAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAXAMAAAAAAABcAwAAAAAAAAAAAAAA8HZAAQAAAAEAAABXBQAAAAAAAFcFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2028,
					1,
					"reindent",
					null,
					"AQAAAF0DAAAAAAAAYQMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAXQMAAAAAAABdAwAAAAAAAAAAAAAAAAAAAQAAAAEAAABZBQAAAAAAAFkFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2029,
					1,
					"insert",
					{
						"characters": "mat"
					},
					"AwAAAGEDAAAAAAAAYgMAAAAAAAAAAAAAYgMAAAAAAABjAwAAAAAAAAAAAABjAwAAAAAAAGQDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAYQMAAAAAAABhAwAAAAAAAAAAAAAAAPC/AQAAAAEAAABdBQAAAAAAAF0FAAAAAAAAAAAAAAAA8L8"
				],
				[
					2037,
					3,
					"left_delete",
					null,
					"AwAAAGMDAAAAAAAAYwMAAAAAAAABAAAAdGIDAAAAAAAAYgMAAAAAAAABAAAAYWEDAAAAAAAAYQMAAAAAAAABAAAAbQ",
					"AgAAAAAAAAABAAAAZAMAAAAAAABkAwAAAAAAAP///////+9/AQAAAAEAAABgBQAAAAAAAGAFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2038,
					1,
					"insert",
					{
						"characters": "vec"
					},
					"AwAAAGEDAAAAAAAAYgMAAAAAAAAAAAAAYgMAAAAAAABjAwAAAAAAAAAAAABjAwAAAAAAAGQDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAYQMAAAAAAABhAwAAAAAAAAAAAAAAAPC/AQAAAAEAAABdBQAAAAAAAF0FAAAAAAAAAAAAAAAA8L8"
				],
				[
					2041,
					3,
					"left_delete",
					null,
					"AwAAAGMDAAAAAAAAYwMAAAAAAAABAAAAY2IDAAAAAAAAYgMAAAAAAAABAAAAZWEDAAAAAAAAYQMAAAAAAAABAAAAdg",
					"AgAAAAAAAAABAAAAZAMAAAAAAABkAwAAAAAAAAAAAAAAAPC/AQAAAAEAAABgBQAAAAAAAGAFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2042,
					1,
					"insert",
					{
						"characters": "let"
					},
					"AwAAAGEDAAAAAAAAYgMAAAAAAAAAAAAAYgMAAAAAAABjAwAAAAAAAAAAAABjAwAAAAAAAGQDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAYQMAAAAAAABhAwAAAAAAAAAAAAAAAPC/AQAAAAEAAABdBQAAAAAAAF0FAAAAAAAAAAAAAAAA8L8"
				],
				[
					2043,
					1,
					"insert",
					{
						"characters": " x"
					},
					"AgAAAGQDAAAAAAAAZQMAAAAAAAAAAAAAZQMAAAAAAABmAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAZAMAAAAAAABkAwAAAAAAAAAAAAAAAPC/AQAAAAEAAABgBQAAAAAAAGAFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2044,
					1,
					"left_delete",
					null,
					"AQAAAGUDAAAAAAAAZQMAAAAAAAABAAAAeA",
					"AgAAAAAAAAABAAAAZgMAAAAAAABmAwAAAAAAAAAAAAAAAPC/AQAAAAEAAABiBQAAAAAAAGIFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2045,
					1,
					"insert",
					{
						"characters": "fist"
					},
					"BAAAAGUDAAAAAAAAZgMAAAAAAAAAAAAAZgMAAAAAAABnAwAAAAAAAAAAAABnAwAAAAAAAGgDAAAAAAAAAAAAAGgDAAAAAAAAaQMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAZQMAAAAAAABlAwAAAAAAAAAAAAAAAPC/AQAAAAEAAABhBQAAAAAAAGEFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2046,
					4,
					"left_delete",
					null,
					"BAAAAGgDAAAAAAAAaAMAAAAAAAABAAAAdGcDAAAAAAAAZwMAAAAAAAABAAAAc2YDAAAAAAAAZgMAAAAAAAABAAAAaWUDAAAAAAAAZQMAAAAAAAABAAAAZg",
					"AgAAAAAAAAABAAAAaQMAAAAAAABpAwAAAAAAAAAAAAAAAPC/AQAAAAEAAABlBQAAAAAAAGUFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2047,
					1,
					"insert",
					{
						"characters": "first"
					},
					"BQAAAGUDAAAAAAAAZgMAAAAAAAAAAAAAZgMAAAAAAABnAwAAAAAAAAAAAABnAwAAAAAAAGgDAAAAAAAAAAAAAGgDAAAAAAAAaQMAAAAAAAAAAAAAaQMAAAAAAABqAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAZQMAAAAAAABlAwAAAAAAAAAAAAAAAPC/AQAAAAEAAABhBQAAAAAAAGEFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2048,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAGoDAAAAAAAAawMAAAAAAAAAAAAAawMAAAAAAABsAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAagMAAAAAAABqAwAAAAAAAAAAAAAAAPC/AQAAAAEAAABmBQAAAAAAAGYFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2049,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAGwDAAAAAAAAbQMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAbAMAAAAAAABsAwAAAAAAAAAAAAAAAPC/AQAAAAEAAABoBQAAAAAAAGgFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2057,
					1,
					"paste",
					null,
					"AQAAAG0DAAAAAAAAogMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAbQMAAAAAAABtAwAAAAAAAAAAAAAAIGFAAQAAAAEAAABpBQAAAAAAAGkFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2059,
					11,
					"left_delete",
					null,
					"CwAAAJ0DAAAAAAAAnQMAAAAAAAABAAAAIJwDAAAAAAAAnAMAAAAAAAABAAAALJsDAAAAAAAAmwMAAAAAAAABAAAAdJoDAAAAAAAAmgMAAAAAAAABAAAAZZkDAAAAAAAAmQMAAAAAAAABAAAAc5gDAAAAAAAAmAMAAAAAAAABAAAAZpcDAAAAAAAAlwMAAAAAAAABAAAAZpYDAAAAAAAAlgMAAAAAAAABAAAAb5UDAAAAAAAAlQMAAAAAAAABAAAAIJQDAAAAAAAAlAMAAAAAAAABAAAAK5MDAAAAAAAAkwMAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAngMAAAAAAACeAwAAAAAAAAAAAAAAAPC/AQAAAAEAAACeBQAAAAAAAJ4FAAAAAAAAAAAAAAAA8L8"
				],
				[
					2060,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAJMDAAAAAAAAlAMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAkwMAAAAAAACTAwAAAAAAAAAAAAAAAPC/AQAAAAEAAACTBQAAAAAAAJMFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2061,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJQDAAAAAAAAlQMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAlAMAAAAAAACUAwAAAAAAAAAAAAAAAPC/AQAAAAEAAACUBQAAAAAAAJQFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2064,
					11,
					"left_delete",
					null,
					"CwAAAI4DAAAAAAAAjgMAAAAAAAABAAAAII0DAAAAAAAAjQMAAAAAAAABAAAALIwDAAAAAAAAjAMAAAAAAAABAAAAdIsDAAAAAAAAiwMAAAAAAAABAAAAZYoDAAAAAAAAigMAAAAAAAABAAAAc4kDAAAAAAAAiQMAAAAAAAABAAAAZogDAAAAAAAAiAMAAAAAAAABAAAAZocDAAAAAAAAhwMAAAAAAAABAAAAb4YDAAAAAAAAhgMAAAAAAAABAAAAIIUDAAAAAAAAhQMAAAAAAAABAAAAK4QDAAAAAAAAhAMAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAjwMAAAAAAACPAwAAAAAAAAAAAAAAAPC/AQAAAAEAAACVBQAAAAAAAJUFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2065,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAIQDAAAAAAAAhQMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAhAMAAAAAAACEAwAAAAAAAAAAAAAAAPC/AQAAAAEAAACKBQAAAAAAAIoFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2066,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIUDAAAAAAAAhgMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAhQMAAAAAAACFAwAAAAAAAAAAAAAAAPC/AQAAAAEAAACLBQAAAAAAAIsFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2070,
					1,
					"paste",
					null,
					"AQAAAF0DAAAAAAAAkQMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAhgMAAAAAAACGAwAAAAAAAAAAAAAAAPC/AQAAAAEAAACMBQAAAAAAAIwFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2074,
					1,
					"insert",
					{
						"characters": "second"
					},
					"BwAAAJkDAAAAAAAAmgMAAAAAAAAAAAAAmgMAAAAAAACaAwAAAAAAAAUAAABmaXJzdJoDAAAAAAAAmwMAAAAAAAAAAAAAmwMAAAAAAACcAwAAAAAAAAAAAACcAwAAAAAAAJ0DAAAAAAAAAAAAAJ0DAAAAAAAAngMAAAAAAAAAAAAAngMAAAAAAACfAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAngMAAAAAAACZAwAAAAAAAAAAAAAAAPC/AQAAAAEAAADABQAAAAAAAMAFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2077,
					1,
					"left_delete",
					null,
					"AQAAALUDAAAAAAAAtQMAAAAAAAABAAAALQ",
					"AgAAAAAAAAABAAAAtgMAAAAAAAC2AwAAAAAAAAAAAAAAAPC/AQAAAAEAAADBBQAAAAAAAMEFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2083,
					1,
					"insert",
					{
						"characters": "first"
					},
					"BgAAAA0EAAAAAAAADgQAAAAAAAAAAAAADgQAAAAAAAAOBAAAAAAAADUAAABWZWNUaHJlZUZsb2F0OjpuZXcoLTAuNSArIG9mZnNldCwgLTAuNSArIG9mZnNldCwgMC4wKQ4EAAAAAAAADwQAAAAAAAAAAAAADwQAAAAAAAAQBAAAAAAAAAAAAAAQBAAAAAAAABEEAAAAAAAAAAAAABEEAAAAAAAAEgQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAADQQAAAAAAABCBAAAAAAAAAAAAAAAAPC/AQAAAAEAAADABQAAAAAAAMAFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2088,
					1,
					"insert",
					{
						"characters": "second"
					},
					"BwAAACgEAAAAAAAAKQQAAAAAAAAAAAAAKQQAAAAAAAApBAAAAAAAADQAAABWZWNUaHJlZUZsb2F0OjpuZXcoMC41ICsgb2Zmc2V0LCAtMC41ICsgb2Zmc2V0LCAwLjApKQQAAAAAAAAqBAAAAAAAAAAAAAAqBAAAAAAAACsEAAAAAAAAAAAAACsEAAAAAAAALAQAAAAAAAAAAAAALAQAAAAAAAAtBAAAAAAAAAAAAAAtBAAAAAAAAC4EAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAKAQAAAAAAABcBAAAAAAAAAAAAAAAAPC/AQAAAAEAAACQBQAAAAAAAJAFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2094,
					1,
					"paste",
					null,
					"AQAAAJEDAAAAAAAAxQMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAqgMAAAAAAACqAwAAAAAAAAAAAAAAgGZAAQAAAAEAAABiBQAAAAAAAGIFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2098,
					1,
					"insert",
					{
						"characters": "f"
					},
					"AgAAAM0DAAAAAAAAzgMAAAAAAAAAAAAAzgMAAAAAAADOAwAAAAAAAAYAAABzZWNvbmQ",
					"AgAAAAAAAAABAAAA0wMAAAAAAADNAwAAAAAAAAAAAAAAAPC/AQAAAAEAAACWBQAAAAAAAJYFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2099,
					1,
					"left_delete",
					null,
					"AQAAAM0DAAAAAAAAzQMAAAAAAAABAAAAZg",
					"AgAAAAAAAAABAAAAzgMAAAAAAADOAwAAAAAAAAAAAAAAAPC/AQAAAAEAAACRBQAAAAAAAJEFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2100,
					1,
					"insert",
					{
						"characters": "third"
					},
					"BQAAAM0DAAAAAAAAzgMAAAAAAAAAAAAAzgMAAAAAAADPAwAAAAAAAAAAAADPAwAAAAAAANADAAAAAAAAAAAAANADAAAAAAAA0QMAAAAAAAAAAAAA0QMAAAAAAADSAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAzQMAAAAAAADNAwAAAAAAAAAAAAAAAPC/AQAAAAEAAACQBQAAAAAAAJAFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2104,
					1,
					"insert",
					{
						"characters": "first,"
					},
					"BgAAACoEAAAAAAAAKwQAAAAAAAAAAAAAKwQAAAAAAAAsBAAAAAAAAAAAAAAsBAAAAAAAAC0EAAAAAAAAAAAAAC0EAAAAAAAALgQAAAAAAAAAAAAALgQAAAAAAAAvBAAAAAAAAAAAAAAvBAAAAAAAADAEAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAKgQAAAAAAAAqBAAAAAAAAAAAAAAAAPC/AQAAAAEAAACVBQAAAAAAAJUFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2105,
					1,
					"insert",
					{
						"characters": " second,"
					},
					"CAAAADAEAAAAAAAAMQQAAAAAAAAAAAAAMQQAAAAAAAAyBAAAAAAAAAAAAAAyBAAAAAAAADMEAAAAAAAAAAAAADMEAAAAAAAANAQAAAAAAAAAAAAANAQAAAAAAAA1BAAAAAAAAAAAAAA1BAAAAAAAADYEAAAAAAAAAAAAADYEAAAAAAAANwQAAAAAAAAAAAAANwQAAAAAAAA4BAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAMAQAAAAAAAAwBAAAAAAAAAAAAAAAAPC/AQAAAAEAAACbBQAAAAAAAJsFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2106,
					1,
					"insert",
					{
						"characters": " third"
					},
					"BgAAADgEAAAAAAAAOQQAAAAAAAAAAAAAOQQAAAAAAAA6BAAAAAAAAAAAAAA6BAAAAAAAADsEAAAAAAAAAAAAADsEAAAAAAAAPAQAAAAAAAAAAAAAPAQAAAAAAAA9BAAAAAAAAAAAAAA9BAAAAAAAAD4EAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAOAQAAAAAAAA4BAAAAAAAAAAAAAAAAPC/AQAAAAEAAACjBQAAAAAAAKMFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2108,
					2,
					"cut",
					null,
					"AgAAAEEEAAAAAAAAQQQAAAAAAAAbAAAAICAgIGN1YmVfbWVzaC5wdXNoKGZpcnN0KTsKQQQAAAAAAABBBAAAAAAAABwAAAAgICAgY3ViZV9tZXNoLnB1c2goc2Vjb25kKTsK",
					"AgAAAAAAAAABAAAAWwQAAAAAAABbBAAAAAAAAAAAAAAAEH9AAQAAAAEAAACpBQAAAAAAAKkFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2111,
					2,
					"left_delete",
					null,
					"AgAAAOoDAAAAAAAA6gMAAAAAAAABAAAANekDAAAAAAAA6QMAAAAAAAABAAAALg",
					"AgAAAAAAAAABAAAA6wMAAAAAAADrAwAAAAAAAAAAAAAAAPC/AQAAAAEAAAByBQAAAAAAAHIFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2112,
					1,
					"insert",
					{
						"characters": ".0"
					},
					"AgAAAOkDAAAAAAAA6gMAAAAAAAAAAAAA6gMAAAAAAADrAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA6QMAAAAAAADpAwAAAAAAAAAAAAAAAPC/AQAAAAEAAABwBQAAAAAAAHAFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2117,
					1,
					"cut",
					null,
					"AQAAAEEEAAAAAAAAQQQAAAAAAABAAAAAICAgIGN1YmVfbWVzaC5wdXNoKFZlY1RocmVlRmxvYXQ6Om5ldygwLjAsIDAuNSArIG9mZnNldCwgMC4wKSk7Cg",
					"AgAAAAAAAAABAAAAZwQAAAAAAABnBAAAAAAAAAAAAAAAIHFAAQAAAAEAAAByBQAAAAAAAHIFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2121,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAJADAAAAAAAAkQMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAkAMAAAAAAACQAwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAyBQAAAAAAADIFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2123,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAMUDAAAAAAAAxgMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAxQMAAAAAAADFAwAAAAAAAAAAAAAAYHdAAQAAAAEAAAAzBQAAAAAAADMFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2125,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAPkDAAAAAAAA+gMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA+QMAAAAAAAD5AwAAAAAAAAAAAAAAYHdAAQAAAAEAAAA0BQAAAAAAADQFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2136,
					1,
					"cut",
					null,
					"AQAAACgEAAAAAAAAKAQAAAAAAAAaAAAAdmVjIVtmaXJzdCwgc2Vjb25kLCB0aGlyZF0",
					"AgAAAAAAAAABAAAAKAQAAAAAAABCBAAAAAAAAAAAAAAAAPC/AQAAAAEAAAA1BQAAAAAAADUFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2141,
					1,
					"paste",
					null,
					"AgAAAIAEAAAAAAAAmgQAAAAAAAAAAAAAmgQAAAAAAACaBAAAAAAAAAkAAABjdWJlX21lc2g",
					"AgAAAAAAAAABAAAAiQQAAAAAAACABAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAbBQAAAAAAABsFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2143,
					1,
					"cut",
					null,
					"AQAAAPwDAAAAAAAA/AMAAAAAAAAuAAAAICAgIGxldCBtdXQgY3ViZV9tZXNoOiBWZWM8VmVjVGhyZWVGbG9hdD4gPSA7Cg",
					"AgAAAAAAAAABAAAAKQQAAAAAAAApBAAAAAAAAAAAAAAAoHlAAQAAAAEAAAAsBQAAAAAAACwFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2144,
					1,
					"left_delete",
					null,
					"AQAAAPsDAAAAAAAA+wMAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAA/AMAAAAAAAD8AwAAAAAAAAAAAAAAAPC/AQAAAAEAAAD+BAAAAAAAAP4EAAAAAAAAAAAAAAAA8L8"
				],
				[
					2151,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAPsDAAAAAAAA/AMAAAAAAAAAAAAA/AMAAAAAAAD9AwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA+wMAAAAAAAD7AwAAAAAAAAAAAAAAAPC/AQAAAAEAAAD9BAAAAAAAAP0EAAAAAAAAAAAAAAAA8L8"
				],
				[
					2153,
					1,
					"reindent",
					null,
					"AQAAAPwDAAAAAAAAAAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA/AMAAAAAAAD8AwAAAAAAAAAAAAAAAAAAAQAAAAEAAAD/BAAAAAAAAP8EAAAAAAAAAAAAAAAA8L8"
				],
				[
					2154,
					1,
					"cut",
					null,
					"AQAAAPwDAAAAAAAA/AMAAAAAAAAFAAAAICAgIAo",
					"AgAAAAAAAAABAAAAAAQAAAAAAAAABAAAAAAAAAAAAAAAAPC/AQAAAAEAAAADBQAAAAAAAAMFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2159,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAPsDAAAAAAAA/AMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA+wMAAAAAAAD7AwAAAAAAAAAAAAAA8HZAAQAAAAEAAAD+BAAAAAAAAP4EAAAAAAAAAAAAAAAA8L8"
				],
				[
					2160,
					1,
					"reindent",
					null,
					"AQAAAPwDAAAAAAAAAAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA/AMAAAAAAAD8AwAAAAAAAAAAAAAAAPC/AQAAAAEAAAD/BAAAAAAAAP8EAAAAAAAAAAAAAAAA8L8"
				],
				[
					2161,
					1,
					"insert",
					{
						"characters": "let"
					},
					"AwAAAAAEAAAAAAAAAQQAAAAAAAAAAAAAAQQAAAAAAAACBAAAAAAAAAAAAAACBAAAAAAAAAMEAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAQAAAAAAAAABAAAAAAAAAAAAAAAAPC/AQAAAAEAAAADBQAAAAAAAAMFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2162,
					1,
					"insert",
					{
						"characters": " f"
					},
					"AgAAAAMEAAAAAAAABAQAAAAAAAAAAAAABAQAAAAAAAAFBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAwQAAAAAAAADBAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAGBQAAAAAAAAYFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2163,
					5,
					"left_delete",
					null,
					"BQAAAAQEAAAAAAAABAQAAAAAAAABAAAAZgMEAAAAAAAAAwQAAAAAAAABAAAAIAIEAAAAAAAAAgQAAAAAAAABAAAAdAEEAAAAAAAAAQQAAAAAAAABAAAAZQAEAAAAAAAAAAQAAAAAAAABAAAAbA",
					"AgAAAAAAAAABAAAABQQAAAAAAAAFBAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAIBQAAAAAAAAgFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2164,
					1,
					"insert",
					{
						"characters": "first"
					},
					"BQAAAAAEAAAAAAAAAQQAAAAAAAAAAAAAAQQAAAAAAAACBAAAAAAAAAAAAAACBAAAAAAAAAMEAAAAAAAAAAAAAAMEAAAAAAAABAQAAAAAAAAAAAAABAQAAAAAAAAFBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAQAAAAAAAAABAAAAAAAAAAAAAAAAPC/AQAAAAEAAAADBQAAAAAAAAMFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2165,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAAUEAAAAAAAABgQAAAAAAAAAAAAABgQAAAAAAAAHBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAABQQAAAAAAAAFBAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAIBQAAAAAAAAgFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2166,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAcEAAAAAAAACAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAABwQAAAAAAAAHBAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAKBQAAAAAAAAoFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2168,
					1,
					"insert",
					{
						"characters": "let"
					},
					"BAAAAAAEAAAAAAAAAQQAAAAAAAAAAAAAAQQAAAAAAAABBAAAAAAAAAgAAABmaXJzdCA9IAEEAAAAAAAAAgQAAAAAAAAAAAAAAgQAAAAAAAADBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAACAQAAAAAAAAABAAAAAAAAAAAAAAAAD1AAQAAAAEAAAALBQAAAAAAAAsFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2169,
					1,
					"insert",
					{
						"characters": " first"
					},
					"BgAAAAMEAAAAAAAABAQAAAAAAAAAAAAABAQAAAAAAAAFBAAAAAAAAAAAAAAFBAAAAAAAAAYEAAAAAAAAAAAAAAYEAAAAAAAABwQAAAAAAAAAAAAABwQAAAAAAAAIBAAAAAAAAAAAAAAIBAAAAAAAAAkEAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAwQAAAAAAAADBAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAGBQAAAAAAAAYFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2170,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAAkEAAAAAAAACgQAAAAAAAAAAAAACgQAAAAAAAALBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAACQQAAAAAAAAJBAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAMBQAAAAAAAAwFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2171,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAsEAAAAAAAADAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAACwQAAAAAAAALBAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAOBQAAAAAAAA4FAAAAAAAAAAAAAAAA8L8"
				],
				[
					2177,
					1,
					"insert",
					{
						"characters": "Ve"
					},
					"AgAAAAwEAAAAAAAADQQAAAAAAAAAAAAADQQAAAAAAAAOBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAADAQAAAAAAAAMBAAAAAAAAP///////+9/AQAAAAEAAAAPBQAAAAAAAA8FAAAAAAAAAAAAAAAA8L8"
				],
				[
					2178,
					2,
					"left_delete",
					null,
					"AgAAAA0EAAAAAAAADQQAAAAAAAABAAAAZQwEAAAAAAAADAQAAAAAAAABAAAAVg",
					"AgAAAAAAAAABAAAADgQAAAAAAAAOBAAAAAAAAAAAAAAAAPC/AQAAAAEAAAARBQAAAAAAABEFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2179,
					1,
					"insert",
					{
						"characters": "Matrix"
					},
					"BgAAAAwEAAAAAAAADQQAAAAAAAAAAAAADQQAAAAAAAAOBAAAAAAAAAAAAAAOBAAAAAAAAA8EAAAAAAAAAAAAAA8EAAAAAAAAEAQAAAAAAAAAAAAAEAQAAAAAAAARBAAAAAAAAAAAAAARBAAAAAAAABIEAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAADAQAAAAAAAAMBAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAPBQAAAAAAAA8FAAAAAAAAAAAAAAAA8L8"
				],
				[
					2180,
					1,
					"insert_completion",
					{
						"completion": "MatrixFourFour",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "MatrixFourFour"
					},
					"AgAAAAwEAAAAAAAADAQAAAAAAAAGAAAATWF0cml4DAQAAAAAAAAaBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAEgQAAAAAAAASBAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAVBQAAAAAAABUFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2181,
					1,
					"insert",
					{
						"characters": "::Mu"
					},
					"BAAAABoEAAAAAAAAGwQAAAAAAAAAAAAAGwQAAAAAAAAcBAAAAAAAAAAAAAAcBAAAAAAAAB0EAAAAAAAAAAAAAB0EAAAAAAAAHgQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAGgQAAAAAAAAaBAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAdBQAAAAAAAB0FAAAAAAAAAAAAAAAA8L8"
				],
				[
					2182,
					2,
					"left_delete",
					null,
					"AgAAAB0EAAAAAAAAHQQAAAAAAAABAAAAdRwEAAAAAAAAHAQAAAAAAAABAAAATQ",
					"AgAAAAAAAAABAAAAHgQAAAAAAAAeBAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAhBQAAAAAAACEFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2183,
					1,
					"insert",
					{
						"characters": "appl"
					},
					"BAAAABwEAAAAAAAAHQQAAAAAAAAAAAAAHQQAAAAAAAAeBAAAAAAAAAAAAAAeBAAAAAAAAB8EAAAAAAAAAAAAAB8EAAAAAAAAIAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAHAQAAAAAAAAcBAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAfBQAAAAAAAB8FAAAAAAAAAAAAAAAA8L8"
				],
				[
					2184,
					1,
					"left_delete",
					null,
					"AQAAAB8EAAAAAAAAHwQAAAAAAAABAAAAbA",
					"AgAAAAAAAAABAAAAIAQAAAAAAAAgBAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAjBQAAAAAAACMFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2185,
					1,
					"insert",
					{
						"characters": "lyvv"
					},
					"BAAAAB8EAAAAAAAAIAQAAAAAAAAAAAAAIAQAAAAAAAAhBAAAAAAAAAAAAAAhBAAAAAAAACIEAAAAAAAAAAAAACIEAAAAAAAAIwQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAHwQAAAAAAAAfBAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAiBQAAAAAAACIFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2186,
					2,
					"left_delete",
					null,
					"AgAAACIEAAAAAAAAIgQAAAAAAAABAAAAdiEEAAAAAAAAIQQAAAAAAAABAAAAdg",
					"AgAAAAAAAAABAAAAIwQAAAAAAAAjBAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAmBQAAAAAAACYFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2187,
					1,
					"insert",
					{
						"characters": "_vec_three"
					},
					"CgAAACEEAAAAAAAAIgQAAAAAAAAAAAAAIgQAAAAAAAAjBAAAAAAAAAAAAAAjBAAAAAAAACQEAAAAAAAAAAAAACQEAAAAAAAAJQQAAAAAAAAAAAAAJQQAAAAAAAAmBAAAAAAAAAAAAAAmBAAAAAAAACcEAAAAAAAAAAAAACcEAAAAAAAAKAQAAAAAAAAAAAAAKAQAAAAAAAApBAAAAAAAAAAAAAApBAAAAAAAACoEAAAAAAAAAAAAACoEAAAAAAAAKwQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAIQQAAAAAAAAhBAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAkBQAAAAAAACQFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2188,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAACsEAAAAAAAALQQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAKwQAAAAAAAArBAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAuBQAAAAAAAC4FAAAAAAAAAAAAAAAA8L8"
				],
				[
					2189,
					1,
					"insert",
					{
						"characters": "mat,"
					},
					"BAAAACwEAAAAAAAALQQAAAAAAAAAAAAALQQAAAAAAAAuBAAAAAAAAAAAAAAuBAAAAAAAAC8EAAAAAAAAAAAAAC8EAAAAAAAAMAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAALAQAAAAAAAAsBAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAwBQAAAAAAADAFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2190,
					1,
					"insert",
					{
						"characters": " first"
					},
					"BgAAADAEAAAAAAAAMQQAAAAAAAAAAAAAMQQAAAAAAAAyBAAAAAAAAAAAAAAyBAAAAAAAADMEAAAAAAAAAAAAADMEAAAAAAAANAQAAAAAAAAAAAAANAQAAAAAAAA1BAAAAAAAAAAAAAA1BAAAAAAAADYEAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAMAQAAAAAAAAwBAAAAAAAAAAAAAAAAPC/AQAAAAEAAAA0BQAAAAAAADQFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2192,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAADcEAAAAAAAAOAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAANwQAAAAAAAA3BAAAAAAAAAAAAAAAAPC/AQAAAAEAAAA6BQAAAAAAADoFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2195,
					1,
					"insert",
					{
						"characters": "&"
					},
					"AQAAACwEAAAAAAAALQQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAALAQAAAAAAAAsBAAAAAAAAAAAAAAAAPC/AQAAAAEAAAA7BQAAAAAAADsFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2198,
					1,
					"insert",
					{
						"characters": "&"
					},
					"AQAAADIEAAAAAAAAMwQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAMgQAAAAAAAAyBAAAAAAAAAAAAAAAAPC/AQAAAAEAAAA8BQAAAAAAADwFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2202,
					1,
					"paste",
					null,
					"AQAAAPwDAAAAAAAAOwQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAMwQAAAAAAAAzBAAAAAAAAAAAAAAAAPC/AQAAAAEAAAA9BQAAAAAAAD0FAAAAAAAAAAAAAAAA8L8"
				],
				[
					2206,
					1,
					"insert",
					{
						"characters": "secodn"
					},
					"BwAAAEMEAAAAAAAARAQAAAAAAAAAAAAARAQAAAAAAABEBAAAAAAAAAUAAABmaXJzdEQEAAAAAAAARQQAAAAAAAAAAAAARQQAAAAAAABGBAAAAAAAAAAAAABGBAAAAAAAAEcEAAAAAAAAAAAAAEcEAAAAAAAASAQAAAAAAAAAAAAASAQAAAAAAABJBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAASAQAAAAAAABDBAAAAAAAAAAAAAAAAPC/AQAAAAEAAAB8BQAAAAAAAHwFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2211,
					1,
					"insert",
					{
						"characters": "second"
					},
					"BwAAAHMEAAAAAAAAdAQAAAAAAAAAAAAAdAQAAAAAAAB0BAAAAAAAAAUAAABmaXJzdHQEAAAAAAAAdQQAAAAAAAAAAAAAdQQAAAAAAAB2BAAAAAAAAAAAAAB2BAAAAAAAAHcEAAAAAAAAAAAAAHcEAAAAAAAAeAQAAAAAAAAAAAAAeAQAAAAAAAB5BAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAeAQAAAAAAABzBAAAAAAAAAAAAAAAAPC/AQAAAAEAAAB9BQAAAAAAAH0FAAAAAAAAAAAAAAAA8L8"
				],
				[
					2213,
					1,
					"paste",
					null,
					"AQAAADsEAAAAAAAAfAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAeQQAAAAAAAB5BAAAAAAAAAAAAAAAAPC/AQAAAAEAAAB+BQAAAAAAAH4FAAAAAAAAAAAAAAAA8L8"
				],
				[
					2218,
					1,
					"insert",
					{
						"characters": "second"
					},
					"BwAAAEMEAAAAAAAARAQAAAAAAAAAAAAARAQAAAAAAABEBAAAAAAAAAYAAABzZWNvZG5EBAAAAAAAAEUEAAAAAAAAAAAAAEUEAAAAAAAARgQAAAAAAAAAAAAARgQAAAAAAABHBAAAAAAAAAAAAABHBAAAAAAAAEgEAAAAAAAAAAAAAEgEAAAAAAAASQQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAASQQAAAAAAABDBAAAAAAAAAAAAAAAAPC/AQAAAAEAAAC/BQAAAAAAAL8FAAAAAAAAAAAAAAAA8L8"
				],
				[
					2221,
					1,
					"insert",
					{
						"characters": "third"
					},
					"BgAAAIQEAAAAAAAAhQQAAAAAAAAAAAAAhQQAAAAAAACFBAAAAAAAAAYAAABzZWNvZG6FBAAAAAAAAIYEAAAAAAAAAAAAAIYEAAAAAAAAhwQAAAAAAAAAAAAAhwQAAAAAAACIBAAAAAAAAAAAAACIBAAAAAAAAIkEAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAigQAAAAAAACEBAAAAAAAAAAAAAAAAPC/AQAAAAEAAAC/BQAAAAAAAL8FAAAAAAAAAAAAAAAA8L8"
				],
				[
					2225,
					1,
					"insert",
					{
						"characters": "third"
					},
					"BgAAALMEAAAAAAAAtAQAAAAAAAAAAAAAtAQAAAAAAAC0BAAAAAAAAAYAAABzZWNvbmS0BAAAAAAAALUEAAAAAAAAAAAAALUEAAAAAAAAtgQAAAAAAAAAAAAAtgQAAAAAAAC3BAAAAAAAAAAAAAC3BAAAAAAAALgEAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAuQQAAAAAAACzBAAAAAAAAAAAAAAAAPC/AQAAAAEAAAC+BQAAAAAAAL4FAAAAAAAAAAAAAAAA8L8"
				],
				[
					2245,
					1,
					"insert",
					{
						"characters": "?"
					},
					"AwAAAIAEAAAAAAAAgQQAAAAAAAAAAAAAPwQAAAAAAABABAAAAAAAAAAAAAAABAAAAAAAAAEEAAAAAAAAAAAAAA",
					"AgAAAAAAAAADAAAAAAQAAAAAAAAABAAAAAAAAAAAAAAAAD1APwQAAAAAAAA/BAAAAAAAAAAAAAAAAD1AgAQAAAAAAACABAAAAAAAAAAAAAAAAD1AAQAAAAEAAAC9BQAAAAAAAL0FAAAAAAAAAAAAAAAA8L8"
				],
				[
					2246,
					1,
					"left_delete",
					null,
					"AwAAAIIEAAAAAAAAggQAAAAAAAABAAAAP0AEAAAAAAAAQAQAAAAAAAABAAAAPwAEAAAAAAAAAAQAAAAAAAABAAAAPw",
					"AgAAAAAAAAADAAAAAQQAAAAAAAABBAAAAAAAAAAAAAAAAPC/QQQAAAAAAABBBAAAAAAAAAAAAAAAAPC/gwQAAAAAAACDBAAAAAAAAAAAAAAAAPC/AQAAAAEAAADABQAAAAAAAMAFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2247,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AwAAAAAEAAAAAAAAAwQAAAAAAAAAAAAAQgQAAAAAAABFBAAAAAAAAAAAAACGBAAAAAAAAIkEAAAAAAAAAAAAAA",
					"AgAAAAAAAAADAAAAAAQAAAAAAAAABAAAAAAAAAAAAAAAAPC/PwQAAAAAAAA/BAAAAAAAAAAAAAAAAPC/gAQAAAAAAACABAAAAAAAAAAAAAAAAPC/AQAAAAEAAAC9BQAAAAAAAL0FAAAAAAAAAAAAAAAA8L8"
				],
				[
					2259,
					1,
					"left_delete",
					null,
					"AQAAAO8DAAAAAAAA7wMAAAAAAAABAAAALQ",
					"AgAAAAAAAAABAAAA8AMAAAAAAADwAwAAAAAAAAAAAAAAAPC/AQAAAAEAAADGBQAAAAAAAMYFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2265,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAAP8DAAAAAAAA/wMAAAAAAAADAAAALy8g",
					"AgAAAAAAAAABAAAALQQAAAAAAAAtBAAAAAAAAAAAAAAAgHZAAQAAAAEAAADFBQAAAAAAAMUFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2267,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAAD4EAAAAAAAAPgQAAAAAAAADAAAALy8g",
					"AgAAAAAAAAABAAAAaQQAAAAAAABpBAAAAAAAAAAAAAAAIHVAAQAAAAEAAADCBQAAAAAAAMIFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2269,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAAH8EAAAAAAAAfwQAAAAAAAADAAAALy8g",
					"AgAAAAAAAAABAAAApwQAAAAAAACnBAAAAAAAAAAAAAAA0HNAAQAAAAEAAAC/BQAAAAAAAL8FAAAAAAAAAAAAAAAA8L8"
				],
				[
					2306,
					1,
					"insert",
					{
						"characters": "0.0"
					},
					"BAAAAFIDAAAAAAAAUwMAAAAAAAAAAAAAUwMAAAAAAABTAwAAAAAAAAcAAABvZmZzZXQpUwMAAAAAAABUAwAAAAAAAAAAAABUAwAAAAAAAFUDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAWQMAAAAAAABSAwAAAAAAAAAAAAAAAPC/AQAAAAEAAAC8BQAAAAAAALwFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2313,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAFYDAAAAAAAAVwMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAVgMAAAAAAABWAwAAAAAAAAAAAAAAAPC/AQAAAAEAAAC4BQAAAAAAALgFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2318,
					1,
					"insert",
					{
						"characters": "0.0"
					},
					"BAAAAEoDAAAAAAAASwMAAAAAAAAAAAAASwMAAAAAAABLAwAAAAAAAAYAAABvZmZzZXRLAwAAAAAAAEwDAAAAAAAAAAAAAEwDAAAAAAAATQMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAUAMAAAAAAABKAwAAAAAAAAAAAAAAAPC/AQAAAAEAAAC5BQAAAAAAALkFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2329,
					3,
					"left_delete",
					null,
					"AwAAAEwDAAAAAAAATAMAAAAAAAABAAAAMEsDAAAAAAAASwMAAAAAAAABAAAALkoDAAAAAAAASgMAAAAAAAABAAAAMA",
					"AgAAAAAAAAABAAAATQMAAAAAAABNAwAAAAAAAAAAAAAAAPC/AQAAAAEAAAC2BQAAAAAAALYFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2330,
					1,
					"insert",
					{
						"characters": "offset"
					},
					"BgAAAEoDAAAAAAAASwMAAAAAAAAAAAAASwMAAAAAAABMAwAAAAAAAAAAAABMAwAAAAAAAE0DAAAAAAAAAAAAAE0DAAAAAAAATgMAAAAAAAAAAAAATgMAAAAAAABPAwAAAAAAAAAAAABPAwAAAAAAAFADAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAASgMAAAAAAABKAwAAAAAAAAAAAAAAAPC/AQAAAAEAAACzBQAAAAAAALMFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2334,
					1,
					"left_delete",
					null,
					"AQAAAEIDAAAAAAAAQgMAAAAAAAAGAAAAb2Zmc2V0",
					"AgAAAAAAAAABAAAASAMAAAAAAABCAwAAAAAAAAAAAAAAAPC/AQAAAAEAAAC5BQAAAAAAALkFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2335,
					1,
					"insert",
					{
						"characters": "0.0"
					},
					"AwAAAEIDAAAAAAAAQwMAAAAAAAAAAAAAQwMAAAAAAABEAwAAAAAAAAAAAABEAwAAAAAAAEUDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQgMAAAAAAABCAwAAAAAAAAAAAAAAAPC/AQAAAAEAAACzBQAAAAAAALMFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2346,
					3,
					"left_delete",
					null,
					"AwAAAEQDAAAAAAAARAMAAAAAAAABAAAAMEMDAAAAAAAAQwMAAAAAAAABAAAALkIDAAAAAAAAQgMAAAAAAAABAAAAMA",
					"AgAAAAAAAAABAAAARQMAAAAAAABFAwAAAAAAAAAAAAAAAPC/AQAAAAEAAAC2BQAAAAAAALYFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2347,
					1,
					"insert",
					{
						"characters": "offset"
					},
					"BgAAAEIDAAAAAAAAQwMAAAAAAAAAAAAAQwMAAAAAAABEAwAAAAAAAAAAAABEAwAAAAAAAEUDAAAAAAAAAAAAAEUDAAAAAAAARgMAAAAAAAAAAAAARgMAAAAAAABHAwAAAAAAAAAAAABHAwAAAAAAAEgDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQgMAAAAAAABCAwAAAAAAAAAAAAAAAPC/AQAAAAEAAACzBQAAAAAAALMFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2399,
					1,
					"insert",
					{
						"characters": "0.0"
					},
					"BAAAAEIDAAAAAAAAQwMAAAAAAAAAAAAAQwMAAAAAAABDAwAAAAAAAAYAAABvZmZzZXRDAwAAAAAAAEQDAAAAAAAAAAAAAEQDAAAAAAAARQMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQgMAAAAAAABIAwAAAAAAAAAAAAAAAPC/AQAAAAEAAAC5BQAAAAAAALkFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2508,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAHQEAAAAAAAAdQQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAdAQAAAAAAAB0BAAAAAAAAAAAAAAAAPC/AQAAAAEAAAC2BQAAAAAAALYFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2517,
					1,
					"left_delete",
					null,
					"AQAAAHQEAAAAAAAAdAQAAAAAAAABAAAAMQ",
					"AgAAAAAAAAABAAAAdQQAAAAAAAB1BAAAAAAAAAAAAAAAAPC/AQAAAAEAAAC3BQAAAAAAALcFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2659,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAAJECAAAAAAAAkgIAAAAAAAAAAAAAkgIAAAAAAACWAgAAAAAAAAAAAACWAgAAAAAAAJcCAAAAAAAAAAAAAJcCAAAAAAAAmwIAAAAAAAAAAAAAkgIAAAAAAACSAgAAAAAAAAQAAAAgICAg",
					"AgAAAAAAAAABAAAAkQIAAAAAAACRAgAAAAAAAP///////+9/AQAAAAEAAAC2BQAAAAAAALYFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2661,
					1,
					"reindent",
					null,
					"AQAAAJICAAAAAAAAlgIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAkgIAAAAAAACSAgAAAAAAAAAAAAAAAD1AAQAAAAEAAAC8BQAAAAAAALwFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2662,
					1,
					"insert",
					{
						"characters": "state."
					},
					"BwAAAJYCAAAAAAAAlwIAAAAAAAAAAAAAmAIAAAAAAACYAgAAAAAAAAQAAAAgICAglwIAAAAAAACYAgAAAAAAAAAAAACYAgAAAAAAAJkCAAAAAAAAAAAAAJkCAAAAAAAAmgIAAAAAAAAAAAAAmgIAAAAAAACbAgAAAAAAAAAAAACbAgAAAAAAAJwCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAlgIAAAAAAACWAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADABQAAAAAAAMAFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2665,
					1,
					"insert",
					{
						"characters": "\n\n//"
					},
					"BwAAAJECAAAAAAAAkgIAAAAAAAAAAAAAkgIAAAAAAACWAgAAAAAAAAAAAACWAgAAAAAAAJcCAAAAAAAAAAAAAJcCAAAAAAAAmwIAAAAAAAAAAAAAkgIAAAAAAACSAgAAAAAAAAQAAAAgICAglwIAAAAAAACYAgAAAAAAAAAAAACYAgAAAAAAAJkCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAkQIAAAAAAACRAgAAAAAAAP///////+9/AQAAAAEAAADCBQAAAAAAAMIFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2666,
					1,
					"insert",
					{
						"characters": " resetrender"
					},
					"DAAAAJkCAAAAAAAAmgIAAAAAAAAAAAAAmgIAAAAAAACbAgAAAAAAAAAAAACbAgAAAAAAAJwCAAAAAAAAAAAAAJwCAAAAAAAAnQIAAAAAAAAAAAAAnQIAAAAAAACeAgAAAAAAAAAAAACeAgAAAAAAAJ8CAAAAAAAAAAAAAJ8CAAAAAAAAoAIAAAAAAAAAAAAAoAIAAAAAAAChAgAAAAAAAAAAAAChAgAAAAAAAKICAAAAAAAAAAAAAKICAAAAAAAAowIAAAAAAAAAAAAAowIAAAAAAACkAgAAAAAAAAAAAACkAgAAAAAAAKUCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAmQIAAAAAAACZAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADKBQAAAAAAAMoFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2668,
					1,
					"insert",
					{
						"characters": "reset"
					},
					"BgAAAJoCAAAAAAAAmwIAAAAAAAAAAAAAmwIAAAAAAACbAgAAAAAAAAsAAAByZXNldHJlbmRlcpsCAAAAAAAAnAIAAAAAAAAAAAAAnAIAAAAAAACdAgAAAAAAAAAAAACdAgAAAAAAAJ4CAAAAAAAAAAAAAJ4CAAAAAAAAnwIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAApQIAAAAAAACaAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADWBQAAAAAAANYFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2669,
					1,
					"insert",
					{
						"characters": " render"
					},
					"BwAAAJ8CAAAAAAAAoAIAAAAAAAAAAAAAoAIAAAAAAAChAgAAAAAAAAAAAAChAgAAAAAAAKICAAAAAAAAAAAAAKICAAAAAAAAowIAAAAAAAAAAAAAowIAAAAAAACkAgAAAAAAAAAAAACkAgAAAAAAAKUCAAAAAAAAAAAAAKUCAAAAAAAApgIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAnwIAAAAAAACfAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADQBQAAAAAAANAFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2670,
					1,
					"insert",
					{
						"characters": " lists"
					},
					"BgAAAKYCAAAAAAAApwIAAAAAAAAAAAAApwIAAAAAAACoAgAAAAAAAAAAAACoAgAAAAAAAKkCAAAAAAAAAAAAAKkCAAAAAAAAqgIAAAAAAAAAAAAAqgIAAAAAAACrAgAAAAAAAAAAAACrAgAAAAAAAKwCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAApgIAAAAAAACmAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADXBQAAAAAAANcFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2672,
					1,
					"insert",
					{
						"characters": "render_"
					},
					"BwAAALcCAAAAAAAAuAIAAAAAAAAAAAAAuAIAAAAAAAC5AgAAAAAAAAAAAAC5AgAAAAAAALoCAAAAAAAAAAAAALoCAAAAAAAAuwIAAAAAAAAAAAAAuwIAAAAAAAC8AgAAAAAAAAAAAAC8AgAAAAAAAL0CAAAAAAAAAAAAAL0CAAAAAAAAvgIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAtwIAAAAAAAC3AgAAAAAAAAAAAAAAgGZAAQAAAAEAAADdBQAAAAAAAN0FAAAAAAAAAAAAAAAA8L8"
				],
				[
					2673,
					1,
					"insert",
					{
						"characters": "commands"
					},
					"CAAAAL4CAAAAAAAAvwIAAAAAAAAAAAAAvwIAAAAAAADAAgAAAAAAAAAAAADAAgAAAAAAAMECAAAAAAAAAAAAAMECAAAAAAAAwgIAAAAAAAAAAAAAwgIAAAAAAADDAgAAAAAAAAAAAADDAgAAAAAAAMQCAAAAAAAAAAAAAMQCAAAAAAAAxQIAAAAAAAAAAAAAxQIAAAAAAADGAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAvgIAAAAAAAC+AgAAAAAAAAAAAAAAAPC/AQAAAAEAAADkBQAAAAAAAOQFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2674,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAMYCAAAAAAAAxwIAAAAAAAAAAAAAxwIAAAAAAADIAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAxgIAAAAAAADGAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADsBQAAAAAAAOwFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2675,
					1,
					"insert",
					{
						"characters": " vec!"
					},
					"BQAAAMgCAAAAAAAAyQIAAAAAAAAAAAAAyQIAAAAAAADKAgAAAAAAAAAAAADKAgAAAAAAAMsCAAAAAAAAAAAAAMsCAAAAAAAAzAIAAAAAAAAAAAAAzAIAAAAAAADNAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAyAIAAAAAAADIAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADuBQAAAAAAAO4FAAAAAAAAAAAAAAAA8L8"
				],
				[
					2676,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAM0CAAAAAAAAzwIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAzQIAAAAAAADNAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADzBQAAAAAAAPMFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2678,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAM8CAAAAAAAA0AIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAzwIAAAAAAADPAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAD1BQAAAAAAAPUFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2679,
					2,
					"rust_fmt_format_buffer",
					null,
					"AQAAAJICAAAAAAAAkgIAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAA0AIAAAAAAADQAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAD2BQAAAAAAAPYFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2682,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAALcFAAAAAAAAugUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAswUAAAAAAACzBQAAAAAAAAAAAAAAAAAAAQAAAAEAAAD1BQAAAAAAAPUFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2685,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAALcFAAAAAAAAtwUAAAAAAAADAAAALy8g",
					"AgAAAAAAAAABAAAAswUAAAAAAACzBQAAAAAAAAAAAAAAAAAAAQAAAAEAAAD4BQAAAAAAAPgFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2696,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAAPIFAAAAAAAA8wUAAAAAAAAAAAAA8wUAAAAAAAD3BQAAAAAAAAAAAAD3BQAAAAAAAPgFAAAAAAAAAAAAAPgFAAAAAAAA/AUAAAAAAAAAAAAA8wUAAAAAAADzBQAAAAAAAAQAAAAgICAg",
					"AgAAAAAAAAABAAAA8gUAAAAAAADyBQAAAAAAAP///////+9/AQAAAAEAAAD1BQAAAAAAAPUFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2698,
					1,
					"reindent",
					null,
					"AQAAAPMFAAAAAAAA9wUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA8wUAAAAAAADzBQAAAAAAAAAAAAAAAD1AAQAAAAEAAAD7BQAAAAAAAPsFAAAAAAAAAAAAAAAA8L8"
				],
				[
					2700,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AgAAAPwFAAAAAAAAAAYAAAAAAAAAAAAA8wUAAAAAAADzBQAAAAAAAAQAAAAgICAg",
					"AgAAAAAAAAABAAAA/AUAAAAAAAD8BQAAAAAAAAAAAAAAAD1AAQAAAAEAAAD/BQAAAAAAAP8FAAAAAAAAAAAAAAAA8L8"
				],
				[
					2701,
					1,
					"insert",
					{
						"characters": "state."
					},
					"BgAAAPwFAAAAAAAA/QUAAAAAAAAAAAAA/QUAAAAAAAD+BQAAAAAAAAAAAAD+BQAAAAAAAP8FAAAAAAAAAAAAAP8FAAAAAAAAAAYAAAAAAAAAAAAAAAYAAAAAAAABBgAAAAAAAAAAAAABBgAAAAAAAAIGAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA/AUAAAAAAAD8BQAAAAAAAAAAAAAAAPC/AQAAAAEAAAD/BQAAAAAAAP8FAAAAAAAAAAAAAAAA8L8"
				],
				[
					2703,
					1,
					"left_delete",
					null,
					"AQAAAPgFAAAAAAAA+AUAAAAAAAAEAAAAICAgIA",
					"AgAAAAAAAAABAAAA/AUAAAAAAAD8BQAAAAAAAAAAAAAAAE1AAQAAAAEAAAAFBgAAAAAAAAUGAAAAAAAAAAAAAAAA8L8"
				],
				[
					2705,
					1,
					"insert",
					{
						"characters": "render"
					},
					"BgAAAP4FAAAAAAAA/wUAAAAAAAAAAAAA/wUAAAAAAAAABgAAAAAAAAAAAAAABgAAAAAAAAEGAAAAAAAAAAAAAAEGAAAAAAAAAgYAAAAAAAAAAAAAAgYAAAAAAAADBgAAAAAAAAAAAAADBgAAAAAAAAQGAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA/gUAAAAAAAD+BQAAAAAAAP///////+9/AQAAAAEAAAABBgAAAAAAAAEGAAAAAAAAAAAAAAAA8L8"
				],
				[
					2706,
					1,
					"insert_completion",
					{
						"completion": "render_commands",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "render_commands"
					},
					"AgAAAP4FAAAAAAAA/gUAAAAAAAAGAAAAcmVuZGVy/gUAAAAAAAANBgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAABAYAAAAAAAAEBgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAHBgAAAAAAAAcGAAAAAAAAAAAAAAAA8L8"
				],
				[
					2707,
					1,
					"insert",
					{
						"characters": ".push"
					},
					"BQAAAA0GAAAAAAAADgYAAAAAAAAAAAAADgYAAAAAAAAPBgAAAAAAAAAAAAAPBgAAAAAAABAGAAAAAAAAAAAAABAGAAAAAAAAEQYAAAAAAAAAAAAAEQYAAAAAAAASBgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAADQYAAAAAAAANBgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAQBgAAAAAAABAGAAAAAAAAAAAAAAAA8L8"
				],
				[
					2708,
					1,
					"left_delete",
					null,
					"AQAAABEGAAAAAAAAEQYAAAAAAAABAAAAaA",
					"AgAAAAAAAAABAAAAEgYAAAAAAAASBgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAVBgAAAAAAABUGAAAAAAAAAAAAAAAA8L8"
				],
				[
					2709,
					1,
					"insert",
					{
						"characters": "h"
					},
					"AQAAABEGAAAAAAAAEgYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAEQYAAAAAAAARBgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAUBgAAAAAAABQGAAAAAAAAAAAAAAAA8L8"
				],
				[
					2710,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAABIGAAAAAAAAFAYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAEgYAAAAAAAASBgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAVBgAAAAAAABUGAAAAAAAAAAAAAAAA8L8"
				],
				[
					2711,
					1,
					"insert",
					{
						"characters": "Rendr"
					},
					"BQAAABMGAAAAAAAAFAYAAAAAAAAAAAAAFAYAAAAAAAAVBgAAAAAAAAAAAAAVBgAAAAAAABYGAAAAAAAAAAAAABYGAAAAAAAAFwYAAAAAAAAAAAAAFwYAAAAAAAAYBgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAEwYAAAAAAAATBgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAXBgAAAAAAABcGAAAAAAAAAAAAAAAA8L8"
				],
				[
					2712,
					1,
					"left_delete",
					null,
					"AQAAABcGAAAAAAAAFwYAAAAAAAABAAAAcg",
					"AgAAAAAAAAABAAAAGAYAAAAAAAAYBgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAcBgAAAAAAABwGAAAAAAAAAAAAAAAA8L8"
				],
				[
					2713,
					1,
					"insert",
					{
						"characters": "erCommand::"
					},
					"CwAAABcGAAAAAAAAGAYAAAAAAAAAAAAAGAYAAAAAAAAZBgAAAAAAAAAAAAAZBgAAAAAAABoGAAAAAAAAAAAAABoGAAAAAAAAGwYAAAAAAAAAAAAAGwYAAAAAAAAcBgAAAAAAAAAAAAAcBgAAAAAAAB0GAAAAAAAAAAAAAB0GAAAAAAAAHgYAAAAAAAAAAAAAHgYAAAAAAAAfBgAAAAAAAAAAAAAfBgAAAAAAACAGAAAAAAAAAAAAACAGAAAAAAAAIQYAAAAAAAAAAAAAIQYAAAAAAAAiBgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAFwYAAAAAAAAXBgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAbBgAAAAAAABsGAAAAAAAAAAAAAAAA8L8"
				],
				[
					2714,
					1,
					"insert",
					{
						"characters": "new_model"
					},
					"CQAAACIGAAAAAAAAIwYAAAAAAAAAAAAAIwYAAAAAAAAkBgAAAAAAAAAAAAAkBgAAAAAAACUGAAAAAAAAAAAAACUGAAAAAAAAJgYAAAAAAAAAAAAAJgYAAAAAAAAnBgAAAAAAAAAAAAAnBgAAAAAAACgGAAAAAAAAAAAAACgGAAAAAAAAKQYAAAAAAAAAAAAAKQYAAAAAAAAqBgAAAAAAAAAAAAAqBgAAAAAAACsGAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAIgYAAAAAAAAiBgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAmBgAAAAAAACYGAAAAAAAAAAAAAAAA8L8"
				],
				[
					2715,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAACsGAAAAAAAALQYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAKwYAAAAAAAArBgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAvBgAAAAAAAC8GAAAAAAAAAAAAAAAA8L8"
				],
				[
					2721,
					1,
					"insert",
					{
						"characters": "state.cube_id,"
					},
					"DgAAACwGAAAAAAAALQYAAAAAAAAAAAAALQYAAAAAAAAuBgAAAAAAAAAAAAAuBgAAAAAAAC8GAAAAAAAAAAAAAC8GAAAAAAAAMAYAAAAAAAAAAAAAMAYAAAAAAAAxBgAAAAAAAAAAAAAxBgAAAAAAADIGAAAAAAAAAAAAADIGAAAAAAAAMwYAAAAAAAAAAAAAMwYAAAAAAAA0BgAAAAAAAAAAAAA0BgAAAAAAADUGAAAAAAAAAAAAADUGAAAAAAAANgYAAAAAAAAAAAAANgYAAAAAAAA3BgAAAAAAAAAAAAA3BgAAAAAAADgGAAAAAAAAAAAAADgGAAAAAAAAOQYAAAAAAAAAAAAAOQYAAAAAAAA6BgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAALAYAAAAAAAAsBgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAxBgAAAAAAADEGAAAAAAAAAAAAAAAA8L8"
				],
				[
					2722,
					1,
					"insert",
					{
						"characters": " state.prog_i"
					},
					"DQAAADoGAAAAAAAAOwYAAAAAAAAAAAAAOwYAAAAAAAA8BgAAAAAAAAAAAAA8BgAAAAAAAD0GAAAAAAAAAAAAAD0GAAAAAAAAPgYAAAAAAAAAAAAAPgYAAAAAAAA/BgAAAAAAAAAAAAA/BgAAAAAAAEAGAAAAAAAAAAAAAEAGAAAAAAAAQQYAAAAAAAAAAAAAQQYAAAAAAABCBgAAAAAAAAAAAABCBgAAAAAAAEMGAAAAAAAAAAAAAEMGAAAAAAAARAYAAAAAAAAAAAAARAYAAAAAAABFBgAAAAAAAAAAAABFBgAAAAAAAEYGAAAAAAAAAAAAAEYGAAAAAAAARwYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAOgYAAAAAAAA6BgAAAAAAAAAAAAAAAPC/AQAAAAEAAAA/BgAAAAAAAD8GAAAAAAAAAAAAAAAA8L8"
				],
				[
					2723,
					1,
					"insert",
					{
						"characters": "d"
					},
					"AQAAAEcGAAAAAAAASAYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAARwYAAAAAAABHBgAAAAAAAAAAAAAAAPC/AQAAAAEAAABMBgAAAAAAAEwGAAAAAAAAAAAAAAAA8L8"
				],
				[
					2724,
					2,
					"rust_fmt_format_buffer",
					null,
					"AgAAAP0FAAAAAAAABgYAAAAAAAAAAAAAFgYAAAAAAAAfBgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAASAYAAAAAAABIBgAAAAAAAAAAAAAAAPC/AQAAAAEAAABNBgAAAAAAAE0GAAAAAAAAAAAAAAAA8L8"
				],
				[
					2726,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAFwGAAAAAAAAXQYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAXAYAAAAAAABcBgAAAAAAAP///////+9/AQAAAAEAAABfBgAAAAAAAF8GAAAAAAAAAAAAAAAA8L8"
				],
				[
					2733,
					1,
					"insert",
					{
						"characters": "\nuse"
					},
					"BAAAAJQAAAAAAAAAlQAAAAAAAAAAAAAAlQAAAAAAAACWAAAAAAAAAAAAAACWAAAAAAAAAJcAAAAAAAAAAAAAAJcAAAAAAAAAmAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAlAAAAAAAAACUAAAAAAAAAAAAAAAAAAAAAQAAAAEAAABgBgAAAAAAAGAGAAAAAAAAAAAAAAAA8L8"
				],
				[
					2734,
					1,
					"insert",
					{
						"characters": " r"
					},
					"AgAAAJgAAAAAAAAAmQAAAAAAAAAAAAAAmQAAAAAAAACaAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAmAAAAAAAAACYAAAAAAAAAAAAAAAAAPC/AQAAAAEAAABkBgAAAAAAAGQGAAAAAAAAAAAAAAAA8L8"
				],
				[
					2735,
					1,
					"insert",
					{
						"characters": "enderer::"
					},
					"CQAAAJoAAAAAAAAAmwAAAAAAAAAAAAAAmwAAAAAAAACcAAAAAAAAAAAAAACcAAAAAAAAAJ0AAAAAAAAAAAAAAJ0AAAAAAAAAngAAAAAAAAAAAAAAngAAAAAAAACfAAAAAAAAAAAAAACfAAAAAAAAAKAAAAAAAAAAAAAAAKAAAAAAAAAAoQAAAAAAAAAAAAAAoQAAAAAAAACiAAAAAAAAAAAAAACiAAAAAAAAAKMAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAmgAAAAAAAACaAAAAAAAAAAAAAAAAAPC/AQAAAAEAAABmBgAAAAAAAGYGAAAAAAAAAAAAAAAA8L8"
				],
				[
					2736,
					1,
					"insert",
					{
						"characters": "render_command"
					},
					"DgAAAKMAAAAAAAAApAAAAAAAAAAAAAAApAAAAAAAAAClAAAAAAAAAAAAAAClAAAAAAAAAKYAAAAAAAAAAAAAAKYAAAAAAAAApwAAAAAAAAAAAAAApwAAAAAAAACoAAAAAAAAAAAAAACoAAAAAAAAAKkAAAAAAAAAAAAAAKkAAAAAAAAAqgAAAAAAAAAAAAAAqgAAAAAAAACrAAAAAAAAAAAAAACrAAAAAAAAAKwAAAAAAAAAAAAAAKwAAAAAAAAArQAAAAAAAAAAAAAArQAAAAAAAACuAAAAAAAAAAAAAACuAAAAAAAAAK8AAAAAAAAAAAAAAK8AAAAAAAAAsAAAAAAAAAAAAAAAsAAAAAAAAACxAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAowAAAAAAAACjAAAAAAAAAAAAAAAAAPC/AQAAAAEAAABvBgAAAAAAAG8GAAAAAAAAAAAAAAAA8L8"
				],
				[
					2737,
					1,
					"insert",
					{
						"characters": "::*;"
					},
					"BAAAALEAAAAAAAAAsgAAAAAAAAAAAAAAsgAAAAAAAACzAAAAAAAAAAAAAACzAAAAAAAAALQAAAAAAAAAAAAAALQAAAAAAAAAtQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAsQAAAAAAAACxAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAB9BgAAAAAAAH0GAAAAAAAAAAAAAAAA8L8"
				],
				[
					2738,
					2,
					"rust_fmt_format_buffer",
					null,
					"AgAAAJkAAAAAAAAAmQAAAAAAAAAhAAAAcmVuZGVyZXI6OnJlbmRlcl9jb21tYW5kOjoqOwp1c2UgtAAAAAAAAADVAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAtQAAAAAAAAC1AAAAAAAAAAAAAAAAAPC/AQAAAAEAAACBBgAAAAAAAIEGAAAAAAAAAAAAAAAA8L8"
				],
				[
					2741,
					1,
					"insert",
					{
						"characters": "render"
					},
					"BwAAAL0AAAAAAAAAvgAAAAAAAAAAAAAAvgAAAAAAAAC+AAAAAAAAAAgAAAByZW5kZXJlcr4AAAAAAAAAvwAAAAAAAAAAAAAAvwAAAAAAAADAAAAAAAAAAAAAAADAAAAAAAAAAMEAAAAAAAAAAAAAAMEAAAAAAAAAwgAAAAAAAAAAAAAAwgAAAAAAAADDAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAxQAAAAAAAAC9AAAAAAAAAAAAAAAAAPC/AQAAAAEAAACBBgAAAAAAAIEGAAAAAAAAAAAAAAAA8L8"
				],
				[
					2806,
					1,
					"insert",
					{
						"characters": "\n\nren"
					},
					"CAAAAHwGAAAAAAAAfQYAAAAAAAAAAAAAfQYAAAAAAACFBgAAAAAAAAAAAACFBgAAAAAAAIYGAAAAAAAAAAAAAIYGAAAAAAAAjgYAAAAAAAAAAAAAfQYAAAAAAAB9BgAAAAAAAAgAAAAgICAgICAgIIYGAAAAAAAAhwYAAAAAAAAAAAAAhwYAAAAAAACIBgAAAAAAAAAAAACIBgAAAAAAAIkGAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAfAYAAAAAAAB8BgAAAAAAAP///////+9/AQAAAAEAAAB/BgAAAAAAAH8GAAAAAAAAAAAAAAAA8L8"
				],
				[
					2807,
					3,
					"left_delete",
					null,
					"AwAAAIgGAAAAAAAAiAYAAAAAAAABAAAAbocGAAAAAAAAhwYAAAAAAAABAAAAZYYGAAAAAAAAhgYAAAAAAAABAAAAcg",
					"AgAAAAAAAAABAAAAiQYAAAAAAACJBgAAAAAAAAAAAAAAAPC/AQAAAAEAAACMBgAAAAAAAIwGAAAAAAAAAAAAAAAA8L8"
				],
				[
					2808,
					1,
					"cut",
					null,
					"AQAAAH4GAAAAAAAAfgYAAAAAAAAJAAAAICAgICAgICAK",
					"AgAAAAAAAAABAAAAhgYAAAAAAACGBgAAAAAAAAAAAAAAAPC/AQAAAAEAAACJBgAAAAAAAIkGAAAAAAAAAAAAAAAA8L8"
				],
				[
					2810,
					2,
					"rust_fmt_format_buffer",
					null,
					"AQAAAH0GAAAAAAAAfQYAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAfQYAAAAAAAB9BgAAAAAAAAAAAAAAAAAAAQAAAAEAAACABgAAAAAAAIAGAAAAAAAAAAAAAAAA8L8"
				],
				[
					2823,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAANYFAAAAAAAA2QUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0gUAAAAAAADSBQAAAAAAAAAAAAAAAAAAAQAAAAEAAAB/BgAAAAAAAH8GAAAAAAAAAAAAAAAA8L8"
				],
				[
					2828,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAANYFAAAAAAAA1gUAAAAAAAADAAAALy8g",
					"AgAAAAAAAAABAAAA4gUAAAAAAADiBQAAAAAAAAAAAAAAwFxAAQAAAAEAAACCBgAAAAAAAIIGAAAAAAAAAAAAAAAA8L8"
				],
				[
					2839,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAHkGAAAAAAAAegYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAeQYAAAAAAAB5BgAAAAAAAAAAAAAAAPC/AQAAAAEAAAB/BgAAAAAAAH8GAAAAAAAAAAAAAAAA8L8"
				],
				[
					2840,
					1,
					"insert",
					{
						"characters": " indecies"
					},
					"CQAAAHoGAAAAAAAAewYAAAAAAAAAAAAAewYAAAAAAAB8BgAAAAAAAAAAAAB8BgAAAAAAAH0GAAAAAAAAAAAAAH0GAAAAAAAAfgYAAAAAAAAAAAAAfgYAAAAAAAB/BgAAAAAAAAAAAAB/BgAAAAAAAIAGAAAAAAAAAAAAAIAGAAAAAAAAgQYAAAAAAAAAAAAAgQYAAAAAAACCBgAAAAAAAAAAAACCBgAAAAAAAIMGAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAegYAAAAAAAB6BgAAAAAAAAAAAAAAAPC/AQAAAAEAAACABgAAAAAAAIAGAAAAAAAAAAAAAAAA8L8"
				],
				[
					2842,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAANYFAAAAAAAA2QUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAEQYAAAAAAAARBgAAAAAAAAAAAAAAUIFAAQAAAAEAAACJBgAAAAAAAIkGAAAAAAAAAAAAAAAA8L8"
				],
				[
					2843,
					2,
					"rust_fmt_format_buffer",
					null,
					"BgAAAB8GAAAAAAAAHwYAAAAAAAAJAAAACiAgICAgICAgLwYAAAAAAAAvBgAAAAAAAAkAAAAKICAgICAgICBOBgAAAAAAAFcGAAAAAAAAAAAAAGUGAAAAAAAAbQYAAAAAAAAAAAAAfAYAAAAAAACEBgAAAAAAAAAAAACNBgAAAAAAAJMGAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAFAYAAAAAAAAUBgAAAAAAAAAAAAAAAPC/AQAAAAEAAACMBgAAAAAAAIwGAAAAAAAAAAAAAAAA8L8"
				],
				[
					2859,
					1,
					"insert",
					{
						"characters": "\n//"
					},
					"AwAAAGMCAAAAAAAAZAIAAAAAAAAAAAAAZAIAAAAAAABlAgAAAAAAAAAAAABlAgAAAAAAAGYCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAYwIAAAAAAABjAgAAAAAAAAAAAAAAAPC/AQAAAAEAAACZBgAAAAAAAJkGAAAAAAAAAAAAAAAA8L8"
				],
				[
					2860,
					1,
					"insert",
					{
						"characters": " do"
					},
					"AwAAAGYCAAAAAAAAZwIAAAAAAAAAAAAAZwIAAAAAAABoAgAAAAAAAAAAAABoAgAAAAAAAGkCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAZgIAAAAAAABmAgAAAAAAAAAAAAAAAPC/AQAAAAEAAACcBgAAAAAAAJwGAAAAAAAAAAAAAAAA8L8"
				],
				[
					2861,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAGkCAAAAAAAAagIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAaQIAAAAAAABpAgAAAAAAAAAAAAAAAPC/AQAAAAEAAACfBgAAAAAAAJ8GAAAAAAAAAAAAAAAA8L8"
				],
				[
					2862,
					3,
					"left_delete",
					null,
					"AwAAAGkCAAAAAAAAaQIAAAAAAAABAAAAIGgCAAAAAAAAaAIAAAAAAAABAAAAb2cCAAAAAAAAZwIAAAAAAAABAAAAZA",
					"AgAAAAAAAAABAAAAagIAAAAAAABqAgAAAAAAAAAAAAAAAPC/AQAAAAEAAACgBgAAAAAAAKAGAAAAAAAAAAAAAAAA8L8"
				],
				[
					2863,
					1,
					"insert",
					{
						"characters": "setup"
					},
					"BQAAAGcCAAAAAAAAaAIAAAAAAAAAAAAAaAIAAAAAAABpAgAAAAAAAAAAAABpAgAAAAAAAGoCAAAAAAAAAAAAAGoCAAAAAAAAawIAAAAAAAAAAAAAawIAAAAAAABsAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAZwIAAAAAAABnAgAAAAAAAAAAAAAAAPC/AQAAAAEAAACdBgAAAAAAAJ0GAAAAAAAAAAAAAAAA8L8"
				],
				[
					2864,
					5,
					"left_delete",
					null,
					"BQAAAGsCAAAAAAAAawIAAAAAAAABAAAAcGoCAAAAAAAAagIAAAAAAAABAAAAdWkCAAAAAAAAaQIAAAAAAAABAAAAdGgCAAAAAAAAaAIAAAAAAAABAAAAZWcCAAAAAAAAZwIAAAAAAAABAAAAcw",
					"AgAAAAAAAAABAAAAbAIAAAAAAABsAgAAAAAAAAAAAAAAAPC/AQAAAAEAAACiBgAAAAAAAKIGAAAAAAAAAAAAAAAA8L8"
				],
				[
					2865,
					1,
					"insert",
					{
						"characters": "do"
					},
					"AgAAAGcCAAAAAAAAaAIAAAAAAAAAAAAAaAIAAAAAAABpAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAZwIAAAAAAABnAgAAAAAAAAAAAAAAAPC/AQAAAAEAAACdBgAAAAAAAJ0GAAAAAAAAAAAAAAAA8L8"
				],
				[
					2866,
					1,
					"insert",
					{
						"characters": " e"
					},
					"AgAAAGkCAAAAAAAAagIAAAAAAAAAAAAAagIAAAAAAABrAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAaQIAAAAAAABpAgAAAAAAAAAAAAAAAPC/AQAAAAEAAACfBgAAAAAAAJ8GAAAAAAAAAAAAAAAA8L8"
				],
				[
					2867,
					1,
					"left_delete",
					null,
					"AQAAAGoCAAAAAAAAagIAAAAAAAABAAAAZQ",
					"AgAAAAAAAAABAAAAawIAAAAAAABrAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAChBgAAAAAAAKEGAAAAAAAAAAAAAAAA8L8"
				],
				[
					2868,
					1,
					"insert",
					{
						"characters": "engine"
					},
					"BgAAAGoCAAAAAAAAawIAAAAAAAAAAAAAawIAAAAAAABsAgAAAAAAAAAAAABsAgAAAAAAAG0CAAAAAAAAAAAAAG0CAAAAAAAAbgIAAAAAAAAAAAAAbgIAAAAAAABvAgAAAAAAAAAAAABvAgAAAAAAAHACAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAagIAAAAAAABqAgAAAAAAAAAAAAAAAPC/AQAAAAEAAACgBgAAAAAAAKAGAAAAAAAAAAAAAAAA8L8"
				],
				[
					2869,
					1,
					"insert",
					{
						"characters": " stuff."
					},
					"BwAAAHACAAAAAAAAcQIAAAAAAAAAAAAAcQIAAAAAAAByAgAAAAAAAAAAAAByAgAAAAAAAHMCAAAAAAAAAAAAAHMCAAAAAAAAdAIAAAAAAAAAAAAAdAIAAAAAAAB1AgAAAAAAAAAAAAB1AgAAAAAAAHYCAAAAAAAAAAAAAHYCAAAAAAAAdwIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAcAIAAAAAAABwAgAAAAAAAAAAAAAAAPC/AQAAAAEAAACmBgAAAAAAAKYGAAAAAAAAAAAAAAAA8L8"
				],
				[
					2870,
					1,
					"insert",
					{
						"characters": " Called"
					},
					"BwAAAHcCAAAAAAAAeAIAAAAAAAAAAAAAeAIAAAAAAAB5AgAAAAAAAAAAAAB5AgAAAAAAAHoCAAAAAAAAAAAAAHoCAAAAAAAAewIAAAAAAAAAAAAAewIAAAAAAAB8AgAAAAAAAAAAAAB8AgAAAAAAAH0CAAAAAAAAAAAAAH0CAAAAAAAAfgIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAdwIAAAAAAAB3AgAAAAAAAAAAAAAAAPC/AQAAAAEAAACtBgAAAAAAAK0GAAAAAAAAAAAAAAAA8L8"
				],
				[
					2871,
					1,
					"insert",
					{
						"characters": " at"
					},
					"AwAAAH4CAAAAAAAAfwIAAAAAAAAAAAAAfwIAAAAAAACAAgAAAAAAAAAAAACAAgAAAAAAAIECAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAfgIAAAAAAAB+AgAAAAAAAAAAAAAAAPC/AQAAAAEAAAC0BgAAAAAAALQGAAAAAAAAAAAAAAAA8L8"
				],
				[
					2872,
					1,
					"insert",
					{
						"characters": " the"
					},
					"BAAAAIECAAAAAAAAggIAAAAAAAAAAAAAggIAAAAAAACDAgAAAAAAAAAAAACDAgAAAAAAAIQCAAAAAAAAAAAAAIQCAAAAAAAAhQIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAgQIAAAAAAACBAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAC3BgAAAAAAALcGAAAAAAAAAAAAAAAA8L8"
				],
				[
					2873,
					1,
					"insert",
					{
						"characters": " start"
					},
					"BgAAAIUCAAAAAAAAhgIAAAAAAAAAAAAAhgIAAAAAAACHAgAAAAAAAAAAAACHAgAAAAAAAIgCAAAAAAAAAAAAAIgCAAAAAAAAiQIAAAAAAAAAAAAAiQIAAAAAAACKAgAAAAAAAAAAAACKAgAAAAAAAIsCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAhQIAAAAAAACFAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAC7BgAAAAAAALsGAAAAAAAAAAAAAAAA8L8"
				],
				[
					2874,
					1,
					"insert",
					{
						"characters": " of"
					},
					"AwAAAIsCAAAAAAAAjAIAAAAAAAAAAAAAjAIAAAAAAACNAgAAAAAAAAAAAACNAgAAAAAAAI4CAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAiwIAAAAAAACLAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADBBgAAAAAAAMEGAAAAAAAAAAAAAAAA8L8"
				],
				[
					2875,
					1,
					"insert",
					{
						"characters": " each"
					},
					"BQAAAI4CAAAAAAAAjwIAAAAAAAAAAAAAjwIAAAAAAACQAgAAAAAAAAAAAACQAgAAAAAAAJECAAAAAAAAAAAAAJECAAAAAAAAkgIAAAAAAAAAAAAAkgIAAAAAAACTAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAjgIAAAAAAACOAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADEBgAAAAAAAMQGAAAAAAAAAAAAAAAA8L8"
				],
				[
					2876,
					1,
					"insert",
					{
						"characters": " frame"
					},
					"BgAAAJMCAAAAAAAAlAIAAAAAAAAAAAAAlAIAAAAAAACVAgAAAAAAAAAAAACVAgAAAAAAAJYCAAAAAAAAAAAAAJYCAAAAAAAAlwIAAAAAAAAAAAAAlwIAAAAAAACYAgAAAAAAAAAAAACYAgAAAAAAAJkCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAkwIAAAAAAACTAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADJBgAAAAAAAMkGAAAAAAAAAAAAAAAA8L8"
				],
				[
					2880,
					1,
					"left_delete",
					null,
					"AQAAAGcCAAAAAAAAZwIAAAAAAAABAAAAZA",
					"AgAAAAAAAAABAAAAaAIAAAAAAABoAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADPBgAAAAAAAM8GAAAAAAAAAAAAAAAA8L8"
				],
				[
					2881,
					1,
					"insert",
					{
						"characters": "D"
					},
					"AQAAAGcCAAAAAAAAaAIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAZwIAAAAAAABnAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADOBgAAAAAAAM4GAAAAAAAAAAAAAAAA8L8"
				],
				[
					2883,
					1,
					"insert",
					{
						"characters": " fremae"
					},
					"BwAAAGkCAAAAAAAAagIAAAAAAAAAAAAAagIAAAAAAABrAgAAAAAAAAAAAABrAgAAAAAAAGwCAAAAAAAAAAAAAGwCAAAAAAAAbQIAAAAAAAAAAAAAbQIAAAAAAABuAgAAAAAAAAAAAABuAgAAAAAAAG8CAAAAAAAAAAAAAG8CAAAAAAAAcAIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAaQIAAAAAAABpAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADPBgAAAAAAAM8GAAAAAAAAAAAAAAAA8L8"
				],
				[
					2884,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHACAAAAAAAAcQIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAcAIAAAAAAABwAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADWBgAAAAAAANYGAAAAAAAAAAAAAAAA8L8"
				],
				[
					2885,
					5,
					"left_delete",
					null,
					"BQAAAHACAAAAAAAAcAIAAAAAAAABAAAAIG8CAAAAAAAAbwIAAAAAAAABAAAAZW4CAAAAAAAAbgIAAAAAAAABAAAAYW0CAAAAAAAAbQIAAAAAAAABAAAAbWwCAAAAAAAAbAIAAAAAAAABAAAAZQ",
					"AgAAAAAAAAABAAAAcQIAAAAAAABxAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADXBgAAAAAAANcGAAAAAAAAAAAAAAAA8L8"
				],
				[
					2889,
					1,
					"insert",
					{
						"characters": "engine_frame_sta"
					},
					"EQAAAKQCAAAAAAAApQIAAAAAAAAAAAAApQIAAAAAAAClAgAAAAAAAAsAAABlbmdpbmVfbG9vcKUCAAAAAAAApgIAAAAAAAAAAAAApgIAAAAAAACnAgAAAAAAAAAAAACnAgAAAAAAAKgCAAAAAAAAAAAAAKgCAAAAAAAAqQIAAAAAAAAAAAAAqQIAAAAAAACqAgAAAAAAAAAAAACqAgAAAAAAAKsCAAAAAAAAAAAAAKsCAAAAAAAArAIAAAAAAAAAAAAArAIAAAAAAACtAgAAAAAAAAAAAACtAgAAAAAAAK4CAAAAAAAAAAAAAK4CAAAAAAAArwIAAAAAAAAAAAAArwIAAAAAAACwAgAAAAAAAAAAAACwAgAAAAAAALECAAAAAAAAAAAAALECAAAAAAAAsgIAAAAAAAAAAAAAsgIAAAAAAACzAgAAAAAAAAAAAACzAgAAAAAAALQCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAArwIAAAAAAACkAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADSBgAAAAAAANIGAAAAAAAAAAAAAAAA8L8"
				],
				[
					2890,
					1,
					"insert",
					{
						"characters": "rt"
					},
					"AgAAALQCAAAAAAAAtQIAAAAAAAAAAAAAtQIAAAAAAAC2AgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAtAIAAAAAAAC0AgAAAAAAAAAAAAAAAPC/AQAAAAEAAADXBgAAAAAAANcGAAAAAAAAAAAAAAAA8L8"
				],
				[
					2892,
					1,
					"cut",
					null,
					"AQAAAGQCAAAAAAAAZAIAAAAAAAA5AAAALy8gRG8gZnIgZW5naW5lIHN0dWZmLiBDYWxsZWQgYXQgdGhlIHN0YXJ0IG9mIGVhY2ggZnJhbWUK",
					"AgAAAAAAAAABAAAAfQIAAAAAAAB9AgAAAAAAAAAAAAAAgGZAAQAAAAEAAADZBgAAAAAAANkGAAAAAAAAAAAAAAAA8L8"
				],
				[
					2901,
					1,
					"cut",
					null,
					"AQAAANkFAAAAAAAA2QUAAAAAAABDAAAAICAgIC8vIHJlbmRlcl9hcGkucmVuZGVyKHN0YXRlLnByb2dfaWQsIHN0YXRlLmN1YmVfaWQsICZpbmRlY2llcyk7Cg",
					"AgAAAAAAAAABAAAA2QUAAAAAAADZBQAAAAAAAAAAAAAAAAAAAQAAAAEAAACgBgAAAAAAAKAGAAAAAAAAAAAAAAAA8L8"
				],
				[
					2909,
					1,
					"cut",
					null,
					"AQAAAMoFAAAAAAAAygUAAAAAAAANAAAAdmVjIVswLCAxLCAyXQ",
					"AgAAAAAAAAABAAAAygUAAAAAAADXBQAAAAAAAAAAAAAAAPC/AQAAAAEAAABdBgAAAAAAAF0GAAAAAAAAAAAAAAAA8L8"
				],
				[
					2915,
					1,
					"paste",
					null,
					"AgAAADwGAAAAAAAASQYAAAAAAAAAAAAASQYAAAAAAABJBgAAAAAAAAgAAABpbmRlY2llcw",
					"AgAAAAAAAAABAAAARAYAAAAAAAA8BgAAAAAAAAAAAAAAAPC/AQAAAAEAAABQBgAAAAAAAFAGAAAAAAAAAAAAAAAA8L8"
				],
				[
					2918,
					1,
					"cut",
					null,
					"AQAAAK0FAAAAAAAArQUAAAAAAAAfAAAAICAgIGxldCBpbmRlY2llczogVmVjPHUzMj4gPSA7Cg",
					"AgAAAAAAAAABAAAAwgUAAAAAAADCBQAAAAAAAAAAAAAA4GJAAQAAAAEAAABVBgAAAAAAAFUGAAAAAAAAAAAAAAAA8L8"
				],
				[
					2919,
					1,
					"left_delete",
					null,
					"AQAAAKwFAAAAAAAArAUAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAArQUAAAAAAACtBQAAAAAAAAAAAAAAAPC/AQAAAAEAAAA2BgAAAAAAADYGAAAAAAAAAAAAAAAA8L8"
				],
				[
					2920,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAAKwFAAAAAAAArQUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAArAUAAAAAAACsBQAAAAAAAAAAAAAAAPC/AQAAAAEAAAA1BgAAAAAAADUGAAAAAAAAAAAAAAAA8L8"
				],
				[
					2921,
					1,
					"left_delete",
					null,
					"AQAAAKwFAAAAAAAArAUAAAAAAAABAAAAcw",
					"AgAAAAAAAAABAAAArQUAAAAAAACtBQAAAAAAAAAAAAAAAPC/AQAAAAEAAAA2BgAAAAAAADYGAAAAAAAAAAAAAAAA8L8"
				],
				[
					2941,
					1,
					"insert",
					{
						"characters": "cube_vao"
					},
					"CQAAAJkFAAAAAAAAmgUAAAAAAAAAAAAAmgUAAAAAAACaBQAAAAAAAAcAAABjdWJlX2lkmgUAAAAAAACbBQAAAAAAAAAAAACbBQAAAAAAAJwFAAAAAAAAAAAAAJwFAAAAAAAAnQUAAAAAAAAAAAAAnQUAAAAAAACeBQAAAAAAAAAAAACeBQAAAAAAAJ8FAAAAAAAAAAAAAJ8FAAAAAAAAoAUAAAAAAAAAAAAAoAUAAAAAAAChBQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAoAUAAAAAAACZBQAAAAAAAAAAAAAAAPC/AQAAAAEAAAA1BgAAAAAAADUGAAAAAAAAAAAAAAAA8L8"
				],
				[
					2942,
					4,
					"left_delete",
					null,
					"BAAAAKAFAAAAAAAAoAUAAAAAAAABAAAAb58FAAAAAAAAnwUAAAAAAAABAAAAYZ4FAAAAAAAAngUAAAAAAAABAAAAdp0FAAAAAAAAnQUAAAAAAAABAAAAXw",
					"AgAAAAAAAAABAAAAoQUAAAAAAAChBQAAAAAAAAAAAAAAAPC/AQAAAAEAAAA2BgAAAAAAADYGAAAAAAAAAAAAAAAA8L8"
				],
				[
					2952,
					1,
					"insert",
					{
						"characters": "state.cube"
					},
					"CwAAAB4FAAAAAAAAHwUAAAAAAAAAAAAAHwUAAAAAAAAfBQAAAAAAAAwAAABsZXQgbXV0IGN1YmUfBQAAAAAAACAFAAAAAAAAAAAAACAFAAAAAAAAIQUAAAAAAAAAAAAAIQUAAAAAAAAiBQAAAAAAAAAAAAAiBQAAAAAAACMFAAAAAAAAAAAAACMFAAAAAAAAJAUAAAAAAAAAAAAAJAUAAAAAAAAlBQAAAAAAAAAAAAAlBQAAAAAAACYFAAAAAAAAAAAAACYFAAAAAAAAJwUAAAAAAAAAAAAAJwUAAAAAAAAoBQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAKgUAAAAAAAAeBQAAAAAAAAAAAAAAAD1AAQAAAAEAAAAyBgAAAAAAADIGAAAAAAAAAAAAAAAA8L8"
				],
				[
					2954,
					1,
					"cut",
					null,
					"AQAAAI0FAAAAAAAAjQUAAAAAAAAaAAAAICAgIHN0YXRlLmN1YmUgPSBjdWJlLmlkOwo",
					"AgAAAAAAAAABAAAAmwUAAAAAAACbBQAAAAAAAAAAAAAAQFlAAQAAAAEAAAAwBgAAAAAAADAGAAAAAAAAAAAAAAAA8L8"
				],
				[
					2960,
					1,
					"insert",
					{
						"characters": "state."
					},
					"BgAAAFIFAAAAAAAAUwUAAAAAAAAAAAAAUwUAAAAAAABUBQAAAAAAAAAAAABUBQAAAAAAAFUFAAAAAAAAAAAAAFUFAAAAAAAAVgUAAAAAAAAAAAAAVgUAAAAAAABXBQAAAAAAAAAAAABXBQAAAAAAAFgFAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAUgUAAAAAAABSBQAAAAAAAAAAAAAAAD1AAQAAAAEAAAAWBgAAAAAAABYGAAAAAAAAAAAAAAAA8L8"
				],
				[
					2961,
					2,
					"rust_fmt_format_buffer",
					null,
					"AgAAAFcFAAAAAAAAYAUAAAAAAAAAAAAAZQUAAAAAAABuBQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAWAUAAAAAAABYBQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAcBgAAAAAAABwGAAAAAAAAAAAAAAAA8L8"
				],
				[
					2971,
					1,
					"insert",
					{
						"characters": "vuc"
					},
					"BAAAAO0FAAAAAAAA7gUAAAAAAAAAAAAA7gUAAAAAAADuBQAAAAAAAAcAAABjdWJlX2lk7gUAAAAAAADvBQAAAAAAAAAAAADvBQAAAAAAAPAFAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA9AUAAAAAAADtBQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAuBgAAAAAAAC4GAAAAAAAAAAAAAAAA8L8"
				],
				[
					2972,
					3,
					"left_delete",
					null,
					"AwAAAO8FAAAAAAAA7wUAAAAAAAABAAAAY+4FAAAAAAAA7gUAAAAAAAABAAAAde0FAAAAAAAA7QUAAAAAAAABAAAAdg",
					"AgAAAAAAAAABAAAA8AUAAAAAAADwBQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAqBgAAAAAAACoGAAAAAAAAAAAAAAAA8L8"
				],
				[
					2973,
					1,
					"insert",
					{
						"characters": "cube"
					},
					"BAAAAO0FAAAAAAAA7gUAAAAAAAAAAAAA7gUAAAAAAADvBQAAAAAAAAAAAADvBQAAAAAAAPAFAAAAAAAAAAAAAPAFAAAAAAAA8QUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA7QUAAAAAAADtBQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAnBgAAAAAAACcGAAAAAAAAAAAAAAAA8L8"
				],
				[
					2978,
					1,
					"insert",
					{
						"characters": "&"
					},
					"AQAAAOcFAAAAAAAA6AUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA5wUAAAAAAADnBQAAAAAAAAAAAAAAAE1AAQAAAAEAAAArBgAAAAAAACsGAAAAAAAAAAAAAAAA8L8"
				],
				[
					2987,
					1,
					"insert",
					{
						"characters": "Some("
					},
					"BQAAACsFAAAAAAAALAUAAAAAAAAAAAAALAUAAAAAAAAtBQAAAAAAAAAAAAAtBQAAAAAAAC4FAAAAAAAAAAAAAC4FAAAAAAAALwUAAAAAAAAAAAAALwUAAAAAAAAwBQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAKwUAAAAAAAArBQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAsBgAAAAAAACwGAAAAAAAAAAAAAAAA8L8"
				],
				[
					2990,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAFEFAAAAAAAAUgUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAUQUAAAAAAABRBQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAxBgAAAAAAADEGAAAAAAAAAAAAAAAA8L8"
				],
				[
					2997,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAAGsFAAAAAAAAbAUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAawUAAAAAAABrBQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAyBgAAAAAAADIGAAAAAAAAAAAAAAAA8L8"
				],
				[
					2998,
					1,
					"left_delete",
					null,
					"AQAAAGsFAAAAAAAAawUAAAAAAAABAAAALg",
					"AgAAAAAAAAABAAAAbAUAAAAAAABsBQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAzBgAAAAAAADMGAAAAAAAAAAAAAAAA8L8"
				],
				[
					2999,
					1,
					"insert",
					{
						"characters": "\n.unwrap"
					},
					"CQAAAGsFAAAAAAAAbAUAAAAAAAAAAAAAbAUAAAAAAAB0BQAAAAAAAAAAAAB0BQAAAAAAAHUFAAAAAAAAAAAAAHUFAAAAAAAAdgUAAAAAAAAAAAAAdgUAAAAAAAB3BQAAAAAAAAAAAAB3BQAAAAAAAHgFAAAAAAAAAAAAAHgFAAAAAAAAeQUAAAAAAAAAAAAAeQUAAAAAAAB6BQAAAAAAAAAAAAB6BQAAAAAAAHsFAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAawUAAAAAAABrBQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAyBgAAAAAAADIGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3000,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAHsFAAAAAAAAfQUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAewUAAAAAAAB7BQAAAAAAAAAAAAAAAPC/AQAAAAEAAABCBgAAAAAAAEIGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3005,
					1,
					"insert",
					{
						"characters": ".unwrap()"
					},
					"CQAAAAoGAAAAAAAACwYAAAAAAAAAAAAACwYAAAAAAAAMBgAAAAAAAAAAAAAMBgAAAAAAAA0GAAAAAAAAAAAAAA0GAAAAAAAADgYAAAAAAAAAAAAADgYAAAAAAAAPBgAAAAAAAAAAAAAPBgAAAAAAABAGAAAAAAAAAAAAABAGAAAAAAAAEQYAAAAAAAAAAAAAEQYAAAAAAAASBgAAAAAAAAAAAAASBgAAAAAAABMGAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAACgYAAAAAAAAKBgAAAAAAAAAAAAAAAPC/AQAAAAEAAABEBgAAAAAAAEQGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3027,
					1,
					"insert",
					{
						"characters": ".as_ref"
					},
					"BwAAAH0FAAAAAAAAfgUAAAAAAAAAAAAAfgUAAAAAAAB/BQAAAAAAAAAAAAB/BQAAAAAAAIAFAAAAAAAAAAAAAIAFAAAAAAAAgQUAAAAAAAAAAAAAgQUAAAAAAACCBQAAAAAAAAAAAACCBQAAAAAAAIMFAAAAAAAAAAAAAIMFAAAAAAAAhAUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAfQUAAAAAAAB9BQAAAAAAAP///////+9/AQAAAAEAAABNBgAAAAAAAE0GAAAAAAAAAAAAAAAA8L8"
				],
				[
					3028,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAIQFAAAAAAAAhgUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAhAUAAAAAAACEBQAAAAAAAAAAAAAAAPC/AQAAAAEAAABUBgAAAAAAAFQGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3030,
					2,
					"rust_fmt_format_buffer",
					null,
					"AQAAAH0FAAAAAAAAhgUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAhgUAAAAAAACGBQAAAAAAAAAAAAAAAPC/AQAAAAEAAABWBgAAAAAAAFYGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3035,
					1,
					"swap_line_up",
					null,
					"AgAAAH4FAAAAAAAAfgUAAAAAAAASAAAAICAgICAgICAuYXNfcmVmKCkKbAUAAAAAAAB+BQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAjwUAAAAAAACPBQAAAAAAAAAAAAAAgF5AAQAAAAEAAABfBgAAAAAAAF8GAAAAAAAAAAAAAAAA8L8"
				],
				[
					3040,
					1,
					"insert",
					{
						"characters": "mut"
					},
					"BAAAAHgFAAAAAAAAeQUAAAAAAAAAAAAAeQUAAAAAAAB5BQAAAAAAAAMAAAByZWZ5BQAAAAAAAHoFAAAAAAAAAAAAAHoFAAAAAAAAewUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAewUAAAAAAAB4BQAAAAAAAAAAAAAAAPC/AQAAAAEAAABfBgAAAAAAAF8GAAAAAAAAAAAAAAAA8L8"
				],
				[
					3049,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAAHQFAAAAAAAAdwUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAfQUAAAAAAAB9BQAAAAAAAAAAAAAAIGFAAQAAAAEAAABfBgAAAAAAAF8GAAAAAAAAAAAAAAAA8L8"
				],
				[
					3052,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAAHQFAAAAAAAAdAUAAAAAAAADAAAALy8g",
					"AgAAAAAAAAABAAAAgAUAAAAAAACABQAAAAAAAAAAAAAAAPC/AQAAAAEAAABiBgAAAAAAAGIGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3080,
					1,
					"insert",
					{
						"characters": "x"
					},
					"AQAAAH0FAAAAAAAAfgUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAfQUAAAAAAAB9BQAAAAAAAAAAAAAAIGpAAQAAAAEAAABfBgAAAAAAAF8GAAAAAAAAAAAAAAAA8L8"
				],
				[
					3081,
					1,
					"cut",
					null,
					"AQAAAGwFAAAAAAAAbAUAAAAAAAATAAAAICAgICAgICAuYXNfbXV0KCl4Cg",
					"AgAAAAAAAAABAAAAfgUAAAAAAAB+BQAAAAAAAAAAAAAAAPC/AQAAAAEAAABgBgAAAAAAAGAGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3084,
					1,
					"cut",
					null,
					"AQAAAGwFAAAAAAAAbAUAAAAAAAASAAAAICAgICAgICAudW53cmFwKCkK",
					"AgAAAAAAAAABAAAAbAUAAAAAAABsBQAAAAAAAAAAAAAAAPC/AQAAAAEAAABNBgAAAAAAAE0GAAAAAAAAAAAAAAAA8L8"
				],
				[
					3088,
					1,
					"left_delete",
					null,
					"AQAAAFEFAAAAAAAAUQUAAAAAAAABAAAAKQ",
					"AgAAAAAAAAABAAAAUgUAAAAAAABSBQAAAAAAAAAAAAAAAPC/AQAAAAEAAAA7BgAAAAAAADsGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3090,
					5,
					"left_delete",
					null,
					"BQAAAC8FAAAAAAAALwUAAAAAAAABAAAAKC4FAAAAAAAALgUAAAAAAAABAAAAZS0FAAAAAAAALQUAAAAAAAABAAAAbSwFAAAAAAAALAUAAAAAAAABAAAAbysFAAAAAAAAKwUAAAAAAAABAAAAUw",
					"AgAAAAAAAAABAAAAMAUAAAAAAAAwBQAAAAAAAAAAAAAAAPC/AQAAAAEAAAA6BgAAAAAAADoGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3096,
					9,
					"left_delete",
					null,
					"CQAAAPoFAAAAAAAA+gUAAAAAAAABAAAAKfkFAAAAAAAA+QUAAAAAAAABAAAAKPgFAAAAAAAA+AUAAAAAAAABAAAAcPcFAAAAAAAA9wUAAAAAAAABAAAAYfYFAAAAAAAA9gUAAAAAAAABAAAAcvUFAAAAAAAA9QUAAAAAAAABAAAAd/QFAAAAAAAA9AUAAAAAAAABAAAAbvMFAAAAAAAA8wUAAAAAAAABAAAAdfIFAAAAAAAA8gUAAAAAAAABAAAALg",
					"AgAAAAAAAAABAAAA+wUAAAAAAAD7BQAAAAAAAAAAAAAAAPC/AQAAAAEAAAA1BgAAAAAAADUGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3124,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAOsBAAAAAAAA7AEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA6wEAAAAAAADrAQAAAAAAAAAAAAAAAGtAAQAAAAEAAAAsBgAAAAAAACwGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3125,
					1,
					"reindent",
					null,
					"AQAAAOwBAAAAAAAA8AEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA7AEAAAAAAADsAQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAtBgAAAAAAAC0GAAAAAAAAAAAAAAAA8L8"
				],
				[
					3126,
					1,
					"insert",
					{
						"characters": "satte."
					},
					"BgAAAPABAAAAAAAA8QEAAAAAAAAAAAAA8QEAAAAAAADyAQAAAAAAAAAAAADyAQAAAAAAAPMBAAAAAAAAAAAAAPMBAAAAAAAA9AEAAAAAAAAAAAAA9AEAAAAAAAD1AQAAAAAAAAAAAAD1AQAAAAAAAPYBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA8AEAAAAAAADwAQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAxBgAAAAAAADEGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3127,
					5,
					"left_delete",
					null,
					"BQAAAPUBAAAAAAAA9QEAAAAAAAABAAAALvQBAAAAAAAA9AEAAAAAAAABAAAAZfMBAAAAAAAA8wEAAAAAAAABAAAAdPIBAAAAAAAA8gEAAAAAAAABAAAAdPEBAAAAAAAA8QEAAAAAAAABAAAAYQ",
					"AgAAAAAAAAABAAAA9gEAAAAAAAD2AQAAAAAAAAAAAAAAAPC/AQAAAAEAAAA3BgAAAAAAADcGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3128,
					1,
					"insert",
					{
						"characters": "tate.ba"
					},
					"BwAAAPEBAAAAAAAA8gEAAAAAAAAAAAAA8gEAAAAAAADzAQAAAAAAAAAAAADzAQAAAAAAAPQBAAAAAAAAAAAAAPQBAAAAAAAA9QEAAAAAAAAAAAAA9QEAAAAAAAD2AQAAAAAAAAAAAAD2AQAAAAAAAPcBAAAAAAAAAAAAAPcBAAAAAAAA+AEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA8QEAAAAAAADxAQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAyBgAAAAAAADIGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3129,
					1,
					"insert",
					{
						"characters": "siv"
					},
					"AwAAAPgBAAAAAAAA+QEAAAAAAAAAAAAA+QEAAAAAAAD6AQAAAAAAAAAAAAD6AQAAAAAAAPsBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA+AEAAAAAAAD4AQAAAAAAAAAAAAAAAPC/AQAAAAEAAAA5BgAAAAAAADkGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3130,
					1,
					"left_delete",
					null,
					"AQAAAPoBAAAAAAAA+gEAAAAAAAABAAAAdg",
					"AgAAAAAAAAABAAAA+wEAAAAAAAD7AQAAAAAAAAAAAAAAAPC/AQAAAAEAAAA8BgAAAAAAADwGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3131,
					1,
					"insert",
					{
						"characters": "c_shader"
					},
					"CAAAAPoBAAAAAAAA+wEAAAAAAAAAAAAA+wEAAAAAAAD8AQAAAAAAAAAAAAD8AQAAAAAAAP0BAAAAAAAAAAAAAP0BAAAAAAAA/gEAAAAAAAAAAAAA/gEAAAAAAAD/AQAAAAAAAAAAAAD/AQAAAAAAAAACAAAAAAAAAAAAAAACAAAAAAAAAQIAAAAAAAAAAAAAAQIAAAAAAAACAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA+gEAAAAAAAD6AQAAAAAAAAAAAAAAAPC/AQAAAAEAAAA7BgAAAAAAADsGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3132,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAAICAAAAAAAAAwIAAAAAAAAAAAAAAwIAAAAAAAAEAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAgIAAAAAAAACAgAAAAAAAAAAAAAAAPC/AQAAAAEAAABDBgAAAAAAAEMGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3133,
					1,
					"insert",
					{
						"characters": " yS"
					},
					"AwAAAAQCAAAAAAAABQIAAAAAAAAAAAAABQIAAAAAAAAGAgAAAAAAAAAAAAAGAgAAAAAAAAcCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAABAIAAAAAAAAEAgAAAAAAAAAAAAAAAPC/AQAAAAEAAABFBgAAAAAAAEUGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3134,
					2,
					"left_delete",
					null,
					"AgAAAAYCAAAAAAAABgIAAAAAAAABAAAAUwUCAAAAAAAABQIAAAAAAAABAAAAeQ",
					"AgAAAAAAAAABAAAABwIAAAAAAAAHAgAAAAAAAAAAAAAAAPC/AQAAAAEAAABIBgAAAAAAAEgGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3135,
					1,
					"insert",
					{
						"characters": "Shaer::"
					},
					"BwAAAAUCAAAAAAAABgIAAAAAAAAAAAAABgIAAAAAAAAHAgAAAAAAAAAAAAAHAgAAAAAAAAgCAAAAAAAAAAAAAAgCAAAAAAAACQIAAAAAAAAAAAAACQIAAAAAAAAKAgAAAAAAAAAAAAAKAgAAAAAAAAsCAAAAAAAAAAAAAAsCAAAAAAAADAIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAABQIAAAAAAAAFAgAAAAAAAAAAAAAAAPC/AQAAAAEAAABGBgAAAAAAAEYGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3136,
					4,
					"left_delete",
					null,
					"BAAAAAsCAAAAAAAACwIAAAAAAAABAAAAOgoCAAAAAAAACgIAAAAAAAABAAAAOgkCAAAAAAAACQIAAAAAAAABAAAAcggCAAAAAAAACAIAAAAAAAABAAAAZQ",
					"AgAAAAAAAAABAAAADAIAAAAAAAAMAgAAAAAAAAAAAAAAAPC/AQAAAAEAAABNBgAAAAAAAE0GAAAAAAAAAAAAAAAA8L8"
				],
				[
					3137,
					1,
					"insert",
					{
						"characters": "der::compile"
					},
					"DAAAAAgCAAAAAAAACQIAAAAAAAAAAAAACQIAAAAAAAAKAgAAAAAAAAAAAAAKAgAAAAAAAAsCAAAAAAAAAAAAAAsCAAAAAAAADAIAAAAAAAAAAAAADAIAAAAAAAANAgAAAAAAAAAAAAANAgAAAAAAAA4CAAAAAAAAAAAAAA4CAAAAAAAADwIAAAAAAAAAAAAADwIAAAAAAAAQAgAAAAAAAAAAAAAQAgAAAAAAABECAAAAAAAAAAAAABECAAAAAAAAEgIAAAAAAAAAAAAAEgIAAAAAAAATAgAAAAAAAAAAAAATAgAAAAAAABQCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAACAIAAAAAAAAIAgAAAAAAAAAAAAAAAPC/AQAAAAEAAABJBgAAAAAAAEkGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3138,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAABQCAAAAAAAAFgIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAFAIAAAAAAAAUAgAAAAAAAAAAAAAAAPC/AQAAAAEAAABVBgAAAAAAAFUGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3141,
					1,
					"insert",
					{
						"characters": "bs"
					},
					"AgAAABUCAAAAAAAAFgIAAAAAAAAAAAAAFgIAAAAAAAAXAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAFQIAAAAAAAAVAgAAAAAAAAAAAAAAAPC/AQAAAAEAAABXBgAAAAAAAFcGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3142,
					1,
					"left_delete",
					null,
					"AQAAABYCAAAAAAAAFgIAAAAAAAABAAAAcw",
					"AgAAAAAAAAABAAAAFwIAAAAAAAAXAgAAAAAAAAAAAAAAAPC/AQAAAAEAAABZBgAAAAAAAFkGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3143,
					1,
					"insert_completion",
					{
						"completion": "basic_shader_vert",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "basic_shader_vert"
					},
					"AgAAABUCAAAAAAAAFQIAAAAAAAABAAAAYhUCAAAAAAAAJgIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAFgIAAAAAAAAWAgAAAAAAAAAAAAAAAPC/AQAAAAEAAABYBgAAAAAAAFgGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3144,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAACYCAAAAAAAAJwIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAJgIAAAAAAAAmAgAAAAAAAAAAAAAAAPC/AQAAAAEAAABoBgAAAAAAAGgGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3145,
					1,
					"insert",
					{
						"characters": " bas"
					},
					"BAAAACcCAAAAAAAAKAIAAAAAAAAAAAAAKAIAAAAAAAApAgAAAAAAAAAAAAApAgAAAAAAACoCAAAAAAAAAAAAACoCAAAAAAAAKwIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAJwIAAAAAAAAnAgAAAAAAAAAAAAAAAPC/AQAAAAEAAABpBgAAAAAAAGkGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3148,
					1,
					"insert_completion",
					{
						"completion": "basic_shader_frag",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "basic_shader_frag"
					},
					"AgAAACgCAAAAAAAAKAIAAAAAAAADAAAAYmFzKAIAAAAAAAA5AgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAKwIAAAAAAAArAgAAAAAAAAAAAAAAAPC/AQAAAAEAAABtBgAAAAAAAG0GAAAAAAAAAAAAAAAA8L8"
				],
				[
					3149,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAADkCAAAAAAAAOgIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAOQIAAAAAAAA5AgAAAAAAAAAAAAAAAPC/AQAAAAEAAAB7BgAAAAAAAHsGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3150,
					1,
					"insert",
					{
						"characters": " render"
					},
					"BwAAADoCAAAAAAAAOwIAAAAAAAAAAAAAOwIAAAAAAAA8AgAAAAAAAAAAAAA8AgAAAAAAAD0CAAAAAAAAAAAAAD0CAAAAAAAAPgIAAAAAAAAAAAAAPgIAAAAAAAA/AgAAAAAAAAAAAAA/AgAAAAAAAEACAAAAAAAAAAAAAEACAAAAAAAAQQIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAOgIAAAAAAAA6AgAAAAAAAAAAAAAAAPC/AQAAAAEAAAB8BgAAAAAAAHwGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3151,
					1,
					"insert_completion",
					{
						"completion": "render_api",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "render_api"
					},
					"AgAAADsCAAAAAAAAOwIAAAAAAAAGAAAAcmVuZGVyOwIAAAAAAABFAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQQIAAAAAAABBAgAAAAAAAAAAAAAAAPC/AQAAAAEAAACDBgAAAAAAAIMGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3153,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAEYCAAAAAAAARwIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAARgIAAAAAAABGAgAAAAAAAAAAAAAAAPC/AQAAAAEAAACHBgAAAAAAAIcGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3158,
					1,
					"insert",
					{
						"characters": ".unwrap"
					},
					"BwAAAEYCAAAAAAAARwIAAAAAAAAAAAAARwIAAAAAAABIAgAAAAAAAAAAAABIAgAAAAAAAEkCAAAAAAAAAAAAAEkCAAAAAAAASgIAAAAAAAAAAAAASgIAAAAAAABLAgAAAAAAAAAAAABLAgAAAAAAAEwCAAAAAAAAAAAAAEwCAAAAAAAATQIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAARgIAAAAAAABGAgAAAAAAAAAAAAAAAPC/AQAAAAEAAACIBgAAAAAAAIgGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3159,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAE0CAAAAAAAATwIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAATQIAAAAAAABNAgAAAAAAAAAAAAAAAPC/AQAAAAEAAACPBgAAAAAAAI8GAAAAAAAAAAAAAAAA8L8"
				],
				[
					3164,
					3,
					"cut",
					null,
					"AwAAAFECAAAAAAAAUQIAAAAAAAAfAAAAICAgIHN0YXRlLnByb2dfaWQgPSByZW5kZXJfYXBpClECAAAAAAAAUQIAAAAAAABDAAAAICAgICAgICAubWFrZV9zaGFkZXJfcHJvZ3JhbShiYXNpY19zaGFkZXJfdmVydCwgYmFzaWNfc2hhZGVyX2ZyYWcpClECAAAAAAAAUQIAAAAAAAATAAAAICAgICAgICAudW53cmFwKCk7Cg",
					"AgAAAAAAAAABAAAAbwIAAAAAAABvAgAAAAAAAAAAAAAASIZAAQAAAAEAAACRBgAAAAAAAJEGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3174,
					1,
					"insert",
					{
						"characters": "\nuse"
					},
					"BAAAANcAAAAAAAAA2AAAAAAAAAAAAAAA2AAAAAAAAADZAAAAAAAAAAAAAADZAAAAAAAAANoAAAAAAAAAAAAAANoAAAAAAAAA2wAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA1wAAAAAAAADXAAAAAAAAAP///////+9/AQAAAAEAAAAcBgAAAAAAABwGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3175,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANsAAAAAAAAA3AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA2wAAAAAAAADbAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAgBgAAAAAAACAGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3182,
					1,
					"insert",
					{
						"characters": "render::vao::V"
					},
					"DgAAANwAAAAAAAAA3QAAAAAAAAAAAAAA3QAAAAAAAADeAAAAAAAAAAAAAADeAAAAAAAAAN8AAAAAAAAAAAAAAN8AAAAAAAAA4AAAAAAAAAAAAAAA4AAAAAAAAADhAAAAAAAAAAAAAADhAAAAAAAAAOIAAAAAAAAAAAAAAOIAAAAAAAAA4wAAAAAAAAAAAAAA4wAAAAAAAADkAAAAAAAAAAAAAADkAAAAAAAAAOUAAAAAAAAAAAAAAOUAAAAAAAAA5gAAAAAAAAAAAAAA5gAAAAAAAADnAAAAAAAAAAAAAADnAAAAAAAAAOgAAAAAAAAAAAAAAOgAAAAAAAAA6QAAAAAAAAAAAAAA6QAAAAAAAADqAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA3AAAAAAAAADcAAAAAAAAAP///////+9/AQAAAAEAAAAhBgAAAAAAACEGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3183,
					1,
					"insert",
					{
						"characters": "ao"
					},
					"AgAAAOoAAAAAAAAA6wAAAAAAAAAAAAAA6wAAAAAAAADsAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA6gAAAAAAAADqAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAvBgAAAAAAAC8GAAAAAAAAAAAAAAAA8L8"
				],
				[
					3184,
					3,
					"left_delete",
					null,
					"AwAAAOsAAAAAAAAA6wAAAAAAAAABAAAAb+oAAAAAAAAA6gAAAAAAAAABAAAAYekAAAAAAAAA6QAAAAAAAAABAAAAVg",
					"AgAAAAAAAAABAAAA7AAAAAAAAADsAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAxBgAAAAAAADEGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3185,
					1,
					"insert",
					{
						"characters": "*;"
					},
					"AgAAAOkAAAAAAAAA6gAAAAAAAAAAAAAA6gAAAAAAAADrAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA6QAAAAAAAADpAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAuBgAAAAAAAC4GAAAAAAAAAAAAAAAA8L8"
				],
				[
					3187,
					1,
					"paste",
					null,
					"AQAAANgAAAAAAAAA7AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA6wAAAAAAAADrAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAwBgAAAAAAADAGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3191,
					1,
					"insert",
					{
						"characters": "shader"
					},
					"BwAAAPgAAAAAAAAA+QAAAAAAAAAAAAAA+QAAAAAAAAD5AAAAAAAAAAMAAAB2YW/5AAAAAAAAAPoAAAAAAAAAAAAAAPoAAAAAAAAA+wAAAAAAAAAAAAAA+wAAAAAAAAD8AAAAAAAAAAAAAAD8AAAAAAAAAP0AAAAAAAAAAAAAAP0AAAAAAAAA/gAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA+wAAAAAAAAD4AAAAAAAAAAAAAAAAAPC/AQAAAAEAAABEBgAAAAAAAEQGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3192,
					2,
					"rust_fmt_format_buffer",
					null,
					"BAAAAOQAAAAAAAAA5AAAAAAAAAADAAAAdmFv5AAAAAAAAADqAAAAAAAAAAAAAAD7AAAAAAAAAPsAAAAAAAAABgAAAHNoYWRlcvsAAAAAAAAA/gAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA/gAAAAAAAAD+AAAAAAAAAAAAAAAAAPC/AQAAAAEAAABHBgAAAAAAAEcGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3199,
					2,
					"left_delete",
					null,
					"AgAAAB0GAAAAAAAAHQYAAAAAAAAHAAAAcHJvZ19pZBwGAAAAAAAAHAYAAAAAAAABAAAALg",
					"AgAAAAAAAAABAAAAJAYAAAAAAAAdBgAAAAAAAAAAAAAAAPC/AQAAAAEAAABHBgAAAAAAAEcGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3202,
					1,
					"insert",
					{
						"characters": ".basic_shade"
					},
					"DAAAABwGAAAAAAAAHQYAAAAAAAAAAAAAHQYAAAAAAAAeBgAAAAAAAAAAAAAeBgAAAAAAAB8GAAAAAAAAAAAAAB8GAAAAAAAAIAYAAAAAAAAAAAAAIAYAAAAAAAAhBgAAAAAAAAAAAAAhBgAAAAAAACIGAAAAAAAAAAAAACIGAAAAAAAAIwYAAAAAAAAAAAAAIwYAAAAAAAAkBgAAAAAAAAAAAAAkBgAAAAAAACUGAAAAAAAAAAAAACUGAAAAAAAAJgYAAAAAAAAAAAAAJgYAAAAAAAAnBgAAAAAAAAAAAAAnBgAAAAAAACgGAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAHAYAAAAAAAAcBgAAAAAAAAAAAAAAAPC/AQAAAAEAAAA/BgAAAAAAAD8GAAAAAAAAAAAAAAAA8L8"
				],
				[
					3203,
					1,
					"insert",
					{
						"characters": "r"
					},
					"AQAAACgGAAAAAAAAKQYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAKAYAAAAAAAAoBgAAAAAAAAAAAAAAAPC/AQAAAAEAAABLBgAAAAAAAEsGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3205,
					1,
					"insert",
					{
						"characters": "&"
					},
					"AQAAABcGAAAAAAAAGAYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAFwYAAAAAAAAXBgAAAAAAAAAAAAAAAPC/AQAAAAEAAABMBgAAAAAAAEwGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3217,
					1,
					"cut",
					null,
					"AQAAABYCAAAAAAAAFgIAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAFgIAAAAAAAAWAgAAAAAAAAAAAAAAAAAAAQAAAAEAAABNBgAAAAAAAE0GAAAAAAAAAAAAAAAA8L8"
				],
				[
					3222,
					1,
					"cut",
					null,
					"AQAAAI4BAAAAAAAAjgEAAAAAAAA0AAAAaW5jbHVkZV9zdHIhKCIuLi9lbmdpbmVfcmVzb3VyY2VzL3NoYWRlcnMvYmFzaWMuZnMiKQ",
					"AgAAAAAAAAABAAAAwgEAAAAAAACOAQAAAAAAAAAAAAAAAPC/AQAAAAEAAABMBgAAAAAAAEwGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3229,
					1,
					"paste",
					null,
					"AgAAAAsCAAAAAAAAPwIAAAAAAAAAAAAAPwIAAAAAAAA/AgAAAAAAABEAAABiYXNpY19zaGFkZXJfdmVydA",
					"AgAAAAAAAAABAAAAHAIAAAAAAAALAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAYBgAAAAAAABgGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3237,
					1,
					"cut",
					null,
					"AQAAAKwBAAAAAAAArAEAAAAAAAA1AAAAaW5jbHVkZV9zdHIhKCIuLi9lbmdpbmVfcmVzb3VyY2VzL3NoYWRlcnMvYmFzaWMudnMiKTs",
					"AgAAAAAAAAABAAAArAEAAAAAAADhAQAAAAAAAP///////+9/AQAAAAEAAAA7BgAAAAAAADsGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3241,
					1,
					"paste",
					null,
					"AgAAAAwCAAAAAAAAQQIAAAAAAAAAAAAAQQIAAAAAAABBAgAAAAAAABEAAABiYXNpY19zaGFkZXJfZnJhZw",
					"AgAAAAAAAAABAAAAHQIAAAAAAAAMAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAGBgAAAAAAAAYGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3242,
					1,
					"left_delete",
					null,
					"AQAAAEACAAAAAAAAQAIAAAAAAAABAAAAOw",
					"AgAAAAAAAAABAAAAQQIAAAAAAABBAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAqBgAAAAAAACoGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3250,
					2,
					"cut",
					null,
					"AgAAAHIBAAAAAAAAcgEAAAAAAAAeAAAAICAgIGxldCBiYXNpY19zaGFkZXJfZnJhZyA9IDsKcgEAAAAAAAByAQAAAAAAAB0AAAAgICAgbGV0IGJhc2ljX3NoYWRlcl92ZXJ0ID0gCg",
					"AgAAAAAAAAABAAAAjwEAAAAAAACPAQAAAAAAAAAAAAAAAPC/AQAAAAEAAAApBgAAAAAAACkGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3251,
					1,
					"rust_fmt_format_buffer",
					null,
					"BQAAAJsBAAAAAAAApAEAAAAAAAAAAAAA2QEAAAAAAADhAQAAAAAAAAAAAAAXAgAAAAAAAB8CAAAAAAAAAAAAACoCAAAAAAAAMAIAAAAAAAAAAAAAMQIAAAAAAAA2AgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAcgEAAAAAAAByAQAAAAAAAAAAAAAAAPC/AQAAAAEAAADuBQAAAAAAAO4FAAAAAAAAAAAAAAAA8L8"
				],
				[
					3365,
					1,
					"paste",
					null,
					"AgAAAEoEAAAAAAAATQQAAAAAAAAAAAAATQQAAAAAAABNBAAAAAAAAA4AAABNYXRyaXhGb3VyRm91cg",
					"AgAAAAAAAAABAAAASgQAAAAAAABYBAAAAAAAAAAAAAAAAPC/AQAAAAEAAAASBgAAAAAAABIGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3370,
					1,
					"paste",
					null,
					"AgAAAEIDAAAAAAAARQMAAAAAAAAAAAAARQMAAAAAAABFAwAAAAAAAA4AAABNYXRyaXhGb3VyRm91cg",
					"AgAAAAAAAAABAAAAQgMAAAAAAABQAwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAHBgAAAAAAAAcGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3375,
					1,
					"paste",
					null,
					"AgAAAHQEAAAAAAAAdwQAAAAAAAAAAAAAdwQAAAAAAAB3BAAAAAAAAA4AAABNYXRyaXhGb3VyRm91cg",
					"AgAAAAAAAAABAAAAdAQAAAAAAACCBAAAAAAAAAAAAAAAAPC/AQAAAAEAAAD8BQAAAAAAAPwFAAAAAAAAAAAAAAAA8L8"
				],
				[
					3380,
					1,
					"paste",
					null,
					"AgAAAKkEAAAAAAAArAQAAAAAAAAAAAAArAQAAAAAAACsBAAAAAAAAA4AAABNYXRyaXhGb3VyRm91cg",
					"AgAAAAAAAAABAAAAqQQAAAAAAAC3BAAAAAAAAAAAAAAAAPC/AQAAAAEAAADxBQAAAAAAAPEFAAAAAAAAAAAAAAAA8L8"
				],
				[
					3393,
					1,
					"swap_line_down",
					null,
					"AgAAABgCAAAAAAAAVgIAAAAAAAAAAAAAnAEAAAAAAACcAQAAAAAAAD4AAAAgICAgICAgIGluY2x1ZGVfc3RyISgiLi4vZW5naW5lX3Jlc291cmNlcy9zaGFkZXJzL2Jhc2ljLmZzIiksCg",
					"AgAAAAAAAAABAAAAnAEAAAAAAACcAQAAAAAAAAAAAAAAAAAAAQAAAAEAAADmBQAAAAAAAOYFAAAAAAAAAAAAAAAA8L8"
				],
				[
					3410,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAJADAAAAAAAAkQMAAAAAAAAAAAAAkQMAAAAAAACSAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAkAMAAAAAAACQAwAAAAAAAAAAAAAAAPC/AQAAAAEAAADmBQAAAAAAAOYFAAAAAAAAAAAAAAAA8L8"
				],
				[
					3412,
					1,
					"reindent",
					null,
					"AQAAAJEDAAAAAAAAlQMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAkQMAAAAAAACRAwAAAAAAAAAAAAAAAAAAAQAAAAEAAADoBQAAAAAAAOgFAAAAAAAAAAAAAAAA8L8"
				],
				[
					3413,
					1,
					"insert",
					{
						"characters": "satte."
					},
					"BgAAAJUDAAAAAAAAlgMAAAAAAAAAAAAAlgMAAAAAAACXAwAAAAAAAAAAAACXAwAAAAAAAJgDAAAAAAAAAAAAAJgDAAAAAAAAmQMAAAAAAAAAAAAAmQMAAAAAAACaAwAAAAAAAAAAAACaAwAAAAAAAJsDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAlQMAAAAAAACVAwAAAAAAAAAAAAAAAPC/AQAAAAEAAADsBQAAAAAAAOwFAAAAAAAAAAAAAAAA8L8"
				],
				[
					3414,
					1,
					"cut",
					null,
					"AQAAAJEDAAAAAAAAkQMAAAAAAAALAAAAICAgIHNhdHRlLgo",
					"AgAAAAAAAAABAAAAmwMAAAAAAACbAwAAAAAAAAAAAAAAAPC/AQAAAAEAAADyBQAAAAAAAPIFAAAAAAAAAAAAAAAA8L8"
				],
				[
					3416,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAJADAAAAAAAAkQMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAkAMAAAAAAACQAwAAAAAAAAAAAAAAAAAAAQAAAAEAAADnBQAAAAAAAOcFAAAAAAAAAAAAAAAA8L8"
				],
				[
					3417,
					1,
					"reindent",
					null,
					"AQAAAJEDAAAAAAAAlQMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAkQMAAAAAAACRAwAAAAAAAAAAAAAAAPC/AQAAAAEAAADoBQAAAAAAAOgFAAAAAAAAAAAAAAAA8L8"
				],
				[
					3418,
					1,
					"insert",
					{
						"characters": "satte"
					},
					"BQAAAJUDAAAAAAAAlgMAAAAAAAAAAAAAlgMAAAAAAACXAwAAAAAAAAAAAACXAwAAAAAAAJgDAAAAAAAAAAAAAJgDAAAAAAAAmQMAAAAAAAAAAAAAmQMAAAAAAACaAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAlQMAAAAAAACVAwAAAAAAAAAAAAAAAPC/AQAAAAEAAADsBQAAAAAAAOwFAAAAAAAAAAAAAAAA8L8"
				],
				[
					3419,
					4,
					"left_delete",
					null,
					"BAAAAJkDAAAAAAAAmQMAAAAAAAABAAAAZZgDAAAAAAAAmAMAAAAAAAABAAAAdJcDAAAAAAAAlwMAAAAAAAABAAAAdJYDAAAAAAAAlgMAAAAAAAABAAAAYQ",
					"AgAAAAAAAAABAAAAmgMAAAAAAACaAwAAAAAAAAAAAAAAAPC/AQAAAAEAAADxBQAAAAAAAPEFAAAAAAAAAAAAAAAA8L8"
				],
				[
					3420,
					1,
					"insert",
					{
						"characters": "tate.shader"
					},
					"CwAAAJYDAAAAAAAAlwMAAAAAAAAAAAAAlwMAAAAAAACYAwAAAAAAAAAAAACYAwAAAAAAAJkDAAAAAAAAAAAAAJkDAAAAAAAAmgMAAAAAAAAAAAAAmgMAAAAAAACbAwAAAAAAAAAAAACbAwAAAAAAAJwDAAAAAAAAAAAAAJwDAAAAAAAAnQMAAAAAAAAAAAAAnQMAAAAAAACeAwAAAAAAAAAAAACeAwAAAAAAAJ8DAAAAAAAAAAAAAJ8DAAAAAAAAoAMAAAAAAAAAAAAAoAMAAAAAAAChAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAlgMAAAAAAACWAwAAAAAAAAAAAAAAAPC/AQAAAAEAAADtBQAAAAAAAO0FAAAAAAAAAAAAAAAA8L8"
				],
				[
					3424,
					1,
					"insert",
					{
						"characters": "basic_shader."
					},
					"DgAAAJsDAAAAAAAAnAMAAAAAAAAAAAAAnAMAAAAAAACcAwAAAAAAAAYAAABzaGFkZXKcAwAAAAAAAJ0DAAAAAAAAAAAAAJ0DAAAAAAAAngMAAAAAAAAAAAAAngMAAAAAAACfAwAAAAAAAAAAAACfAwAAAAAAAKADAAAAAAAAAAAAAKADAAAAAAAAoQMAAAAAAAAAAAAAoQMAAAAAAACiAwAAAAAAAAAAAACiAwAAAAAAAKMDAAAAAAAAAAAAAKMDAAAAAAAApAMAAAAAAAAAAAAApAMAAAAAAAClAwAAAAAAAAAAAAClAwAAAAAAAKYDAAAAAAAAAAAAAKYDAAAAAAAApwMAAAAAAAAAAAAApwMAAAAAAACoAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAoQMAAAAAAACbAwAAAAAAAAAAAAAAAPC/AQAAAAEAAAD4BQAAAAAAAPgFAAAAAAAAAAAAAAAA8L8"
				],
				[
					3430,
					1,
					"insert",
					{
						"characters": "set_uniform"
					},
					"CwAAAKgDAAAAAAAAqQMAAAAAAAAAAAAAqQMAAAAAAACqAwAAAAAAAAAAAACqAwAAAAAAAKsDAAAAAAAAAAAAAKsDAAAAAAAArAMAAAAAAAAAAAAArAMAAAAAAACtAwAAAAAAAAAAAACtAwAAAAAAAK4DAAAAAAAAAAAAAK4DAAAAAAAArwMAAAAAAAAAAAAArwMAAAAAAACwAwAAAAAAAAAAAACwAwAAAAAAALEDAAAAAAAAAAAAALEDAAAAAAAAsgMAAAAAAAAAAAAAsgMAAAAAAACzAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAqAMAAAAAAACoAwAAAAAAAP///////+9/AQAAAAEAAAD/BQAAAAAAAP8FAAAAAAAAAAAAAAAA8L8"
				],
				[
					3431,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAALMDAAAAAAAAtQMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAswMAAAAAAACzAwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAKBgAAAAAAAAoGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3432,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAALQDAAAAAAAAtgMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAtAMAAAAAAAC0AwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAMBgAAAAAAAAwGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3433,
					1,
					"insert",
					{
						"characters": "model"
					},
					"BQAAALUDAAAAAAAAtgMAAAAAAAAAAAAAtgMAAAAAAAC3AwAAAAAAAAAAAAC3AwAAAAAAALgDAAAAAAAAAAAAALgDAAAAAAAAuQMAAAAAAAAAAAAAuQMAAAAAAAC6AwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAtQMAAAAAAAC1AwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAOBgAAAAAAAA4GAAAAAAAAAAAAAAAA8L8"
				],
				[
					3435,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAALsDAAAAAAAAvAMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAuwMAAAAAAAC7AwAAAAAAAAAAAAAAAPC/AQAAAAEAAAATBgAAAAAAABMGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3436,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALwDAAAAAAAAvQMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAvAMAAAAAAAC8AwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAUBgAAAAAAABQGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3437,
					1,
					"insert",
					{
						"characters": "Unifrm"
					},
					"BgAAAL0DAAAAAAAAvgMAAAAAAAAAAAAAvgMAAAAAAAC/AwAAAAAAAAAAAAC/AwAAAAAAAMADAAAAAAAAAAAAAMADAAAAAAAAwQMAAAAAAAAAAAAAwQMAAAAAAADCAwAAAAAAAAAAAADCAwAAAAAAAMMDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAvQMAAAAAAAC9AwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAVBgAAAAAAABUGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3438,
					1,
					"left_delete",
					null,
					"AQAAAMIDAAAAAAAAwgMAAAAAAAABAAAAbQ",
					"AgAAAAAAAAABAAAAwwMAAAAAAADDAwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAbBgAAAAAAABsGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3439,
					1,
					"insert_completion",
					{
						"completion": "set_uniform",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "set_uniform"
					},
					"AgAAAL0DAAAAAAAAvQMAAAAAAAAFAAAAVW5pZnK9AwAAAAAAAMgDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAwgMAAAAAAADCAwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAaBgAAAAAAABoGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3441,
					1,
					"insert",
					{
						"characters": "UniformData::"
					},
					"DgAAAL0DAAAAAAAAvgMAAAAAAAAAAAAAvgMAAAAAAAC+AwAAAAAAAAsAAABzZXRfdW5pZm9ybb4DAAAAAAAAvwMAAAAAAAAAAAAAvwMAAAAAAADAAwAAAAAAAAAAAADAAwAAAAAAAMEDAAAAAAAAAAAAAMEDAAAAAAAAwgMAAAAAAAAAAAAAwgMAAAAAAADDAwAAAAAAAAAAAADDAwAAAAAAAMQDAAAAAAAAAAAAAMQDAAAAAAAAxQMAAAAAAAAAAAAAxQMAAAAAAADGAwAAAAAAAAAAAADGAwAAAAAAAMcDAAAAAAAAAAAAAMcDAAAAAAAAyAMAAAAAAAAAAAAAyAMAAAAAAADJAwAAAAAAAAAAAADJAwAAAAAAAMoDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAyAMAAAAAAAC9AwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAgBgAAAAAAACAGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3442,
					1,
					"insert",
					{
						"characters": "M44"
					},
					"AwAAAMoDAAAAAAAAywMAAAAAAAAAAAAAywMAAAAAAADMAwAAAAAAAAAAAADMAwAAAAAAAM0DAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAygMAAAAAAADKAwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAiBgAAAAAAACIGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3443,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAM0DAAAAAAAAzwMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAzQMAAAAAAADNAwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAlBgAAAAAAACUGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3444,
					1,
					"insert",
					{
						"characters": "o"
					},
					"AQAAAM4DAAAAAAAAzwMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAzgMAAAAAAADOAwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAnBgAAAAAAACcGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3445,
					1,
					"left_delete",
					null,
					"AQAAAM4DAAAAAAAAzgMAAAAAAAABAAAAbw",
					"AgAAAAAAAAABAAAAzwMAAAAAAADPAwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAoBgAAAAAAACgGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3446,
					1,
					"insert",
					{
						"characters": "mat"
					},
					"AwAAAM4DAAAAAAAAzwMAAAAAAAAAAAAAzwMAAAAAAADQAwAAAAAAAAAAAADQAwAAAAAAANEDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAzgMAAAAAAADOAwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAnBgAAAAAAACcGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3448,
					1,
					"insert",
					{
						"characters": ";s"
					},
					"AgAAANMDAAAAAAAA1AMAAAAAAAAAAAAA1AMAAAAAAADVAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0wMAAAAAAADTAwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAqBgAAAAAAACoGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3449,
					1,
					"left_delete",
					null,
					"AQAAANQDAAAAAAAA1AMAAAAAAAABAAAAcw",
					"AgAAAAAAAAABAAAA1QMAAAAAAADVAwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAsBgAAAAAAACwGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3450,
					2,
					"rust_fmt_format_buffer",
					null,
					"AgAAAJoDAAAAAAAAowMAAAAAAAAAAAAAsAMAAAAAAAC5AwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA1AMAAAAAAADUAwAAAAAAAAAAAAAAAPC/AQAAAAEAAAArBgAAAAAAACsGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3457,
					1,
					"insert",
					{
						"characters": ".clone"
					},
					"BgAAAOMDAAAAAAAA5AMAAAAAAAAAAAAA5AMAAAAAAADlAwAAAAAAAAAAAADlAwAAAAAAAOYDAAAAAAAAAAAAAOYDAAAAAAAA5wMAAAAAAAAAAAAA5wMAAAAAAADoAwAAAAAAAAAAAADoAwAAAAAAAOkDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA4wMAAAAAAADjAwAAAAAAAAAAAAAAAPC/AQAAAAEAAAA9BgAAAAAAAD0GAAAAAAAAAAAAAAAA8L8"
				],
				[
					3458,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAOkDAAAAAAAA6wMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA6QMAAAAAAADpAwAAAAAAAAAAAAAAAPC/AQAAAAEAAABDBgAAAAAAAEMGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3490,
					1,
					"left_delete",
					null,
					"AQAAAIkDAAAAAAAAiQMAAAAAAAABAAAAMA",
					"AgAAAAAAAAABAAAAigMAAAAAAACKAwAAAAAAAAAAAAAAAPC/AQAAAAEAAABFBgAAAAAAAEUGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3491,
					1,
					"insert",
					{
						"characters": "100"
					},
					"AwAAAIkDAAAAAAAAigMAAAAAAAAAAAAAigMAAAAAAACLAwAAAAAAAAAAAACLAwAAAAAAAIwDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAiQMAAAAAAACJAwAAAAAAAAAAAAAAAPC/AQAAAAEAAABEBgAAAAAAAEQGAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "gengar_engine/src/engine/render/vao.rs",
			"settings":
			{
				"buffer_size": 751,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"insert",
					{
						"characters": "struct"
					},
					"BgAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAACAAAAAAAAAAAAAAACAAAAAAAAAAMAAAAAAAAAAAAAAAMAAAAAAAAABAAAAAAAAAAAAAAABAAAAAAAAAAFAAAAAAAAAAAAAAAFAAAAAAAAAAYAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					2,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAYAAAAAAAAABwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABgAAAAAAAAAGAAAAAAAAAAAAAAAAAPC/"
				],
				[
					4,
					1,
					"insert",
					{
						"characters": "pbu"
					},
					"AwAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAACAAAAAAAAAAAAAAACAAAAAAAAAAMAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
				],
				[
					5,
					2,
					"left_delete",
					null,
					"AgAAAAIAAAAAAAAAAgAAAAAAAAABAAAAdQEAAAAAAAAAAQAAAAAAAAABAAAAYg",
					"AQAAAAAAAAABAAAAAwAAAAAAAAADAAAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					1,
					"insert",
					{
						"characters": "ub"
					},
					"AgAAAAEAAAAAAAAAAgAAAAAAAAAAAAAAAgAAAAAAAAADAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAQAAAAAAAAABAAAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAMAAAAAAAAABAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAwAAAAAAAAADAAAAAAAAAAAAAAAAAPC/"
				],
				[
					9,
					1,
					"insert",
					{
						"characters": "vao"
					},
					"AwAAAAsAAAAAAAAADAAAAAAAAAAAAAAADAAAAAAAAAANAAAAAAAAAAAAAAANAAAAAAAAAA4AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACwAAAAAAAAALAAAAAAAAAP///////+9/"
				],
				[
					10,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAA4AAAAAAAAADwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADgAAAAAAAAAOAAAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAA8AAAAAAAAAEQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADwAAAAAAAAAPAAAAAAAAAAAAAAAAAPC/"
				],
				[
					12,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAABAAAAAAAAAAEQAAAAAAAAAAAAAAEQAAAAAAAAASAAAAAAAAAAAAAAARAAAAAAAAABIAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEAAAAAAAAAAQAAAAAAAAAAAAAAAAAPC/"
				],
				[
					13,
					1,
					"rust_fmt_format_buffer",
					null,
					"AgAAABAAAAAAAAAAEAAAAAAAAAADAAAACgkKEQAAAAAAAAASAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEgAAAAAAAAASAAAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					3,
					"left_delete",
					null,
					"AwAAAA0AAAAAAAAADQAAAAAAAAABAAAAbwwAAAAAAAAADAAAAAAAAAABAAAAYQsAAAAAAAAACwAAAAAAAAABAAAAdg",
					"AQAAAAAAAAABAAAADgAAAAAAAAAOAAAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"insert",
					{
						"characters": "Vao"
					},
					"AwAAAAsAAAAAAAAADAAAAAAAAAAAAAAADAAAAAAAAAANAAAAAAAAAAAAAAANAAAAAAAAAA4AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACwAAAAAAAAALAAAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					3,
					"left_delete",
					null,
					"AwAAAA0AAAAAAAAADQAAAAAAAAABAAAAbwwAAAAAAAAADAAAAAAAAAABAAAAYQsAAAAAAAAACwAAAAAAAAABAAAAVg",
					"AQAAAAAAAAABAAAADgAAAAAAAAAOAAAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": "vao"
					},
					"AwAAAAsAAAAAAAAADAAAAAAAAAAAAAAADAAAAAAAAAANAAAAAAAAAAAAAAANAAAAAAAAAA4AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACwAAAAAAAAALAAAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					1,
					"left_delete",
					null,
					"AQAAAAsAAAAAAAAACwAAAAAAAAABAAAAdg",
					"AQAAAAAAAAABAAAADAAAAAAAAAAMAAAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					1,
					"insert",
					{
						"characters": "B"
					},
					"AQAAAAsAAAAAAAAADAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACwAAAAAAAAALAAAAAAAAAAAAAAAAAPC/"
				],
				[
					33,
					1,
					"left_delete",
					null,
					"AQAAAAsAAAAAAAAACwAAAAAAAAABAAAAQg",
					"AQAAAAAAAAABAAAADAAAAAAAAAAMAAAAAAAAAAAAAAAAAPC/"
				],
				[
					34,
					1,
					"insert",
					{
						"characters": "V"
					},
					"AQAAAAsAAAAAAAAADAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACwAAAAAAAAALAAAAAAAAAAAAAAAAAPC/"
				],
				[
					38,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAABAAAAAAAAAAEQAAAAAAAAAAAAAAEQAAAAAAAAASAAAAAAAAAAAAAAARAAAAAAAAABIAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEAAAAAAAAAAQAAAAAAAAAAAAAAAAAPC/"
				],
				[
					41,
					1,
					"insert",
					{
						"characters": "int"
					},
					"AwAAABIAAAAAAAAAEwAAAAAAAAAAAAAAEwAAAAAAAAAUAAAAAAAAAAAAAAAUAAAAAAAAABUAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEgAAAAAAAAASAAAAAAAAAAAAAAAAAD1A"
				],
				[
					42,
					3,
					"left_delete",
					null,
					"AwAAABQAAAAAAAAAFAAAAAAAAAABAAAAdBMAAAAAAAAAEwAAAAAAAAABAAAAbhIAAAAAAAAAEgAAAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAAFQAAAAAAAAAVAAAAAAAAAAAAAAAAAPC/"
				],
				[
					43,
					1,
					"insert",
					{
						"characters": "id:"
					},
					"AwAAABIAAAAAAAAAEwAAAAAAAAAAAAAAEwAAAAAAAAAUAAAAAAAAAAAAAAAUAAAAAAAAABUAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEgAAAAAAAAASAAAAAAAAAAAAAAAAAPC/"
				],
				[
					44,
					1,
					"insert",
					{
						"characters": " i32;"
					},
					"BQAAABUAAAAAAAAAFgAAAAAAAAAAAAAAFgAAAAAAAAAXAAAAAAAAAAAAAAAXAAAAAAAAABgAAAAAAAAAAAAAABgAAAAAAAAAGQAAAAAAAAAAAAAAGQAAAAAAAAAaAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFQAAAAAAAAAVAAAAAAAAAAAAAAAAAPC/"
				],
				[
					47,
					1,
					"insert",
					{
						"characters": "\npu"
					},
					"AwAAAB0AAAAAAAAAHgAAAAAAAAAAAAAAHgAAAAAAAAAfAAAAAAAAAAAAAAAfAAAAAAAAACAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHQAAAAAAAAAdAAAAAAAAAAAAAAAAgFVA"
				],
				[
					48,
					2,
					"left_delete",
					null,
					"AgAAAB8AAAAAAAAAHwAAAAAAAAABAAAAdR4AAAAAAAAAHgAAAAAAAAABAAAAcA",
					"AQAAAAAAAAABAAAAIAAAAAAAAAAgAAAAAAAAAAAAAAAAAPC/"
				],
				[
					49,
					1,
					"insert",
					{
						"characters": "impl"
					},
					"BAAAAB4AAAAAAAAAHwAAAAAAAAAAAAAAHwAAAAAAAAAgAAAAAAAAAAAAAAAgAAAAAAAAACEAAAAAAAAAAAAAACEAAAAAAAAAIgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHgAAAAAAAAAeAAAAAAAAAAAAAAAAAPC/"
				],
				[
					50,
					1,
					"insert",
					{
						"characters": " Vao"
					},
					"BAAAACIAAAAAAAAAIwAAAAAAAAAAAAAAIwAAAAAAAAAkAAAAAAAAAAAAAAAkAAAAAAAAACUAAAAAAAAAAAAAACUAAAAAAAAAJgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIgAAAAAAAAAiAAAAAAAAAAAAAAAAAPC/"
				],
				[
					51,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACYAAAAAAAAAJwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJgAAAAAAAAAmAAAAAAAAAAAAAAAAAPC/"
				],
				[
					52,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAACcAAAAAAAAAKQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJwAAAAAAAAAnAAAAAAAAAAAAAAAAAPC/"
				],
				[
					53,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAACgAAAAAAAAAKQAAAAAAAAAAAAAAKQAAAAAAAAAqAAAAAAAAAAAAAAApAAAAAAAAACoAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKAAAAAAAAAAoAAAAAAAAAAAAAAAAAPC/"
				],
				[
					54,
					1,
					"insert",
					{
						"characters": "pub"
					},
					"AwAAACoAAAAAAAAAKwAAAAAAAAAAAAAAKwAAAAAAAAAsAAAAAAAAAAAAAAAsAAAAAAAAAC0AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKgAAAAAAAAAqAAAAAAAAAAAAAAAAAPC/"
				],
				[
					55,
					1,
					"insert",
					{
						"characters": " fn"
					},
					"AwAAAC0AAAAAAAAALgAAAAAAAAAAAAAALgAAAAAAAAAvAAAAAAAAAAAAAAAvAAAAAAAAADAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALQAAAAAAAAAtAAAAAAAAAAAAAAAAAPC/"
				],
				[
					56,
					1,
					"insert",
					{
						"characters": " new"
					},
					"BAAAADAAAAAAAAAAMQAAAAAAAAAAAAAAMQAAAAAAAAAyAAAAAAAAAAAAAAAyAAAAAAAAADMAAAAAAAAAAAAAADMAAAAAAAAANAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMAAAAAAAAAAwAAAAAAAAAAAAAAAAAPC/"
				],
				[
					57,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAADQAAAAAAAAANgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANAAAAAAAAAA0AAAAAAAAAAAAAAAAAPC/"
				],
				[
					59,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADYAAAAAAAAANwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANgAAAAAAAAA2AAAAAAAAAAAAAAAAAPC/"
				],
				[
					60,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAADcAAAAAAAAAOQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANwAAAAAAAAA3AAAAAAAAAAAAAAAAAPC/"
				],
				[
					61,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAADgAAAAAAAAAOQAAAAAAAAAAAAAAOQAAAAAAAAA6AAAAAAAAAAAAAAA6AAAAAAAAADsAAAAAAAAAAAAAADsAAAAAAAAAPAAAAAAAAAAAAAAAOQAAAAAAAAA5AAAAAAAAAAEAAAAJOQAAAAAAAAA7AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOAAAAAAAAAA4AAAAAAAAAAAAAAAAAPC/"
				],
				[
					65,
					1,
					"insert",
					{
						"characters": "render_api:"
					},
					"DAAAADUAAAAAAAAANgAAAAAAAAAAAAAAOgAAAAAAAAA6AAAAAAAAAAIAAAAJCTYAAAAAAAAANwAAAAAAAAAAAAAANwAAAAAAAAA4AAAAAAAAAAAAAAA4AAAAAAAAADkAAAAAAAAAAAAAADkAAAAAAAAAOgAAAAAAAAAAAAAAOgAAAAAAAAA7AAAAAAAAAAAAAAA7AAAAAAAAADwAAAAAAAAAAAAAADwAAAAAAAAAPQAAAAAAAAAAAAAAPQAAAAAAAAA+AAAAAAAAAAAAAAA+AAAAAAAAAD8AAAAAAAAAAAAAAD8AAAAAAAAAQAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANQAAAAAAAAA1AAAAAAAAAAAAAAAAAPC/"
				],
				[
					66,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEAAAAAAAAAAQQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQAAAAAAAAABAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					67,
					1,
					"left_delete",
					null,
					"AQAAAEAAAAAAAAAAQAAAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAQQAAAAAAAABBAAAAAAAAAAAAAAAAAPC/"
				],
				[
					68,
					1,
					"insert",
					{
						"characters": " ipml"
					},
					"BQAAAEAAAAAAAAAAQQAAAAAAAAAAAAAAQQAAAAAAAABCAAAAAAAAAAAAAABCAAAAAAAAAEMAAAAAAAAAAAAAAEMAAAAAAAAARAAAAAAAAAAAAAAARAAAAAAAAABFAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQAAAAAAAAABAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					69,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEUAAAAAAAAARgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARQAAAAAAAABFAAAAAAAAAAAAAAAAAPC/"
				],
				[
					70,
					4,
					"left_delete",
					null,
					"BAAAAEUAAAAAAAAARQAAAAAAAAABAAAAIEQAAAAAAAAARAAAAAAAAAABAAAAbEMAAAAAAAAAQwAAAAAAAAABAAAAbUIAAAAAAAAAQgAAAAAAAAABAAAAcA",
					"AQAAAAAAAAABAAAARgAAAAAAAABGAAAAAAAAAAAAAAAAAPC/"
				],
				[
					71,
					1,
					"insert",
					{
						"characters": "mp"
					},
					"AgAAAEIAAAAAAAAAQwAAAAAAAAAAAAAAQwAAAAAAAABEAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQgAAAAAAAABCAAAAAAAAAAAAAAAAAPC/"
				],
				[
					72,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEQAAAAAAAAARQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARAAAAAAAAABEAAAAAAAAAAAAAAAAAPC/"
				],
				[
					73,
					1,
					"left_delete",
					null,
					"AQAAAEQAAAAAAAAARAAAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAARQAAAAAAAABFAAAAAAAAAAAAAAAAAPC/"
				],
				[
					74,
					1,
					"insert",
					{
						"characters": "l"
					},
					"AQAAAEQAAAAAAAAARQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARAAAAAAAAABEAAAAAAAAAAAAAAAAAPC/"
				],
				[
					75,
					1,
					"insert",
					{
						"characters": " Render"
					},
					"BwAAAEUAAAAAAAAARgAAAAAAAAAAAAAARgAAAAAAAABHAAAAAAAAAAAAAABHAAAAAAAAAEgAAAAAAAAAAAAAAEgAAAAAAAAASQAAAAAAAAAAAAAASQAAAAAAAABKAAAAAAAAAAAAAABKAAAAAAAAAEsAAAAAAAAAAAAAAEsAAAAAAAAATAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARQAAAAAAAABFAAAAAAAAAAAAAAAAAPC/"
				],
				[
					76,
					6,
					"left_delete",
					null,
					"BgAAAEsAAAAAAAAASwAAAAAAAAABAAAAckoAAAAAAAAASgAAAAAAAAABAAAAZUkAAAAAAAAASQAAAAAAAAABAAAAZEgAAAAAAAAASAAAAAAAAAABAAAAbkcAAAAAAAAARwAAAAAAAAABAAAAZUYAAAAAAAAARgAAAAAAAAABAAAAUg",
					"AQAAAAAAAAABAAAATAAAAAAAAABMAAAAAAAAAAAAAAAAAPC/"
				],
				[
					77,
					1,
					"insert",
					{
						"characters": "super::RenerAPi"
					},
					"DwAAAEYAAAAAAAAARwAAAAAAAAAAAAAARwAAAAAAAABIAAAAAAAAAAAAAABIAAAAAAAAAEkAAAAAAAAAAAAAAEkAAAAAAAAASgAAAAAAAAAAAAAASgAAAAAAAABLAAAAAAAAAAAAAABLAAAAAAAAAEwAAAAAAAAAAAAAAEwAAAAAAAAATQAAAAAAAAAAAAAATQAAAAAAAABOAAAAAAAAAAAAAABOAAAAAAAAAE8AAAAAAAAAAAAAAE8AAAAAAAAAUAAAAAAAAAAAAAAAUAAAAAAAAABRAAAAAAAAAAAAAABRAAAAAAAAAFIAAAAAAAAAAAAAAFIAAAAAAAAAUwAAAAAAAAAAAAAAUwAAAAAAAABUAAAAAAAAAAAAAABUAAAAAAAAAFUAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARgAAAAAAAABGAAAAAAAAAAAAAAAAAPC/"
				],
				[
					79,
					2,
					"left_delete",
					null,
					"AgAAAFQAAAAAAAAAVAAAAAAAAAABAAAAaVMAAAAAAAAAUwAAAAAAAAABAAAAUA",
					"AQAAAAAAAAABAAAAVQAAAAAAAABVAAAAAAAAAAAAAAAAAPC/"
				],
				[
					80,
					1,
					"insert",
					{
						"characters": "pi"
					},
					"AgAAAFMAAAAAAAAAVAAAAAAAAAAAAAAAVAAAAAAAAABVAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUwAAAAAAAABTAAAAAAAAAAAAAAAAAPC/"
				],
				[
					84,
					1,
					"left_delete",
					null,
					"AQAAABkAAAAAAAAAGQAAAAAAAAABAAAAOw",
					"AQAAAAAAAAABAAAAGgAAAAAAAAAaAAAAAAAAAAAAAAAAAPC/"
				],
				[
					85,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAABkAAAAAAAAAGgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGQAAAAAAAAAZAAAAAAAAAAAAAAAAAPC/"
				],
				[
					86,
					1,
					"rust_fmt_format_buffer",
					null,
					"BwAAABEAAAAAAAAAEQAAAAAAAAABAAAACREAAAAAAAAAFQAAAAAAAAAAAAAALAAAAAAAAAAsAAAAAAAAAAEAAAAJLAAAAAAAAAAwAAAAAAAAAAAAAABeAAAAAAAAAF8AAAAAAAAAAAAAAGAAAAAAAAAAYAAAAAAAAAACAAAACgliAAAAAAAAAGIAAAAAAAAAAQAAAH0",
					"AQAAAAAAAAABAAAAGgAAAAAAAAAaAAAAAAAAAAAAAAAAAPC/"
				],
				[
					89,
					1,
					"insert",
					{
						"characters": "d"
					},
					"AQAAAFYAAAAAAAAAVwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVgAAAAAAAABWAAAAAAAAAAAAAAAAAPC/"
				],
				[
					92,
					1,
					"insert",
					{
						"characters": " ->"
					},
					"AwAAAF0AAAAAAAAAXgAAAAAAAAAAAAAAXgAAAAAAAABfAAAAAAAAAAAAAABfAAAAAAAAAGAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXQAAAAAAAABdAAAAAAAAAAAAAAAAAPC/"
				],
				[
					93,
					1,
					"insert",
					{
						"characters": " Self"
					},
					"BQAAAGAAAAAAAAAAYQAAAAAAAAAAAAAAYQAAAAAAAABiAAAAAAAAAAAAAABiAAAAAAAAAGMAAAAAAAAAAAAAAGMAAAAAAAAAZAAAAAAAAAAAAAAAZAAAAAAAAABlAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYAAAAAAAAABgAAAAAAAAAAAAAAAAAPC/"
				],
				[
					96,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAGcAAAAAAAAAaAAAAAAAAAAAAAAAaAAAAAAAAABsAAAAAAAAAAAAAABsAAAAAAAAAG0AAAAAAAAAAAAAAG0AAAAAAAAAcQAAAAAAAAAAAAAAaAAAAAAAAABoAAAAAAAAAAQAAAAgICAgaAAAAAAAAABtAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZwAAAAAAAABnAAAAAAAAAAAAAAAAAPC/"
				],
				[
					97,
					1,
					"rust_fmt_format_buffer",
					null,
					"AQAAAGcAAAAAAAAAZwAAAAAAAAALAAAACiAgICAJCiAgICA",
					"AQAAAAAAAAABAAAAbQAAAAAAAABtAAAAAAAAAAAAAAAAAPC/"
				],
				[
					99,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAGcAAAAAAAAAaAAAAAAAAAAAAAAAaAAAAAAAAABsAAAAAAAAAAAAAABsAAAAAAAAAG0AAAAAAAAAAAAAAG0AAAAAAAAAcQAAAAAAAAAAAAAAaAAAAAAAAABoAAAAAAAAAAQAAAAgICAgaAAAAAAAAABtAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZwAAAAAAAABnAAAAAAAAAAAAAAAAAPC/"
				],
				[
					100,
					1,
					"insert",
					{
						"characters": "Voa"
					},
					"AwAAAG0AAAAAAAAAbgAAAAAAAAAAAAAAbgAAAAAAAABvAAAAAAAAAAAAAABvAAAAAAAAAHAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbQAAAAAAAABtAAAAAAAAAAAAAAAAAPC/"
				],
				[
					101,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAHAAAAAAAAAAcgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcAAAAAAAAABwAAAAAAAAAAAAAAAAAPC/"
				],
				[
					102,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAHEAAAAAAAAAcgAAAAAAAAAAAAAAcgAAAAAAAAB3AAAAAAAAAAAAAAB3AAAAAAAAAHgAAAAAAAAAAAAAAHgAAAAAAAAAfQAAAAAAAAAAAAAAcgAAAAAAAAByAAAAAAAAAAUAAAAgICAgCXIAAAAAAAAAeAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcQAAAAAAAABxAAAAAAAAAAAAAAAAAPC/"
				],
				[
					103,
					1,
					"insert",
					{
						"characters": "id:"
					},
					"AwAAAHgAAAAAAAAAeQAAAAAAAAAAAAAAeQAAAAAAAAB6AAAAAAAAAAAAAAB6AAAAAAAAAHsAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeAAAAAAAAAB4AAAAAAAAAAAAAAAAAPC/"
				],
				[
					104,
					1,
					"insert",
					{
						"characters": " 10"
					},
					"AwAAAHsAAAAAAAAAfAAAAAAAAAAAAAAAfAAAAAAAAAB9AAAAAAAAAAAAAAB9AAAAAAAAAH4AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAewAAAAAAAAB7AAAAAAAAAAAAAAAAAPC/"
				],
				[
					105,
					1,
					"rust_fmt_format_buffer",
					null,
					"BAAAAGwAAAAAAAAAbAAAAAAAAAAMAAAACVZvYXsKICAgIAkJbAAAAAAAAAB2AAAAAAAAAAAAAAB8AAAAAAAAAHwAAAAAAAAAAQAAAAp9AAAAAAAAAH0AAAAAAAAABAAAACAgIAk",
					"AQAAAAAAAAABAAAAfgAAAAAAAAB+AAAAAAAAAAAAAAAAAPC/"
				],
				[
					108,
					2,
					"left_delete",
					null,
					"AgAAAHIAAAAAAAAAcgAAAAAAAAABAAAAYXEAAAAAAAAAcQAAAAAAAAABAAAAbw",
					"AQAAAAAAAAABAAAAcwAAAAAAAABzAAAAAAAAAAAAAAAAAPC/"
				],
				[
					109,
					1,
					"insert",
					{
						"characters": "ao"
					},
					"AgAAAHEAAAAAAAAAcgAAAAAAAAAAAAAAcgAAAAAAAABzAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcQAAAAAAAABxAAAAAAAAAAAAAAAAAPC/"
				],
				[
					114,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAGcAAAAAAAAAaAAAAAAAAAAAAAAAaAAAAAAAAABsAAAAAAAAAAAAAABsAAAAAAAAAG0AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZwAAAAAAAABnAAAAAAAAAP///////+9/"
				],
				[
					115,
					1,
					"rust_fmt_format_buffer",
					null,
					"AQAAAGwAAAAAAAAAbAAAAAAAAAAGAAAACQogICAg",
					"AQAAAAAAAAABAAAAbQAAAAAAAABtAAAAAAAAAAAAAAAAAPC/"
				],
				[
					118,
					1,
					"insert",
					{
						"characters": "\nlet"
					},
					"BgAAAGcAAAAAAAAAaAAAAAAAAAAAAAAAaAAAAAAAAABsAAAAAAAAAAAAAABsAAAAAAAAAG0AAAAAAAAAAAAAAG0AAAAAAAAAbgAAAAAAAAAAAAAAbgAAAAAAAABvAAAAAAAAAAAAAABvAAAAAAAAAHAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZwAAAAAAAABnAAAAAAAAAP///////+9/"
				],
				[
					119,
					1,
					"insert",
					{
						"characters": " id"
					},
					"AwAAAHAAAAAAAAAAcQAAAAAAAAAAAAAAcQAAAAAAAAByAAAAAAAAAAAAAAByAAAAAAAAAHMAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcAAAAAAAAABwAAAAAAAAAAAAAAAAAPC/"
				],
				[
					120,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAHMAAAAAAAAAdAAAAAAAAAAAAAAAdAAAAAAAAAB1AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcwAAAAAAAABzAAAAAAAAAAAAAAAAAPC/"
				],
				[
					121,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHUAAAAAAAAAdgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdQAAAAAAAAB1AAAAAAAAAAAAAAAAAPC/"
				],
				[
					122,
					1,
					"insert",
					{
						"characters": "render_"
					},
					"BwAAAHYAAAAAAAAAdwAAAAAAAAAAAAAAdwAAAAAAAAB4AAAAAAAAAAAAAAB4AAAAAAAAAHkAAAAAAAAAAAAAAHkAAAAAAAAAegAAAAAAAAAAAAAAegAAAAAAAAB7AAAAAAAAAAAAAAB7AAAAAAAAAHwAAAAAAAAAAAAAAHwAAAAAAAAAfQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdgAAAAAAAAB2AAAAAAAAAAAAAAAAAPC/"
				],
				[
					123,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAH0AAAAAAAAAfwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfQAAAAAAAAB9AAAAAAAAAAAAAAAAAPC/"
				],
				[
					124,
					1,
					"insert",
					{
						"characters": "pi"
					},
					"AgAAAH4AAAAAAAAAfwAAAAAAAAAAAAAAfwAAAAAAAACAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfgAAAAAAAAB+AAAAAAAAAAAAAAAAAPC/"
				],
				[
					125,
					2,
					"left_delete",
					null,
					"AgAAAH8AAAAAAAAAfwAAAAAAAAABAAAAaX4AAAAAAAAAfgAAAAAAAAABAAAAcA",
					"AQAAAAAAAAABAAAAgAAAAAAAAACAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					126,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAH0AAAAAAAAAfQAAAAAAAAABAAAAe30AAAAAAAAAfQAAAAAAAAABAAAAfQ",
					"AQAAAAAAAAABAAAAfgAAAAAAAAB+AAAAAAAAAAAAAAAAAPC/"
				],
				[
					127,
					1,
					"insert",
					{
						"characters": "api::"
					},
					"BQAAAH0AAAAAAAAAfgAAAAAAAAAAAAAAfgAAAAAAAAB/AAAAAAAAAAAAAAB/AAAAAAAAAIAAAAAAAAAAAAAAAIAAAAAAAAAAgQAAAAAAAAAAAAAAgQAAAAAAAACCAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfQAAAAAAAAB9AAAAAAAAAAAAAAAAAPC/"
				],
				[
					129,
					1,
					"left_delete",
					null,
					"AQAAAIEAAAAAAAAAgQAAAAAAAAABAAAAOg",
					"AQAAAAAAAAABAAAAggAAAAAAAACCAAAAAAAAAAAAAAAAAPC/"
				],
				[
					130,
					1,
					"left_delete",
					null,
					"AQAAAIAAAAAAAAAAgAAAAAAAAAABAAAAOg",
					"AQAAAAAAAAABAAAAgQAAAAAAAACBAAAAAAAAAAAAAAAAAPC/"
				],
				[
					131,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAAIAAAAAAAAAAgQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgAAAAAAAAACAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					133,
					1,
					"insert",
					{
						"characters": "create_vo"
					},
					"CQAAAIEAAAAAAAAAggAAAAAAAAAAAAAAggAAAAAAAACDAAAAAAAAAAAAAACDAAAAAAAAAIQAAAAAAAAAAAAAAIQAAAAAAAAAhQAAAAAAAAAAAAAAhQAAAAAAAACGAAAAAAAAAAAAAACGAAAAAAAAAIcAAAAAAAAAAAAAAIcAAAAAAAAAiAAAAAAAAAAAAAAAiAAAAAAAAACJAAAAAAAAAAAAAACJAAAAAAAAAIoAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgQAAAAAAAACBAAAAAAAAAAAAAAAAAPC/"
				],
				[
					134,
					1,
					"left_delete",
					null,
					"AQAAAIkAAAAAAAAAiQAAAAAAAAABAAAAbw",
					"AQAAAAAAAAABAAAAigAAAAAAAACKAAAAAAAAAAAAAAAAAPC/"
				],
				[
					135,
					1,
					"insert",
					{
						"characters": "ao"
					},
					"AgAAAIkAAAAAAAAAigAAAAAAAAAAAAAAigAAAAAAAACLAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiQAAAAAAAACJAAAAAAAAAAAAAAAAAPC/"
				],
				[
					136,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAIsAAAAAAAAAjQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiwAAAAAAAACLAAAAAAAAAAAAAAAAAPC/"
				],
				[
					138,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAI0AAAAAAAAAjwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjQAAAAAAAACNAAAAAAAAAAAAAAAAAPC/"
				],
				[
					139,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAI4AAAAAAAAAjwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjgAAAAAAAACOAAAAAAAAAAAAAAAAAPC/"
				],
				[
					140,
					1,
					"left_delete",
					null,
					"AQAAAI4AAAAAAAAAjgAAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAjwAAAAAAAACPAAAAAAAAAAAAAAAAAPC/"
				],
				[
					141,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAI0AAAAAAAAAjQAAAAAAAAABAAAAe40AAAAAAAAAjQAAAAAAAAABAAAAfQ",
					"AQAAAAAAAAABAAAAjgAAAAAAAACOAAAAAAAAAAAAAAAAAPC/"
				],
				[
					142,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAI0AAAAAAAAAjgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjQAAAAAAAACNAAAAAAAAAAAAAAAAAPC/"
				],
				[
					143,
					1,
					"rust_fmt_format_buffer",
					null,
					"AgAAAGwAAAAAAAAAbAAAAAAAAAABAAAACWwAAAAAAAAAcAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjgAAAAAAAACOAAAAAAAAAAAAAAAAAPC/"
				],
				[
					146,
					2,
					"left_delete",
					null,
					"AgAAAKUAAAAAAAAApQAAAAAAAAABAAAAMKQAAAAAAAAApAAAAAAAAAABAAAAMQ",
					"AQAAAAAAAAABAAAApgAAAAAAAACmAAAAAAAAAAAAAAAAAPC/"
				],
				[
					147,
					1,
					"insert",
					{
						"characters": "id"
					},
					"AgAAAKQAAAAAAAAApQAAAAAAAAAAAAAApQAAAAAAAACmAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApAAAAAAAAACkAAAAAAAAAAAAAAAAAPC/"
				],
				[
					153,
					1,
					"insert",
					{
						"characters": ".unwrap"
					},
					"BwAAAJAAAAAAAAAAkQAAAAAAAAAAAAAAkQAAAAAAAACSAAAAAAAAAAAAAACSAAAAAAAAAJMAAAAAAAAAAAAAAJMAAAAAAAAAlAAAAAAAAAAAAAAAlAAAAAAAAACVAAAAAAAAAAAAAACVAAAAAAAAAJYAAAAAAAAAAAAAAJYAAAAAAAAAlwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkAAAAAAAAACQAAAAAAAAAAAAAAAAAPC/"
				],
				[
					154,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJcAAAAAAAAAmQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlwAAAAAAAACXAAAAAAAAAAAAAAAAAPC/"
				],
				[
					160,
					1,
					"insert",
					{
						"characters": "Result<"
					},
					"BwAAAGEAAAAAAAAAYgAAAAAAAAAAAAAAYgAAAAAAAABjAAAAAAAAAAAAAABjAAAAAAAAAGQAAAAAAAAAAAAAAGQAAAAAAAAAZQAAAAAAAAAAAAAAZQAAAAAAAABmAAAAAAAAAAAAAABmAAAAAAAAAGcAAAAAAAAAAAAAAGcAAAAAAAAAaAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYQAAAAAAAABhAAAAAAAAAAAAAAAAAPC/"
				],
				[
					161,
					1,
					"left_delete",
					null,
					"AQAAAGcAAAAAAAAAZwAAAAAAAAABAAAAPA",
					"AQAAAAAAAAABAAAAaAAAAAAAAABoAAAAAAAAAAAAAAAAAPC/"
				],
				[
					163,
					1,
					"left_delete",
					null,
					"AQAAAGEAAAAAAAAAYQAAAAAAAAAGAAAAUmVzdWx0",
					"AQAAAAAAAAABAAAAZwAAAAAAAABhAAAAAAAAAAAAAAAAAPC/"
				],
				[
					170,
					1,
					"left_delete",
					null,
					"AQAAABkAAAAAAAAAGQAAAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAAGgAAAAAAAAAaAAAAAAAAAAAAAAAAAPC/"
				],
				[
					171,
					1,
					"insert",
					{
						"characters": "u"
					},
					"AQAAABkAAAAAAAAAGgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGQAAAAAAAAAZAAAAAAAAAAAAAAAAAPC/"
				],
				[
					177,
					1,
					"insert",
					{
						"characters": "\n\npub"
					},
					"CAAAALcAAAAAAAAAuAAAAAAAAAAAAAAAuAAAAAAAAAC8AAAAAAAAAAAAAAC8AAAAAAAAAL0AAAAAAAAAAAAAAL0AAAAAAAAAwQAAAAAAAAAAAAAAuAAAAAAAAAC4AAAAAAAAAAQAAAAgICAgvQAAAAAAAAC+AAAAAAAAAAAAAAC+AAAAAAAAAL8AAAAAAAAAAAAAAL8AAAAAAAAAwAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtwAAAAAAAAC3AAAAAAAAAP///////+9/"
				],
				[
					178,
					1,
					"insert",
					{
						"characters": " fn"
					},
					"AwAAAMAAAAAAAAAAwQAAAAAAAAAAAAAAwQAAAAAAAADCAAAAAAAAAAAAAADCAAAAAAAAAMMAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwAAAAAAAAADAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					179,
					1,
					"insert",
					{
						"characters": " upload_v2"
					},
					"CgAAAMMAAAAAAAAAxAAAAAAAAAAAAAAAxAAAAAAAAADFAAAAAAAAAAAAAADFAAAAAAAAAMYAAAAAAAAAAAAAAMYAAAAAAAAAxwAAAAAAAAAAAAAAxwAAAAAAAADIAAAAAAAAAAAAAADIAAAAAAAAAMkAAAAAAAAAAAAAAMkAAAAAAAAAygAAAAAAAAAAAAAAygAAAAAAAADLAAAAAAAAAAAAAADLAAAAAAAAAMwAAAAAAAAAAAAAAMwAAAAAAAAAzQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwwAAAAAAAADDAAAAAAAAAAAAAAAAAPC/"
				],
				[
					180,
					1,
					"left_delete",
					null,
					"AQAAAMwAAAAAAAAAzAAAAAAAAAABAAAAMg",
					"AQAAAAAAAAABAAAAzQAAAAAAAADNAAAAAAAAAAAAAAAAAPC/"
				],
				[
					181,
					1,
					"insert",
					{
						"characters": "3"
					},
					"AQAAAMwAAAAAAAAAzQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzAAAAAAAAADMAAAAAAAAAAAAAAAAAPC/"
				],
				[
					184,
					1,
					"insert",
					{
						"characters": "bind"
					},
					"BQAAAMQAAAAAAAAAxQAAAAAAAAAAAAAAxQAAAAAAAADFAAAAAAAAAAkAAAB1cGxvYWRfdjPFAAAAAAAAAMYAAAAAAAAAAAAAAMYAAAAAAAAAxwAAAAAAAAAAAAAAxwAAAAAAAADIAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzQAAAAAAAADEAAAAAAAAAAAAAAAAAPC/"
				],
				[
					185,
					4,
					"left_delete",
					null,
					"BAAAAMcAAAAAAAAAxwAAAAAAAAABAAAAZMYAAAAAAAAAxgAAAAAAAAABAAAAbsUAAAAAAAAAxQAAAAAAAAABAAAAacQAAAAAAAAAxAAAAAAAAAABAAAAYg",
					"AQAAAAAAAAABAAAAyAAAAAAAAADIAAAAAAAAAAAAAAAAAPC/"
				],
				[
					186,
					1,
					"insert",
					{
						"characters": "upload_v3"
					},
					"CQAAAMQAAAAAAAAAxQAAAAAAAAAAAAAAxQAAAAAAAADGAAAAAAAAAAAAAADGAAAAAAAAAMcAAAAAAAAAAAAAAMcAAAAAAAAAyAAAAAAAAAAAAAAAyAAAAAAAAADJAAAAAAAAAAAAAADJAAAAAAAAAMoAAAAAAAAAAAAAAMoAAAAAAAAAywAAAAAAAAAAAAAAywAAAAAAAADMAAAAAAAAAAAAAADMAAAAAAAAAM0AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxAAAAAAAAADEAAAAAAAAAAAAAAAAAPC/"
				],
				[
					188,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAM0AAAAAAAAAzwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzQAAAAAAAADNAAAAAAAAAAAAAAAAAPC/"
				],
				[
					190,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAM8AAAAAAAAA0AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzwAAAAAAAADPAAAAAAAAAAAAAAAAAPC/"
				],
				[
					191,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAANAAAAAAAAAA0gAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0AAAAAAAAADQAAAAAAAAAAAAAAAAAPC/"
				],
				[
					192,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAANEAAAAAAAAA0gAAAAAAAAAAAAAA0gAAAAAAAADWAAAAAAAAAAAAAADWAAAAAAAAANcAAAAAAAAAAAAAANcAAAAAAAAA2wAAAAAAAAAAAAAA0gAAAAAAAADSAAAAAAAAAAQAAAAgICAg0gAAAAAAAADXAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0QAAAAAAAADRAAAAAAAAAAAAAAAAAPC/"
				],
				[
					193,
					1,
					"rust_fmt_format_buffer",
					null,
					"AQAAANEAAAAAAAAA0QAAAAAAAAALAAAACiAgICAJCiAgICA",
					"AQAAAAAAAAABAAAA1wAAAAAAAADXAAAAAAAAAAAAAAAAAPC/"
				],
				[
					196,
					1,
					"insert",
					{
						"characters": "Self"
					},
					"BAAAAM4AAAAAAAAAzwAAAAAAAAAAAAAAzwAAAAAAAADQAAAAAAAAAAAAAADQAAAAAAAAANEAAAAAAAAAAAAAANEAAAAAAAAA0gAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzgAAAAAAAADOAAAAAAAAAAAAAAAAAPC/"
				],
				[
					197,
					4,
					"left_delete",
					null,
					"BAAAANEAAAAAAAAA0QAAAAAAAAABAAAAZtAAAAAAAAAA0AAAAAAAAAABAAAAbM8AAAAAAAAAzwAAAAAAAAABAAAAZc4AAAAAAAAAzgAAAAAAAAABAAAAUw",
					"AQAAAAAAAAABAAAA0gAAAAAAAADSAAAAAAAAAAAAAAAAAPC/"
				],
				[
					198,
					1,
					"insert",
					{
						"characters": "&self"
					},
					"BQAAAM4AAAAAAAAAzwAAAAAAAAAAAAAAzwAAAAAAAADQAAAAAAAAAAAAAADQAAAAAAAAANEAAAAAAAAAAAAAANEAAAAAAAAA0gAAAAAAAAAAAAAA0gAAAAAAAADTAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzgAAAAAAAADOAAAAAAAAAAAAAAAAAPC/"
				],
				[
					201,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAANMAAAAAAAAA1AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0wAAAAAAAADTAAAAAAAAAAAAAAAAAPC/"
				],
				[
					202,
					1,
					"insert",
					{
						"characters": " ipml"
					},
					"BQAAANQAAAAAAAAA1QAAAAAAAAAAAAAA1QAAAAAAAADWAAAAAAAAAAAAAADWAAAAAAAAANcAAAAAAAAAAAAAANcAAAAAAAAA2AAAAAAAAAAAAAAA2AAAAAAAAADZAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1AAAAAAAAADUAAAAAAAAAAAAAAAAAPC/"
				],
				[
					203,
					3,
					"left_delete",
					null,
					"AwAAANgAAAAAAAAA2AAAAAAAAAABAAAAbNcAAAAAAAAA1wAAAAAAAAABAAAAbdYAAAAAAAAA1gAAAAAAAAABAAAAcA",
					"AQAAAAAAAAABAAAA2QAAAAAAAADZAAAAAAAAAAAAAAAAAPC/"
				],
				[
					204,
					1,
					"insert",
					{
						"characters": "mp"
					},
					"AgAAANYAAAAAAAAA1wAAAAAAAAAAAAAA1wAAAAAAAADYAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1gAAAAAAAADWAAAAAAAAAAAAAAAAAPC/"
				],
				[
					205,
					1,
					"insert",
					{
						"characters": " render"
					},
					"BwAAANgAAAAAAAAA2QAAAAAAAAAAAAAA2QAAAAAAAADaAAAAAAAAAAAAAADaAAAAAAAAANsAAAAAAAAAAAAAANsAAAAAAAAA3AAAAAAAAAAAAAAA3AAAAAAAAADdAAAAAAAAAAAAAADdAAAAAAAAAN4AAAAAAAAAAAAAAN4AAAAAAAAA3wAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2AAAAAAAAADYAAAAAAAAAAAAAAAAAPC/"
				],
				[
					206,
					10,
					"left_delete",
					null,
					"CgAAAN4AAAAAAAAA3gAAAAAAAAABAAAAct0AAAAAAAAA3QAAAAAAAAABAAAAZdwAAAAAAAAA3AAAAAAAAAABAAAAZNsAAAAAAAAA2wAAAAAAAAABAAAAbtoAAAAAAAAA2gAAAAAAAAABAAAAZdkAAAAAAAAA2QAAAAAAAAABAAAActgAAAAAAAAA2AAAAAAAAAABAAAAINcAAAAAAAAA1wAAAAAAAAABAAAAcNYAAAAAAAAA1gAAAAAAAAABAAAAbdUAAAAAAAAA1QAAAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAA3wAAAAAAAADfAAAAAAAAAAAAAAAAAPC/"
				],
				[
					207,
					1,
					"insert",
					{
						"characters": "rener"
					},
					"BQAAANUAAAAAAAAA1gAAAAAAAAAAAAAA1gAAAAAAAADXAAAAAAAAAAAAAADXAAAAAAAAANgAAAAAAAAAAAAAANgAAAAAAAAA2QAAAAAAAAAAAAAA2QAAAAAAAADaAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1QAAAAAAAADVAAAAAAAAAAAAAAAAAPC/"
				],
				[
					208,
					2,
					"left_delete",
					null,
					"AgAAANkAAAAAAAAA2QAAAAAAAAABAAAActgAAAAAAAAA2AAAAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAA2gAAAAAAAADaAAAAAAAAAAAAAAAAAPC/"
				],
				[
					209,
					1,
					"insert",
					{
						"characters": "der_api:"
					},
					"CAAAANgAAAAAAAAA2QAAAAAAAAAAAAAA2QAAAAAAAADaAAAAAAAAAAAAAADaAAAAAAAAANsAAAAAAAAAAAAAANsAAAAAAAAA3AAAAAAAAAAAAAAA3AAAAAAAAADdAAAAAAAAAAAAAADdAAAAAAAAAN4AAAAAAAAAAAAAAN4AAAAAAAAA3wAAAAAAAAAAAAAA3wAAAAAAAADgAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2AAAAAAAAADYAAAAAAAAAAAAAAAAAPC/"
				],
				[
					210,
					1,
					"insert",
					{
						"characters": " ipml"
					},
					"BQAAAOAAAAAAAAAA4QAAAAAAAAAAAAAA4QAAAAAAAADiAAAAAAAAAAAAAADiAAAAAAAAAOMAAAAAAAAAAAAAAOMAAAAAAAAA5AAAAAAAAAAAAAAA5AAAAAAAAADlAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4AAAAAAAAADgAAAAAAAAAAAAAAAAAPC/"
				],
				[
					211,
					1,
					"insert",
					{
						"characters": " super"
					},
					"BgAAAOUAAAAAAAAA5gAAAAAAAAAAAAAA5gAAAAAAAADnAAAAAAAAAAAAAADnAAAAAAAAAOgAAAAAAAAAAAAAAOgAAAAAAAAA6QAAAAAAAAAAAAAA6QAAAAAAAADqAAAAAAAAAAAAAADqAAAAAAAAAOsAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5QAAAAAAAADlAAAAAAAAAAAAAAAAAPC/"
				],
				[
					212,
					9,
					"left_delete",
					null,
					"CQAAAOoAAAAAAAAA6gAAAAAAAAABAAAAcukAAAAAAAAA6QAAAAAAAAABAAAAZegAAAAAAAAA6AAAAAAAAAABAAAAcOcAAAAAAAAA5wAAAAAAAAABAAAAdeYAAAAAAAAA5gAAAAAAAAABAAAAc+UAAAAAAAAA5QAAAAAAAAABAAAAIOQAAAAAAAAA5AAAAAAAAAABAAAAbOMAAAAAAAAA4wAAAAAAAAABAAAAbeIAAAAAAAAA4gAAAAAAAAABAAAAcA",
					"AQAAAAAAAAABAAAA6wAAAAAAAADrAAAAAAAAAAAAAAAAAPC/"
				],
				[
					213,
					1,
					"insert",
					{
						"characters": "mp:"
					},
					"AwAAAOIAAAAAAAAA4wAAAAAAAAAAAAAA4wAAAAAAAADkAAAAAAAAAAAAAADkAAAAAAAAAOUAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4gAAAAAAAADiAAAAAAAAAAAAAAAAAPC/"
				],
				[
					214,
					1,
					"left_delete",
					null,
					"AQAAAOQAAAAAAAAA5AAAAAAAAAABAAAAOg",
					"AQAAAAAAAAABAAAA5QAAAAAAAADlAAAAAAAAAAAAAAAAAPC/"
				],
				[
					215,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOQAAAAAAAAA5QAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5AAAAAAAAADkAAAAAAAAAAAAAAAAAPC/"
				],
				[
					216,
					1,
					"left_delete",
					null,
					"AQAAAOQAAAAAAAAA5AAAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAA5QAAAAAAAADlAAAAAAAAAAAAAAAAAPC/"
				],
				[
					217,
					1,
					"insert",
					{
						"characters": "l"
					},
					"AQAAAOQAAAAAAAAA5QAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5AAAAAAAAADkAAAAAAAAAAAAAAAAAPC/"
				],
				[
					218,
					1,
					"insert",
					{
						"characters": " super::RenderApi"
					},
					"EQAAAOUAAAAAAAAA5gAAAAAAAAAAAAAA5gAAAAAAAADnAAAAAAAAAAAAAADnAAAAAAAAAOgAAAAAAAAAAAAAAOgAAAAAAAAA6QAAAAAAAAAAAAAA6QAAAAAAAADqAAAAAAAAAAAAAADqAAAAAAAAAOsAAAAAAAAAAAAAAOsAAAAAAAAA7AAAAAAAAAAAAAAA7AAAAAAAAADtAAAAAAAAAAAAAADtAAAAAAAAAO4AAAAAAAAAAAAAAO4AAAAAAAAA7wAAAAAAAAAAAAAA7wAAAAAAAADwAAAAAAAAAAAAAADwAAAAAAAAAPEAAAAAAAAAAAAAAPEAAAAAAAAA8gAAAAAAAAAAAAAA8gAAAAAAAADzAAAAAAAAAAAAAADzAAAAAAAAAPQAAAAAAAAAAAAAAPQAAAAAAAAA9QAAAAAAAAAAAAAA9QAAAAAAAAD2AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5QAAAAAAAADlAAAAAAAAAAAAAAAAAPC/"
				],
				[
					229,
					1,
					"insert",
					{
						"characters": "pub"
					},
					"AwAAABUAAAAAAAAAFgAAAAAAAAAAAAAAFgAAAAAAAAAXAAAAAAAAAAAAAAAXAAAAAAAAABgAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFQAAAAAAAAAVAAAAAAAAAAAAAAAAAD1A"
				],
				[
					230,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABgAAAAAAAAAGQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGAAAAAAAAAAYAAAAAAAAAAAAAAAAAPC/"
				],
				[
					236,
					1,
					"insert",
					{
						"characters": "&"
					},
					"AQAAAEsAAAAAAAAATAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASwAAAAAAAABLAAAAAAAAAAAAAAAAAPC/"
				],
				[
					247,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAP4AAAAAAAAA/wAAAAAAAAAAAAAA/wAAAAAAAAADAQAAAAAAAAAAAAADAQAAAAAAAAQBAAAAAAAAAAAAAAQBAAAAAAAACAEAAAAAAAAAAAAA/wAAAAAAAAD/AAAAAAAAAAQAAAAgICAg/wAAAAAAAAAEAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/gAAAAAAAAD+AAAAAAAAAAAAAAAAAPC/"
				],
				[
					248,
					1,
					"insert",
					{
						"characters": "render_"
					},
					"BwAAAAQBAAAAAAAABQEAAAAAAAAAAAAABQEAAAAAAAAGAQAAAAAAAAAAAAAGAQAAAAAAAAcBAAAAAAAAAAAAAAcBAAAAAAAACAEAAAAAAAAAAAAACAEAAAAAAAAJAQAAAAAAAAAAAAAJAQAAAAAAAAoBAAAAAAAAAAAAAAoBAAAAAAAACwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABAEAAAAAAAAEAQAAAAAAAAAAAAAAAPC/"
				],
				[
					249,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAAsBAAAAAAAADQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACwEAAAAAAAALAQAAAAAAAAAAAAAAAPC/"
				],
				[
					250,
					1,
					"insert",
					{
						"characters": "pi:"
					},
					"AwAAAAwBAAAAAAAADQEAAAAAAAAAAAAADQEAAAAAAAAOAQAAAAAAAAAAAAAOAQAAAAAAAA8BAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADAEAAAAAAAAMAQAAAAAAAAAAAAAAAPC/"
				],
				[
					251,
					3,
					"left_delete",
					null,
					"AwAAAA4BAAAAAAAADgEAAAAAAAABAAAAOg0BAAAAAAAADQEAAAAAAAABAAAAaQwBAAAAAAAADAEAAAAAAAABAAAAcA",
					"AQAAAAAAAAABAAAADwEAAAAAAAAPAQAAAAAAAAAAAAAAAPC/"
				],
				[
					252,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAAsBAAAAAAAACwEAAAAAAAABAAAAewsBAAAAAAAACwEAAAAAAAABAAAAfQ",
					"AQAAAAAAAAABAAAADAEAAAAAAAAMAQAAAAAAAAAAAAAAAPC/"
				],
				[
					253,
					1,
					"insert",
					{
						"characters": "api::"
					},
					"BQAAAAsBAAAAAAAADAEAAAAAAAAAAAAADAEAAAAAAAANAQAAAAAAAAAAAAANAQAAAAAAAA4BAAAAAAAAAAAAAA4BAAAAAAAADwEAAAAAAAAAAAAADwEAAAAAAAAQAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACwEAAAAAAAALAQAAAAAAAAAAAAAAAPC/"
				],
				[
					255,
					1,
					"insert",
					{
						"characters": "uplo"
					},
					"BAAAABABAAAAAAAAEQEAAAAAAAAAAAAAEQEAAAAAAAASAQAAAAAAAAAAAAASAQAAAAAAABMBAAAAAAAAAAAAABMBAAAAAAAAFAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEAEAAAAAAAAQAQAAAAAAAAAAAAAAAPC/"
				],
				[
					256,
					1,
					"rust_fmt_format_buffer",
					null,
					"AgAAAAMBAAAAAAAAAwEAAAAAAAABAAAACQMBAAAAAAAABwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFAEAAAAAAAAUAQAAAAAAAAAAAAAAAPC/"
				],
				[
					257,
					1,
					"insert_completion",
					{
						"completion": "upload_v3",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "upload_v3"
					},
					"AgAAABMBAAAAAAAAEwEAAAAAAAAEAAAAdXBsbxMBAAAAAAAAHAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFwEAAAAAAAAXAQAAAAAAAAAAAAAAAPC/"
				],
				[
					258,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAABwBAAAAAAAAHgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHAEAAAAAAAAcAQAAAAAAAAAAAAAAAPC/"
				],
				[
					263,
					1,
					"insert",
					{
						"characters": "v"
					},
					"AQAAABwBAAAAAAAAHQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHAEAAAAAAAAcAQAAAAAAAAAAAAAAAPC/"
				],
				[
					264,
					1,
					"left_delete",
					null,
					"AQAAABwBAAAAAAAAHAEAAAAAAAABAAAAdg",
					"AQAAAAAAAAABAAAAHQEAAAAAAAAdAQAAAAAAAAAAAAAAAPC/"
				],
				[
					266,
					1,
					"insert",
					{
						"characters": "vaov"
					},
					"BAAAABMBAAAAAAAAFAEAAAAAAAAAAAAAFAEAAAAAAAAVAQAAAAAAAAAAAAAVAQAAAAAAABYBAAAAAAAAAAAAABYBAAAAAAAAFwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEwEAAAAAAAATAQAAAAAAAAAAAAAAAPC/"
				],
				[
					267,
					1,
					"left_delete",
					null,
					"AQAAABYBAAAAAAAAFgEAAAAAAAABAAAAdg",
					"AQAAAAAAAAABAAAAFwEAAAAAAAAXAQAAAAAAAAAAAAAAAPC/"
				],
				[
					268,
					1,
					"insert",
					{
						"characters": "_"
					},
					"AQAAABYBAAAAAAAAFwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFgEAAAAAAAAWAQAAAAAAAAAAAAAAAPC/"
				],
				[
					271,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAACIBAAAAAAAAIwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIgEAAAAAAAAiAQAAAAAAAP///////+9/"
				],
				[
					273,
					1,
					"insert",
					{
						"characters": "self."
					},
					"BQAAACEBAAAAAAAAIgEAAAAAAAAAAAAAIgEAAAAAAAAjAQAAAAAAAAAAAAAjAQAAAAAAACQBAAAAAAAAAAAAACQBAAAAAAAAJQEAAAAAAAAAAAAAJQEAAAAAAAAmAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIQEAAAAAAAAhAQAAAAAAAAAAAAAAAPC/"
				],
				[
					275,
					1,
					"insert",
					{
						"characters": "id"
					},
					"AgAAACYBAAAAAAAAJwEAAAAAAAAAAAAAJwEAAAAAAAAoAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJgEAAAAAAAAmAQAAAAAAAAAAAAAAAPC/"
				],
				[
					277,
					3,
					"left_delete",
					null,
					"AwAAACcBAAAAAAAAJwEAAAAAAAABAAAAZCYBAAAAAAAAJgEAAAAAAAABAAAAaSUBAAAAAAAAJQEAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAAKAEAAAAAAAAoAQAAAAAAAAAAAAAAAPC/"
				],
				[
					278,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAACUBAAAAAAAAJgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJQEAAAAAAAAlAQAAAAAAAAAAAAAAAPC/"
				],
				[
					280,
					1,
					"left_delete",
					null,
					"AQAAACUBAAAAAAAAJQEAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAAJgEAAAAAAAAmAQAAAAAAAAAAAAAAAPC/"
				],
				[
					283,
					1,
					"insert",
					{
						"characters": "&"
					},
					"AQAAACEBAAAAAAAAIgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIQEAAAAAAAAhAQAAAAAAAAAAAAAAAPC/"
				],
				[
					285,
					1,
					"left_delete",
					null,
					"AQAAACEBAAAAAAAAIQEAAAAAAAABAAAAJg",
					"AQAAAAAAAAABAAAAIgEAAAAAAAAiAQAAAAAAAAAAAAAAAPC/"
				],
				[
					288,
					1,
					"insert",
					{
						"characters": "slef"
					},
					"BQAAACEBAAAAAAAAIgEAAAAAAAAAAAAAIgEAAAAAAAAiAQAAAAAAAAQAAABzZWxmIgEAAAAAAAAjAQAAAAAAAAAAAAAjAQAAAAAAACQBAAAAAAAAAAAAACQBAAAAAAAAJQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJQEAAAAAAAAhAQAAAAAAAAAAAAAAAPC/"
				],
				[
					289,
					3,
					"left_delete",
					null,
					"AwAAACQBAAAAAAAAJAEAAAAAAAABAAAAZiMBAAAAAAAAIwEAAAAAAAABAAAAZSIBAAAAAAAAIgEAAAAAAAABAAAAbA",
					"AQAAAAAAAAABAAAAJQEAAAAAAAAlAQAAAAAAAAAAAAAAAPC/"
				],
				[
					290,
					1,
					"insert",
					{
						"characters": "elf"
					},
					"AwAAACIBAAAAAAAAIwEAAAAAAAAAAAAAIwEAAAAAAAAkAQAAAAAAAAAAAAAkAQAAAAAAACUBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIgEAAAAAAAAiAQAAAAAAAAAAAAAAAPC/"
				],
				[
					295,
					1,
					"insert",
					{
						"characters": "&"
					},
					"AQAAAOYAAAAAAAAA5wAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5gAAAAAAAADmAAAAAAAAAAAAAAAAAPC/"
				],
				[
					299,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAACAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					301,
					1,
					"insert",
					{
						"characters": "use"
					},
					"AwAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAACAAAAAAAAAAAAAAACAAAAAAAAAAMAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
				],
				[
					302,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAMAAAAAAAAABAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAwAAAAAAAAADAAAAAAAAAAAAAAAAAPC/"
				],
				[
					303,
					1,
					"insert",
					{
						"characters": "render"
					},
					"BgAAAAQAAAAAAAAABQAAAAAAAAAAAAAABQAAAAAAAAAGAAAAAAAAAAAAAAAGAAAAAAAAAAcAAAAAAAAAAAAAAAcAAAAAAAAACAAAAAAAAAAAAAAACAAAAAAAAAAJAAAAAAAAAAAAAAAJAAAAAAAAAAoAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABAAAAAAAAAAEAAAAAAAAAAAAAAAAAPC/"
				],
				[
					304,
					6,
					"left_delete",
					null,
					"BgAAAAkAAAAAAAAACQAAAAAAAAABAAAAcggAAAAAAAAACAAAAAAAAAABAAAAZQcAAAAAAAAABwAAAAAAAAABAAAAZAYAAAAAAAAABgAAAAAAAAABAAAAbgUAAAAAAAAABQAAAAAAAAABAAAAZQQAAAAAAAAABAAAAAAAAAABAAAAcg",
					"AQAAAAAAAAABAAAACgAAAAAAAAAKAAAAAAAAAAAAAAAAAPC/"
				],
				[
					305,
					1,
					"insert",
					{
						"characters": "super::render"
					},
					"DQAAAAQAAAAAAAAABQAAAAAAAAAAAAAABQAAAAAAAAAGAAAAAAAAAAAAAAAGAAAAAAAAAAcAAAAAAAAAAAAAAAcAAAAAAAAACAAAAAAAAAAAAAAACAAAAAAAAAAJAAAAAAAAAAAAAAAJAAAAAAAAAAoAAAAAAAAAAAAAAAoAAAAAAAAACwAAAAAAAAAAAAAACwAAAAAAAAAMAAAAAAAAAAAAAAAMAAAAAAAAAA0AAAAAAAAAAAAAAA0AAAAAAAAADgAAAAAAAAAAAAAADgAAAAAAAAAPAAAAAAAAAAAAAAAPAAAAAAAAABAAAAAAAAAAAAAAABAAAAAAAAAAEQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABAAAAAAAAAAEAAAAAAAAAAAAAAAAAPC/"
				],
				[
					307,
					1,
					"insert",
					{
						"characters": "v"
					},
					"AgAAAAQAAAAAAAAABQAAAAAAAAAAAAAABQAAAAAAAAAFAAAAAAAAAA0AAABzdXBlcjo6cmVuZGVy",
					"AQAAAAAAAAABAAAAEQAAAAAAAAAEAAAAAAAAAAAAAAAAAPC/"
				],
				[
					308,
					1,
					"left_delete",
					null,
					"AQAAAAQAAAAAAAAABAAAAAAAAAABAAAAdg",
					"AQAAAAAAAAABAAAABQAAAAAAAAAFAAAAAAAAAAAAAAAAAPC/"
				],
				[
					309,
					1,
					"insert",
					{
						"characters": "crae"
					},
					"BAAAAAQAAAAAAAAABQAAAAAAAAAAAAAABQAAAAAAAAAGAAAAAAAAAAAAAAAGAAAAAAAAAAcAAAAAAAAAAAAAAAcAAAAAAAAACAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABAAAAAAAAAAEAAAAAAAAAAAAAAAAAPC/"
				],
				[
					310,
					2,
					"left_delete",
					null,
					"AgAAAAcAAAAAAAAABwAAAAAAAAABAAAAZQYAAAAAAAAABgAAAAAAAAABAAAAYQ",
					"AQAAAAAAAAABAAAACAAAAAAAAAAIAAAAAAAAAAAAAAAAAPC/"
				],
				[
					311,
					1,
					"insert",
					{
						"characters": "ate"
					},
					"AwAAAAYAAAAAAAAABwAAAAAAAAAAAAAABwAAAAAAAAAIAAAAAAAAAAAAAAAIAAAAAAAAAAkAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABgAAAAAAAAAGAAAAAAAAAAAAAAAAAPC/"
				],
				[
					314,
					1,
					"insert",
					{
						"characters": "crate::"
					},
					"CAAAAAQAAAAAAAAABQAAAAAAAAAAAAAABQAAAAAAAAAFAAAAAAAAAAUAAABjcmF0ZQUAAAAAAAAABgAAAAAAAAAAAAAABgAAAAAAAAAHAAAAAAAAAAAAAAAHAAAAAAAAAAgAAAAAAAAAAAAAAAgAAAAAAAAACQAAAAAAAAAAAAAACQAAAAAAAAAKAAAAAAAAAAAAAAAKAAAAAAAAAAsAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACQAAAAAAAAAEAAAAAAAAAAAAAAAAAPC/"
				],
				[
					315,
					1,
					"insert",
					{
						"characters": "engine:;rend"
					},
					"DAAAAAsAAAAAAAAADAAAAAAAAAAAAAAADAAAAAAAAAANAAAAAAAAAAAAAAANAAAAAAAAAA4AAAAAAAAAAAAAAA4AAAAAAAAADwAAAAAAAAAAAAAADwAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAABEAAAAAAAAAAAAAABEAAAAAAAAAEgAAAAAAAAAAAAAAEgAAAAAAAAATAAAAAAAAAAAAAAATAAAAAAAAABQAAAAAAAAAAAAAABQAAAAAAAAAFQAAAAAAAAAAAAAAFQAAAAAAAAAWAAAAAAAAAAAAAAAWAAAAAAAAABcAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACwAAAAAAAAALAAAAAAAAAAAAAAAAAPC/"
				],
				[
					316,
					5,
					"left_delete",
					null,
					"BQAAABYAAAAAAAAAFgAAAAAAAAABAAAAZBUAAAAAAAAAFQAAAAAAAAABAAAAbhQAAAAAAAAAFAAAAAAAAAABAAAAZRMAAAAAAAAAEwAAAAAAAAABAAAAchIAAAAAAAAAEgAAAAAAAAABAAAAOw",
					"AQAAAAAAAAABAAAAFwAAAAAAAAAXAAAAAAAAAAAAAAAAAPC/"
				],
				[
					317,
					1,
					"insert",
					{
						"characters": ":render"
					},
					"BwAAABIAAAAAAAAAEwAAAAAAAAAAAAAAEwAAAAAAAAAUAAAAAAAAAAAAAAAUAAAAAAAAABUAAAAAAAAAAAAAABUAAAAAAAAAFgAAAAAAAAAAAAAAFgAAAAAAAAAXAAAAAAAAAAAAAAAXAAAAAAAAABgAAAAAAAAAAAAAABgAAAAAAAAAGQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEgAAAAAAAAASAAAAAAAAAAAAAAAAAPC/"
				],
				[
					332,
					1,
					"insert",
					{
						"characters": "::"
					},
					"AgAAABkAAAAAAAAAGgAAAAAAAAAAAAAAGgAAAAAAAAAbAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGQAAAAAAAAAZAAAAAAAAAP///////+9/"
				],
				[
					333,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAAAAAAAAAAAAAAwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGwAAAAAAAAAbAAAAAAAAAAAAAAAAAPC/"
				],
				[
					343,
					2,
					"left_delete",
					null,
					"AgAAADMBAAAAAAAAMwEAAAAAAAABAAAAOjIBAAAAAAAAMgEAAAAAAAABAAAAOg",
					"AQAAAAAAAAABAAAANAEAAAAAAAA0AQAAAAAAAAAAAAAAAPC/"
				],
				[
					344,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAADIBAAAAAAAAMwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMgEAAAAAAAAyAQAAAAAAAAAAAAAAAPC/"
				],
				[
					347,
					1,
					"insert",
					{
						"characters": ".unwrap"
					},
					"BwAAAEYBAAAAAAAARwEAAAAAAAAAAAAARwEAAAAAAABIAQAAAAAAAAAAAABIAQAAAAAAAEkBAAAAAAAAAAAAAEkBAAAAAAAASgEAAAAAAAAAAAAASgEAAAAAAABLAQAAAAAAAAAAAABLAQAAAAAAAEwBAAAAAAAAAAAAAEwBAAAAAAAATQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARgEAAAAAAABGAQAAAAAAAAAAAAAAAPC/"
				],
				[
					348,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAE0BAAAAAAAATwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATQEAAAAAAABNAQAAAAAAAAAAAAAAAPC/"
				],
				[
					372,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAAEEAAAAAAAAAQgAAAAAAAAAAAAAAQgAAAAAAAABGAAAAAAAAAAAAAABGAAAAAAAAAEcAAAAAAAAAAAAAAEcAAAAAAAAASwAAAAAAAAAAAAAAQgAAAAAAAABCAAAAAAAAAAQAAAAgICAg",
					"AQAAAAAAAAABAAAAQQAAAAAAAABBAAAAAAAAAP///////+9/"
				],
				[
					373,
					1,
					"cut",
					null,
					"AQAAAEMAAAAAAAAAQwAAAAAAAAAFAAAAICAgIAo",
					"AQAAAAAAAAABAAAARwAAAAAAAABHAAAAAAAAAAAAAAAAAPC/"
				],
				[
					375,
					1,
					"reindent",
					null,
					"AQAAAEIAAAAAAAAARgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQgAAAAAAAABCAAAAAAAAAAAAAAAAAAAA"
				],
				[
					376,
					1,
					"insert",
					{
						"characters": "buffers:"
					},
					"CAAAAEYAAAAAAAAARwAAAAAAAAAAAAAARwAAAAAAAABIAAAAAAAAAAAAAABIAAAAAAAAAEkAAAAAAAAAAAAAAEkAAAAAAAAASgAAAAAAAAAAAAAASgAAAAAAAABLAAAAAAAAAAAAAABLAAAAAAAAAEwAAAAAAAAAAAAAAEwAAAAAAAAATQAAAAAAAAAAAAAATQAAAAAAAABOAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARgAAAAAAAABGAAAAAAAAAAAAAAAAAPC/"
				],
				[
					377,
					1,
					"insert",
					{
						"characters": " V"
					},
					"AgAAAE4AAAAAAAAATwAAAAAAAAAAAAAATwAAAAAAAABQAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATgAAAAAAAABOAAAAAAAAAAAAAAAAAPC/"
				],
				[
					378,
					1,
					"left_delete",
					null,
					"AQAAAE8AAAAAAAAATwAAAAAAAAABAAAAVg",
					"AQAAAAAAAAABAAAAUAAAAAAAAABQAAAAAAAAAAAAAAAAAPC/"
				],
				[
					379,
					1,
					"insert",
					{
						"characters": "Vec"
					},
					"AwAAAE8AAAAAAAAAUAAAAAAAAAAAAAAAUAAAAAAAAABRAAAAAAAAAAAAAABRAAAAAAAAAFIAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATwAAAAAAAABPAAAAAAAAAAAAAAAAAPC/"
				],
				[
					380,
					1,
					"insert",
					{
						"characters": "<u32>"
					},
					"BQAAAFIAAAAAAAAAUwAAAAAAAAAAAAAAUwAAAAAAAABUAAAAAAAAAAAAAABUAAAAAAAAAFUAAAAAAAAAAAAAAFUAAAAAAAAAVgAAAAAAAAAAAAAAVgAAAAAAAABXAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUgAAAAAAAABSAAAAAAAAAAAAAAAAAPC/"
				],
				[
					381,
					1,
					"rust_fmt_format_buffer",
					null,
					"AQAAAFcAAAAAAAAAWAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVwAAAAAAAABXAAAAAAAAAAAAAAAAAPC/"
				],
				[
					382,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAFgAAAAAAAAAWQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWAAAAAAAAABYAAAAAAAAAAAAAAAAAPC/"
				],
				[
					383,
					1,
					"left_delete",
					null,
					"AQAAAFgAAAAAAAAAWAAAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAAWQAAAAAAAABZAAAAAAAAAAAAAAAAAPC/"
				],
				[
					389,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAOsAAAAAAAAA7AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6wAAAAAAAADrAAAAAAAAAAAAAAAAAPC/"
				],
				[
					390,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOwAAAAAAAAA7QAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7AAAAAAAAADsAAAAAAAAAAAAAAAAAPC/"
				],
				[
					391,
					1,
					"insert",
					{
						"characters": "\nvec;"
					},
					"BgAAAO0AAAAAAAAA7gAAAAAAAAAAAAAA7gAAAAAAAAD2AAAAAAAAAAAAAAD2AAAAAAAAAPcAAAAAAAAAAAAAAPcAAAAAAAAA+AAAAAAAAAAAAAAA+AAAAAAAAAD5AAAAAAAAAAAAAAD5AAAAAAAAAPoAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7QAAAAAAAADtAAAAAAAAAAAAAAAAAPC/"
				],
				[
					392,
					1,
					"insert",
					{
						"characters": " vec"
					},
					"BAAAAPoAAAAAAAAA+wAAAAAAAAAAAAAA+wAAAAAAAAD8AAAAAAAAAAAAAAD8AAAAAAAAAP0AAAAAAAAAAAAAAP0AAAAAAAAA/gAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+gAAAAAAAAD6AAAAAAAAAAAAAAAAAPC/"
				],
				[
					393,
					5,
					"left_delete",
					null,
					"BQAAAP0AAAAAAAAA/QAAAAAAAAABAAAAY/wAAAAAAAAA/AAAAAAAAAABAAAAZfsAAAAAAAAA+wAAAAAAAAABAAAAdvoAAAAAAAAA+gAAAAAAAAABAAAAIPkAAAAAAAAA+QAAAAAAAAABAAAAOw",
					"AQAAAAAAAAABAAAA/gAAAAAAAAD+AAAAAAAAAAAAAAAAAPC/"
				],
				[
					394,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAPkAAAAAAAAA+gAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+QAAAAAAAAD5AAAAAAAAAAAAAAAAAPC/"
				],
				[
					395,
					1,
					"insert",
					{
						"characters": " vec1"
					},
					"BQAAAPoAAAAAAAAA+wAAAAAAAAAAAAAA+wAAAAAAAAD8AAAAAAAAAAAAAAD8AAAAAAAAAP0AAAAAAAAAAAAAAP0AAAAAAAAA/gAAAAAAAAAAAAAA/gAAAAAAAAD/AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+gAAAAAAAAD6AAAAAAAAAAAAAAAAAPC/"
				],
				[
					396,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAP8AAAAAAAAAAQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/wAAAAAAAAD/AAAAAAAAAAAAAAAAAPC/"
				],
				[
					398,
					3,
					"left_delete",
					null,
					"AwAAAAABAAAAAAAAAAEAAAAAAAABAAAAXf8AAAAAAAAA/wAAAAAAAAABAAAAW/4AAAAAAAAA/gAAAAAAAAABAAAAMQ",
					"AQAAAAAAAAABAAAAAQEAAAAAAAABAQAAAAAAAAAAAAAAAPC/"
				],
				[
					399,
					1,
					"insert",
					{
						"characters": "!"
					},
					"AQAAAP4AAAAAAAAA/wAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/gAAAAAAAAD+AAAAAAAAAAAAAAAAAPC/"
				],
				[
					400,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAP8AAAAAAAAAAQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/wAAAAAAAAD/AAAAAAAAAAAAAAAAAPC/"
				],
				[
					402,
					1,
					"rust_fmt_format_buffer",
					null,
					"BAAAAOQAAAAAAAAA8AAAAAAAAAAAAAAA+AAAAAAAAAD4AAAAAAAAAAEAAAAgAQEAAAAAAAAFAQAAAAAAAAAAAAAQAQAAAAAAABkBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAQEAAAAAAAABAQAAAAAAAAAAAAAAAPC/"
				],
				[
					409,
					1,
					"insert",
					{
						"characters": "buffers"
					},
					"CAAAAAUBAAAAAAAABgEAAAAAAAAAAAAABgEAAAAAAAAGAQAAAAAAAAMAAAB2ZWMGAQAAAAAAAAcBAAAAAAAAAAAAAAcBAAAAAAAACAEAAAAAAAAAAAAACAEAAAAAAAAJAQAAAAAAAAAAAAAJAQAAAAAAAAoBAAAAAAAAAAAAAAoBAAAAAAAACwEAAAAAAAAAAAAACwEAAAAAAAAMAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACAEAAAAAAAAFAQAAAAAAAAAAAAAAAPC/"
				],
				[
					414,
					1,
					"insert",
					{
						"characters": "\npbu"
					},
					"BQAAAJ8BAAAAAAAAoAEAAAAAAAAAAAAAoAEAAAAAAACkAQAAAAAAAAAAAACkAQAAAAAAAKUBAAAAAAAAAAAAAKUBAAAAAAAApgEAAAAAAAAAAAAApgEAAAAAAACnAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnwEAAAAAAACfAQAAAAAAAP///////+9/"
				],
				[
					415,
					3,
					"left_delete",
					null,
					"AwAAAKYBAAAAAAAApgEAAAAAAAABAAAAdaUBAAAAAAAApQEAAAAAAAABAAAAYqQBAAAAAAAApAEAAAAAAAABAAAAcA",
					"AQAAAAAAAAABAAAApwEAAAAAAACnAQAAAAAAAAAAAAAAAPC/"
				],
				[
					416,
					1,
					"insert",
					{
						"characters": "\npub"
					},
					"BgAAAKQBAAAAAAAApQEAAAAAAAAAAAAApQEAAAAAAACpAQAAAAAAAAAAAACgAQAAAAAAAKABAAAAAAAABAAAACAgICClAQAAAAAAAKYBAAAAAAAAAAAAAKYBAAAAAAAApwEAAAAAAAAAAAAApwEAAAAAAACoAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApAEAAAAAAACkAQAAAAAAAAAAAAAAAPC/"
				],
				[
					417,
					1,
					"insert",
					{
						"characters": " fn"
					},
					"AwAAAKgBAAAAAAAAqQEAAAAAAAAAAAAAqQEAAAAAAACqAQAAAAAAAAAAAACqAQAAAAAAAKsBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqAEAAAAAAACoAQAAAAAAAAAAAAAAAPC/"
				],
				[
					418,
					1,
					"insert",
					{
						"characters": " set"
					},
					"BAAAAKsBAAAAAAAArAEAAAAAAAAAAAAArAEAAAAAAACtAQAAAAAAAAAAAACtAQAAAAAAAK4BAAAAAAAAAAAAAK4BAAAAAAAArwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqwEAAAAAAACrAQAAAAAAAAAAAAAAAPC/"
				],
				[
					419,
					2,
					"left_delete",
					null,
					"AgAAAK4BAAAAAAAArgEAAAAAAAABAAAAdK0BAAAAAAAArQEAAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAArwEAAAAAAACvAQAAAAAAAAAAAAAAAPC/"
				],
				[
					420,
					1,
					"insert",
					{
						"characters": "et"
					},
					"AgAAAK0BAAAAAAAArgEAAAAAAAAAAAAArgEAAAAAAACvAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArQEAAAAAAACtAQAAAAAAAAAAAAAAAPC/"
				],
				[
					421,
					2,
					"left_delete",
					null,
					"AgAAAK4BAAAAAAAArgEAAAAAAAABAAAAdK0BAAAAAAAArQEAAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAArwEAAAAAAACvAQAAAAAAAAAAAAAAAPC/"
				],
				[
					422,
					1,
					"insert",
					{
						"characters": "a"
					},
					"AQAAAK0BAAAAAAAArgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArQEAAAAAAACtAQAAAAAAAAAAAAAAAPC/"
				],
				[
					423,
					1,
					"left_delete",
					null,
					"AQAAAK0BAAAAAAAArQEAAAAAAAABAAAAYQ",
					"AQAAAAAAAAABAAAArgEAAAAAAACuAQAAAAAAAAAAAAAAAPC/"
				],
				[
					424,
					1,
					"insert",
					{
						"characters": "dd"
					},
					"AgAAAK0BAAAAAAAArgEAAAAAAAAAAAAArgEAAAAAAACvAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArQEAAAAAAACtAQAAAAAAAAAAAAAAAPC/"
				],
				[
					425,
					3,
					"left_delete",
					null,
					"AwAAAK4BAAAAAAAArgEAAAAAAAABAAAAZK0BAAAAAAAArQEAAAAAAAABAAAAZKwBAAAAAAAArAEAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAArwEAAAAAAACvAQAAAAAAAAAAAAAAAPC/"
				],
				[
					426,
					1,
					"insert",
					{
						"characters": "add_buffer"
					},
					"CgAAAKwBAAAAAAAArQEAAAAAAAAAAAAArQEAAAAAAACuAQAAAAAAAAAAAACuAQAAAAAAAK8BAAAAAAAAAAAAAK8BAAAAAAAAsAEAAAAAAAAAAAAAsAEAAAAAAACxAQAAAAAAAAAAAACxAQAAAAAAALIBAAAAAAAAAAAAALIBAAAAAAAAswEAAAAAAAAAAAAAswEAAAAAAAC0AQAAAAAAAAAAAAC0AQAAAAAAALUBAAAAAAAAAAAAALUBAAAAAAAAtgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArAEAAAAAAACsAQAAAAAAAAAAAAAAAPC/"
				],
				[
					427,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAALYBAAAAAAAAuAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtgEAAAAAAAC2AQAAAAAAAAAAAAAAAPC/"
				],
				[
					428,
					1,
					"insert",
					{
						"characters": "&sel"
					},
					"BAAAALcBAAAAAAAAuAEAAAAAAAAAAAAAuAEAAAAAAAC5AQAAAAAAAAAAAAC5AQAAAAAAALoBAAAAAAAAAAAAALoBAAAAAAAAuwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtwEAAAAAAAC3AQAAAAAAAAAAAAAAAPC/"
				],
				[
					429,
					1,
					"left_delete",
					null,
					"AQAAALoBAAAAAAAAugEAAAAAAAABAAAAbA",
					"AQAAAAAAAAABAAAAuwEAAAAAAAC7AQAAAAAAAAAAAAAAAPC/"
				],
				[
					430,
					1,
					"insert",
					{
						"characters": "lf"
					},
					"AgAAALoBAAAAAAAAuwEAAAAAAAAAAAAAuwEAAAAAAAC8AQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAugEAAAAAAAC6AQAAAAAAAAAAAAAAAPC/"
				],
				[
					431,
					1,
					"insert",
					{
						"characters": " ,"
					},
					"AgAAALwBAAAAAAAAvQEAAAAAAAAAAAAAvQEAAAAAAAC+AQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvAEAAAAAAAC8AQAAAAAAAAAAAAAAAPC/"
				],
				[
					432,
					2,
					"left_delete",
					null,
					"AgAAAL0BAAAAAAAAvQEAAAAAAAABAAAALLwBAAAAAAAAvAEAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAvgEAAAAAAAC+AQAAAAAAAAAAAAAAAPC/"
				],
				[
					433,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAALwBAAAAAAAAvQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvAEAAAAAAAC8AQAAAAAAAAAAAAAAAPC/"
				],
				[
					434,
					1,
					"insert",
					{
						"characters": " u32"
					},
					"BAAAAL0BAAAAAAAAvgEAAAAAAAAAAAAAvgEAAAAAAAC/AQAAAAAAAAAAAAC/AQAAAAAAAMABAAAAAAAAAAAAAMABAAAAAAAAwQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvQEAAAAAAAC9AQAAAAAAAAAAAAAAAPC/"
				],
				[
					435,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMEBAAAAAAAAwgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwQEAAAAAAADBAQAAAAAAAAAAAAAAAPC/"
				],
				[
					436,
					4,
					"left_delete",
					null,
					"BAAAAMEBAAAAAAAAwQEAAAAAAAABAAAAIMABAAAAAAAAwAEAAAAAAAABAAAAMr8BAAAAAAAAvwEAAAAAAAABAAAAM74BAAAAAAAAvgEAAAAAAAABAAAAdQ",
					"AQAAAAAAAAABAAAAwgEAAAAAAADCAQAAAAAAAAAAAAAAAPC/"
				],
				[
					437,
					1,
					"insert",
					{
						"characters": "buffer:"
					},
					"BwAAAL4BAAAAAAAAvwEAAAAAAAAAAAAAvwEAAAAAAADAAQAAAAAAAAAAAADAAQAAAAAAAMEBAAAAAAAAAAAAAMEBAAAAAAAAwgEAAAAAAAAAAAAAwgEAAAAAAADDAQAAAAAAAAAAAADDAQAAAAAAAMQBAAAAAAAAAAAAAMQBAAAAAAAAxQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvgEAAAAAAAC+AQAAAAAAAAAAAAAAAPC/"
				],
				[
					438,
					1,
					"insert",
					{
						"characters": " u32"
					},
					"BAAAAMUBAAAAAAAAxgEAAAAAAAAAAAAAxgEAAAAAAADHAQAAAAAAAAAAAADHAQAAAAAAAMgBAAAAAAAAAAAAAMgBAAAAAAAAyQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxQEAAAAAAADFAQAAAAAAAAAAAAAAAPC/"
				],
				[
					440,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMoBAAAAAAAAywEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAygEAAAAAAADKAQAAAAAAAAAAAAAAAPC/"
				],
				[
					441,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAMsBAAAAAAAAzQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAywEAAAAAAADLAQAAAAAAAAAAAAAAAPC/"
				],
				[
					442,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAMwBAAAAAAAAzQEAAAAAAAAAAAAAzQEAAAAAAADRAQAAAAAAAAAAAADRAQAAAAAAANIBAAAAAAAAAAAAANIBAAAAAAAA1gEAAAAAAAAAAAAAzQEAAAAAAADNAQAAAAAAAAQAAAAgICAgzQEAAAAAAADSAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzAEAAAAAAADMAQAAAAAAAAAAAAAAAPC/"
				],
				[
					443,
					1,
					"insert",
					{
						"characters": "self.buffers.ush"
					},
					"EAAAANIBAAAAAAAA0wEAAAAAAAAAAAAA0wEAAAAAAADUAQAAAAAAAAAAAADUAQAAAAAAANUBAAAAAAAAAAAAANUBAAAAAAAA1gEAAAAAAAAAAAAA1gEAAAAAAADXAQAAAAAAAAAAAADXAQAAAAAAANgBAAAAAAAAAAAAANgBAAAAAAAA2QEAAAAAAAAAAAAA2QEAAAAAAADaAQAAAAAAAAAAAADaAQAAAAAAANsBAAAAAAAAAAAAANsBAAAAAAAA3AEAAAAAAAAAAAAA3AEAAAAAAADdAQAAAAAAAAAAAADdAQAAAAAAAN4BAAAAAAAAAAAAAN4BAAAAAAAA3wEAAAAAAAAAAAAA3wEAAAAAAADgAQAAAAAAAAAAAADgAQAAAAAAAOEBAAAAAAAAAAAAAOEBAAAAAAAA4gEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0gEAAAAAAADSAQAAAAAAAAAAAAAAAPC/"
				],
				[
					444,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAOIBAAAAAAAA5AEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4gEAAAAAAADiAQAAAAAAAAAAAAAAAPC/"
				],
				[
					445,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAOIBAAAAAAAA4gEAAAAAAAABAAAAKOIBAAAAAAAA4gEAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAA4wEAAAAAAADjAQAAAAAAAAAAAAAAAPC/"
				],
				[
					446,
					3,
					"left_delete",
					null,
					"AwAAAOEBAAAAAAAA4QEAAAAAAAABAAAAaOABAAAAAAAA4AEAAAAAAAABAAAAc98BAAAAAAAA3wEAAAAAAAABAAAAdQ",
					"AQAAAAAAAAABAAAA4gEAAAAAAADiAQAAAAAAAAAAAAAAAPC/"
				],
				[
					447,
					1,
					"insert",
					{
						"characters": "push"
					},
					"BAAAAN8BAAAAAAAA4AEAAAAAAAAAAAAA4AEAAAAAAADhAQAAAAAAAAAAAADhAQAAAAAAAOIBAAAAAAAAAAAAAOIBAAAAAAAA4wEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3wEAAAAAAADfAQAAAAAAAAAAAAAAAPC/"
				],
				[
					448,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAOMBAAAAAAAA5QEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4wEAAAAAAADjAQAAAAAAAAAAAAAAAPC/"
				],
				[
					449,
					1,
					"insert",
					{
						"characters": "buffer"
					},
					"BgAAAOQBAAAAAAAA5QEAAAAAAAAAAAAA5QEAAAAAAADmAQAAAAAAAAAAAADmAQAAAAAAAOcBAAAAAAAAAAAAAOcBAAAAAAAA6AEAAAAAAAAAAAAA6AEAAAAAAADpAQAAAAAAAAAAAADpAQAAAAAAAOoBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5AEAAAAAAADkAQAAAAAAAAAAAAAAAPC/"
				],
				[
					451,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAOsBAAAAAAAA7AEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6wEAAAAAAADrAQAAAAAAAAAAAAAAAPC/"
				],
				[
					452,
					1,
					"rust_fmt_format_buffer",
					null,
					"AgAAANEBAAAAAAAA0QEAAAAAAAABAAAACdEBAAAAAAAA1QEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7AEAAAAAAADsAQAAAAAAAAAAAAAAAPC/"
				],
				[
					457,
					1,
					"insert",
					{
						"characters": "mut"
					},
					"AwAAALgBAAAAAAAAuQEAAAAAAAAAAAAAuQEAAAAAAAC6AQAAAAAAAAAAAAC6AQAAAAAAALsBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuAEAAAAAAAC4AQAAAAAAAAAAAAAAAPC/"
				],
				[
					458,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALsBAAAAAAAAvAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuwEAAAAAAAC7AQAAAAAAAAAAAAAAAPC/"
				],
				[
					464,
					1,
					"insert",
					{
						"characters": "mut"
					},
					"AwAAAD0BAAAAAAAAPgEAAAAAAAAAAAAAPgEAAAAAAAA/AQAAAAAAAAAAAAA/AQAAAAAAAEABAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPQEAAAAAAAA9AQAAAAAAAAAAAAAAAPC/"
				],
				[
					466,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEABAAAAAAAAQQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQAEAAAAAAABAAQAAAAAAAAAAAAAAAPC/"
				],
				[
					470,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAACYBAAAAAAAAJwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJgEAAAAAAAAmAQAAAAAAAAAAAAAAwGxA"
				],
				[
					471,
					1,
					"reindent",
					null,
					"AQAAACcBAAAAAAAAKwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJwEAAAAAAAAnAQAAAAAAAAAAAAAAAPC/"
				],
				[
					476,
					1,
					"insert",
					{
						"characters": "/*"
					},
					"AgAAACsBAAAAAAAALAEAAAAAAAAAAAAALAEAAAAAAAAtAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKwEAAAAAAAArAQAAAAAAAAAAAAAAAPC/"
				],
				[
					480,
					1,
					"insert",
					{
						"characters": "\n*/"
					},
					"BAAAAKoBAAAAAAAAqwEAAAAAAAAAAAAAqwEAAAAAAACvAQAAAAAAAAAAAACvAQAAAAAAALABAAAAAAAAAAAAALABAAAAAAAAsQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqgEAAAAAAACqAQAAAAAAAP///////+9/"
				],
				[
					482,
					1,
					"cut",
					null,
					"AQAAAKsBAAAAAAAAqwEAAAAAAAAHAAAAICAgICovCg",
					"AQAAAAAAAAABAAAAsQEAAAAAAACxAQAAAAAAAAAAAAAAAPC/"
				],
				[
					484,
					1,
					"cut",
					null,
					"AQAAACcBAAAAAAAAJwEAAAAAAAAHAAAAICAgIC8qCg",
					"AQAAAAAAAAABAAAAJwEAAAAAAAAnAQAAAAAAAAAAAAAAAAAA"
				],
				[
					489,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAB8AAAAAAAAAIAAAAAAAAAAAAAAAIAAAAAAAAAAhAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHwAAAAAAAAAfAAAAAAAAAAAAAAAAAAAA"
				],
				[
					491,
					1,
					"insert",
					{
						"characters": "use"
					},
					"AwAAAB8AAAAAAAAAIAAAAAAAAAAAAAAAIAAAAAAAAAAhAAAAAAAAAAAAAAAhAAAAAAAAACIAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHwAAAAAAAAAfAAAAAAAAAAAAAAAAAAAA"
				],
				[
					492,
					1,
					"insert",
					{
						"characters": " crate::en"
					},
					"CgAAACIAAAAAAAAAIwAAAAAAAAAAAAAAIwAAAAAAAAAkAAAAAAAAAAAAAAAkAAAAAAAAACUAAAAAAAAAAAAAACUAAAAAAAAAJgAAAAAAAAAAAAAAJgAAAAAAAAAnAAAAAAAAAAAAAAAnAAAAAAAAACgAAAAAAAAAAAAAACgAAAAAAAAAKQAAAAAAAAAAAAAAKQAAAAAAAAAqAAAAAAAAAAAAAAAqAAAAAAAAACsAAAAAAAAAAAAAACsAAAAAAAAALAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIgAAAAAAAAAiAAAAAAAAAAAAAAAAAPC/"
				],
				[
					493,
					1,
					"left_delete",
					null,
					"AQAAACsAAAAAAAAAKwAAAAAAAAABAAAAbg",
					"AQAAAAAAAAABAAAALAAAAAAAAAAsAAAAAAAAAAAAAAAAAPC/"
				],
				[
					494,
					1,
					"insert",
					{
						"characters": "ngine::vecotrs"
					},
					"DgAAACsAAAAAAAAALAAAAAAAAAAAAAAALAAAAAAAAAAtAAAAAAAAAAAAAAAtAAAAAAAAAC4AAAAAAAAAAAAAAC4AAAAAAAAALwAAAAAAAAAAAAAALwAAAAAAAAAwAAAAAAAAAAAAAAAwAAAAAAAAADEAAAAAAAAAAAAAADEAAAAAAAAAMgAAAAAAAAAAAAAAMgAAAAAAAAAzAAAAAAAAAAAAAAAzAAAAAAAAADQAAAAAAAAAAAAAADQAAAAAAAAANQAAAAAAAAAAAAAANQAAAAAAAAA2AAAAAAAAAAAAAAA2AAAAAAAAADcAAAAAAAAAAAAAADcAAAAAAAAAOAAAAAAAAAAAAAAAOAAAAAAAAAA5AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKwAAAAAAAAArAAAAAAAAAAAAAAAAAPC/"
				],
				[
					495,
					4,
					"left_delete",
					null,
					"BAAAADgAAAAAAAAAOAAAAAAAAAABAAAAczcAAAAAAAAANwAAAAAAAAABAAAAcjYAAAAAAAAANgAAAAAAAAABAAAAdDUAAAAAAAAANQAAAAAAAAABAAAAbw",
					"AQAAAAAAAAABAAAAOQAAAAAAAAA5AAAAAAAAAAAAAAAAAPC/"
				],
				[
					496,
					1,
					"insert",
					{
						"characters": "tors::*;"
					},
					"CAAAADUAAAAAAAAANgAAAAAAAAAAAAAANgAAAAAAAAA3AAAAAAAAAAAAAAA3AAAAAAAAADgAAAAAAAAAAAAAADgAAAAAAAAAOQAAAAAAAAAAAAAAOQAAAAAAAAA6AAAAAAAAAAAAAAA6AAAAAAAAADsAAAAAAAAAAAAAADsAAAAAAAAAPAAAAAAAAAAAAAAAPAAAAAAAAAA9AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANQAAAAAAAAA1AAAAAAAAAAAAAAAAAPC/"
				],
				[
					497,
					1,
					"rust_fmt_format_buffer",
					null,
					"AQAAAD8AAAAAAAAAPwAAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAPQAAAAAAAAA9AAAAAAAAAAAAAAAAAPC/"
				],
				[
					502,
					1,
					"insert",
					{
						"characters": "dta"
					},
					"AwAAAGYBAAAAAAAAZwEAAAAAAAAAAAAAZwEAAAAAAABoAQAAAAAAAAAAAABoAQAAAAAAAGkBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZgEAAAAAAABmAQAAAAAAAAAAAAAAAPC/"
				],
				[
					503,
					2,
					"left_delete",
					null,
					"AgAAAGgBAAAAAAAAaAEAAAAAAAABAAAAYWcBAAAAAAAAZwEAAAAAAAABAAAAdA",
					"AQAAAAAAAAABAAAAaQEAAAAAAABpAQAAAAAAAAAAAAAAAPC/"
				],
				[
					504,
					1,
					"insert",
					{
						"characters": "ata:"
					},
					"BAAAAGcBAAAAAAAAaAEAAAAAAAAAAAAAaAEAAAAAAABpAQAAAAAAAAAAAABpAQAAAAAAAGoBAAAAAAAAAAAAAGoBAAAAAAAAawEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZwEAAAAAAABnAQAAAAAAAAAAAAAAAPC/"
				],
				[
					505,
					1,
					"insert",
					{
						"characters": " Vecotr"
					},
					"BwAAAGsBAAAAAAAAbAEAAAAAAAAAAAAAbAEAAAAAAABtAQAAAAAAAAAAAABtAQAAAAAAAG4BAAAAAAAAAAAAAG4BAAAAAAAAbwEAAAAAAAAAAAAAbwEAAAAAAABwAQAAAAAAAAAAAABwAQAAAAAAAHEBAAAAAAAAAAAAAHEBAAAAAAAAcgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAawEAAAAAAABrAQAAAAAAAAAAAAAAAPC/"
				],
				[
					506,
					5,
					"left_delete",
					null,
					"BQAAAHEBAAAAAAAAcQEAAAAAAAABAAAAcnABAAAAAAAAcAEAAAAAAAABAAAAdG8BAAAAAAAAbwEAAAAAAAABAAAAb24BAAAAAAAAbgEAAAAAAAABAAAAY20BAAAAAAAAbQEAAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAAcgEAAAAAAAByAQAAAAAAAAAAAAAAAPC/"
				],
				[
					507,
					1,
					"insert",
					{
						"characters": "ector<VecThr"
					},
					"DAAAAG0BAAAAAAAAbgEAAAAAAAAAAAAAbgEAAAAAAABvAQAAAAAAAAAAAABvAQAAAAAAAHABAAAAAAAAAAAAAHABAAAAAAAAcQEAAAAAAAAAAAAAcQEAAAAAAAByAQAAAAAAAAAAAAByAQAAAAAAAHMBAAAAAAAAAAAAAHMBAAAAAAAAdAEAAAAAAAAAAAAAdAEAAAAAAAB1AQAAAAAAAAAAAAB1AQAAAAAAAHYBAAAAAAAAAAAAAHYBAAAAAAAAdwEAAAAAAAAAAAAAdwEAAAAAAAB4AQAAAAAAAAAAAAB4AQAAAAAAAHkBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbQEAAAAAAABtAQAAAAAAAAAAAAAAAPC/"
				],
				[
					508,
					1,
					"insert",
					{
						"characters": "eeFloat>"
					},
					"CAAAAHkBAAAAAAAAegEAAAAAAAAAAAAAegEAAAAAAAB7AQAAAAAAAAAAAAB7AQAAAAAAAHwBAAAAAAAAAAAAAHwBAAAAAAAAfQEAAAAAAAAAAAAAfQEAAAAAAAB+AQAAAAAAAAAAAAB+AQAAAAAAAH8BAAAAAAAAAAAAAH8BAAAAAAAAgAEAAAAAAAAAAAAAgAEAAAAAAACBAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeQEAAAAAAAB5AQAAAAAAAAAAAAAAAPC/"
				],
				[
					509,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIEBAAAAAAAAggEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgQEAAAAAAACBAQAAAAAAAAAAAAAAAPC/"
				],
				[
					511,
					1,
					"left_delete",
					null,
					"AQAAAIEBAAAAAAAAgQEAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAggEAAAAAAACCAQAAAAAAAAAAAAAAAPC/"
				],
				[
					512,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAIEBAAAAAAAAggEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgQEAAAAAAACBAQAAAAAAAAAAAAAAAPC/"
				],
				[
					513,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIIBAAAAAAAAgwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAggEAAAAAAACCAQAAAAAAAAAAAAAAAPC/"
				],
				[
					517,
					1,
					"insert",
					{
						"characters": "Vec"
					},
					"BAAAAGwBAAAAAAAAbQEAAAAAAAAAAAAAbQEAAAAAAABtAQAAAAAAAAYAAABWZWN0b3JtAQAAAAAAAG4BAAAAAAAAAAAAAG4BAAAAAAAAbwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcgEAAAAAAABsAQAAAAAAAAAAAAAAAPC/"
				],
				[
					522,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAMsBAAAAAAAAzAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAywEAAAAAAADLAQAAAAAAAAAAAAAAAPC/"
				],
				[
					523,
					1,
					"insert",
					{
						"characters": " data"
					},
					"BQAAAMwBAAAAAAAAzQEAAAAAAAAAAAAAzQEAAAAAAADOAQAAAAAAAAAAAADOAQAAAAAAAM8BAAAAAAAAAAAAAM8BAAAAAAAA0AEAAAAAAAAAAAAA0AEAAAAAAADRAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzAEAAAAAAADMAQAAAAAAAAAAAAAAAPC/"
				],
				[
					559,
					1,
					"cut",
					null,
					"AQAAAGYBAAAAAAAAZgEAAAAAAAAYAAAAZGF0YTogVmVjPFZlY1RocmVlRmxvYXQ+",
					"AQAAAAAAAAABAAAAfgEAAAAAAABmAQAAAAAAAAAAAAAAAPC/"
				],
				[
					560,
					2,
					"left_delete",
					null,
					"AgAAAGUBAAAAAAAAZQEAAAAAAAABAAAAIGQBAAAAAAAAZAEAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAAZgEAAAAAAABmAQAAAAAAAAAAAAAAAPC/"
				],
				[
					563,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAIgBAAAAAAAAiQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiAEAAAAAAACIAQAAAAAAAAAAAAAAAPC/"
				],
				[
					564,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIkBAAAAAAAAigEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiQEAAAAAAACJAQAAAAAAAAAAAAAAAPC/"
				],
				[
					565,
					1,
					"paste",
					null,
					"AQAAAIoBAAAAAAAAogEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAigEAAAAAAACKAQAAAAAAAAAAAAAAAPC/"
				],
				[
					567,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAKIBAAAAAAAAowEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAogEAAAAAAACiAQAAAAAAAAAAAAAAAPC/"
				],
				[
					568,
					1,
					"insert",
					{
						"characters": " location:"
					},
					"CgAAAKMBAAAAAAAApAEAAAAAAAAAAAAApAEAAAAAAAClAQAAAAAAAAAAAAClAQAAAAAAAKYBAAAAAAAAAAAAAKYBAAAAAAAApwEAAAAAAAAAAAAApwEAAAAAAACoAQAAAAAAAAAAAACoAQAAAAAAAKkBAAAAAAAAAAAAAKkBAAAAAAAAqgEAAAAAAAAAAAAAqgEAAAAAAACrAQAAAAAAAAAAAACrAQAAAAAAAKwBAAAAAAAAAAAAAKwBAAAAAAAArQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAowEAAAAAAACjAQAAAAAAAAAAAAAAAPC/"
				],
				[
					569,
					1,
					"insert",
					{
						"characters": " u32"
					},
					"BAAAAK0BAAAAAAAArgEAAAAAAAAAAAAArgEAAAAAAACvAQAAAAAAAAAAAACvAQAAAAAAALABAAAAAAAAAAAAALABAAAAAAAAsQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArQEAAAAAAACtAQAAAAAAAAAAAAAAAPC/"
				],
				[
					570,
					1,
					"rust_fmt_format_buffer",
					null,
					"BQAAAFsBAAAAAAAAZAEAAAAAAAAAAAAAbgEAAAAAAAB2AQAAAAAAAAAAAACaAQAAAAAAAKIBAAAAAAAAAAAAALwBAAAAAAAAxAEAAAAAAAAAAAAA0gEAAAAAAADYAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsQEAAAAAAACxAQAAAAAAAAAAAAAAAPC/"
				],
				[
					573,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAAcCAAAAAAAACAIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABwIAAAAAAAAHAgAAAAAAAAAAAAAAAPC/"
				],
				[
					574,
					1,
					"insert",
					{
						"characters": " location"
					},
					"CQAAAAgCAAAAAAAACQIAAAAAAAAAAAAACQIAAAAAAAAKAgAAAAAAAAAAAAAKAgAAAAAAAAsCAAAAAAAAAAAAAAsCAAAAAAAADAIAAAAAAAAAAAAADAIAAAAAAAANAgAAAAAAAAAAAAANAgAAAAAAAA4CAAAAAAAAAAAAAA4CAAAAAAAADwIAAAAAAAAAAAAADwIAAAAAAAAQAgAAAAAAAAAAAAAQAgAAAAAAABECAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACAIAAAAAAAAIAgAAAAAAAAAAAAAAAPC/"
				],
				[
					579,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAD4AAAAAAAAAPwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPgAAAAAAAAA+AAAAAAAAAAAAAAAAAPC/"
				],
				[
					580,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAD8AAAAAAAAAQQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPwAAAAAAAAA/AAAAAAAAAAAAAAAAAPC/"
				],
				[
					584,
					1,
					"insert",
					{
						"characters": "#"
					},
					"AQAAAD8AAAAAAAAAQAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPwAAAAAAAAA/AAAAAAAAAAAAAAAAAPC/"
				],
				[
					586,
					1,
					"insert",
					{
						"characters": "derive"
					},
					"BgAAAEEAAAAAAAAAQgAAAAAAAAAAAAAAQgAAAAAAAABDAAAAAAAAAAAAAABDAAAAAAAAAEQAAAAAAAAAAAAAAEQAAAAAAAAARQAAAAAAAAAAAAAARQAAAAAAAABGAAAAAAAAAAAAAABGAAAAAAAAAEcAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQQAAAAAAAABBAAAAAAAAAAAAAAAAAPC/"
				],
				[
					587,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAEcAAAAAAAAASQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARwAAAAAAAABHAAAAAAAAAAAAAAAAAPC/"
				],
				[
					588,
					1,
					"insert",
					{
						"characters": "copy"
					},
					"BAAAAEgAAAAAAAAASQAAAAAAAAAAAAAASQAAAAAAAABKAAAAAAAAAAAAAABKAAAAAAAAAEsAAAAAAAAAAAAAAEsAAAAAAAAATAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASAAAAAAAAABIAAAAAAAAAAAAAAAAAPC/"
				],
				[
					590,
					1,
					"insert",
					{
						"characters": "Copy"
					},
					"BQAAAEgAAAAAAAAASQAAAAAAAAAAAAAASQAAAAAAAABJAAAAAAAAAAQAAABjb3B5SQAAAAAAAABKAAAAAAAAAAAAAABKAAAAAAAAAEsAAAAAAAAAAAAAAEsAAAAAAAAATAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATAAAAAAAAABIAAAAAAAAAAAAAAAAAPC/"
				],
				[
					593,
					1,
					"insert",
					{
						"characters": "clone,"
					},
					"BgAAAEgAAAAAAAAASQAAAAAAAAAAAAAASQAAAAAAAABKAAAAAAAAAAAAAABKAAAAAAAAAEsAAAAAAAAAAAAAAEsAAAAAAAAATAAAAAAAAAAAAAAATAAAAAAAAABNAAAAAAAAAAAAAABNAAAAAAAAAE4AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASAAAAAAAAABIAAAAAAAAAAAAAAAAAPC/"
				],
				[
					594,
					7,
					"left_delete",
					null,
					"BwAAAE0AAAAAAAAATQAAAAAAAAABAAAALEwAAAAAAAAATAAAAAAAAAABAAAAZUsAAAAAAAAASwAAAAAAAAABAAAAbkoAAAAAAAAASgAAAAAAAAABAAAAb0kAAAAAAAAASQAAAAAAAAABAAAAbEgAAAAAAAAASAAAAAAAAAABAAAAY0cAAAAAAAAARwAAAAAAAAABAAAAKA",
					"AQAAAAAAAAABAAAATgAAAAAAAABOAAAAAAAAAAAAAAAAAPC/"
				],
				[
					595,
					1,
					"insert",
					{
						"characters": "C"
					},
					"AQAAAEcAAAAAAAAASAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARwAAAAAAAABHAAAAAAAAAAAAAAAAAPC/"
				],
				[
					596,
					1,
					"left_delete",
					null,
					"AQAAAEcAAAAAAAAARwAAAAAAAAABAAAAQw",
					"AQAAAAAAAAABAAAASAAAAAAAAABIAAAAAAAAAAAAAAAAAPC/"
				],
				[
					597,
					1,
					"insert",
					{
						"characters": "(Clone,"
					},
					"BwAAAEcAAAAAAAAASAAAAAAAAAAAAAAASAAAAAAAAABJAAAAAAAAAAAAAABJAAAAAAAAAEoAAAAAAAAAAAAAAEoAAAAAAAAASwAAAAAAAAAAAAAASwAAAAAAAABMAAAAAAAAAAAAAABMAAAAAAAAAE0AAAAAAAAAAAAAAE0AAAAAAAAATgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARwAAAAAAAABHAAAAAAAAAAAAAAAAAPC/"
				],
				[
					598,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAE4AAAAAAAAATwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATgAAAAAAAABOAAAAAAAAAAAAAAAAAPC/"
				],
				[
					601,
					1,
					"left_delete",
					null,
					"AQAAAEgAAAAAAAAASAAAAAAAAAAHAAAAQ2xvbmUsIA",
					"AQAAAAAAAAABAAAATwAAAAAAAABIAAAAAAAAAAAAAAAAAPC/"
				],
				[
					605,
					1,
					"cut",
					null,
					"AQAAAD8AAAAAAAAAPwAAAAAAAAAQAAAAI1tkZXJpdmUoQ29weSldCg",
					"AQAAAAAAAAABAAAAQwAAAAAAAABDAAAAAAAAAAAAAAAAAD1A"
				],
				[
					627,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAAIUAAAAAAAAAhgAAAAAAAAAAAAAAhgAAAAAAAACHAAAAAAAAAAAAAACHAAAAAAAAAIgAAAAAAAAAAAAAAIgAAAAAAAAAiQAAAAAAAAAAAAAAhgAAAAAAAACGAAAAAAAAAAEAAAAJ",
					"AgAAAAAAAAABAAAAfwIAAAAAAAB/AgAAAAAAAAAAAAAAAPC/AQAAAAEAAACFAAAAAAAAAIUAAAAAAAAA////////738"
				],
				[
					629,
					1,
					"reindent",
					null,
					"AQAAAIYAAAAAAAAAhwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAggIAAAAAAACCAgAAAAAAAAAAAAAAAPC/AQAAAAEAAACGAAAAAAAAAIYAAAAAAAAAAAAAAAAAPUA"
				],
				[
					630,
					1,
					"insert",
					{
						"characters": "pub"
					},
					"BAAAAIcAAAAAAAAAiAAAAAAAAAAAAAAAiQAAAAAAAACJAAAAAAAAAAEAAAAJiAAAAAAAAACJAAAAAAAAAAAAAACJAAAAAAAAAIoAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAgwIAAAAAAACDAgAAAAAAAAAAAAAAAPC/AQAAAAEAAACHAAAAAAAAAIcAAAAAAAAAAAAAAAAA8L8"
				],
				[
					631,
					1,
					"insert",
					{
						"characters": " fn"
					},
					"AwAAAIoAAAAAAAAAiwAAAAAAAAAAAAAAiwAAAAAAAACMAAAAAAAAAAAAAACMAAAAAAAAAI0AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAhQIAAAAAAACFAgAAAAAAAAAAAAAAAPC/AQAAAAEAAACKAAAAAAAAAIoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					632,
					1,
					"insert",
					{
						"characters": " new_empty"
					},
					"CgAAAI0AAAAAAAAAjgAAAAAAAAAAAAAAjgAAAAAAAACPAAAAAAAAAAAAAACPAAAAAAAAAJAAAAAAAAAAAAAAAJAAAAAAAAAAkQAAAAAAAAAAAAAAkQAAAAAAAACSAAAAAAAAAAAAAACSAAAAAAAAAJMAAAAAAAAAAAAAAJMAAAAAAAAAlAAAAAAAAAAAAAAAlAAAAAAAAACVAAAAAAAAAAAAAACVAAAAAAAAAJYAAAAAAAAAAAAAAJYAAAAAAAAAlwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAiAIAAAAAAACIAgAAAAAAAAAAAAAAAPC/AQAAAAEAAACNAAAAAAAAAI0AAAAAAAAAAAAAAAAA8L8"
				],
				[
					633,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJcAAAAAAAAAmQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAkgIAAAAAAACSAgAAAAAAAAAAAAAAAPC/AQAAAAEAAACXAAAAAAAAAJcAAAAAAAAAAAAAAAAA8L8"
				],
				[
					635,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJkAAAAAAAAAmgAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAlAIAAAAAAACUAgAAAAAAAAAAAAAAAPC/AQAAAAEAAACZAAAAAAAAAJkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					636,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAJoAAAAAAAAAnAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAlQIAAAAAAACVAgAAAAAAAAAAAAAAAPC/AQAAAAEAAACaAAAAAAAAAJoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					638,
					1,
					"insert",
					{
						"characters": "->"
					},
					"AgAAAJoAAAAAAAAAmwAAAAAAAAAAAAAAmwAAAAAAAACcAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAlwIAAAAAAACXAgAAAAAAAAAAAAAAAPC/AQAAAAEAAACaAAAAAAAAAJoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					639,
					1,
					"insert",
					{
						"characters": " Self"
					},
					"BQAAAJwAAAAAAAAAnQAAAAAAAAAAAAAAnQAAAAAAAACeAAAAAAAAAAAAAACeAAAAAAAAAJ8AAAAAAAAAAAAAAJ8AAAAAAAAAoAAAAAAAAAAAAAAAoAAAAAAAAAChAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAmQIAAAAAAACZAgAAAAAAAAAAAAAAAPC/AQAAAAEAAACcAAAAAAAAAJwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					641,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKMAAAAAAAAApAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAngIAAAAAAACeAgAAAAAAAAAAAAAAAPC/AQAAAAEAAACjAAAAAAAAAKMAAAAAAAAA////////738"
				],
				[
					642,
					1,
					"left_delete",
					null,
					"AQAAAKMAAAAAAAAAowAAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAnwIAAAAAAACfAgAAAAAAAAAAAAAAAPC/AQAAAAEAAACkAAAAAAAAAKQAAAAAAAAAAAAAAAAA8L8"
				],
				[
					644,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKEAAAAAAAAAogAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAngIAAAAAAACeAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAChAAAAAAAAAKEAAAAAAAAAAAAAAAAA8L8"
				],
				[
					650,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAKMAAAAAAAAApAAAAAAAAAAAAAAApAAAAAAAAAClAAAAAAAAAAAAAAClAAAAAAAAAKYAAAAAAAAAAAAAAKYAAAAAAAAApwAAAAAAAAAAAAAApAAAAAAAAACkAAAAAAAAAAEAAAAJpAAAAAAAAACmAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAnwIAAAAAAACfAgAAAAAAAAAAAAAAAPC/AQAAAAEAAACjAAAAAAAAAKMAAAAAAAAAAAAAAAAA8L8"
				],
				[
					651,
					1,
					"insert",
					{
						"characters": "Vao"
					},
					"AwAAAKYAAAAAAAAApwAAAAAAAAAAAAAApwAAAAAAAACoAAAAAAAAAAAAAACoAAAAAAAAAKkAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAApAIAAAAAAACkAgAAAAAAAAAAAAAAAPC/AQAAAAEAAACmAAAAAAAAAKYAAAAAAAAAAAAAAAAA8L8"
				],
				[
					652,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKkAAAAAAAAAqgAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAApwIAAAAAAACnAgAAAAAAAAAAAAAAAPC/AQAAAAEAAACpAAAAAAAAAKkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					653,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAKoAAAAAAAAArAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAqAIAAAAAAACoAgAAAAAAAAAAAAAAAPC/AQAAAAEAAACqAAAAAAAAAKoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					654,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAKsAAAAAAAAArAAAAAAAAAAAAAAArAAAAAAAAACuAAAAAAAAAAAAAACuAAAAAAAAAK8AAAAAAAAAAAAAAK8AAAAAAAAAsQAAAAAAAAAAAAAArAAAAAAAAACsAAAAAAAAAAIAAAAJCawAAAAAAAAArwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAqgIAAAAAAACqAgAAAAAAAAAAAAAAAPC/AQAAAAEAAACrAAAAAAAAAKsAAAAAAAAAAAAAAAAA8L8"
				],
				[
					655,
					1,
					"insert",
					{
						"characters": "0,"
					},
					"AgAAAK8AAAAAAAAAsAAAAAAAAAAAAAAAsAAAAAAAAACxAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAsQIAAAAAAACxAgAAAAAAAAAAAAAAAPC/AQAAAAEAAACvAAAAAAAAAK8AAAAAAAAAAAAAAAAA8L8"
				],
				[
					656,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALEAAAAAAAAAsgAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAswIAAAAAAACzAgAAAAAAAAAAAAAAAPC/AQAAAAEAAACxAAAAAAAAALEAAAAAAAAAAAAAAAAA8L8"
				],
				[
					657,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAALIAAAAAAAAAswAAAAAAAAAAAAAAswAAAAAAAAC2AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAtAIAAAAAAAC0AgAAAAAAAAAAAAAAAPC/AQAAAAEAAACyAAAAAAAAALIAAAAAAAAAAAAAAAAA8L8"
				],
				[
					659,
					1,
					"insert",
					{
						"characters": "idc:"
					},
					"BQAAAK8AAAAAAAAAsAAAAAAAAAAAAAAAtAAAAAAAAAC0AAAAAAAAAAMAAAAJCQmwAAAAAAAAALEAAAAAAAAAAAAAALEAAAAAAAAAsgAAAAAAAAAAAAAAsgAAAAAAAACzAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAuAIAAAAAAAC4AgAAAAAAAAAAAAAAAPC/AQAAAAEAAACvAAAAAAAAAK8AAAAAAAAAAAAAAACAVUA"
				],
				[
					660,
					2,
					"left_delete",
					null,
					"AgAAALIAAAAAAAAAsgAAAAAAAAABAAAAOrEAAAAAAAAAsQAAAAAAAAABAAAAYw",
					"AgAAAAAAAAABAAAAuQIAAAAAAAC5AgAAAAAAAAAAAAAAAPC/AQAAAAEAAACzAAAAAAAAALMAAAAAAAAAAAAAAAAA8L8"
				],
				[
					661,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAALEAAAAAAAAAsgAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAtwIAAAAAAAC3AgAAAAAAAAAAAAAAAPC/AQAAAAEAAACxAAAAAAAAALEAAAAAAAAAAAAAAAAA8L8"
				],
				[
					662,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALIAAAAAAAAAswAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAuAIAAAAAAAC4AgAAAAAAAAAAAAAAAPC/AQAAAAEAAACyAAAAAAAAALIAAAAAAAAAAAAAAAAA8L8"
				],
				[
					665,
					1,
					"insert",
					{
						"characters": "\nu"
					},
					"AwAAALUAAAAAAAAAtgAAAAAAAAAAAAAAtgAAAAAAAAC5AAAAAAAAAAAAAAC5AAAAAAAAALoAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAuQIAAAAAAAC5AgAAAAAAAAAAAAAAAPC/AQAAAAEAAAC1AAAAAAAAALUAAAAAAAAAAAAAAAAA8L8"
				],
				[
					666,
					1,
					"left_delete",
					null,
					"AQAAALkAAAAAAAAAuQAAAAAAAAABAAAAdQ",
					"AgAAAAAAAAABAAAAvgIAAAAAAAC+AgAAAAAAAAAAAAAAAPC/AQAAAAEAAAC6AAAAAAAAALoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					667,
					1,
					"insert",
					{
						"characters": "buffer,"
					},
					"BwAAALkAAAAAAAAAugAAAAAAAAAAAAAAugAAAAAAAAC7AAAAAAAAAAAAAAC7AAAAAAAAALwAAAAAAAAAAAAAALwAAAAAAAAAvQAAAAAAAAAAAAAAvQAAAAAAAAC+AAAAAAAAAAAAAAC+AAAAAAAAAL8AAAAAAAAAAAAAAL8AAAAAAAAAwAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAvQIAAAAAAAC9AgAAAAAAAAAAAAAAAPC/AQAAAAEAAAC5AAAAAAAAALkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					668,
					1,
					"insert",
					{
						"characters": " vec"
					},
					"BAAAAMAAAAAAAAAAwQAAAAAAAAAAAAAAwQAAAAAAAADCAAAAAAAAAAAAAADCAAAAAAAAAMMAAAAAAAAAAAAAAMMAAAAAAAAAxAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAxAIAAAAAAADEAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADAAAAAAAAAAMAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					669,
					5,
					"left_delete",
					null,
					"BQAAAMMAAAAAAAAAwwAAAAAAAAABAAAAY8IAAAAAAAAAwgAAAAAAAAABAAAAZcEAAAAAAAAAwQAAAAAAAAABAAAAdsAAAAAAAAAAwAAAAAAAAAABAAAAIL8AAAAAAAAAvwAAAAAAAAABAAAALA",
					"AgAAAAAAAAABAAAAyAIAAAAAAADIAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADEAAAAAAAAAMQAAAAAAAAAAAAAAAAA8L8"
				],
				[
					670,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAL8AAAAAAAAAwAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAwwIAAAAAAADDAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAC/AAAAAAAAAL8AAAAAAAAAAAAAAAAA8L8"
				],
				[
					671,
					1,
					"insert",
					{
						"characters": " vec!"
					},
					"BQAAAMAAAAAAAAAAwQAAAAAAAAAAAAAAwQAAAAAAAADCAAAAAAAAAAAAAADCAAAAAAAAAMMAAAAAAAAAAAAAAMMAAAAAAAAAxAAAAAAAAAAAAAAAxAAAAAAAAADFAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAxAIAAAAAAADEAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADAAAAAAAAAAMAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					672,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAMUAAAAAAAAAxwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAyQIAAAAAAADJAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADFAAAAAAAAAMUAAAAAAAAAAAAAAAAA8L8"
				],
				[
					674,
					2,
					"left_delete",
					null,
					"AgAAAMYAAAAAAAAAxgAAAAAAAAABAAAAXcUAAAAAAAAAxQAAAAAAAAABAAAAWw",
					"AgAAAAAAAAABAAAAywIAAAAAAADLAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADHAAAAAAAAAMcAAAAAAAAAAAAAAAAA8L8"
				],
				[
					675,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAMUAAAAAAAAAxwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAyQIAAAAAAADJAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADFAAAAAAAAAMUAAAAAAAAAAAAAAAAA8L8"
				],
				[
					678,
					1,
					"cut",
					null,
					"AQAAAMkAAAAAAAAAyQAAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAywIAAAAAAADLAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADJAAAAAAAAAMkAAAAAAAAAAAAAAABgZ0A"
				],
				[
					679,
					2,
					"rust_fmt_format_buffer",
					null,
					"CgAAAIYAAAAAAAAAhgAAAAAAAAABAAAACYYAAAAAAAAAigAAAAAAAAAAAAAApwAAAAAAAACnAAAAAAAAAAIAAAAJCacAAAAAAAAArwAAAAAAAAAAAAAAtQAAAAAAAAC1AAAAAAAAAAMAAAAJCQm1AAAAAAAAAMEAAAAAAAAAAAAAAMgAAAAAAAAAyAAAAAAAAAADAAAACQkJyAAAAAAAAADUAAAAAAAAAAAAAADiAAAAAAAAAOIAAAAAAAAABwAAACAKCQl9CgniAAAAAAAAAPIAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAygIAAAAAAADKAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADJAAAAAAAAAMkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					682,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAO0AAAAAAAAA7gAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA7gIAAAAAAADuAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADtAAAAAAAAAO0AAAAAAAAA////////738"
				],
				[
					683,
					1,
					"left_delete",
					null,
					"AQAAAO0AAAAAAAAA7QAAAAAAAAABAAAALA",
					"AgAAAAAAAAABAAAA7wIAAAAAAADvAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADuAAAAAAAAAO4AAAAAAAAAAAAAAAAA8L8"
				],
				[
					684,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAAO0AAAAAAAAA7gAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA7gIAAAAAAADuAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADtAAAAAAAAAO0AAAAAAAAAAAAAAAAA8L8"
				],
				[
					685,
					1,
					"left_delete",
					null,
					"AQAAAO0AAAAAAAAA7QAAAAAAAAABAAAAcw",
					"AgAAAAAAAAABAAAA7wIAAAAAAADvAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADuAAAAAAAAAO4AAAAAAAAAAAAAAAAA8L8"
				],
				[
					689,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAANoAAAAAAAAA2wAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA7gIAAAAAAADuAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADaAAAAAAAAANoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					697,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAD4AAAAAAAAAPwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA7wIAAAAAAADvAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAA+AAAAAAAAAD4AAAAAAAAAAAAAAAAA8L8"
				],
				[
					698,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAD8AAAAAAAAAQQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA8AIAAAAAAADwAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAA/AAAAAAAAAD8AAAAAAAAAAAAAAAAA8L8"
				],
				[
					699,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAD8AAAAAAAAAPwAAAAAAAAABAAAAWz8AAAAAAAAAPwAAAAAAAAABAAAAXQ",
					"AgAAAAAAAAABAAAA8gIAAAAAAADyAgAAAAAAAAAAAAAAAPC/AQAAAAEAAABAAAAAAAAAAEAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					700,
					1,
					"insert",
					{
						"characters": "#"
					},
					"AQAAAD8AAAAAAAAAQAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA8AIAAAAAAADwAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAA/AAAAAAAAAD8AAAAAAAAAAAAAAAAA8L8"
				],
				[
					701,
					1,
					"left_delete",
					null,
					"AQAAAD8AAAAAAAAAPwAAAAAAAAABAAAAIw",
					"AgAAAAAAAAABAAAA8QIAAAAAAADxAgAAAAAAAAAAAAAAAPC/AQAAAAEAAABAAAAAAAAAAEAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					702,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAD8AAAAAAAAAQQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA8AIAAAAAAADwAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAA/AAAAAAAAAD8AAAAAAAAAAAAAAAAA8L8"
				],
				[
					703,
					1,
					"cut",
					null,
					"AQAAAD8AAAAAAAAAPwAAAAAAAAADAAAAW10K",
					"AgAAAAAAAAABAAAA8gIAAAAAAADyAgAAAAAAAAAAAAAAAPC/AQAAAAEAAABAAAAAAAAAAEAAAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "gengar_engine/src/engine/matricies/matrix_four_four.rs",
			"settings":
			{
				"buffer_size": 6570,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					2797,
					1,
					"insert",
					{
						"characters": " in"
					},
					"AwAAAEQLAAAAAAAARQsAAAAAAAAAAAAARQsAAAAAAABGCwAAAAAAAAAAAABGCwAAAAAAAEcLAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARAsAAAAAAABECwAAAAAAAAAAAAAAAPC/"
				],
				[
					2798,
					1,
					"insert",
					{
						"characters": " 0..y"
					},
					"BQAAAEcLAAAAAAAASAsAAAAAAAAAAAAASAsAAAAAAABJCwAAAAAAAAAAAABJCwAAAAAAAEoLAAAAAAAAAAAAAEoLAAAAAAAASwsAAAAAAAAAAAAASwsAAAAAAABMCwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARwsAAAAAAABHCwAAAAAAAAAAAAAAAPC/"
				],
				[
					2799,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEwLAAAAAAAATQsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATAsAAAAAAABMCwAAAAAAAAAAAAAAAPC/"
				],
				[
					2800,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAE0LAAAAAAAATwsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATQsAAAAAAABNCwAAAAAAAAAAAAAAAPC/"
				],
				[
					2801,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAE4LAAAAAAAATwsAAAAAAAAAAAAATwsAAAAAAABbCwAAAAAAAAAAAABbCwAAAAAAAFwLAAAAAAAAAAAAAFwLAAAAAAAAaAsAAAAAAAAAAAAATwsAAAAAAABPCwAAAAAAAAwAAAAgICAgICAgICAgICBPCwAAAAAAAF8LAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATgsAAAAAAABOCwAAAAAAAAAAAAAAAPC/"
				],
				[
					2802,
					1,
					"rust_fmt_format_buffer",
					null,
					"AQAAAE4LAAAAAAAATgsAAAAAAAAeAAAACiAgICAgICAgICAgICAgICAKICAgICAgICAgICAg",
					"AQAAAAAAAAABAAAAXwsAAAAAAABfCwAAAAAAAAAAAAAAAPC/"
				],
				[
					2804,
					1,
					"left_delete",
					null,
					"AQAAAEsLAAAAAAAASwsAAAAAAAABAAAAeQ",
					"AQAAAAAAAAABAAAATAsAAAAAAABMCwAAAAAAAAAAAAAAAPC/"
				],
				[
					2805,
					1,
					"insert",
					{
						"characters": "4"
					},
					"AQAAAEsLAAAAAAAATAsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASwsAAAAAAABLCwAAAAAAAAAAAAAAAPC/"
				],
				[
					2808,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAE4LAAAAAAAATwsAAAAAAAAAAAAATwsAAAAAAABbCwAAAAAAAAAAAABbCwAAAAAAAFwLAAAAAAAAAAAAAFwLAAAAAAAAaAsAAAAAAAAAAAAATwsAAAAAAABPCwAAAAAAAAwAAAAgICAgICAgICAgICBPCwAAAAAAAF8LAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATgsAAAAAAABOCwAAAAAAAAAAAAAAAPC/"
				],
				[
					2809,
					1,
					"insert",
					{
						"characters": "ret.set"
					},
					"BwAAAF8LAAAAAAAAYAsAAAAAAAAAAAAAYAsAAAAAAABhCwAAAAAAAAAAAABhCwAAAAAAAGILAAAAAAAAAAAAAGILAAAAAAAAYwsAAAAAAAAAAAAAYwsAAAAAAABkCwAAAAAAAAAAAABkCwAAAAAAAGULAAAAAAAAAAAAAGULAAAAAAAAZgsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXwsAAAAAAABfCwAAAAAAAAAAAAAAAPC/"
				],
				[
					2810,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAGYLAAAAAAAAaAsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZgsAAAAAAABmCwAAAAAAAAAAAAAAAPC/"
				],
				[
					2811,
					1,
					"insert",
					{
						"characters": "x,y"
					},
					"AwAAAGcLAAAAAAAAaAsAAAAAAAAAAAAAaAsAAAAAAABpCwAAAAAAAAAAAABpCwAAAAAAAGoLAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZwsAAAAAAABnCwAAAAAAAAAAAAAAAPC/"
				],
				[
					2812,
					3,
					"left_delete",
					null,
					"AwAAAGkLAAAAAAAAaQsAAAAAAAABAAAAeWgLAAAAAAAAaAsAAAAAAAABAAAALGcLAAAAAAAAZwsAAAAAAAABAAAAeA",
					"AQAAAAAAAAABAAAAagsAAAAAAABqCwAAAAAAAAAAAAAAAPC/"
				],
				[
					2813,
					1,
					"insert",
					{
						"characters": "y"
					},
					"AQAAAGcLAAAAAAAAaAsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZwsAAAAAAABnCwAAAAAAAAAAAAAAAPC/"
				],
				[
					2814,
					1,
					"left_delete",
					null,
					"AQAAAGcLAAAAAAAAZwsAAAAAAAABAAAAeQ",
					"AQAAAAAAAAABAAAAaAsAAAAAAABoCwAAAAAAAAAAAAAAAPC/"
				],
				[
					2815,
					1,
					"insert",
					{
						"characters": "x,y"
					},
					"AwAAAGcLAAAAAAAAaAsAAAAAAAAAAAAAaAsAAAAAAABpCwAAAAAAAAAAAABpCwAAAAAAAGoLAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZwsAAAAAAABnCwAAAAAAAAAAAAAAAPC/"
				],
				[
					2816,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAGoLAAAAAAAAawsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAagsAAAAAAABqCwAAAAAAAAAAAAAAAPC/"
				],
				[
					2817,
					1,
					"insert",
					{
						"characters": "self.get"
					},
					"CAAAAGsLAAAAAAAAbAsAAAAAAAAAAAAAbAsAAAAAAABtCwAAAAAAAAAAAABtCwAAAAAAAG4LAAAAAAAAAAAAAG4LAAAAAAAAbwsAAAAAAAAAAAAAbwsAAAAAAABwCwAAAAAAAAAAAABwCwAAAAAAAHELAAAAAAAAAAAAAHELAAAAAAAAcgsAAAAAAAAAAAAAcgsAAAAAAABzCwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAawsAAAAAAABrCwAAAAAAAAAAAAAAAPC/"
				],
				[
					2818,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAHMLAAAAAAAAdQsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcwsAAAAAAABzCwAAAAAAAAAAAAAAAPC/"
				],
				[
					2819,
					1,
					"insert",
					{
						"characters": "y,y"
					},
					"AwAAAHQLAAAAAAAAdQsAAAAAAAAAAAAAdQsAAAAAAAB2CwAAAAAAAAAAAAB2CwAAAAAAAHcLAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdAsAAAAAAAB0CwAAAAAAAAAAAAAAAPC/"
				],
				[
					2820,
					1,
					"left_delete",
					null,
					"AQAAAHYLAAAAAAAAdgsAAAAAAAABAAAAeQ",
					"AQAAAAAAAAABAAAAdwsAAAAAAAB3CwAAAAAAAAAAAAAAAPC/"
				],
				[
					2821,
					1,
					"insert",
					{
						"characters": "x"
					},
					"AQAAAHYLAAAAAAAAdwsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdgsAAAAAAAB2CwAAAAAAAAAAAAAAAPC/"
				],
				[
					2823,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAHkLAAAAAAAAegsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeQsAAAAAAAB5CwAAAAAAAP///////+9/"
				],
				[
					2830,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAGoLAAAAAAAAawsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAagsAAAAAAABqCwAAAAAAAAAAAAAAAPC/"
				],
				[
					2831,
					1,
					"rust_fmt_format_buffer",
					null,
					"AgAAAGkLAAAAAAAAagsAAAAAAAAAAAAAeAsAAAAAAAB5CwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAawsAAAAAAABrCwAAAAAAAAAAAAAAAPC/"
				],
				[
					2836,
					1,
					"insert",
					{
						"characters": "\n\nfn"
					},
					"BwAAAI0RAAAAAAAAjhEAAAAAAAAAAAAAjhEAAAAAAACSEQAAAAAAAAAAAACSEQAAAAAAAJMRAAAAAAAAAAAAAJMRAAAAAAAAlxEAAAAAAAAAAAAAjhEAAAAAAACOEQAAAAAAAAQAAAAgICAgkxEAAAAAAACUEQAAAAAAAAAAAACUEQAAAAAAAJURAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjREAAAAAAACNEQAAAAAAAP///////+9/"
				],
				[
					2837,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJURAAAAAAAAlhEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlREAAAAAAACVEQAAAAAAAAAAAAAAAPC/"
				],
				[
					2839,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAI4RAAAAAAAAjxEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjhEAAAAAAACOEQAAAAAAAAAAAAAAAElA"
				],
				[
					2840,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAI8RAAAAAAAAkREAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjxEAAAAAAACPEQAAAAAAAAAAAAAAAPC/"
				],
				[
					2841,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAI8RAAAAAAAAjxEAAAAAAAABAAAAW48RAAAAAAAAjxEAAAAAAAABAAAAXQ",
					"AQAAAAAAAAABAAAAkBEAAAAAAACQEQAAAAAAAAAAAAAAAPC/"
				],
				[
					2842,
					1,
					"insert",
					{
						"characters": "#"
					},
					"AQAAAI8RAAAAAAAAkBEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjxEAAAAAAACPEQAAAAAAAAAAAAAAAPC/"
				],
				[
					2843,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAJARAAAAAAAAkhEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkBEAAAAAAACQEQAAAAAAAAAAAAAAAPC/"
				],
				[
					2844,
					1,
					"insert",
					{
						"characters": "test"
					},
					"BAAAAJERAAAAAAAAkhEAAAAAAAAAAAAAkhEAAAAAAACTEQAAAAAAAAAAAACTEQAAAAAAAJQRAAAAAAAAAAAAAJQRAAAAAAAAlREAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkREAAAAAAACREQAAAAAAAAAAAAAAAPC/"
				],
				[
					2846,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAI8RAAAAAAAAkxEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjxEAAAAAAACPEQAAAAAAAAAAAAAAAAAA"
				],
				[
					2849,
					1,
					"insert",
					{
						"characters": "trap"
					},
					"BAAAAKIRAAAAAAAAoxEAAAAAAAAAAAAAoxEAAAAAAACkEQAAAAAAAAAAAACkEQAAAAAAAKURAAAAAAAAAAAAAKURAAAAAAAAphEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAohEAAAAAAACiEQAAAAAAAP///////+9/"
				],
				[
					2850,
					1,
					"left_delete",
					null,
					"AQAAAKURAAAAAAAApREAAAAAAAABAAAAcA",
					"AQAAAAAAAAABAAAAphEAAAAAAACmEQAAAAAAAAAAAAAAAPC/"
				],
				[
					2851,
					1,
					"insert",
					{
						"characters": "nspose"
					},
					"BgAAAKURAAAAAAAAphEAAAAAAAAAAAAAphEAAAAAAACnEQAAAAAAAAAAAACnEQAAAAAAAKgRAAAAAAAAAAAAAKgRAAAAAAAAqREAAAAAAAAAAAAAqREAAAAAAACqEQAAAAAAAAAAAACqEQAAAAAAAKsRAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApREAAAAAAAClEQAAAAAAAAAAAAAAAPC/"
				],
				[
					2852,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAKsRAAAAAAAArREAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqxEAAAAAAACrEQAAAAAAAAAAAAAAAPC/"
				],
				[
					2854,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAK0RAAAAAAAArhEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArREAAAAAAACtEQAAAAAAAAAAAAAAAPC/"
				],
				[
					2855,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAK4RAAAAAAAAsBEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArhEAAAAAAACuEQAAAAAAAAAAAAAAAPC/"
				],
				[
					2856,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAK8RAAAAAAAAsBEAAAAAAAAAAAAAsBEAAAAAAAC0EQAAAAAAAAAAAAC0EQAAAAAAALURAAAAAAAAAAAAALURAAAAAAAAuREAAAAAAAAAAAAAsBEAAAAAAACwEQAAAAAAAAQAAAAgICAgsBEAAAAAAAC4EQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArxEAAAAAAACvEQAAAAAAAAAAAAAAAPC/"
				],
				[
					2857,
					1,
					"rust_fmt_format_buffer",
					null,
					"AQAAAK8RAAAAAAAArxEAAAAAAAAOAAAACiAgICAgICAgCiAgICA",
					"AQAAAAAAAAABAAAAuBEAAAAAAAC4EQAAAAAAAAAAAAAAAPC/"
				],
				[
					2858,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAK8RAAAAAAAAsBEAAAAAAAAAAAAAsBEAAAAAAAC0EQAAAAAAAAAAAAC0EQAAAAAAALURAAAAAAAAAAAAALURAAAAAAAAuREAAAAAAAAAAAAAsBEAAAAAAACwEQAAAAAAAAQAAAAgICAgsBEAAAAAAAC4EQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArxEAAAAAAACvEQAAAAAAAAAAAAAAAPC/"
				],
				[
					2864,
					1,
					"paste",
					null,
					"AQAAALgRAAAAAAAAfhIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuBEAAAAAAAC4EQAAAAAAAAAAAAAAAPC/"
				],
				[
					2865,
					1,
					"rust_fmt_format_buffer",
					null,
					"AQAAALgRAAAAAAAAuBEAAAAAAAAIAAAAICAgICAgICA",
					"AQAAAAAAAAABAAAAfhIAAAAAAAB+EgAAAAAAAAAAAAAAAPC/"
				],
				[
					2869,
					1,
					"cut",
					null,
					"AQAAACISAAAAAAAAIhIAAAAAAAAgAAAAICAgICAgICAgICAgICAgIGIuc2V0KHgsIHksIGkpOwo",
					"AQAAAAAAAAABAAAAPhIAAAAAAAA+EgAAAAAAAAAAAAAAQGlA"
				],
				[
					2872,
					1,
					"insert",
					{
						"characters": "\n\t"
					},
					"BAAAAK8RAAAAAAAAsBEAAAAAAAAAAAAAsBEAAAAAAAC0EQAAAAAAAAAAAAC0EQAAAAAAALgRAAAAAAAAAAAAALgRAAAAAAAAvBEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArxEAAAAAAACvEQAAAAAAAP///////+9/"
				],
				[
					2873,
					1,
					"left_delete",
					null,
					"AQAAALgRAAAAAAAAuBEAAAAAAAAEAAAAICAgIA",
					"AQAAAAAAAAABAAAAvBEAAAAAAAC8EQAAAAAAAAAAAAAAAPC/"
				],
				[
					2874,
					1,
					"insert",
					{
						"characters": "let"
					},
					"AwAAALgRAAAAAAAAuREAAAAAAAAAAAAAuREAAAAAAAC6EQAAAAAAAAAAAAC6EQAAAAAAALsRAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuBEAAAAAAAC4EQAAAAAAAAAAAAAAAPC/"
				],
				[
					2875,
					1,
					"insert",
					{
						"characters": " mut"
					},
					"BAAAALsRAAAAAAAAvBEAAAAAAAAAAAAAvBEAAAAAAAC9EQAAAAAAAAAAAAC9EQAAAAAAAL4RAAAAAAAAAAAAAL4RAAAAAAAAvxEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuxEAAAAAAAC7EQAAAAAAAAAAAAAAAPC/"
				],
				[
					2876,
					1,
					"insert",
					{
						"characters": " a"
					},
					"AgAAAL8RAAAAAAAAwBEAAAAAAAAAAAAAwBEAAAAAAADBEQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvxEAAAAAAAC/EQAAAAAAAAAAAAAAAPC/"
				],
				[
					2877,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAMERAAAAAAAAwhEAAAAAAAAAAAAAwhEAAAAAAADDEQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwREAAAAAAADBEQAAAAAAAAAAAAAAAPC/"
				],
				[
					2878,
					1,
					"insert",
					{
						"characters": " M"
					},
					"AgAAAMMRAAAAAAAAxBEAAAAAAAAAAAAAxBEAAAAAAADFEQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwxEAAAAAAADDEQAAAAAAAAAAAAAAAPC/"
				],
				[
					2879,
					1,
					"insert_completion",
					{
						"completion": "MatrixFourFour",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "MatrixFourFour"
					},
					"AgAAAMQRAAAAAAAAxBEAAAAAAAABAAAATcQRAAAAAAAA0hEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxREAAAAAAADFEQAAAAAAAAAAAAAAAPC/"
				],
				[
					2880,
					1,
					"insert",
					{
						"characters": ":;new_empty"
					},
					"CwAAANIRAAAAAAAA0xEAAAAAAAAAAAAA0xEAAAAAAADUEQAAAAAAAAAAAADUEQAAAAAAANURAAAAAAAAAAAAANURAAAAAAAA1hEAAAAAAAAAAAAA1hEAAAAAAADXEQAAAAAAAAAAAADXEQAAAAAAANgRAAAAAAAAAAAAANgRAAAAAAAA2REAAAAAAAAAAAAA2REAAAAAAADaEQAAAAAAAAAAAADaEQAAAAAAANsRAAAAAAAAAAAAANsRAAAAAAAA3BEAAAAAAAAAAAAA3BEAAAAAAADdEQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0hEAAAAAAADSEQAAAAAAAAAAAAAAAPC/"
				],
				[
					2881,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAN0RAAAAAAAA3xEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3REAAAAAAADdEQAAAAAAAAAAAAAAAPC/"
				],
				[
					2883,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAN8RAAAAAAAA4BEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3xEAAAAAAADfEQAAAAAAAAAAAAAAAPC/"
				],
				[
					2885,
					1,
					"left_delete",
					null,
					"AQAAANMRAAAAAAAA0xEAAAAAAAABAAAAOw",
					"AQAAAAAAAAABAAAA1BEAAAAAAADUEQAAAAAAAAAAAAAAAPC/"
				],
				[
					2886,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAANMRAAAAAAAA1BEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0xEAAAAAAADTEQAAAAAAAAAAAAAAAPC/"
				],
				[
					2895,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAAIcSAAAAAAAAiBIAAAAAAAAAAAAAiBIAAAAAAACQEgAAAAAAAAAAAACQEgAAAAAAAJESAAAAAAAAAAAAAJESAAAAAAAAmRIAAAAAAAAAAAAAiBIAAAAAAACIEgAAAAAAAAgAAAAgICAgICAgIA",
					"AQAAAAAAAAABAAAAhxIAAAAAAACHEgAAAAAAAP///////+9/"
				],
				[
					2901,
					1,
					"paste",
					null,
					"AQAAAIkSAAAAAAAAsxIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiRIAAAAAAACJEgAAAAAAAAAAAAAAAAAA"
				],
				[
					2905,
					1,
					"left_delete",
					null,
					"AgAAAKcSAAAAAAAApxIAAAAAAAABAAAAM7ISAAAAAAAAshIAAAAAAAAIAAAAICAgICAgICA",
					"AQAAAAAAAAABAAAAqBIAAAAAAACoEgAAAAAAAAAAAAAAAPC/"
				],
				[
					2906,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAKcSAAAAAAAAqBIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApxIAAAAAAACnEgAAAAAAAAAAAAAAAPC/"
				],
				[
					2910,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AgAAAKsSAAAAAAAArBIAAAAAAAAAAAAArBIAAAAAAACsEgAAAAAAAAUAAAA0MjYuMA",
					"AQAAAAAAAAABAAAAsBIAAAAAAACrEgAAAAAAAAAAAAAAAPC/"
				],
				[
					2911,
					1,
					"rust_fmt_format_buffer",
					null,
					"AQAAAK8SAAAAAAAArxIAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAArBIAAAAAAACsEgAAAAAAAAAAAAAAAPC/"
				],
				[
					2916,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAIgSAAAAAAAAiRIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiBIAAAAAAACIEgAAAAAAAAAAAAAAwGNA"
				],
				[
					2917,
					1,
					"reindent",
					null,
					"AQAAAIkSAAAAAAAAkRIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiRIAAAAAAACJEgAAAAAAAAAAAAAAAPC/"
				],
				[
					2918,
					1,
					"insert",
					{
						"characters": "let"
					},
					"AwAAAJESAAAAAAAAkhIAAAAAAAAAAAAAkhIAAAAAAACTEgAAAAAAAAAAAACTEgAAAAAAAJQSAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkRIAAAAAAACREgAAAAAAAAAAAAAAAPC/"
				],
				[
					2919,
					1,
					"insert",
					{
						"characters": " re"
					},
					"AwAAAJQSAAAAAAAAlRIAAAAAAAAAAAAAlRIAAAAAAACWEgAAAAAAAAAAAACWEgAAAAAAAJcSAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlBIAAAAAAACUEgAAAAAAAAAAAAAAAPC/"
				],
				[
					2920,
					2,
					"left_delete",
					null,
					"AgAAAJYSAAAAAAAAlhIAAAAAAAABAAAAZZUSAAAAAAAAlRIAAAAAAAABAAAAcg",
					"AQAAAAAAAAABAAAAlxIAAAAAAACXEgAAAAAAAAAAAAAAAPC/"
				],
				[
					2921,
					1,
					"insert",
					{
						"characters": "b"
					},
					"AQAAAJUSAAAAAAAAlhIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlRIAAAAAAACVEgAAAAAAAAAAAAAAAPC/"
				],
				[
					2922,
					1,
					"insert",
					{
						"characters": "  Matri"
					},
					"BwAAAJYSAAAAAAAAlxIAAAAAAAAAAAAAlxIAAAAAAACYEgAAAAAAAAAAAACYEgAAAAAAAJkSAAAAAAAAAAAAAJkSAAAAAAAAmhIAAAAAAAAAAAAAmhIAAAAAAACbEgAAAAAAAAAAAACbEgAAAAAAAJwSAAAAAAAAAAAAAJwSAAAAAAAAnRIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlhIAAAAAAACWEgAAAAAAAAAAAAAAAPC/"
				],
				[
					2923,
					1,
					"insert_completion",
					{
						"completion": "MatrixFourFour",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "MatrixFourFour"
					},
					"AgAAAJgSAAAAAAAAmBIAAAAAAAAFAAAATWF0cmmYEgAAAAAAAKYSAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnRIAAAAAAACdEgAAAAAAAAAAAAAAAPC/"
				],
				[
					2924,
					1,
					"insert",
					{
						"characters": "::transpose"
					},
					"CwAAAKYSAAAAAAAApxIAAAAAAAAAAAAApxIAAAAAAACoEgAAAAAAAAAAAACoEgAAAAAAAKkSAAAAAAAAAAAAAKkSAAAAAAAAqhIAAAAAAAAAAAAAqhIAAAAAAACrEgAAAAAAAAAAAACrEgAAAAAAAKwSAAAAAAAAAAAAAKwSAAAAAAAArRIAAAAAAAAAAAAArRIAAAAAAACuEgAAAAAAAAAAAACuEgAAAAAAAK8SAAAAAAAAAAAAAK8SAAAAAAAAsBIAAAAAAAAAAAAAsBIAAAAAAACxEgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAphIAAAAAAACmEgAAAAAAAAAAAAAAAPC/"
				],
				[
					2925,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAALESAAAAAAAAsxIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsRIAAAAAAACxEgAAAAAAAAAAAAAAAPC/"
				],
				[
					2929,
					1,
					"insert",
					{
						"characters": "a.tranap"
					},
					"CQAAAJgSAAAAAAAAmRIAAAAAAAAAAAAAmRIAAAAAAACZEgAAAAAAABsAAABNYXRyaXhGb3VyRm91cjo6dHJhbnNwb3NlKCmZEgAAAAAAAJoSAAAAAAAAAAAAAJoSAAAAAAAAmxIAAAAAAAAAAAAAmxIAAAAAAACcEgAAAAAAAAAAAACcEgAAAAAAAJ0SAAAAAAAAAAAAAJ0SAAAAAAAAnhIAAAAAAAAAAAAAnhIAAAAAAACfEgAAAAAAAAAAAACfEgAAAAAAAKASAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsxIAAAAAAACYEgAAAAAAAAAAAAAAAPC/"
				],
				[
					2930,
					1,
					"left_delete",
					null,
					"AQAAAJ8SAAAAAAAAnxIAAAAAAAABAAAAcA",
					"AQAAAAAAAAABAAAAoBIAAAAAAACgEgAAAAAAAAAAAAAAAPC/"
				],
				[
					2931,
					1,
					"insert",
					{
						"characters": "p"
					},
					"AQAAAJ8SAAAAAAAAoBIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnxIAAAAAAACfEgAAAAAAAAAAAAAAAPC/"
				],
				[
					2932,
					2,
					"left_delete",
					null,
					"AgAAAJ8SAAAAAAAAnxIAAAAAAAABAAAAcJ4SAAAAAAAAnhIAAAAAAAABAAAAYQ",
					"AQAAAAAAAAABAAAAoBIAAAAAAACgEgAAAAAAAAAAAAAAAPC/"
				],
				[
					2933,
					1,
					"insert",
					{
						"characters": "spose"
					},
					"BQAAAJ4SAAAAAAAAnxIAAAAAAAAAAAAAnxIAAAAAAACgEgAAAAAAAAAAAACgEgAAAAAAAKESAAAAAAAAAAAAAKESAAAAAAAAohIAAAAAAAAAAAAAohIAAAAAAACjEgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnhIAAAAAAACeEgAAAAAAAAAAAAAAAPC/"
				],
				[
					2934,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAKMSAAAAAAAApRIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoxIAAAAAAACjEgAAAAAAAAAAAAAAAPC/"
				],
				[
					2936,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAKUSAAAAAAAAphIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApRIAAAAAAAClEgAAAAAAAAAAAAAAAPC/"
				],
				[
					2937,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAKYSAAAAAAAApxIAAAAAAAAAAAAApxIAAAAAAACvEgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAphIAAAAAAACmEgAAAAAAAAAAAAAAAPC/"
				],
				[
					2942,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AwAAAJYSAAAAAAAAlxIAAAAAAAAAAAAAqBIAAAAAAACoEgAAAAAAAAgAAAAgICAgICAgIJcSAAAAAAAAmBIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlhIAAAAAAACWEgAAAAAAAAAAAAAAAPC/"
				],
				[
					2943,
					1,
					"rust_fmt_format_buffer",
					null,
					"AQAAAJkSAAAAAAAAmRIAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAmBIAAAAAAACYEgAAAAAAAAAAAAAAAPC/"
				],
				[
					2951,
					1,
					"insert",
					{
						"characters": "\na.set"
					},
					"BwAAAKcSAAAAAAAAqBIAAAAAAAAAAAAAqBIAAAAAAACwEgAAAAAAAAAAAACwEgAAAAAAALESAAAAAAAAAAAAALESAAAAAAAAshIAAAAAAAAAAAAAshIAAAAAAACzEgAAAAAAAAAAAACzEgAAAAAAALQSAAAAAAAAAAAAALQSAAAAAAAAtRIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApxIAAAAAAACnEgAAAAAAAP///////+9/"
				],
				[
					2952,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAALUSAAAAAAAAtxIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtRIAAAAAAAC1EgAAAAAAAAAAAAAAAPC/"
				],
				[
					2953,
					1,
					"insert",
					{
						"characters": "0,0,1"
					},
					"BQAAALYSAAAAAAAAtxIAAAAAAAAAAAAAtxIAAAAAAAC4EgAAAAAAAAAAAAC4EgAAAAAAALkSAAAAAAAAAAAAALkSAAAAAAAAuhIAAAAAAAAAAAAAuhIAAAAAAAC7EgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAthIAAAAAAAC2EgAAAAAAAAAAAAAAAPC/"
				],
				[
					2955,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAALwSAAAAAAAAvRIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvBIAAAAAAAC8EgAAAAAAAAAAAAAAAPC/"
				],
				[
					2957,
					1,
					"insert",
					{
						"characters": ".0"
					},
					"AgAAALsSAAAAAAAAvBIAAAAAAAAAAAAAvBIAAAAAAAC9EgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuxIAAAAAAAC7EgAAAAAAAAAAAAAAAPC/"
				],
				[
					2958,
					1,
					"rust_fmt_format_buffer",
					null,
					"AgAAALgSAAAAAAAAuRIAAAAAAAAAAAAAuxIAAAAAAAC8EgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvRIAAAAAAAC9EgAAAAAAAAAAAAAAAPC/"
				],
				[
					2963,
					1,
					"insert",
					{
						"characters": "b"
					},
					"AgAAANYSAAAAAAAA1xIAAAAAAAAAAAAA1xIAAAAAAADXEgAAAAAAAAMAAAByZXQ",
					"AQAAAAAAAAABAAAA2RIAAAAAAADWEgAAAAAAAAAAAAAAAPC/"
				],
				[
					2971,
					1,
					"insert",
					{
						"characters": ".0"
					},
					"AgAAAOQSAAAAAAAA5RIAAAAAAAAAAAAA5RIAAAAAAADmEgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5BIAAAAAAADkEgAAAAAAAAAAAAAAAPC/"
				],
				[
					2974,
					1,
					"cut",
					null,
					"AQAAAKgSAAAAAAAAqBIAAAAAAAAaAAAAICAgICAgICBhLnNldCgwLCAwLCAxLjApOwo",
					"AQAAAAAAAAABAAAAwRIAAAAAAADBEgAAAAAAAAAAAAAAgG9A"
				],
				[
					2978,
					1,
					"paste",
					null,
					"AQAAAKkSAAAAAAAAzxIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqRIAAAAAAACpEgAAAAAAAAAAAAAAAAAA"
				],
				[
					2982,
					1,
					"left_delete",
					null,
					"AQAAAOgSAAAAAAAA6BIAAAAAAAABAAAAMA",
					"AQAAAAAAAAABAAAA6RIAAAAAAADpEgAAAAAAAAAAAAAAAPC/"
				],
				[
					2983,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAOgSAAAAAAAA6RIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6BIAAAAAAADoEgAAAAAAAAAAAAAAAPC/"
				],
				[
					2986,
					1,
					"left_delete",
					null,
					"AQAAAO8SAAAAAAAA7xIAAAAAAAABAAAAMQ",
					"AQAAAAAAAAABAAAA8BIAAAAAAADwEgAAAAAAAAAAAAAAAPC/"
				],
				[
					2987,
					1,
					"insert",
					{
						"characters": "5"
					},
					"AQAAAO8SAAAAAAAA8BIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7xIAAAAAAADvEgAAAAAAAAAAAAAAAPC/"
				],
				[
					2989,
					1,
					"paste",
					null,
					"AQAAAM8SAAAAAAAA9RIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8BIAAAAAAADwEgAAAAAAAAAAAAAAAPC/"
				],
				[
					2992,
					1,
					"left_delete",
					null,
					"AQAAAA4TAAAAAAAADhMAAAAAAAABAAAAMQ",
					"AQAAAAAAAAABAAAADxMAAAAAAAAPEwAAAAAAAAAAAAAAAPC/"
				],
				[
					2993,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AQAAAA4TAAAAAAAADxMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADhMAAAAAAAAOEwAAAAAAAAAAAAAAAPC/"
				],
				[
					2996,
					1,
					"left_delete",
					null,
					"AQAAABUTAAAAAAAAFRMAAAAAAAABAAAANQ",
					"AQAAAAAAAAABAAAAFhMAAAAAAAAWEwAAAAAAAAAAAAAAAPC/"
				],
				[
					2997,
					1,
					"insert",
					{
						"characters": "9"
					},
					"AQAAABUTAAAAAAAAFhMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFRMAAAAAAAAVEwAAAAAAAAAAAAAAAPC/"
				],
				[
					2999,
					1,
					"paste",
					null,
					"AQAAAPUSAAAAAAAAGxMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFhMAAAAAAAAWEwAAAAAAAAAAAAAAAPC/"
				],
				[
					3000,
					1,
					"left_delete",
					null,
					"AQAAADsTAAAAAAAAOxMAAAAAAAABAAAAOQ",
					"AQAAAAAAAAABAAAAPBMAAAAAAAA8EwAAAAAAAAAAAAAAAPC/"
				],
				[
					3001,
					1,
					"insert",
					{
						"characters": "13"
					},
					"AgAAADsTAAAAAAAAPBMAAAAAAAAAAAAAPBMAAAAAAAA9EwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOxMAAAAAAAA7EwAAAAAAAAAAAAAAAPC/"
				],
				[
					3004,
					1,
					"left_delete",
					null,
					"AQAAADQTAAAAAAAANBMAAAAAAAABAAAAMg",
					"AQAAAAAAAAABAAAANRMAAAAAAAA1EwAAAAAAAAAAAAAAAPC/"
				],
				[
					3005,
					1,
					"insert",
					{
						"characters": "3"
					},
					"AQAAADQTAAAAAAAANRMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANBMAAAAAAAA0EwAAAAAAAAAAAAAAAPC/"
				],
				[
					3014,
					1,
					"left_delete",
					null,
					"AQAAAGcLAAAAAAAAZwsAAAAAAAABAAAAeA",
					"AQAAAAAAAAABAAAAaAsAAAAAAABoCwAAAAAAAAAAAAAAAPC/"
				],
				[
					3015,
					1,
					"insert",
					{
						"characters": "u"
					},
					"AQAAAGcLAAAAAAAAaAsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZwsAAAAAAABnCwAAAAAAAAAAAAAAAPC/"
				],
				[
					3016,
					1,
					"left_delete",
					null,
					"AQAAAGcLAAAAAAAAZwsAAAAAAAABAAAAdQ",
					"AQAAAAAAAAABAAAAaAsAAAAAAABoCwAAAAAAAAAAAAAAAPC/"
				],
				[
					3017,
					1,
					"insert",
					{
						"characters": "y"
					},
					"AQAAAGcLAAAAAAAAaAsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZwsAAAAAAABnCwAAAAAAAAAAAAAAAPC/"
				],
				[
					3019,
					1,
					"left_delete",
					null,
					"AQAAAGoLAAAAAAAAagsAAAAAAAABAAAAeQ",
					"AQAAAAAAAAABAAAAawsAAAAAAABrCwAAAAAAAAAAAAAAAPC/"
				],
				[
					3020,
					1,
					"insert",
					{
						"characters": "x"
					},
					"AQAAAGoLAAAAAAAAawsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAagsAAAAAAABqCwAAAAAAAAAAAAAAAPC/"
				],
				[
					3040,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAIgSAAAAAAAAiRIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiBIAAAAAAACIEgAAAAAAAAAAAAAAAAAA"
				],
				[
					3041,
					1,
					"paste",
					null,
					"AQAAAIkSAAAAAAAArxIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiRIAAAAAAACJEgAAAAAAAAAAAAAAAPC/"
				],
				[
					3048,
					1,
					"paste",
					null,
					"AQAAAIkSAAAAAAAArxIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoxIAAAAAAACjEgAAAAAAAAAAAAAAAPC/"
				],
				[
					3049,
					1,
					"left_delete",
					null,
					"AQAAAMgSAAAAAAAAyBIAAAAAAAABAAAAMA",
					"AQAAAAAAAAABAAAAyRIAAAAAAADJEgAAAAAAAAAAAAAAAPC/"
				],
				[
					3050,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAMgSAAAAAAAAyRIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyBIAAAAAAADIEgAAAAAAAAAAAAAAAPC/"
				],
				[
					3055,
					1,
					"left_delete",
					null,
					"AgAAAMISAAAAAAAAwhIAAAAAAAABAAAAYpwSAAAAAAAAnBIAAAAAAAABAAAAYg",
					"AQAAAAAAAAACAAAAnRIAAAAAAACdEgAAAAAAAAAAAAAAAPC/wxIAAAAAAADDEgAAAAAAAAAAAAAAAGJA"
				],
				[
					3056,
					1,
					"insert",
					{
						"characters": "a"
					},
					"AgAAAMESAAAAAAAAwhIAAAAAAAAAAAAAnBIAAAAAAACdEgAAAAAAAAAAAAA",
					"AQAAAAAAAAACAAAAnBIAAAAAAACcEgAAAAAAAAAAAAAAAPC/wRIAAAAAAADBEgAAAAAAAAAAAAAAAPC/"
				],
				[
					3060,
					1,
					"left_delete",
					null,
					"AgAAANASAAAAAAAA0BIAAAAAAAABAAAALs8SAAAAAAAAzxIAAAAAAAABAAAAMQ",
					"AQAAAAAAAAACAAAA0BIAAAAAAADQEgAAAAAAAAAAAAAAAPC/0RIAAAAAAADREgAAAAAAAAAAAAAAAPC/"
				],
				[
					3061,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AQAAAM8SAAAAAAAA0BIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzxIAAAAAAADPEgAAAAAAAAAAAAAAAPC/"
				],
				[
					3063,
					1,
					"paste",
					null,
					"AQAAAK8SAAAAAAAA1BIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0BIAAAAAAADQEgAAAAAAAAAAAAAAAPC/"
				],
				[
					3065,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAANASAAAAAAAA0RIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0BIAAAAAAADQEgAAAAAAAAAAAAAAwG1A"
				],
				[
					3069,
					1,
					"insert",
					{
						"characters": "3."
					},
					"AgAAAPYSAAAAAAAA9xIAAAAAAAAAAAAA9xIAAAAAAAD4EgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9hIAAAAAAAD2EgAAAAAAAAAAAAAAwG1A"
				],
				[
					3072,
					1,
					"left_delete",
					null,
					"AQAAAPUSAAAAAAAA9RIAAAAAAAABAAAAMg",
					"AQAAAAAAAAABAAAA9hIAAAAAAAD2EgAAAAAAAAAAAAAAAPC/"
				],
				[
					3075,
					1,
					"left_delete",
					null,
					"AQAAAO4SAAAAAAAA7hIAAAAAAAABAAAAMQ",
					"AQAAAAAAAAABAAAA7xIAAAAAAADvEgAAAAAAAAAAAAAAAPC/"
				],
				[
					3076,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AQAAAO4SAAAAAAAA7xIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7hIAAAAAAADuEgAAAAAAAAAAAAAAAPC/"
				],
				[
					3081,
					1,
					"insert",
					{
						"characters": "?"
					},
					"BAAAAJYTAAAAAAAAlxMAAAAAAAAAAAAAcBMAAAAAAABxEwAAAAAAAAAAAABKEwAAAAAAAEsTAAAAAAAAAAAAACQTAAAAAAAAJRMAAAAAAAAAAAAA",
					"AQAAAAAAAAAEAAAAJBMAAAAAAAAkEwAAAAAAAAAAAAAAAE1AShMAAAAAAABKEwAAAAAAAAAAAAAAAE1AcBMAAAAAAABwEwAAAAAAAAAAAAAAAE1AlhMAAAAAAACWEwAAAAAAAAAAAAAAAE1A"
				],
				[
					3082,
					1,
					"left_delete",
					null,
					"BAAAAJkTAAAAAAAAmRMAAAAAAAABAAAAP3ITAAAAAAAAchMAAAAAAAABAAAAP0sTAAAAAAAASxMAAAAAAAABAAAAPyQTAAAAAAAAJBMAAAAAAAABAAAAPw",
					"AQAAAAAAAAAEAAAAJRMAAAAAAAAlEwAAAAAAAAAAAAAAAPC/TBMAAAAAAABMEwAAAAAAAAAAAAAAAPC/cxMAAAAAAABzEwAAAAAAAAAAAAAAAPC/mhMAAAAAAACaEwAAAAAAAAAAAAAAAPC/"
				],
				[
					3083,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"BAAAACQTAAAAAAAAJxMAAAAAAAAAAAAATRMAAAAAAABQEwAAAAAAAAAAAAB2EwAAAAAAAHkTAAAAAAAAAAAAAJ8TAAAAAAAAohMAAAAAAAAAAAAA",
					"AQAAAAAAAAAEAAAAJBMAAAAAAAAkEwAAAAAAAAAAAAAAAPC/ShMAAAAAAABKEwAAAAAAAAAAAAAAAPC/cBMAAAAAAABwEwAAAAAAAAAAAAAAAPC/lhMAAAAAAACWEwAAAAAAAAAAAAAAAPC/"
				],
				[
					3088,
					1,
					"swap_line_up",
					null,
					"AgAAABcSAAAAAAAAFxIAAAAAAAAcAAAAICAgICAgICAgICAgZm9yIHkgaW4gMC4uNCB7Cv8RAAAAAAAAGxIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIhIAAAAAAAAiEgAAAAAAAAAAAAAAwFNA"
				],
				[
					3089,
					1,
					"rust_fmt_format_buffer",
					null,
					"AgAAAAcSAAAAAAAABxIAAAAAAAAEAAAAICAgIBcSAAAAAAAAGxIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAChIAAAAAAAAKEgAAAAAAAAAAAAAAwFNA"
				],
				[
					3092,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAP4RAAAAAAAA/xEAAAAAAAAAAAAA/xEAAAAAAAAHEgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/hEAAAAAAAD+EQAAAAAAAP///////+9/"
				],
				[
					3093,
					1,
					"rust_fmt_format_buffer",
					null,
					"AQAAAP8RAAAAAAAA/xEAAAAAAAAIAAAAICAgICAgICA",
					"AQAAAAAAAAABAAAABxIAAAAAAAAHEgAAAAAAAAAAAAAAAPC/"
				],
				[
					3099,
					1,
					"swap_line_up",
					null,
					"AgAAAAEOAAAAAAAAAQ4AAAAAAAAcAAAAICAgICAgICAgICAgZm9yIHkgaW4gMC4uNCB7CukNAAAAAAAABQ4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAQ4AAAAAAAABDgAAAAAAAAAAAAAAAAAA"
				],
				[
					3100,
					1,
					"rust_fmt_format_buffer",
					null,
					"AgAAAPENAAAAAAAA8Q0AAAAAAAAEAAAAICAgIAEOAAAAAAAABQ4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6Q0AAAAAAADpDQAAAAAAAAAAAAAAAAAA"
				],
				[
					3109,
					1,
					"left_delete",
					null,
					"AQAAAIkJAAAAAAAAiQkAAAAAAAABAAAAeQ",
					"AQAAAAAAAAABAAAAigkAAAAAAACKCQAAAAAAAAAAAAAAAPC/"
				],
				[
					3110,
					1,
					"insert",
					{
						"characters": "x"
					},
					"AQAAAIkJAAAAAAAAigkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiQkAAAAAAACJCQAAAAAAAAAAAAAAAPC/"
				],
				[
					3112,
					1,
					"left_delete",
					null,
					"AQAAAIwJAAAAAAAAjAkAAAAAAAABAAAAeA",
					"AQAAAAAAAAABAAAAjQkAAAAAAACNCQAAAAAAAAAAAAAAAPC/"
				],
				[
					3113,
					1,
					"insert",
					{
						"characters": "y"
					},
					"AQAAAIwJAAAAAAAAjQkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjAkAAAAAAACMCQAAAAAAAAAAAAAAAPC/"
				],
				[
					3116,
					1,
					"cut",
					null,
					"AQAAADcJAAAAAAAANwkAAAAAAAA6AAAAICAgICAgICAgICAgICAgIC8vIHdoeSB4L3kgZmxpcHBlZD8gSSdtIG5vdCBzbWFydCBlbm91Z2guCg",
					"AQAAAAAAAAABAAAAUwkAAAAAAABTCQAAAAAAAAAAAAAAQGlA"
				],
				[
					3120,
					1,
					"left_delete",
					null,
					"AQAAAC0LAAAAAAAALQsAAAAAAAABAAAAeQ",
					"AQAAAAAAAAABAAAALgsAAAAAAAAuCwAAAAAAAAAAAAAAAPC/"
				],
				[
					3121,
					1,
					"insert",
					{
						"characters": "x"
					},
					"AQAAAC0LAAAAAAAALgsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALQsAAAAAAAAtCwAAAAAAAAAAAAAAAPC/"
				],
				[
					3123,
					1,
					"left_delete",
					null,
					"AQAAADALAAAAAAAAMAsAAAAAAAABAAAAeA",
					"AQAAAAAAAAABAAAAMQsAAAAAAAAxCwAAAAAAAAAAAAAAAPC/"
				],
				[
					3124,
					1,
					"insert",
					{
						"characters": "y"
					},
					"AQAAADALAAAAAAAAMQsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMAsAAAAAAAAwCwAAAAAAAAAAAAAAAPC/"
				],
				[
					3132,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAAOsSAAAAAAAA6xIAAAAAAAADAAAALy8g",
					"AQAAAAAAAAABAAAA4xIAAAAAAADjEgAAAAAAAAAAAAAAAAAA"
				],
				[
					3134,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAABETAAAAAAAAERMAAAAAAAADAAAALy8g",
					"AQAAAAAAAAABAAAACRMAAAAAAAAJEwAAAAAAAAAAAAAAAAAA"
				],
				[
					3136,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAADcTAAAAAAAANxMAAAAAAAADAAAALy8g",
					"AQAAAAAAAAABAAAALxMAAAAAAAAvEwAAAAAAAAAAAAAAAAAA"
				],
				[
					3138,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAAF0TAAAAAAAAXRMAAAAAAAADAAAALy8g",
					"AQAAAAAAAAABAAAAVRMAAAAAAABVEwAAAAAAAAAAAAAAAAAA"
				],
				[
					3144,
					1,
					"paste",
					null,
					"AQAAAJwSAAAAAAAAwhIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnBIAAAAAAACcEgAAAAAAAAAAAAAAAAAA"
				],
				[
					3146,
					1,
					"left_delete",
					null,
					"AQAAANsSAAAAAAAA2xIAAAAAAAABAAAAMg",
					"AQAAAAAAAAABAAAA3BIAAAAAAADcEgAAAAAAAAAAAAAAAPC/"
				],
				[
					3147,
					1,
					"insert",
					{
						"characters": "3"
					},
					"AQAAANsSAAAAAAAA3BIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2xIAAAAAAADbEgAAAAAAAAAAAAAAAPC/"
				],
				[
					3150,
					1,
					"left_delete",
					null,
					"AQAAAOISAAAAAAAA4hIAAAAAAAABAAAAMw",
					"AQAAAAAAAAABAAAA4xIAAAAAAADjEgAAAAAAAAAAAAAAAPC/"
				],
				[
					3151,
					1,
					"insert",
					{
						"characters": "4"
					},
					"AQAAAOISAAAAAAAA4xIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4hIAAAAAAADiEgAAAAAAAAAAAAAAAPC/"
				],
				[
					3161,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAAKETAAAAAAAAohMAAAAAAAAAAAAAohMAAAAAAACqEwAAAAAAAAAAAACqEwAAAAAAAKsTAAAAAAAAAAAAAKsTAAAAAAAAsxMAAAAAAAAAAAAAohMAAAAAAACiEwAAAAAAAAgAAAAgICAgICAgIA",
					"AQAAAAAAAAABAAAAoRMAAAAAAAChEwAAAAAAAP///////+9/"
				],
				[
					3162,
					1,
					"paste",
					null,
					"AQAAAKsTAAAAAAAAOxQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqxMAAAAAAACrEwAAAAAAAAAAAAAAAPC/"
				],
				[
					3169,
					1,
					"left_delete",
					null,
					"BAAAADEUAAAAAAAAMRQAAAAAAAABAAAAMAsUAAAAAAAACxQAAAAAAAABAAAAMOUTAAAAAAAA5RMAAAAAAAABAAAAML8TAAAAAAAAvxMAAAAAAAABAAAAMA",
					"AQAAAAAAAAAEAAAAwBMAAAAAAADAEwAAAAAAAAAAAAAAAPC/5hMAAAAAAADmEwAAAAAAAAAAAAAAIGpADBQAAAAAAAAMFAAAAAAAAAAAAAAAIGpAMhQAAAAAAAAyFAAAAAAAAAAAAAAAIGpA"
				],
				[
					3170,
					1,
					"insert",
					{
						"characters": "1"
					},
					"BAAAAC4UAAAAAAAALxQAAAAAAAAAAAAACRQAAAAAAAAKFAAAAAAAAAAAAADkEwAAAAAAAOUTAAAAAAAAAAAAAL8TAAAAAAAAwBMAAAAAAAAAAAAA",
					"AQAAAAAAAAAEAAAAvxMAAAAAAAC/EwAAAAAAAAAAAAAAAPC/5BMAAAAAAADkEwAAAAAAAAAAAAAAAPC/CRQAAAAAAAAJFAAAAAAAAAAAAAAAAPC/LhQAAAAAAAAuFAAAAAAAAAAAAAAAAPC/"
				],
				[
					3176,
					1,
					"left_delete",
					null,
					"AQAAAMMTAAAAAAAAwxMAAAAAAAABAAAAMQ",
					"AQAAAAAAAAABAAAAxBMAAAAAAADEEwAAAAAAAAAAAAAAwG1A"
				],
				[
					3177,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AQAAAMMTAAAAAAAAxBMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwxMAAAAAAADDEwAAAAAAAAAAAAAAAPC/"
				],
				[
					3179,
					1,
					"left_delete",
					null,
					"AQAAAOkTAAAAAAAA6RMAAAAAAAABAAAANQ",
					"AQAAAAAAAAABAAAA6hMAAAAAAADqEwAAAAAAAAAAAAAAwG1A"
				],
				[
					3180,
					1,
					"insert",
					{
						"characters": "6"
					},
					"AQAAAOkTAAAAAAAA6hMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6RMAAAAAAADpEwAAAAAAAAAAAAAAAPC/"
				],
				[
					3182,
					1,
					"left_delete",
					null,
					"AQAAAA8UAAAAAAAADxQAAAAAAAABAAAAOQ",
					"AQAAAAAAAAABAAAAEBQAAAAAAAAQFAAAAAAAAAAAAAAAwG1A"
				],
				[
					3183,
					1,
					"insert",
					{
						"characters": "10"
					},
					"AgAAAA8UAAAAAAAAEBQAAAAAAAAAAAAAEBQAAAAAAAARFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADxQAAAAAAAAPFAAAAAAAAAAAAAAAAPC/"
				],
				[
					3185,
					1,
					"left_delete",
					null,
					"AQAAADcUAAAAAAAANxQAAAAAAAABAAAAMw",
					"AQAAAAAAAAABAAAAOBQAAAAAAAA4FAAAAAAAAAAAAAAAoG5A"
				],
				[
					3186,
					1,
					"insert",
					{
						"characters": "4"
					},
					"AQAAADcUAAAAAAAAOBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANxQAAAAAAAA3FAAAAAAAAAAAAAAAAPC/"
				],
				[
					3196,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAADwUAAAAAAAAPRQAAAAAAAAAAAAAPRQAAAAAAABFFAAAAAAAAAAAAABFFAAAAAAAAEYUAAAAAAAAAAAAAEYUAAAAAAAAThQAAAAAAAAAAAAAPRQAAAAAAAA9FAAAAAAAAAgAAAAgICAgICAgIA",
					"AQAAAAAAAAABAAAAPBQAAAAAAAA8FAAAAAAAAP///////+9/"
				],
				[
					3197,
					1,
					"paste",
					null,
					"AQAAAEYUAAAAAAAA1xQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARhQAAAAAAABGFAAAAAAAAAAAAAAAAPC/"
				],
				[
					3203,
					1,
					"left_delete",
					null,
					"BAAAAM0UAAAAAAAAzRQAAAAAAAABAAAAMaYUAAAAAAAAphQAAAAAAAABAAAAMYAUAAAAAAAAgBQAAAAAAAABAAAAMVoUAAAAAAAAWhQAAAAAAAABAAAAMQ",
					"AQAAAAAAAAAEAAAAWxQAAAAAAABbFAAAAAAAAAAAAAAAAPC/gRQAAAAAAACBFAAAAAAAAAAAAAAAIGpApxQAAAAAAACnFAAAAAAAAAAAAAAAIGpAzhQAAAAAAADOFAAAAAAAAAAAAAAAIGpA"
				],
				[
					3207,
					1,
					"insert",
					{
						"characters": "2"
					},
					"BAAAAMoUAAAAAAAAyxQAAAAAAAAAAAAApBQAAAAAAAClFAAAAAAAAAAAAAB/FAAAAAAAAIAUAAAAAAAAAAAAAFoUAAAAAAAAWxQAAAAAAAAAAAAA",
					"AQAAAAAAAAAEAAAAWhQAAAAAAABaFAAAAAAAAAAAAAAAAPC/fxQAAAAAAAB/FAAAAAAAAAAAAAAAAPC/pBQAAAAAAACkFAAAAAAAAAAAAAAAAPC/yhQAAAAAAADKFAAAAAAAAAAAAAAAAPC/"
				],
				[
					3214,
					1,
					"left_delete",
					null,
					"AQAAAF4UAAAAAAAAXhQAAAAAAAABAAAAMg",
					"AQAAAAAAAAABAAAAXxQAAAAAAABfFAAAAAAAAAAAAAAAAPC/"
				],
				[
					3215,
					1,
					"insert",
					{
						"characters": "3"
					},
					"AQAAAF4UAAAAAAAAXxQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXhQAAAAAAABeFAAAAAAAAAAAAAAAAPC/"
				],
				[
					3217,
					1,
					"left_delete",
					null,
					"AQAAAIQUAAAAAAAAhBQAAAAAAAABAAAANg",
					"AQAAAAAAAAABAAAAhRQAAAAAAACFFAAAAAAAAAAAAAAAwG1A"
				],
				[
					3218,
					1,
					"insert",
					{
						"characters": "7"
					},
					"AQAAAIQUAAAAAAAAhRQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhBQAAAAAAACEFAAAAAAAAAAAAAAAAPC/"
				],
				[
					3221,
					1,
					"left_delete",
					null,
					"AQAAAKsUAAAAAAAAqxQAAAAAAAABAAAAMA",
					"AQAAAAAAAAABAAAArBQAAAAAAACsFAAAAAAAAAAAAAAAAPC/"
				],
				[
					3222,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAKsUAAAAAAAArBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqxQAAAAAAACrFAAAAAAAAAAAAAAAAPC/"
				],
				[
					3224,
					1,
					"left_delete",
					null,
					"AQAAANIUAAAAAAAA0hQAAAAAAAABAAAANA",
					"AQAAAAAAAAABAAAA0xQAAAAAAADTFAAAAAAAAAAAAAAAoG5A"
				],
				[
					3225,
					1,
					"insert",
					{
						"characters": "6"
					},
					"AQAAANIUAAAAAAAA0xQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0hQAAAAAAADSFAAAAAAAAAAAAAAAAPC/"
				],
				[
					3229,
					1,
					"left_delete",
					null,
					"AQAAANIUAAAAAAAA0hQAAAAAAAABAAAANg",
					"AQAAAAAAAAABAAAA0xQAAAAAAADTFAAAAAAAAAAAAAAAAPC/"
				],
				[
					3230,
					1,
					"insert",
					{
						"characters": "5"
					},
					"AQAAANIUAAAAAAAA0xQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0hQAAAAAAADSFAAAAAAAAAAAAAAAAPC/"
				],
				[
					3240,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAANcUAAAAAAAA2BQAAAAAAAAAAAAA2BQAAAAAAADgFAAAAAAAAAAAAADgFAAAAAAAAOEUAAAAAAAAAAAAAOEUAAAAAAAA6RQAAAAAAAAAAAAA2BQAAAAAAADYFAAAAAAAAAgAAAAgICAgICAgIA",
					"AQAAAAAAAAABAAAA1xQAAAAAAADXFAAAAAAAAP///////+9/"
				],
				[
					3241,
					1,
					"paste",
					null,
					"AQAAAOEUAAAAAAAAchUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4RQAAAAAAADhFAAAAAAAAAAAAAAAAPC/"
				],
				[
					3247,
					1,
					"left_delete",
					null,
					"BAAAAGgVAAAAAAAAaBUAAAAAAAABAAAAMkEVAAAAAAAAQRUAAAAAAAABAAAAMhsVAAAAAAAAGxUAAAAAAAABAAAAMvUUAAAAAAAA9RQAAAAAAAABAAAAMg",
					"AQAAAAAAAAAEAAAA9hQAAAAAAAD2FAAAAAAAAAAAAAAAAPC/HBUAAAAAAAAcFQAAAAAAAAAAAAAAIGpAQhUAAAAAAABCFQAAAAAAAAAAAAAAIGpAaRUAAAAAAABpFQAAAAAAAAAAAAAAIGpA"
				],
				[
					3248,
					1,
					"insert",
					{
						"characters": "33"
					},
					"CAAAAGUVAAAAAAAAZhUAAAAAAAAAAAAAPxUAAAAAAABAFQAAAAAAAAAAAAAaFQAAAAAAABsVAAAAAAAAAAAAAPUUAAAAAAAA9hQAAAAAAAAAAAAAaRUAAAAAAABqFQAAAAAAAAAAAABCFQAAAAAAAEMVAAAAAAAAAAAAABwVAAAAAAAAHRUAAAAAAAAAAAAA9hQAAAAAAAD3FAAAAAAAAAAAAAA",
					"AQAAAAAAAAAEAAAA9RQAAAAAAAD1FAAAAAAAAAAAAAAAAPC/GhUAAAAAAAAaFQAAAAAAAAAAAAAAAPC/PxUAAAAAAAA/FQAAAAAAAAAAAAAAAPC/ZRUAAAAAAABlFQAAAAAAAAAAAAAAAPC/"
				],
				[
					3253,
					1,
					"left_delete",
					null,
					"BAAAAGwVAAAAAAAAbBUAAAAAAAABAAAAM0QVAAAAAAAARBUAAAAAAAABAAAAMx0VAAAAAAAAHRUAAAAAAAABAAAAM/YUAAAAAAAA9hQAAAAAAAABAAAAMw",
					"AQAAAAAAAAAEAAAA9xQAAAAAAAD3FAAAAAAAAAAAAAAAAGtAHhUAAAAAAAAeFQAAAAAAAAAAAAAAAGtARRUAAAAAAABFFQAAAAAAAAAAAAAAAGtAbRUAAAAAAABtFQAAAAAAAAAAAAAAAGtA"
				],
				[
					3260,
					1,
					"left_delete",
					null,
					"AQAAAPkUAAAAAAAA+RQAAAAAAAABAAAAMw",
					"AQAAAAAAAAABAAAA+hQAAAAAAAD6FAAAAAAAAAAAAAAAAPC/"
				],
				[
					3261,
					1,
					"insert",
					{
						"characters": "4"
					},
					"AQAAAPkUAAAAAAAA+hQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+RQAAAAAAAD5FAAAAAAAAAAAAAAAAPC/"
				],
				[
					3263,
					1,
					"left_delete",
					null,
					"AQAAAB8VAAAAAAAAHxUAAAAAAAABAAAANw",
					"AQAAAAAAAAABAAAAIBUAAAAAAAAgFQAAAAAAAAAAAAAAwG1A"
				],
				[
					3264,
					1,
					"insert",
					{
						"characters": "8"
					},
					"AQAAAB8VAAAAAAAAIBUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHxUAAAAAAAAfFQAAAAAAAAAAAAAAAPC/"
				],
				[
					3267,
					1,
					"left_delete",
					null,
					"AQAAAEYVAAAAAAAARhUAAAAAAAABAAAAMQ",
					"AQAAAAAAAAABAAAARxUAAAAAAABHFQAAAAAAAAAAAAAAAPC/"
				],
				[
					3268,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AQAAAEYVAAAAAAAARxUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARhUAAAAAAABGFQAAAAAAAAAAAAAAAPC/"
				],
				[
					3270,
					1,
					"left_delete",
					null,
					"AQAAAG0VAAAAAAAAbRUAAAAAAAABAAAANQ",
					"AQAAAAAAAAABAAAAbhUAAAAAAABuFQAAAAAAAAAAAAAAoG5A"
				],
				[
					3271,
					1,
					"insert",
					{
						"characters": "6"
					},
					"AQAAAG0VAAAAAAAAbhUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbRUAAAAAAABtFQAAAAAAAAAAAAAAAPC/"
				],
				[
					3289,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAE0FAAAAAAAATgUAAAAAAAAAAAAATgUAAAAAAABPBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATQUAAAAAAABNBQAAAAAAAAAAAAAAAAAA"
				],
				[
					3291,
					1,
					"insert",
					{
						"characters": "VFW"
					},
					"AwAAAE4FAAAAAAAATwUAAAAAAAAAAAAATwUAAAAAAABQBQAAAAAAAAAAAABQBQAAAAAAAFEFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATgUAAAAAAABOBQAAAAAAAAAAAAAAAAAA"
				],
				[
					3292,
					1,
					"left_delete",
					null,
					"AQAAAFAFAAAAAAAAUAUAAAAAAAABAAAAVw",
					"AQAAAAAAAAABAAAAUQUAAAAAAABRBQAAAAAAAAAAAAAAAPC/"
				],
				[
					3293,
					1,
					"insert",
					{
						"characters": "F"
					},
					"AQAAAFAFAAAAAAAAUQUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUAUAAAAAAABQBQAAAAAAAAAAAAAAAPC/"
				],
				[
					3294,
					2,
					"left_delete",
					null,
					"AgAAAFAFAAAAAAAAUAUAAAAAAAABAAAARk8FAAAAAAAATwUAAAAAAAABAAAARg",
					"AQAAAAAAAAABAAAAUQUAAAAAAABRBQAAAAAAAAAAAAAAAPC/"
				],
				[
					3295,
					1,
					"insert",
					{
						"characters": "TF"
					},
					"AgAAAE8FAAAAAAAAUAUAAAAAAAAAAAAAUAUAAAAAAABRBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATwUAAAAAAABPBQAAAAAAAAAAAAAAAPC/"
				],
				[
					3298,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAE4FAAAAAAAAUgUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATgUAAAAAAABOBQAAAAAAAAAAAAAAAAAA"
				],
				[
					3300,
					2,
					"left_delete",
					null,
					"AgAAAFQFAAAAAAAAVAUAAAAAAAABAAAARlMFAAAAAAAAUwUAAAAAAAABAAAAVA",
					"AQAAAAAAAAABAAAAVQUAAAAAAABVBQAAAAAAAP///////+9/"
				],
				[
					3301,
					1,
					"insert",
					{
						"characters": "VecTF"
					},
					"BQAAAFMFAAAAAAAAVAUAAAAAAAAAAAAAVAUAAAAAAABVBQAAAAAAAAAAAABVBQAAAAAAAFYFAAAAAAAAAAAAAFYFAAAAAAAAVwUAAAAAAAAAAAAAVwUAAAAAAABYBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUwUAAAAAAABTBQAAAAAAAAAAAAAAAPC/"
				],
				[
					3302,
					6,
					"left_delete",
					null,
					"BgAAAFcFAAAAAAAAVwUAAAAAAAABAAAARlYFAAAAAAAAVgUAAAAAAAABAAAAVFUFAAAAAAAAVQUAAAAAAAABAAAAY1QFAAAAAAAAVAUAAAAAAAABAAAAZVMFAAAAAAAAUwUAAAAAAAABAAAAVlIFAAAAAAAAUgUAAAAAAAABAAAAVg",
					"AQAAAAAAAAABAAAAWAUAAAAAAABYBQAAAAAAAAAAAAAAAPC/"
				],
				[
					3303,
					1,
					"insert",
					{
						"characters": "VecTF"
					},
					"BQAAAFIFAAAAAAAAUwUAAAAAAAAAAAAAUwUAAAAAAABUBQAAAAAAAAAAAABUBQAAAAAAAFUFAAAAAAAAAAAAAFUFAAAAAAAAVgUAAAAAAAAAAAAAVgUAAAAAAABXBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUgUAAAAAAABSBQAAAAAAAAAAAAAAAPC/"
				],
				[
					3304,
					1,
					"left_delete",
					null,
					"AQAAAFYFAAAAAAAAVgUAAAAAAAABAAAARg",
					"AQAAAAAAAAABAAAAVwUAAAAAAABXBQAAAAAAAAAAAAAAAPC/"
				],
				[
					3305,
					1,
					"insert",
					{
						"characters": "hreeFloat"
					},
					"CQAAAFYFAAAAAAAAVwUAAAAAAAAAAAAAVwUAAAAAAABYBQAAAAAAAAAAAABYBQAAAAAAAFkFAAAAAAAAAAAAAFkFAAAAAAAAWgUAAAAAAAAAAAAAWgUAAAAAAABbBQAAAAAAAAAAAABbBQAAAAAAAFwFAAAAAAAAAAAAAFwFAAAAAAAAXQUAAAAAAAAAAAAAXQUAAAAAAABeBQAAAAAAAAAAAABeBQAAAAAAAF8FAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVgUAAAAAAABWBQAAAAAAAAAAAAAAAPC/"
				],
				[
					3309,
					1,
					"insert",
					{
						"characters": "Int"
					},
					"AwAAAFoFAAAAAAAAWwUAAAAAAAAAAAAAWwUAAAAAAABcBQAAAAAAAAAAAABcBQAAAAAAAF0FAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWgUAAAAAAABaBQAAAAAAAAAAAAAAAPC/"
				],
				[
					3310,
					1,
					"cut",
					null,
					"AQAAAE4FAAAAAAAATgUAAAAAAAAVAAAAICAgIFZlY1RocmVlSW50RmxvYXQK",
					"AQAAAAAAAAABAAAAXQUAAAAAAABdBQAAAAAAAAAAAAAAAPC/"
				],
				[
					3311,
					1,
					"left_delete",
					null,
					"AQAAAE0FAAAAAAAATQUAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAATgUAAAAAAABOBQAAAAAAAAAAAAAAAPC/"
				],
				[
					3327,
					1,
					"insert",
					{
						"characters": "pub"
					},
					"AwAAADEAAAAAAAAAMgAAAAAAAAAAAAAAMgAAAAAAAAAzAAAAAAAAAAAAAAAzAAAAAAAAADQAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAMQAAAAAAAAAxAAAAAAAAAAAAAAAAAAAAAQAAAAEAAADiAAAAAAAAAOIAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3328,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADQAAAAAAAAANQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAANAAAAAAAAAA0AAAAAAAAAAAAAAAAAPC/AQAAAAEAAADlAAAAAAAAAOUAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3337,
					1,
					"insert",
					{
						"characters": "pub"
					},
					"AwAAAOsAAAAAAAAA7AAAAAAAAAAAAAAA7AAAAAAAAADtAAAAAAAAAAAAAADtAAAAAAAAAO4AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA6wAAAAAAAADrAAAAAAAAAAAAAAAAAD1AAQAAAAEAAADmAAAAAAAAAOYAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3338,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAO4AAAAAAAAA7wAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA7gAAAAAAAADuAAAAAAAAAAAAAAAAAPC/AQAAAAEAAADmAAAAAAAAAOYAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3341,
					1,
					"insert",
					{
						"characters": "pub"
					},
					"AwAAAIMAAAAAAAAAhAAAAAAAAAAAAAAAhAAAAAAAAACFAAAAAAAAAAAAAACFAAAAAAAAAIYAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAgwAAAAAAAACDAAAAAAAAAAAAAAAAAD1AAQAAAAEAAADmAAAAAAAAAOYAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3342,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIYAAAAAAAAAhwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAhgAAAAAAAACGAAAAAAAAAAAAAAAAAPC/AQAAAAEAAADpAAAAAAAAAOkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3347,
					1,
					"insert",
					{
						"characters": "pub"
					},
					"AwAAANMBAAAAAAAA1AEAAAAAAAAAAAAA1AEAAAAAAADVAQAAAAAAAAAAAADVAQAAAAAAANYBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0wEAAAAAAADTAQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3348,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANYBAAAAAAAA1wEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA1gEAAAAAAADWAQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3353,
					1,
					"insert",
					{
						"characters": "pub"
					},
					"AwAAAAIDAAAAAAAAAwMAAAAAAAAAAAAAAwMAAAAAAAAEAwAAAAAAAAAAAAAEAwAAAAAAAAUDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAgMAAAAAAAACAwAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3354,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAUDAAAAAAAABgMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAABQMAAAAAAAAFAwAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3357,
					1,
					"insert",
					{
						"characters": "pub"
					},
					"AwAAABMEAAAAAAAAFAQAAAAAAAAAAAAAFAQAAAAAAAAVBAAAAAAAAAAAAAAVBAAAAAAAABYEAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAEwQAAAAAAAATBAAAAAAAAAAAAAAAAD1AAQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3358,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABYEAAAAAAAAFwQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAFgQAAAAAAAAWBAAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3361,
					1,
					"insert",
					{
						"characters": "pub"
					},
					"AwAAAGoFAAAAAAAAawUAAAAAAAAAAAAAawUAAAAAAABsBQAAAAAAAAAAAABsBQAAAAAAAG0FAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAagUAAAAAAABqBQAAAAAAAAAAAAAAAD1AAQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3362,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAG0FAAAAAAAAbgUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAbQUAAAAAAABtBQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3366,
					1,
					"insert",
					{
						"characters": "pub"
					},
					"AwAAAMEGAAAAAAAAwgYAAAAAAAAAAAAAwgYAAAAAAADDBgAAAAAAAAAAAADDBgAAAAAAAMQGAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAwQYAAAAAAADBBgAAAAAAAAAAAAAAAD1AAQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3367,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMQGAAAAAAAAxQYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAxAYAAAAAAADEBgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3376,
					1,
					"insert",
					{
						"characters": "pub"
					},
					"AwAAABgIAAAAAAAAGQgAAAAAAAAAAAAAGQgAAAAAAAAaCAAAAAAAAAAAAAAaCAAAAAAAABsIAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAGAgAAAAAAAAYCAAAAAAAAAAAAAAAAD1AAQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3377,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABsIAAAAAAAAHAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAGwgAAAAAAAAbCAAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3385,
					1,
					"insert",
					{
						"characters": "pub"
					},
					"AwAAALcJAAAAAAAAuAkAAAAAAAAAAAAAuAkAAAAAAAC5CQAAAAAAAAAAAAC5CQAAAAAAALoJAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAtwkAAAAAAAC3CQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3386,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALoJAAAAAAAAuwkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAugkAAAAAAAC6CQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3393,
					1,
					"insert",
					{
						"characters": "pub"
					},
					"AwAAAD0KAAAAAAAAPgoAAAAAAAAAAAAAPgoAAAAAAAA/CgAAAAAAAAAAAAA/CgAAAAAAAEAKAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAPQoAAAAAAAA9CgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3394,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEAKAAAAAAAAQQoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQAoAAAAAAABACgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3395,
					4,
					"left_delete",
					null,
					"BAAAAEAKAAAAAAAAQAoAAAAAAAABAAAAID8KAAAAAAAAPwoAAAAAAAABAAAAYj4KAAAAAAAAPgoAAAAAAAABAAAAdT0KAAAAAAAAPQoAAAAAAAABAAAAcA",
					"AgAAAAAAAAABAAAAQQoAAAAAAABBCgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3397,
					1,
					"insert",
					{
						"characters": "pub"
					},
					"AwAAADwKAAAAAAAAPQoAAAAAAAAAAAAAPQoAAAAAAAA+CgAAAAAAAAAAAAA+CgAAAAAAAD8KAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAPAoAAAAAAAA8CgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3398,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAD8KAAAAAAAAQAoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAPwoAAAAAAAA/CgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3401,
					1,
					"insert",
					{
						"characters": "pub"
					},
					"AwAAALsKAAAAAAAAvAoAAAAAAAAAAAAAvAoAAAAAAAC9CgAAAAAAAAAAAAC9CgAAAAAAAL4KAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAuwoAAAAAAAC7CgAAAAAAAAAAAAAAAD1AAQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3402,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAL4KAAAAAAAAvwoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAvgoAAAAAAAC+CgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3427,
					2,
					"left_delete",
					null,
					"AgAAAOsBAAAAAAAA6wEAAAAAAAAKAAAAbXV0IHNlbGYsIOoBAAAAAAAA6gEAAAAAAAABAAAAJg",
					"AgAAAAAAAAABAAAA9QEAAAAAAADrAQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3435,
					2,
					"left_delete",
					null,
					"AgAAAAkDAAAAAAAACQMAAAAAAAAKAAAAbXV0IHNlbGYsIAgDAAAAAAAACAMAAAAAAAABAAAAJg",
					"AgAAAAAAAAABAAAAEwMAAAAAAAAJAwAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3445,
					2,
					"left_delete",
					null,
					"AgAAABQEAAAAAAAAFAQAAAAAAAAKAAAAbXV0IHNlbGYsIBMEAAAAAAAAEwQAAAAAAAABAAAAJg",
					"AgAAAAAAAAABAAAAHgQAAAAAAAAUBAAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3457,
					1,
					"left_delete",
					null,
					"BgAAAGQFAAAAAAAAZAUAAAAAAAAGAAAAc2VsZiwgYwUAAAAAAABjBQAAAAAAAAEAAAAgYgUAAAAAAABiBQAAAAAAAAEAAAB0YQUAAAAAAABhBQAAAAAAAAEAAAB1YAUAAAAAAABgBQAAAAAAAAEAAABtXwUAAAAAAABfBQAAAAAAAAEAAAAm",
					"AgAAAAAAAAABAAAAagUAAAAAAABkBQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3464,
					1,
					"left_delete",
					null,
					"AgAAAKwGAAAAAAAArAYAAAAAAAAJAAAAbXV0IHNlbGYsqwYAAAAAAACrBgAAAAAAAAEAAAAm",
					"AgAAAAAAAAABAAAAtQYAAAAAAACsBgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3467,
					1,
					"left_delete",
					null,
					"AQAAAKsGAAAAAAAAqwYAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAArAYAAAAAAACsBgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3485,
					1,
					"insert",
					{
						"characters": "\n\npub"
					},
					"CAAAAG8LAAAAAAAAcAsAAAAAAAAAAAAAcAsAAAAAAAB0CwAAAAAAAAAAAAB0CwAAAAAAAHULAAAAAAAAAAAAAHULAAAAAAAAeQsAAAAAAAAAAAAAcAsAAAAAAABwCwAAAAAAAAQAAAAgICAgdQsAAAAAAAB2CwAAAAAAAAAAAAB2CwAAAAAAAHcLAAAAAAAAAAAAAHcLAAAAAAAAeAsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAbwsAAAAAAABvCwAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3486,
					1,
					"insert",
					{
						"characters": " fn"
					},
					"AwAAAHgLAAAAAAAAeQsAAAAAAAAAAAAAeQsAAAAAAAB6CwAAAAAAAAAAAAB6CwAAAAAAAHsLAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAeAsAAAAAAAB4CwAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3487,
					1,
					"insert",
					{
						"characters": " ta"
					},
					"AwAAAHsLAAAAAAAAfAsAAAAAAAAAAAAAfAsAAAAAAAB9CwAAAAAAAAAAAAB9CwAAAAAAAH4LAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAewsAAAAAAAB7CwAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3488,
					1,
					"left_delete",
					null,
					"AQAAAH0LAAAAAAAAfQsAAAAAAAABAAAAYQ",
					"AgAAAAAAAAABAAAAfgsAAAAAAAB+CwAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3489,
					1,
					"insert",
					{
						"characters": "ranslate"
					},
					"CAAAAH0LAAAAAAAAfgsAAAAAAAAAAAAAfgsAAAAAAAB/CwAAAAAAAAAAAAB/CwAAAAAAAIALAAAAAAAAAAAAAIALAAAAAAAAgQsAAAAAAAAAAAAAgQsAAAAAAACCCwAAAAAAAAAAAACCCwAAAAAAAIMLAAAAAAAAAAAAAIMLAAAAAAAAhAsAAAAAAAAAAAAAhAsAAAAAAACFCwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAfQsAAAAAAAB9CwAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3491,
					1,
					"insert",
					{
						"characters": "translate"
					},
					"CgAAAHwLAAAAAAAAfQsAAAAAAAAAAAAAfQsAAAAAAAB9CwAAAAAAAAkAAAB0cmFuc2xhdGV9CwAAAAAAAH4LAAAAAAAAAAAAAH4LAAAAAAAAfwsAAAAAAAAAAAAAfwsAAAAAAACACwAAAAAAAAAAAACACwAAAAAAAIELAAAAAAAAAAAAAIELAAAAAAAAggsAAAAAAAAAAAAAggsAAAAAAACDCwAAAAAAAAAAAACDCwAAAAAAAIQLAAAAAAAAAAAAAIQLAAAAAAAAhQsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAhQsAAAAAAAB8CwAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3492,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAIULAAAAAAAAhwsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAhQsAAAAAAACFCwAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3493,
					1,
					"insert",
					{
						"characters": "&s"
					},
					"AgAAAIYLAAAAAAAAhwsAAAAAAAAAAAAAhwsAAAAAAACICwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAhgsAAAAAAACGCwAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3494,
					1,
					"left_delete",
					null,
					"AQAAAIcLAAAAAAAAhwsAAAAAAAABAAAAcw",
					"AgAAAAAAAAABAAAAiAsAAAAAAACICwAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3495,
					1,
					"insert",
					{
						"characters": "mut"
					},
					"AwAAAIcLAAAAAAAAiAsAAAAAAAAAAAAAiAsAAAAAAACJCwAAAAAAAAAAAACJCwAAAAAAAIoLAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAhwsAAAAAAACHCwAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3496,
					1,
					"insert",
					{
						"characters": " self,"
					},
					"BgAAAIoLAAAAAAAAiwsAAAAAAAAAAAAAiwsAAAAAAACMCwAAAAAAAAAAAACMCwAAAAAAAI0LAAAAAAAAAAAAAI0LAAAAAAAAjgsAAAAAAAAAAAAAjgsAAAAAAACPCwAAAAAAAAAAAACPCwAAAAAAAJALAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAigsAAAAAAACKCwAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3497,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJALAAAAAAAAkQsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAkAsAAAAAAACQCwAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3498,
					1,
					"insert",
					{
						"characters": "translation:"
					},
					"DAAAAJELAAAAAAAAkgsAAAAAAAAAAAAAkgsAAAAAAACTCwAAAAAAAAAAAACTCwAAAAAAAJQLAAAAAAAAAAAAAJQLAAAAAAAAlQsAAAAAAAAAAAAAlQsAAAAAAACWCwAAAAAAAAAAAACWCwAAAAAAAJcLAAAAAAAAAAAAAJcLAAAAAAAAmAsAAAAAAAAAAAAAmAsAAAAAAACZCwAAAAAAAAAAAACZCwAAAAAAAJoLAAAAAAAAAAAAAJoLAAAAAAAAmwsAAAAAAAAAAAAAmwsAAAAAAACcCwAAAAAAAAAAAACcCwAAAAAAAJ0LAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAkQsAAAAAAACRCwAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3499,
					1,
					"insert",
					{
						"characters": " Vec"
					},
					"BAAAAJ0LAAAAAAAAngsAAAAAAAAAAAAAngsAAAAAAACfCwAAAAAAAAAAAACfCwAAAAAAAKALAAAAAAAAAAAAAKALAAAAAAAAoQsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAnQsAAAAAAACdCwAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3500,
					1,
					"insert_completion",
					{
						"completion": "VecThreeFloat",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "VecThreeFloat"
					},
					"AgAAAJ4LAAAAAAAAngsAAAAAAAADAAAAVmVjngsAAAAAAACrCwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAoQsAAAAAAAChCwAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3502,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKwLAAAAAAAArQsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAArAsAAAAAAACsCwAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3503,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAK0LAAAAAAAArwsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAArQsAAAAAAACtCwAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3504,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAK4LAAAAAAAArwsAAAAAAAAAAAAArwsAAAAAAACzCwAAAAAAAAAAAACzCwAAAAAAALQLAAAAAAAAAAAAALQLAAAAAAAAuAsAAAAAAAAAAAAArwsAAAAAAACvCwAAAAAAAAQAAAAgICAgrwsAAAAAAAC3CwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAArgsAAAAAAACuCwAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3505,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAALcLAAAAAAAAuAsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAtwsAAAAAAAC3CwAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3506,
					1,
					"left_delete",
					null,
					"AQAAALcLAAAAAAAAtwsAAAAAAAABAAAAcw",
					"AgAAAAAAAAABAAAAuAsAAAAAAAC4CwAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3507,
					2,
					"rust_fmt_format_buffer",
					null,
					"AQAAAK4LAAAAAAAArgsAAAAAAAAOAAAACiAgICAgICAgCiAgICA",
					"AgAAAAAAAAABAAAAtwsAAAAAAAC3CwAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3516,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAK4LAAAAAAAArwsAAAAAAAAAAAAArwsAAAAAAACzCwAAAAAAAAAAAACzCwAAAAAAALQLAAAAAAAAAAAAALQLAAAAAAAAuAsAAAAAAAAAAAAArwsAAAAAAACvCwAAAAAAAAQAAAAgICAgrwsAAAAAAAC3CwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAArgsAAAAAAACuCwAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3517,
					2,
					"rust_fmt_format_buffer",
					null,
					"AQAAAK4LAAAAAAAArgsAAAAAAAAOAAAACiAgICAgICAgCiAgICA",
					"AgAAAAAAAAABAAAAtwsAAAAAAAC3CwAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3518,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAK4LAAAAAAAArwsAAAAAAAAAAAAArwsAAAAAAACzCwAAAAAAAAAAAACzCwAAAAAAALQLAAAAAAAAAAAAALQLAAAAAAAAuAsAAAAAAAAAAAAArwsAAAAAAACvCwAAAAAAAAQAAAAgICAgrwsAAAAAAAC3CwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAArgsAAAAAAACuCwAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3519,
					1,
					"insert",
					{
						"characters": "let"
					},
					"AwAAALcLAAAAAAAAuAsAAAAAAAAAAAAAuAsAAAAAAAC5CwAAAAAAAAAAAAC5CwAAAAAAALoLAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAtwsAAAAAAAC3CwAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3520,
					1,
					"insert",
					{
						"characters": " translat"
					},
					"CQAAALoLAAAAAAAAuwsAAAAAAAAAAAAAuwsAAAAAAAC8CwAAAAAAAAAAAAC8CwAAAAAAAL0LAAAAAAAAAAAAAL0LAAAAAAAAvgsAAAAAAAAAAAAAvgsAAAAAAAC/CwAAAAAAAAAAAAC/CwAAAAAAAMALAAAAAAAAAAAAAMALAAAAAAAAwQsAAAAAAAAAAAAAwQsAAAAAAADCCwAAAAAAAAAAAADCCwAAAAAAAMMLAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAugsAAAAAAAC6CwAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3521,
					1,
					"insert",
					{
						"characters": "ion"
					},
					"AwAAAMMLAAAAAAAAxAsAAAAAAAAAAAAAxAsAAAAAAADFCwAAAAAAAAAAAADFCwAAAAAAAMYLAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAwwsAAAAAAADDCwAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3523,
					1,
					"insert",
					{
						"characters": "trans"
					},
					"BgAAALsLAAAAAAAAvAsAAAAAAAAAAAAAvAsAAAAAAAC8CwAAAAAAAAsAAAB0cmFuc2xhdGlvbrwLAAAAAAAAvQsAAAAAAAAAAAAAvQsAAAAAAAC+CwAAAAAAAAAAAAC+CwAAAAAAAL8LAAAAAAAAAAAAAL8LAAAAAAAAwAsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAxgsAAAAAAAC7CwAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3524,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAMALAAAAAAAAwQsAAAAAAAAAAAAAwQsAAAAAAADCCwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAwAsAAAAAAADACwAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3525,
					1,
					"insert",
					{
						"characters": " Matrix"
					},
					"BwAAAMILAAAAAAAAwwsAAAAAAAAAAAAAwwsAAAAAAADECwAAAAAAAAAAAADECwAAAAAAAMULAAAAAAAAAAAAAMULAAAAAAAAxgsAAAAAAAAAAAAAxgsAAAAAAADHCwAAAAAAAAAAAADHCwAAAAAAAMgLAAAAAAAAAAAAAMgLAAAAAAAAyQsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAwgsAAAAAAADCCwAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3526,
					1,
					"insert_completion",
					{
						"completion": "MatrixFourFour",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "MatrixFourFour"
					},
					"AgAAAMMLAAAAAAAAwwsAAAAAAAAGAAAATWF0cml4wwsAAAAAAADRCwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAyQsAAAAAAADJCwAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3527,
					1,
					"insert",
					{
						"characters": "::new_trans"
					},
					"CwAAANELAAAAAAAA0gsAAAAAAAAAAAAA0gsAAAAAAADTCwAAAAAAAAAAAADTCwAAAAAAANQLAAAAAAAAAAAAANQLAAAAAAAA1QsAAAAAAAAAAAAA1QsAAAAAAADWCwAAAAAAAAAAAADWCwAAAAAAANcLAAAAAAAAAAAAANcLAAAAAAAA2AsAAAAAAAAAAAAA2AsAAAAAAADZCwAAAAAAAAAAAADZCwAAAAAAANoLAAAAAAAAAAAAANoLAAAAAAAA2wsAAAAAAAAAAAAA2wsAAAAAAADcCwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0QsAAAAAAADRCwAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3528,
					1,
					"insert_completion",
					{
						"completion": "new_translation",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "new_translation"
					},
					"AgAAANMLAAAAAAAA0wsAAAAAAAAJAAAAbmV3X3RyYW5z0wsAAAAAAADiCwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA3AsAAAAAAADcCwAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3529,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAOILAAAAAAAA5AsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA4gsAAAAAAADiCwAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3530,
					1,
					"insert",
					{
						"characters": "transation"
					},
					"CgAAAOMLAAAAAAAA5AsAAAAAAAAAAAAA5AsAAAAAAADlCwAAAAAAAAAAAADlCwAAAAAAAOYLAAAAAAAAAAAAAOYLAAAAAAAA5wsAAAAAAAAAAAAA5wsAAAAAAADoCwAAAAAAAAAAAADoCwAAAAAAAOkLAAAAAAAAAAAAAOkLAAAAAAAA6gsAAAAAAAAAAAAA6gsAAAAAAADrCwAAAAAAAAAAAADrCwAAAAAAAOwLAAAAAAAAAAAAAOwLAAAAAAAA7QsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA4wsAAAAAAADjCwAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3532,
					1,
					"insert",
					{
						"characters": ";s"
					},
					"AgAAAO4LAAAAAAAA7wsAAAAAAAAAAAAA7wsAAAAAAADwCwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA7gsAAAAAAADuCwAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3535,
					1,
					"left_delete",
					null,
					"AQAAAO8LAAAAAAAA7wsAAAAAAAABAAAAcw",
					"AgAAAAAAAAABAAAA8AsAAAAAAADwCwAAAAAAAP///////+9/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3541,
					1,
					"insert",
					{
						"characters": "translation"
					},
					"DAAAAOMLAAAAAAAA5AsAAAAAAAAAAAAA5AsAAAAAAADkCwAAAAAAAAoAAAB0cmFuc2F0aW9u5AsAAAAAAADlCwAAAAAAAAAAAADlCwAAAAAAAOYLAAAAAAAAAAAAAOYLAAAAAAAA5wsAAAAAAAAAAAAA5wsAAAAAAADoCwAAAAAAAAAAAADoCwAAAAAAAOkLAAAAAAAAAAAAAOkLAAAAAAAA6gsAAAAAAAAAAAAA6gsAAAAAAADrCwAAAAAAAAAAAADrCwAAAAAAAOwLAAAAAAAAAAAAAOwLAAAAAAAA7QsAAAAAAAAAAAAA7QsAAAAAAADuCwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA7QsAAAAAAADjCwAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3546,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAPALAAAAAAAA8QsAAAAAAAAAAAAA8QsAAAAAAAD5CwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA8AsAAAAAAADwCwAAAAAAAP///////+9/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3547,
					1,
					"insert",
					{
						"characters": "let"
					},
					"AwAAAPkLAAAAAAAA+gsAAAAAAAAAAAAA+gsAAAAAAAD7CwAAAAAAAAAAAAD7CwAAAAAAAPwLAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA+QsAAAAAAAD5CwAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3548,
					1,
					"insert",
					{
						"characters": " self"
					},
					"BQAAAPwLAAAAAAAA/QsAAAAAAAAAAAAA/QsAAAAAAAD+CwAAAAAAAAAAAAD+CwAAAAAAAP8LAAAAAAAAAAAAAP8LAAAAAAAAAAwAAAAAAAAAAAAAAAwAAAAAAAABDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA/AsAAAAAAAD8CwAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3557,
					4,
					"left_delete",
					null,
					"BAAAAAAMAAAAAAAAAAwAAAAAAAABAAAAZv8LAAAAAAAA/wsAAAAAAAABAAAAbP4LAAAAAAAA/gsAAAAAAAABAAAAZf0LAAAAAAAA/QsAAAAAAAABAAAAcw",
					"AgAAAAAAAAABAAAAAQwAAAAAAAABDAAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3558,
					1,
					"insert",
					{
						"characters": "result"
					},
					"BgAAAP0LAAAAAAAA/gsAAAAAAAAAAAAA/gsAAAAAAAD/CwAAAAAAAAAAAAD/CwAAAAAAAAAMAAAAAAAAAAAAAAAMAAAAAAAAAQwAAAAAAAAAAAAAAQwAAAAAAAACDAAAAAAAAAAAAAACDAAAAAAAAAMMAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA/QsAAAAAAAD9CwAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3559,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAAMMAAAAAAAABAwAAAAAAAAAAAAABAwAAAAAAAAFDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAwwAAAAAAAADDAAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3560,
					1,
					"insert",
					{
						"characters": " Matrix::mul"
					},
					"DAAAAAUMAAAAAAAABgwAAAAAAAAAAAAABgwAAAAAAAAHDAAAAAAAAAAAAAAHDAAAAAAAAAgMAAAAAAAAAAAAAAgMAAAAAAAACQwAAAAAAAAAAAAACQwAAAAAAAAKDAAAAAAAAAAAAAAKDAAAAAAAAAsMAAAAAAAAAAAAAAsMAAAAAAAADAwAAAAAAAAAAAAADAwAAAAAAAANDAAAAAAAAAAAAAANDAAAAAAAAA4MAAAAAAAAAAAAAA4MAAAAAAAADwwAAAAAAAAAAAAADwwAAAAAAAAQDAAAAAAAAAAAAAAQDAAAAAAAABEMAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAABQwAAAAAAAAFDAAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3561,
					1,
					"insert",
					{
						"characters": "tiply"
					},
					"BQAAABEMAAAAAAAAEgwAAAAAAAAAAAAAEgwAAAAAAAATDAAAAAAAAAAAAAATDAAAAAAAABQMAAAAAAAAAAAAABQMAAAAAAAAFQwAAAAAAAAAAAAAFQwAAAAAAAAWDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAEQwAAAAAAAARDAAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3562,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAABYMAAAAAAAAGAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAFgwAAAAAAAAWDAAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3563,
					1,
					"insert",
					{
						"characters": "&"
					},
					"AQAAABcMAAAAAAAAGAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAFwwAAAAAAAAXDAAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3564,
					1,
					"left_delete",
					null,
					"AQAAABcMAAAAAAAAFwwAAAAAAAABAAAAJg",
					"AgAAAAAAAAABAAAAGAwAAAAAAAAYDAAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3565,
					1,
					"insert",
					{
						"characters": "self,"
					},
					"BQAAABcMAAAAAAAAGAwAAAAAAAAAAAAAGAwAAAAAAAAZDAAAAAAAAAAAAAAZDAAAAAAAABoMAAAAAAAAAAAAABoMAAAAAAAAGwwAAAAAAAAAAAAAGwwAAAAAAAAcDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAFwwAAAAAAAAXDAAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3566,
					1,
					"insert",
					{
						"characters": " &trans"
					},
					"BwAAABwMAAAAAAAAHQwAAAAAAAAAAAAAHQwAAAAAAAAeDAAAAAAAAAAAAAAeDAAAAAAAAB8MAAAAAAAAAAAAAB8MAAAAAAAAIAwAAAAAAAAAAAAAIAwAAAAAAAAhDAAAAAAAAAAAAAAhDAAAAAAAACIMAAAAAAAAAAAAACIMAAAAAAAAIwwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAHAwAAAAAAAAcDAAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3568,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAACQMAAAAAAAAJQwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAJAwAAAAAAAAkDAAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3586,
					1,
					"insert",
					{
						"characters": "fOURfOUR"
					},
					"CAAAAAwMAAAAAAAADQwAAAAAAAAAAAAADQwAAAAAAAAODAAAAAAAAAAAAAAODAAAAAAAAA8MAAAAAAAAAAAAAA8MAAAAAAAAEAwAAAAAAAAAAAAAEAwAAAAAAAARDAAAAAAAAAAAAAARDAAAAAAAABIMAAAAAAAAAAAAABIMAAAAAAAAEwwAAAAAAAAAAAAAEwwAAAAAAAAUDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAADAwAAAAAAAAMDAAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3587,
					8,
					"left_delete",
					null,
					"CAAAABMMAAAAAAAAEwwAAAAAAAABAAAAUhIMAAAAAAAAEgwAAAAAAAABAAAAVREMAAAAAAAAEQwAAAAAAAABAAAATxAMAAAAAAAAEAwAAAAAAAABAAAAZg8MAAAAAAAADwwAAAAAAAABAAAAUg4MAAAAAAAADgwAAAAAAAABAAAAVQ0MAAAAAAAADQwAAAAAAAABAAAATwwMAAAAAAAADAwAAAAAAAABAAAAZg",
					"AgAAAAAAAAABAAAAFAwAAAAAAAAUDAAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3588,
					1,
					"insert",
					{
						"characters": "f"
					},
					"AQAAAAwMAAAAAAAADQwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAADAwAAAAAAAAMDAAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3589,
					1,
					"left_delete",
					null,
					"AQAAAAwMAAAAAAAADAwAAAAAAAABAAAAZg",
					"AgAAAAAAAAABAAAADQwAAAAAAAANDAAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3590,
					1,
					"insert",
					{
						"characters": "FourFour"
					},
					"CAAAAAwMAAAAAAAADQwAAAAAAAAAAAAADQwAAAAAAAAODAAAAAAAAAAAAAAODAAAAAAAAA8MAAAAAAAAAAAAAA8MAAAAAAAAEAwAAAAAAAAAAAAAEAwAAAAAAAARDAAAAAAAAAAAAAARDAAAAAAAABIMAAAAAAAAAAAAABIMAAAAAAAAEwwAAAAAAAAAAAAAEwwAAAAAAAAUDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAADAwAAAAAAAAMDAAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3594,
					1,
					"insert",
					{
						"characters": "\nfor"
					},
					"BQAAAC0MAAAAAAAALgwAAAAAAAAAAAAALgwAAAAAAAA2DAAAAAAAAAAAAAA2DAAAAAAAADcMAAAAAAAAAAAAADcMAAAAAAAAOAwAAAAAAAAAAAAAOAwAAAAAAAA5DAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAALQwAAAAAAAAtDAAAAAAAAP///////+9/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3595,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADkMAAAAAAAAOgwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAOQwAAAAAAAA5DAAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3596,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAADoMAAAAAAAAPAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAOgwAAAAAAAA6DAAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3597,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAADoMAAAAAAAAOgwAAAAAAAABAAAAKDoMAAAAAAAAOgwAAAAAAAABAAAAKQ",
					"AgAAAAAAAAABAAAAOwwAAAAAAAA7DAAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3598,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADoMAAAAAAAAOwwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAOgwAAAAAAAA6DAAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3599,
					1,
					"left_delete",
					null,
					"AQAAADoMAAAAAAAAOgwAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAOwwAAAAAAAA7DAAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3600,
					1,
					"insert",
					{
						"characters": "x"
					},
					"AQAAADoMAAAAAAAAOwwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAOgwAAAAAAAA6DAAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3601,
					1,
					"left_delete",
					null,
					"AQAAADoMAAAAAAAAOgwAAAAAAAABAAAAeA",
					"AgAAAAAAAAABAAAAOwwAAAAAAAA7DAAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3602,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAADoMAAAAAAAAOwwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAOgwAAAAAAAA6DAAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3603,
					1,
					"left_delete",
					null,
					"AQAAADoMAAAAAAAAOgwAAAAAAAABAAAAZQ",
					"AgAAAAAAAAABAAAAOwwAAAAAAAA7DAAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3604,
					1,
					"insert",
					{
						"characters": "ach"
					},
					"AwAAADoMAAAAAAAAOwwAAAAAAAAAAAAAOwwAAAAAAAA8DAAAAAAAAAAAAAA8DAAAAAAAAD0MAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAOgwAAAAAAAA6DAAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3605,
					4,
					"left_delete",
					null,
					"BAAAADwMAAAAAAAAPAwAAAAAAAABAAAAaDsMAAAAAAAAOwwAAAAAAAABAAAAYzoMAAAAAAAAOgwAAAAAAAABAAAAYTkMAAAAAAAAOQwAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAPQwAAAAAAAA9DAAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3606,
					1,
					"insert",
					{
						"characters": "each"
					},
					"BAAAADkMAAAAAAAAOgwAAAAAAAAAAAAAOgwAAAAAAAA7DAAAAAAAAAAAAAA7DAAAAAAAADwMAAAAAAAAAAAAADwMAAAAAAAAPQwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAOQwAAAAAAAA5DAAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3607,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAD0MAAAAAAAAPgwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAPQwAAAAAAAA9DAAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3608,
					1,
					"cut",
					null,
					"AQAAAC4MAAAAAAAALgwAAAAAAAARAAAAICAgICAgICBmb3JlYWNoIAo",
					"AgAAAAAAAAABAAAAPgwAAAAAAAA+DAAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3611,
					1,
					"insert",
					{
						"characters": "\nfor"
					},
					"BQAAAC0MAAAAAAAALgwAAAAAAAAAAAAALgwAAAAAAAA2DAAAAAAAAAAAAAA2DAAAAAAAADcMAAAAAAAAAAAAADcMAAAAAAAAOAwAAAAAAAAAAAAAOAwAAAAAAAA5DAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAALQwAAAAAAAAtDAAAAAAAAP///////+9/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3612,
					1,
					"insert",
					{
						"characters": " x"
					},
					"AgAAADkMAAAAAAAAOgwAAAAAAAAAAAAAOgwAAAAAAAA7DAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAOQwAAAAAAAA5DAAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3613,
					1,
					"insert",
					{
						"characters": " in"
					},
					"AwAAADsMAAAAAAAAPAwAAAAAAAAAAAAAPAwAAAAAAAA9DAAAAAAAAAAAAAA9DAAAAAAAAD4MAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAOwwAAAAAAAA7DAAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3614,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAD4MAAAAAAAAPwwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAPgwAAAAAAAA+DAAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3615,
					4,
					"left_delete",
					null,
					"BAAAAD4MAAAAAAAAPgwAAAAAAAABAAAAID0MAAAAAAAAPQwAAAAAAAABAAAAbjwMAAAAAAAAPAwAAAAAAAABAAAAaTsMAAAAAAAAOwwAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAPwwAAAAAAAA/DAAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3616,
					1,
					"insert",
					{
						"characters": " in"
					},
					"AwAAADsMAAAAAAAAPAwAAAAAAAAAAAAAPAwAAAAAAAA9DAAAAAAAAAAAAAA9DAAAAAAAAD4MAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAOwwAAAAAAAA7DAAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3617,
					1,
					"insert",
					{
						"characters": " 0.."
					},
					"BAAAAD4MAAAAAAAAPwwAAAAAAAAAAAAAPwwAAAAAAABADAAAAAAAAAAAAABADAAAAAAAAEEMAAAAAAAAAAAAAEEMAAAAAAAAQgwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAPgwAAAAAAAA+DAAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3618,
					1,
					"insert",
					{
						"characters": "self.eleen"
					},
					"CgAAAEIMAAAAAAAAQwwAAAAAAAAAAAAAQwwAAAAAAABEDAAAAAAAAAAAAABEDAAAAAAAAEUMAAAAAAAAAAAAAEUMAAAAAAAARgwAAAAAAAAAAAAARgwAAAAAAABHDAAAAAAAAAAAAABHDAAAAAAAAEgMAAAAAAAAAAAAAEgMAAAAAAAASQwAAAAAAAAAAAAASQwAAAAAAABKDAAAAAAAAAAAAABKDAAAAAAAAEsMAAAAAAAAAAAAAEsMAAAAAAAATAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQgwAAAAAAABCDAAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3619,
					1,
					"insert_completion",
					{
						"completion": "elements",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "elements"
					},
					"AgAAAEcMAAAAAAAARwwAAAAAAAAFAAAAZWxlZW5HDAAAAAAAAE8MAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAATAwAAAAAAABMDAAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3620,
					1,
					"insert",
					{
						"characters": ".len"
					},
					"BAAAAE8MAAAAAAAAUAwAAAAAAAAAAAAAUAwAAAAAAABRDAAAAAAAAAAAAABRDAAAAAAAAFIMAAAAAAAAAAAAAFIMAAAAAAAAUwwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAATwwAAAAAAABPDAAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3621,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAFMMAAAAAAAAVQwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAUwwAAAAAAABTDAAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3623,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFUMAAAAAAAAVgwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAVQwAAAAAAABVDAAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3624,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAFYMAAAAAAAAWAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAVgwAAAAAAABWDAAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3625,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAFcMAAAAAAAAWAwAAAAAAAAAAAAAWAwAAAAAAABgDAAAAAAAAAAAAABgDAAAAAAAAGEMAAAAAAAAAAAAAGEMAAAAAAAAaQwAAAAAAAAAAAAAWAwAAAAAAABYDAAAAAAAAAgAAAAgICAgICAgIFgMAAAAAAAAZAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAVwwAAAAAAABXDAAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3626,
					2,
					"rust_fmt_format_buffer",
					null,
					"AQAAAFcMAAAAAAAAVwwAAAAAAAAWAAAACiAgICAgICAgICAgIAogICAgICAgIA",
					"AgAAAAAAAAABAAAAZAwAAAAAAABkDAAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3631,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAFcMAAAAAAAAWAwAAAAAAAAAAAAAWAwAAAAAAABgDAAAAAAAAAAAAABgDAAAAAAAAGEMAAAAAAAAAAAAAGEMAAAAAAAAaQwAAAAAAAAAAAAAWAwAAAAAAABYDAAAAAAAAAgAAAAgICAgICAgIFgMAAAAAAAAZAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAVwwAAAAAAABXDAAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3632,
					1,
					"insert",
					{
						"characters": "self."
					},
					"BQAAAGQMAAAAAAAAZQwAAAAAAAAAAAAAZQwAAAAAAABmDAAAAAAAAAAAAABmDAAAAAAAAGcMAAAAAAAAAAAAAGcMAAAAAAAAaAwAAAAAAAAAAAAAaAwAAAAAAABpDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAZAwAAAAAAABkDAAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3634,
					1,
					"insert",
					{
						"characters": "elements"
					},
					"CAAAAGkMAAAAAAAAagwAAAAAAAAAAAAAagwAAAAAAABrDAAAAAAAAAAAAABrDAAAAAAAAGwMAAAAAAAAAAAAAGwMAAAAAAAAbQwAAAAAAAAAAAAAbQwAAAAAAABuDAAAAAAAAAAAAABuDAAAAAAAAG8MAAAAAAAAAAAAAG8MAAAAAAAAcAwAAAAAAAAAAAAAcAwAAAAAAABxDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAaQwAAAAAAABpDAAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3635,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAHEMAAAAAAAAcwwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAcQwAAAAAAABxDAAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3652,
					1,
					"insert",
					{
						"characters": "x"
					},
					"AQAAAHIMAAAAAAAAcwwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAcgwAAAAAAAByDAAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3654,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAHQMAAAAAAAAdQwAAAAAAAAAAAAAdQwAAAAAAAB2DAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAdAwAAAAAAAB0DAAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3655,
					1,
					"insert",
					{
						"characters": " result."
					},
					"CAAAAHYMAAAAAAAAdwwAAAAAAAAAAAAAdwwAAAAAAAB4DAAAAAAAAAAAAAB4DAAAAAAAAHkMAAAAAAAAAAAAAHkMAAAAAAAAegwAAAAAAAAAAAAAegwAAAAAAAB7DAAAAAAAAAAAAAB7DAAAAAAAAHwMAAAAAAAAAAAAAHwMAAAAAAAAfQwAAAAAAAAAAAAAfQwAAAAAAAB+DAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAdgwAAAAAAAB2DAAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3656,
					1,
					"insert",
					{
						"characters": "elements"
					},
					"CAAAAH4MAAAAAAAAfwwAAAAAAAAAAAAAfwwAAAAAAACADAAAAAAAAAAAAACADAAAAAAAAIEMAAAAAAAAAAAAAIEMAAAAAAAAggwAAAAAAAAAAAAAggwAAAAAAACDDAAAAAAAAAAAAACDDAAAAAAAAIQMAAAAAAAAAAAAAIQMAAAAAAAAhQwAAAAAAAAAAAAAhQwAAAAAAACGDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAfgwAAAAAAAB+DAAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3657,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAIYMAAAAAAAAiAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAhgwAAAAAAACGDAAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3658,
					1,
					"insert",
					{
						"characters": "x"
					},
					"AQAAAIcMAAAAAAAAiAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAhwwAAAAAAACHDAAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3660,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAIkMAAAAAAAAigwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAiQwAAAAAAACJDAAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3701,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAHsJAAAAAAAAfAkAAAAAAAAAAAAAfAkAAAAAAAB9CQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAewkAAAAAAAB7CQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3703,
					1,
					"reindent",
					null,
					"AQAAAHwJAAAAAAAAgAkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAfAkAAAAAAAB8CQAAAAAAAAAAAAAAAAAAAQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3704,
					1,
					"insert",
					{
						"characters": "pub"
					},
					"AwAAAIAJAAAAAAAAgQkAAAAAAAAAAAAAgQkAAAAAAACCCQAAAAAAAAAAAACCCQAAAAAAAIMJAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAgAkAAAAAAACACQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3705,
					1,
					"insert",
					{
						"characters": " fn"
					},
					"AwAAAIMJAAAAAAAAhAkAAAAAAAAAAAAAhAkAAAAAAACFCQAAAAAAAAAAAACFCQAAAAAAAIYJAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAgwkAAAAAAACDCQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3706,
					1,
					"insert",
					{
						"characters": " app"
					},
					"BAAAAIYJAAAAAAAAhwkAAAAAAAAAAAAAhwkAAAAAAACICQAAAAAAAAAAAACICQAAAAAAAIkJAAAAAAAAAAAAAIkJAAAAAAAAigkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAhgkAAAAAAACGCQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3707,
					1,
					"left_delete",
					null,
					"AQAAAIkJAAAAAAAAiQkAAAAAAAABAAAAcA",
					"AgAAAAAAAAABAAAAigkAAAAAAACKCQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3708,
					1,
					"insert",
					{
						"characters": "plyw"
					},
					"BAAAAIkJAAAAAAAAigkAAAAAAAAAAAAAigkAAAAAAACLCQAAAAAAAAAAAACLCQAAAAAAAIwJAAAAAAAAAAAAAIwJAAAAAAAAjQkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAiQkAAAAAAACJCQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3709,
					1,
					"left_delete",
					null,
					"AQAAAIwJAAAAAAAAjAkAAAAAAAABAAAAdw",
					"AgAAAAAAAAABAAAAjQkAAAAAAACNCQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3710,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAIwJAAAAAAAAjgkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAjAkAAAAAAACMCQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3711,
					1,
					"insert",
					{
						"characters": "mat:"
					},
					"BAAAAI0JAAAAAAAAjgkAAAAAAAAAAAAAjgkAAAAAAACPCQAAAAAAAAAAAACPCQAAAAAAAJAJAAAAAAAAAAAAAJAJAAAAAAAAkQkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAjQkAAAAAAACNCQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3712,
					1,
					"insert",
					{
						"characters": " &Matrix"
					},
					"CAAAAJEJAAAAAAAAkgkAAAAAAAAAAAAAkgkAAAAAAACTCQAAAAAAAAAAAACTCQAAAAAAAJQJAAAAAAAAAAAAAJQJAAAAAAAAlQkAAAAAAAAAAAAAlQkAAAAAAACWCQAAAAAAAAAAAACWCQAAAAAAAJcJAAAAAAAAAAAAAJcJAAAAAAAAmAkAAAAAAAAAAAAAmAkAAAAAAACZCQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAkQkAAAAAAACRCQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3713,
					1,
					"insert_completion",
					{
						"completion": "MatrixFourFour",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "MatrixFourFour"
					},
					"AgAAAJMJAAAAAAAAkwkAAAAAAAAGAAAATWF0cml4kwkAAAAAAAChCQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAmQkAAAAAAACZCQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3714,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAKEJAAAAAAAAogkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAoQkAAAAAAAChCQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3715,
					1,
					"insert",
					{
						"characters": " vec:"
					},
					"BQAAAKIJAAAAAAAAowkAAAAAAAAAAAAAowkAAAAAAACkCQAAAAAAAAAAAACkCQAAAAAAAKUJAAAAAAAAAAAAAKUJAAAAAAAApgkAAAAAAAAAAAAApgkAAAAAAACnCQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAogkAAAAAAACiCQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3716,
					1,
					"insert",
					{
						"characters": " ve"
					},
					"AwAAAKcJAAAAAAAAqAkAAAAAAAAAAAAAqAkAAAAAAACpCQAAAAAAAAAAAACpCQAAAAAAAKoJAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAApwkAAAAAAACnCQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3717,
					2,
					"left_delete",
					null,
					"AgAAAKkJAAAAAAAAqQkAAAAAAAABAAAAZagJAAAAAAAAqAkAAAAAAAABAAAAdg",
					"AgAAAAAAAAABAAAAqgkAAAAAAACqCQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3718,
					1,
					"insert",
					{
						"characters": "VBec"
					},
					"BAAAAKgJAAAAAAAAqQkAAAAAAAAAAAAAqQkAAAAAAACqCQAAAAAAAAAAAACqCQAAAAAAAKsJAAAAAAAAAAAAAKsJAAAAAAAArAkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAqAkAAAAAAACoCQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3719,
					3,
					"left_delete",
					null,
					"AwAAAKsJAAAAAAAAqwkAAAAAAAABAAAAY6oJAAAAAAAAqgkAAAAAAAABAAAAZakJAAAAAAAAqQkAAAAAAAABAAAAQg",
					"AgAAAAAAAAABAAAArAkAAAAAAACsCQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3720,
					1,
					"insert",
					{
						"characters": "ecFour"
					},
					"BgAAAKkJAAAAAAAAqgkAAAAAAAAAAAAAqgkAAAAAAACrCQAAAAAAAAAAAACrCQAAAAAAAKwJAAAAAAAAAAAAAKwJAAAAAAAArQkAAAAAAAAAAAAArQkAAAAAAACuCQAAAAAAAAAAAACuCQAAAAAAAK8JAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAqQkAAAAAAACpCQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3721,
					4,
					"left_delete",
					null,
					"BAAAAK4JAAAAAAAArgkAAAAAAAABAAAAcq0JAAAAAAAArQkAAAAAAAABAAAAdawJAAAAAAAArAkAAAAAAAABAAAAb6sJAAAAAAAAqwkAAAAAAAABAAAARg",
					"AgAAAAAAAAABAAAArwkAAAAAAACvCQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3722,
					1,
					"insert",
					{
						"characters": "ThreeFloat"
					},
					"CgAAAKsJAAAAAAAArAkAAAAAAAAAAAAArAkAAAAAAACtCQAAAAAAAAAAAACtCQAAAAAAAK4JAAAAAAAAAAAAAK4JAAAAAAAArwkAAAAAAAAAAAAArwkAAAAAAACwCQAAAAAAAAAAAACwCQAAAAAAALEJAAAAAAAAAAAAALEJAAAAAAAAsgkAAAAAAAAAAAAAsgkAAAAAAACzCQAAAAAAAAAAAACzCQAAAAAAALQJAAAAAAAAAAAAALQJAAAAAAAAtQkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAqwkAAAAAAACrCQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3724,
					1,
					"insert",
					{
						"characters": " ->"
					},
					"AwAAALYJAAAAAAAAtwkAAAAAAAAAAAAAtwkAAAAAAAC4CQAAAAAAAAAAAAC4CQAAAAAAALkJAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAtgkAAAAAAAC2CQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3725,
					1,
					"insert",
					{
						"characters": " V"
					},
					"AgAAALkJAAAAAAAAugkAAAAAAAAAAAAAugkAAAAAAAC7CQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAuQkAAAAAAAC5CQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3726,
					1,
					"insert",
					{
						"characters": "ec"
					},
					"AgAAALsJAAAAAAAAvAkAAAAAAAAAAAAAvAkAAAAAAAC9CQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAuwkAAAAAAAC7CQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3727,
					1,
					"insert_completion",
					{
						"completion": "VecThreeFloat",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "VecThreeFloat"
					},
					"AgAAALoJAAAAAAAAugkAAAAAAAADAAAAVmVjugkAAAAAAADHCQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAvQkAAAAAAAC9CQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3728,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMcJAAAAAAAAyAkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAxwkAAAAAAADHCQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3729,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAMgJAAAAAAAAygkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAyAkAAAAAAADICQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3730,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAMkJAAAAAAAAygkAAAAAAAAAAAAAygkAAAAAAADOCQAAAAAAAAAAAADOCQAAAAAAAM8JAAAAAAAAAAAAAM8JAAAAAAAA0wkAAAAAAAAAAAAAygkAAAAAAADKCQAAAAAAAAQAAAAgICAgygkAAAAAAADSCQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAyQkAAAAAAADJCQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3731,
					2,
					"rust_fmt_format_buffer",
					null,
					"AQAAAMkJAAAAAAAAyQkAAAAAAAAOAAAACiAgICAgICAgCiAgICA",
					"AgAAAAAAAAABAAAA0gkAAAAAAADSCQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3736,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAMkJAAAAAAAAygkAAAAAAAAAAAAAygkAAAAAAADOCQAAAAAAAAAAAADOCQAAAAAAAM8JAAAAAAAAAAAAAM8JAAAAAAAA0wkAAAAAAAAAAAAAygkAAAAAAADKCQAAAAAAAAQAAAAgICAgygkAAAAAAADSCQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAyQkAAAAAAADJCQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3737,
					2,
					"rust_fmt_format_buffer",
					null,
					"AQAAAMkJAAAAAAAAyQkAAAAAAAAOAAAACiAgICAgICAgCiAgICA",
					"AgAAAAAAAAABAAAA0gkAAAAAAADSCQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3740,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAMkJAAAAAAAAygkAAAAAAAAAAAAAygkAAAAAAADOCQAAAAAAAAAAAADOCQAAAAAAAM8JAAAAAAAAAAAAAM8JAAAAAAAA0wkAAAAAAAAAAAAAygkAAAAAAADKCQAAAAAAAAQAAAAgICAgygkAAAAAAADSCQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAyQkAAAAAAADJCQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3741,
					1,
					"insert",
					{
						"characters": "let"
					},
					"AwAAANIJAAAAAAAA0wkAAAAAAAAAAAAA0wkAAAAAAADUCQAAAAAAAAAAAADUCQAAAAAAANUJAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0gkAAAAAAADSCQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3742,
					1,
					"insert",
					{
						"characters": " mut"
					},
					"BAAAANUJAAAAAAAA1gkAAAAAAAAAAAAA1gkAAAAAAADXCQAAAAAAAAAAAADXCQAAAAAAANgJAAAAAAAAAAAAANgJAAAAAAAA2QkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA1QkAAAAAAADVCQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3743,
					1,
					"insert",
					{
						"characters": " ret"
					},
					"BAAAANkJAAAAAAAA2gkAAAAAAAAAAAAA2gkAAAAAAADbCQAAAAAAAAAAAADbCQAAAAAAANwJAAAAAAAAAAAAANwJAAAAAAAA3QkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA2QkAAAAAAADZCQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3744,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAN0JAAAAAAAA3gkAAAAAAAAAAAAA3gkAAAAAAADfCQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA3QkAAAAAAADdCQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3745,
					1,
					"insert",
					{
						"characters": " Vec"
					},
					"BAAAAN8JAAAAAAAA4AkAAAAAAAAAAAAA4AkAAAAAAADhCQAAAAAAAAAAAADhCQAAAAAAAOIJAAAAAAAAAAAAAOIJAAAAAAAA4wkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA3wkAAAAAAADfCQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3746,
					1,
					"insert_completion",
					{
						"completion": "VecThreeFloat",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "VecThreeFloat"
					},
					"AgAAAOAJAAAAAAAA4AkAAAAAAAADAAAAVmVj4AkAAAAAAADtCQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA4wkAAAAAAADjCQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3747,
					1,
					"insert",
					{
						"characters": ":;new"
					},
					"BQAAAO0JAAAAAAAA7gkAAAAAAAAAAAAA7gkAAAAAAADvCQAAAAAAAAAAAADvCQAAAAAAAPAJAAAAAAAAAAAAAPAJAAAAAAAA8QkAAAAAAAAAAAAA8QkAAAAAAADyCQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA7QkAAAAAAADtCQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3748,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAPIJAAAAAAAA9AkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA8gkAAAAAAADyCQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3749,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAPIJAAAAAAAA8gkAAAAAAAABAAAAKPIJAAAAAAAA8gkAAAAAAAABAAAAKQ",
					"AgAAAAAAAAABAAAA8wkAAAAAAADzCQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3750,
					4,
					"left_delete",
					null,
					"BAAAAPEJAAAAAAAA8QkAAAAAAAABAAAAd/AJAAAAAAAA8AkAAAAAAAABAAAAZe8JAAAAAAAA7wkAAAAAAAABAAAAbu4JAAAAAAAA7gkAAAAAAAABAAAAOw",
					"AgAAAAAAAAABAAAA8gkAAAAAAADyCQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3751,
					1,
					"insert",
					{
						"characters": ":new"
					},
					"BAAAAO4JAAAAAAAA7wkAAAAAAAAAAAAA7wkAAAAAAADwCQAAAAAAAAAAAADwCQAAAAAAAPEJAAAAAAAAAAAAAPEJAAAAAAAA8gkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA7gkAAAAAAADuCQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3752,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAPIJAAAAAAAA9AkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA8gkAAAAAAADyCQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3753,
					1,
					"insert",
					{
						"characters": "0,0,0"
					},
					"BQAAAPMJAAAAAAAA9AkAAAAAAAAAAAAA9AkAAAAAAAD1CQAAAAAAAAAAAAD1CQAAAAAAAPYJAAAAAAAAAAAAAPYJAAAAAAAA9wkAAAAAAAAAAAAA9wkAAAAAAAD4CQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA8wkAAAAAAADzCQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3755,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAPkJAAAAAAAA+gkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA+QkAAAAAAAD5CQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3756,
					2,
					"rust_fmt_format_buffer",
					null,
					"AgAAAPUJAAAAAAAA9gkAAAAAAAAAAAAA+AkAAAAAAAD5CQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA+gkAAAAAAAD6CQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3757,
					1,
					"insert",
					{
						"characters": "\nreturn"
					},
					"CAAAAPwJAAAAAAAA/QkAAAAAAAAAAAAA/QkAAAAAAAAFCgAAAAAAAAAAAAAFCgAAAAAAAAYKAAAAAAAAAAAAAAYKAAAAAAAABwoAAAAAAAAAAAAABwoAAAAAAAAICgAAAAAAAAAAAAAICgAAAAAAAAkKAAAAAAAAAAAAAAkKAAAAAAAACgoAAAAAAAAAAAAACgoAAAAAAAALCgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA/AkAAAAAAAD8CQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3758,
					1,
					"insert",
					{
						"characters": " ret;"
					},
					"BQAAAAsKAAAAAAAADAoAAAAAAAAAAAAADAoAAAAAAAANCgAAAAAAAAAAAAANCgAAAAAAAA4KAAAAAAAAAAAAAA4KAAAAAAAADwoAAAAAAAAAAAAADwoAAAAAAAAQCgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAACwoAAAAAAAALCgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3763,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAAPwJAAAAAAAA/QkAAAAAAAAAAAAA/QkAAAAAAAAFCgAAAAAAAAAAAAAFCgAAAAAAAAYKAAAAAAAAAAAAAAYKAAAAAAAADgoAAAAAAAAAAAAA/QkAAAAAAAD9CQAAAAAAAAgAAAAgICAgICAgIA",
					"AgAAAAAAAAABAAAA/AkAAAAAAAD8CQAAAAAAAP///////+9/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3765,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAP0JAAAAAAAA/gkAAAAAAAAAAAAA/wkAAAAAAAD/CQAAAAAAAAgAAAAgICAgICAgIA",
					"AgAAAAAAAAABAAAA/QkAAAAAAAD9CQAAAAAAAAAAAAAAAE1AAQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3766,
					1,
					"reindent",
					null,
					"AQAAAP4JAAAAAAAABgoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA/gkAAAAAAAD+CQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3767,
					1,
					"insert",
					{
						"characters": "ret.x"
					},
					"BQAAAAYKAAAAAAAABwoAAAAAAAAAAAAABwoAAAAAAAAICgAAAAAAAAAAAAAICgAAAAAAAAkKAAAAAAAAAAAAAAkKAAAAAAAACgoAAAAAAAAAAAAACgoAAAAAAAALCgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAABgoAAAAAAAAGCgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3768,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAAsKAAAAAAAADAoAAAAAAAAAAAAADAoAAAAAAAANCgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAACwoAAAAAAAALCgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3769,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAA0KAAAAAAAADgoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAADQoAAAAAAAANCgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3770,
					1,
					"insert",
					{
						"characters": "mat.elements"
					},
					"DAAAAA4KAAAAAAAADwoAAAAAAAAAAAAADwoAAAAAAAAQCgAAAAAAAAAAAAAQCgAAAAAAABEKAAAAAAAAAAAAABEKAAAAAAAAEgoAAAAAAAAAAAAAEgoAAAAAAAATCgAAAAAAAAAAAAATCgAAAAAAABQKAAAAAAAAAAAAABQKAAAAAAAAFQoAAAAAAAAAAAAAFQoAAAAAAAAWCgAAAAAAAAAAAAAWCgAAAAAAABcKAAAAAAAAAAAAABcKAAAAAAAAGAoAAAAAAAAAAAAAGAoAAAAAAAAZCgAAAAAAAAAAAAAZCgAAAAAAABoKAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAADgoAAAAAAAAOCgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3771,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAABoKAAAAAAAAHAoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAGgoAAAAAAAAaCgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3777,
					1,
					"insert",
					{
						"characters": "get"
					},
					"BAAAABIKAAAAAAAAEwoAAAAAAAAAAAAAEwoAAAAAAAATCgAAAAAAAAoAAABlbGVtZW50c1tdEwoAAAAAAAAUCgAAAAAAAAAAAAAUCgAAAAAAABUKAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAHAoAAAAAAAASCgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3778,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAABUKAAAAAAAAFwoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAFQoAAAAAAAAVCgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3779,
					1,
					"insert",
					{
						"characters": "0,0"
					},
					"AwAAABYKAAAAAAAAFwoAAAAAAAAAAAAAFwoAAAAAAAAYCgAAAAAAAAAAAAAYCgAAAAAAABkKAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAFgoAAAAAAAAWCgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3781,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABgKAAAAAAAAGQoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAGAoAAAAAAAAYCgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3783,
					1,
					"insert",
					{
						"characters": " *"
					},
					"AgAAABsKAAAAAAAAHAoAAAAAAAAAAAAAHAoAAAAAAAAdCgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAGwoAAAAAAAAbCgAAAAAAAP///////+9/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3784,
					1,
					"insert",
					{
						"characters": " vec.x"
					},
					"BgAAAB0KAAAAAAAAHgoAAAAAAAAAAAAAHgoAAAAAAAAfCgAAAAAAAAAAAAAfCgAAAAAAACAKAAAAAAAAAAAAACAKAAAAAAAAIQoAAAAAAAAAAAAAIQoAAAAAAAAiCgAAAAAAAAAAAAAiCgAAAAAAACMKAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAHQoAAAAAAAAdCgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3785,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAACMKAAAAAAAAJAoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAIwoAAAAAAAAjCgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3790,
					1,
					"insert",
					{
						"characters": ".0"
					},
					"AgAAAPQJAAAAAAAA9QkAAAAAAAAAAAAA9QkAAAAAAAD2CQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA9AkAAAAAAAD0CQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3792,
					1,
					"insert",
					{
						"characters": ".0"
					},
					"AgAAAPkJAAAAAAAA+gkAAAAAAAAAAAAA+gkAAAAAAAD7CQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA+QkAAAAAAAD5CQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3794,
					1,
					"insert",
					{
						"characters": ".0"
					},
					"AgAAAP4JAAAAAAAA/wkAAAAAAAAAAAAA/wkAAAAAAAAACgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA/gkAAAAAAAD+CQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3800,
					1,
					"left_delete",
					null,
					"AQAAAPIJAAAAAAAA8gkAAAAAAAAQAAAAKDAuMCwgMC4wLCAwLjApOw",
					"AgAAAAAAAAABAAAA8gkAAAAAAAACCgAAAAAAAP///////+9/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3801,
					1,
					"insert",
					{
						"characters": "_empty"
					},
					"BgAAAPIJAAAAAAAA8wkAAAAAAAAAAAAA8wkAAAAAAAD0CQAAAAAAAAAAAAD0CQAAAAAAAPUJAAAAAAAAAAAAAPUJAAAAAAAA9gkAAAAAAAAAAAAA9gkAAAAAAAD3CQAAAAAAAAAAAAD3CQAAAAAAAPgJAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA8gkAAAAAAADyCQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3802,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAPgJAAAAAAAA+gkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA+AkAAAAAAAD4CQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3804,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAPoJAAAAAAAA+wkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA+gkAAAAAAAD6CQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3813,
					1,
					"insert",
					{
						"characters": "ze"
					},
					"AwAAAPMJAAAAAAAA9AkAAAAAAAAAAAAA9AkAAAAAAAD0CQAAAAAAAAUAAABlbXB0efQJAAAAAAAA9QkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA+AkAAAAAAADzCQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3814,
					2,
					"left_delete",
					null,
					"AgAAAPQJAAAAAAAA9AkAAAAAAAABAAAAZfMJAAAAAAAA8wkAAAAAAAABAAAAeg",
					"AgAAAAAAAAABAAAA9QkAAAAAAAD1CQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3815,
					1,
					"insert",
					{
						"characters": "zero"
					},
					"BAAAAPMJAAAAAAAA9AkAAAAAAAAAAAAA9AkAAAAAAAD1CQAAAAAAAAAAAAD1CQAAAAAAAPYJAAAAAAAAAAAAAPYJAAAAAAAA9wkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA8wkAAAAAAADzCQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3820,
					1,
					"insert",
					{
						"characters": "("
					},
					"AQAAAAwKAAAAAAAADQoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAADAoAAAAAAAAMCgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3823,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAACIKAAAAAAAAIwoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAIgoAAAAAAAAiCgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3824,
					1,
					"insert",
					{
						"characters": " +"
					},
					"AgAAACMKAAAAAAAAJAoAAAAAAAAAAAAAJAoAAAAAAAAlCgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAIwoAAAAAAAAjCgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3825,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACUKAAAAAAAAJgoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAJQoAAAAAAAAlCgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3826,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAACYKAAAAAAAAKAoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAJgoAAAAAAAAmCgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3827,
					1,
					"insert",
					{
						"characters": "mat.get"
					},
					"BwAAACcKAAAAAAAAKAoAAAAAAAAAAAAAKAoAAAAAAAApCgAAAAAAAAAAAAApCgAAAAAAACoKAAAAAAAAAAAAACoKAAAAAAAAKwoAAAAAAAAAAAAAKwoAAAAAAAAsCgAAAAAAAAAAAAAsCgAAAAAAAC0KAAAAAAAAAAAAAC0KAAAAAAAALgoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAJwoAAAAAAAAnCgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3828,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAC4KAAAAAAAAMAoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAALgoAAAAAAAAuCgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3829,
					1,
					"insert",
					{
						"characters": "0,1"
					},
					"AwAAAC8KAAAAAAAAMAoAAAAAAAAAAAAAMAoAAAAAAAAxCgAAAAAAAAAAAAAxCgAAAAAAADIKAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAALwoAAAAAAAAvCgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3831,
					1,
					"insert",
					{
						"characters": " *"
					},
					"AgAAADMKAAAAAAAANAoAAAAAAAAAAAAANAoAAAAAAAA1CgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAMwoAAAAAAAAzCgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3832,
					1,
					"insert",
					{
						"characters": " vec.y"
					},
					"BgAAADUKAAAAAAAANgoAAAAAAAAAAAAANgoAAAAAAAA3CgAAAAAAAAAAAAA3CgAAAAAAADgKAAAAAAAAAAAAADgKAAAAAAAAOQoAAAAAAAAAAAAAOQoAAAAAAAA6CgAAAAAAAAAAAAA6CgAAAAAAADsKAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAANQoAAAAAAAA1CgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3834,
					1,
					"insert",
					{
						"characters": " +"
					},
					"AgAAADwKAAAAAAAAPQoAAAAAAAAAAAAAPQoAAAAAAAA+CgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAPAoAAAAAAAA8CgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3835,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAD4KAAAAAAAAPwoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAPgoAAAAAAAA+CgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3836,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAD8KAAAAAAAAQQoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAPwoAAAAAAAA/CgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3837,
					1,
					"insert",
					{
						"characters": "mat.get"
					},
					"BwAAAEAKAAAAAAAAQQoAAAAAAAAAAAAAQQoAAAAAAABCCgAAAAAAAAAAAABCCgAAAAAAAEMKAAAAAAAAAAAAAEMKAAAAAAAARAoAAAAAAAAAAAAARAoAAAAAAABFCgAAAAAAAAAAAABFCgAAAAAAAEYKAAAAAAAAAAAAAEYKAAAAAAAARwoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQAoAAAAAAABACgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3838,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAEcKAAAAAAAASQoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAARwoAAAAAAABHCgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3839,
					1,
					"insert",
					{
						"characters": "0,2"
					},
					"AwAAAEgKAAAAAAAASQoAAAAAAAAAAAAASQoAAAAAAABKCgAAAAAAAAAAAABKCgAAAAAAAEsKAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAASAoAAAAAAABICgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3842,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEoKAAAAAAAASwoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAASgoAAAAAAABKCgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3844,
					1,
					"insert",
					{
						"characters": " *"
					},
					"AgAAAE0KAAAAAAAATgoAAAAAAAAAAAAATgoAAAAAAABPCgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAATQoAAAAAAABNCgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3845,
					1,
					"insert",
					{
						"characters": " vec.z"
					},
					"BgAAAE8KAAAAAAAAUAoAAAAAAAAAAAAAUAoAAAAAAABRCgAAAAAAAAAAAABRCgAAAAAAAFIKAAAAAAAAAAAAAFIKAAAAAAAAUwoAAAAAAAAAAAAAUwoAAAAAAABUCgAAAAAAAAAAAABUCgAAAAAAAFUKAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAATwoAAAAAAABPCgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3847,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAPsJAAAAAAAA/AkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA+wkAAAAAAAD7CQAAAAAAAAAAAAAACIRAAQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3852,
					1,
					"insert",
					{
						"characters": "\nlet"
					},
					"BQAAAPoJAAAAAAAA+wkAAAAAAAAAAAAA+wkAAAAAAAADCgAAAAAAAAAAAAADCgAAAAAAAAQKAAAAAAAAAAAAAAQKAAAAAAAABQoAAAAAAAAAAAAABQoAAAAAAAAGCgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA+gkAAAAAAAD6CQAAAAAAAP///////+9/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3853,
					1,
					"insert",
					{
						"characters": " w"
					},
					"AgAAAAYKAAAAAAAABwoAAAAAAAAAAAAABwoAAAAAAAAICgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAABgoAAAAAAAAGCgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3854,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAAgKAAAAAAAACQoAAAAAAAAAAAAACQoAAAAAAAAKCgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAACAoAAAAAAAAICgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3855,
					1,
					"insert",
					{
						"characters": " 0,.0"
					},
					"BQAAAAoKAAAAAAAACwoAAAAAAAAAAAAACwoAAAAAAAAMCgAAAAAAAAAAAAAMCgAAAAAAAA0KAAAAAAAAAAAAAA0KAAAAAAAADgoAAAAAAAAAAAAADgoAAAAAAAAPCgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAACgoAAAAAAAAKCgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3856,
					3,
					"left_delete",
					null,
					"AwAAAA4KAAAAAAAADgoAAAAAAAABAAAAMA0KAAAAAAAADQoAAAAAAAABAAAALgwKAAAAAAAADAoAAAAAAAABAAAALA",
					"AgAAAAAAAAABAAAADwoAAAAAAAAPCgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3857,
					1,
					"insert",
					{
						"characters": ".0;"
					},
					"AwAAAAwKAAAAAAAADQoAAAAAAAAAAAAADQoAAAAAAAAOCgAAAAAAAAAAAAAOCgAAAAAAAA8KAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAADAoAAAAAAAAMCgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3859,
					1,
					"left_delete",
					null,
					"AQAAAAsKAAAAAAAACwoAAAAAAAABAAAAMA",
					"AgAAAAAAAAABAAAADAoAAAAAAAAMCgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3860,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAAsKAAAAAAAADAoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAACwoAAAAAAAALCgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3861,
					2,
					"rust_fmt_format_buffer",
					null,
					"AgAAABEKAAAAAAAAEQoAAAAAAAABAAAACkYKAAAAAAAARwoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAADAoAAAAAAAAMCgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3863,
					1,
					"cut",
					null,
					"AQAAABAKAAAAAAAAEAoAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAEAoAAAAAAAAQCgAAAAAAAAAAAAAAgF5AAQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3866,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAA8KAAAAAAAAEAoAAAAAAAAAAAAAEAoAAAAAAAAYCgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAADwoAAAAAAAAPCgAAAAAAAP///////+9/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3871,
					1,
					"insert",
					{
						"characters": " +"
					},
					"AwAAAHQKAAAAAAAAdQoAAAAAAAAAAAAAEAoAAAAAAAAQCgAAAAAAAAgAAAAgICAgICAgIG0KAAAAAAAAbgoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAdAoAAAAAAAB0CgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3872,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAG4KAAAAAAAAbwoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAbgoAAAAAAABuCgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3873,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAG8KAAAAAAAAcQoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAbwoAAAAAAABvCgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3874,
					1,
					"insert",
					{
						"characters": "mat.get"
					},
					"BwAAAHAKAAAAAAAAcQoAAAAAAAAAAAAAcQoAAAAAAAByCgAAAAAAAAAAAAByCgAAAAAAAHMKAAAAAAAAAAAAAHMKAAAAAAAAdAoAAAAAAAAAAAAAdAoAAAAAAAB1CgAAAAAAAAAAAAB1CgAAAAAAAHYKAAAAAAAAAAAAAHYKAAAAAAAAdwoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAcAoAAAAAAABwCgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3875,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAHcKAAAAAAAAeQoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAdwoAAAAAAAB3CgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3876,
					1,
					"insert",
					{
						"characters": "0,3"
					},
					"AwAAAHgKAAAAAAAAeQoAAAAAAAAAAAAAeQoAAAAAAAB6CgAAAAAAAAAAAAB6CgAAAAAAAHsKAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAeAoAAAAAAAB4CgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3878,
					1,
					"insert",
					{
						"characters": " *"
					},
					"AgAAAHwKAAAAAAAAfQoAAAAAAAAAAAAAfQoAAAAAAAB+CgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAfAoAAAAAAAB8CgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3879,
					1,
					"insert",
					{
						"characters": " w"
					},
					"AgAAAH4KAAAAAAAAfwoAAAAAAAAAAAAAfwoAAAAAAACACgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAfgoAAAAAAAB+CgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3880,
					2,
					"rust_fmt_format_buffer",
					null,
					"BAAAADgKAAAAAAAARAoAAAAAAAAAAAAAXgoAAAAAAABqCgAAAAAAAAAAAACECgAAAAAAAJAKAAAAAAAAAAAAAJ4KAAAAAAAAnwoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAgAoAAAAAAACACgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3888,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAAKcKAAAAAAAAqAoAAAAAAAAAAAAAqAoAAAAAAAC0CgAAAAAAAAAAAAC0CgAAAAAAALUKAAAAAAAAAAAAALUKAAAAAAAAwQoAAAAAAAAAAAAAqAoAAAAAAACoCgAAAAAAAAwAAAAgICAgICAgICAgICA",
					"AgAAAAAAAAABAAAApwoAAAAAAACnCgAAAAAAAAAAAAAAoG5AAQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3889,
					1,
					"paste",
					null,
					"AQAAALUKAAAAAAAAQwsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAtQoAAAAAAAC1CgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3890,
					2,
					"rust_fmt_format_buffer",
					null,
					"AQAAALEKAAAAAAAAsQoAAAAAAAAEAAAAICAgIA",
					"AgAAAAAAAAABAAAAQwsAAAAAAABDCwAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3894,
					1,
					"left_delete",
					null,
					"AQAAALUKAAAAAAAAtQoAAAAAAAABAAAAeA",
					"AgAAAAAAAAABAAAAtgoAAAAAAAC2CgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3895,
					1,
					"insert",
					{
						"characters": "y"
					},
					"AQAAALUKAAAAAAAAtgoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAtQoAAAAAAAC1CgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3898,
					1,
					"left_delete",
					null,
					"AQAAAMIKAAAAAAAAwgoAAAAAAAABAAAAMA",
					"AgAAAAAAAAABAAAAwwoAAAAAAADDCgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3899,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAMIKAAAAAAAAwwoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAwgoAAAAAAADCCgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3902,
					1,
					"left_delete",
					null,
					"AQAAAOgKAAAAAAAA6AoAAAAAAAABAAAAMA",
					"AgAAAAAAAAABAAAA6QoAAAAAAADpCgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3903,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAOgKAAAAAAAA6QoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA6AoAAAAAAADoCgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3906,
					1,
					"left_delete",
					null,
					"AQAAAA0LAAAAAAAADQsAAAAAAAABAAAAKA",
					"AgAAAAAAAAABAAAADgsAAAAAAAAOCwAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3907,
					1,
					"insert",
					{
						"characters": "("
					},
					"AQAAAA0LAAAAAAAADgsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAADQsAAAAAAAANCwAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3909,
					1,
					"left_delete",
					null,
					"AQAAAA4LAAAAAAAADgsAAAAAAAABAAAAMA",
					"AgAAAAAAAAABAAAADwsAAAAAAAAPCwAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3910,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAA4LAAAAAAAADwsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAADgsAAAAAAAAOCwAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3912,
					1,
					"left_delete",
					null,
					"AQAAADQLAAAAAAAANAsAAAAAAAABAAAAMA",
					"AgAAAAAAAAABAAAANQsAAAAAAAA1CwAAAAAAAAAAAAAAoGVAAQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3913,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAADQLAAAAAAAANQsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAANAsAAAAAAAA0CwAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3917,
					1,
					"insert",
					{
						"characters": "v"
					},
					"AQAAAIwJAAAAAAAAjQkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAjAkAAAAAAACMCQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3926,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAEELAAAAAAAAQgsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQQsAAAAAAABBCwAAAAAAAAAAAAAAoG5AAQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3927,
					1,
					"paste",
					null,
					"AQAAAEILAAAAAAAA2QsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQgsAAAAAAABCCwAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3928,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line.sublime-macro"
					},
					"AgAAANkLAAAAAAAA2gsAAAAAAAAAAAAA2gsAAAAAAADmCwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA2QsAAAAAAADZCwAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3929,
					2,
					"rust_fmt_format_buffer",
					null,
					"AgAAAEILAAAAAAAAQgsAAAAAAAABAAAACtkLAAAAAAAA2QsAAAAAAAAMAAAAICAgICAgICAgICAg",
					"AgAAAAAAAAABAAAA5gsAAAAAAADmCwAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3934,
					1,
					"left_delete",
					null,
					"AQAAAE4LAAAAAAAATgsAAAAAAAABAAAAeQ",
					"AgAAAAAAAAABAAAATwsAAAAAAABPCwAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3935,
					1,
					"insert",
					{
						"characters": "z"
					},
					"AQAAAE4LAAAAAAAATwsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAATgsAAAAAAABOCwAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3961,
					1,
					"insert",
					{
						"characters": "\n\n#"
					},
					"BgAAABUZAAAAAAAAFhkAAAAAAAAAAAAAFhkAAAAAAAAaGQAAAAAAAAAAAAAaGQAAAAAAABsZAAAAAAAAAAAAABsZAAAAAAAAHxkAAAAAAAAAAAAAFhkAAAAAAAAWGQAAAAAAAAQAAAAgICAgGxkAAAAAAAAcGQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAFRkAAAAAAAAVGQAAAAAAAP///////+9/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3962,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAABwZAAAAAAAAHhkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAHBkAAAAAAAAcGQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3963,
					1,
					"insert",
					{
						"characters": "test"
					},
					"BAAAAB0ZAAAAAAAAHhkAAAAAAAAAAAAAHhkAAAAAAAAfGQAAAAAAAAAAAAAfGQAAAAAAACAZAAAAAAAAAAAAACAZAAAAAAAAIRkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAHRkAAAAAAAAdGQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3965,
					1,
					"insert",
					{
						"characters": "\nfn"
					},
					"BAAAACIZAAAAAAAAIxkAAAAAAAAAAAAAIxkAAAAAAAAnGQAAAAAAAAAAAAAnGQAAAAAAACgZAAAAAAAAAAAAACgZAAAAAAAAKRkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAIhkAAAAAAAAiGQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3966,
					1,
					"insert",
					{
						"characters": " translate"
					},
					"CgAAACkZAAAAAAAAKhkAAAAAAAAAAAAAKhkAAAAAAAArGQAAAAAAAAAAAAArGQAAAAAAACwZAAAAAAAAAAAAACwZAAAAAAAALRkAAAAAAAAAAAAALRkAAAAAAAAuGQAAAAAAAAAAAAAuGQAAAAAAAC8ZAAAAAAAAAAAAAC8ZAAAAAAAAMBkAAAAAAAAAAAAAMBkAAAAAAAAxGQAAAAAAAAAAAAAxGQAAAAAAADIZAAAAAAAAAAAAADIZAAAAAAAAMxkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAKRkAAAAAAAApGQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3967,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAADMZAAAAAAAANRkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAMxkAAAAAAAAzGQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3969,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADUZAAAAAAAANhkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAANRkAAAAAAAA1GQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3970,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAADYZAAAAAAAAOBkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAANhkAAAAAAAA2GQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3971,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAADcZAAAAAAAAOBkAAAAAAAAAAAAAOBkAAAAAAAA8GQAAAAAAAAAAAAA8GQAAAAAAAD0ZAAAAAAAAAAAAAD0ZAAAAAAAAQRkAAAAAAAAAAAAAOBkAAAAAAAA4GQAAAAAAAAQAAAAgICAgOBkAAAAAAABAGQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAANxkAAAAAAAA3GQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3972,
					1,
					"insert",
					{
						"characters": "let"
					},
					"AwAAAEAZAAAAAAAAQRkAAAAAAAAAAAAAQRkAAAAAAABCGQAAAAAAAAAAAABCGQAAAAAAAEMZAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQBkAAAAAAABAGQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3973,
					1,
					"insert",
					{
						"characters": " mut"
					},
					"BAAAAEMZAAAAAAAARBkAAAAAAAAAAAAARBkAAAAAAABFGQAAAAAAAAAAAABFGQAAAAAAAEYZAAAAAAAAAAAAAEYZAAAAAAAARxkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQxkAAAAAAABDGQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3974,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEcZAAAAAAAASBkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAARxkAAAAAAABHGQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3975,
					1,
					"insert",
					{
						"characters": "a"
					},
					"AQAAAEgZAAAAAAAASRkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAASBkAAAAAAABIGQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3976,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAEkZAAAAAAAAShkAAAAAAAAAAAAAShkAAAAAAABLGQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAASRkAAAAAAABJGQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3977,
					1,
					"insert",
					{
						"characters": " matric"
					},
					"BwAAAEsZAAAAAAAATBkAAAAAAAAAAAAATBkAAAAAAABNGQAAAAAAAAAAAABNGQAAAAAAAE4ZAAAAAAAAAAAAAE4ZAAAAAAAATxkAAAAAAAAAAAAATxkAAAAAAABQGQAAAAAAAAAAAABQGQAAAAAAAFEZAAAAAAAAAAAAAFEZAAAAAAAAUhkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAASxkAAAAAAABLGQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3980,
					1,
					"insert",
					{
						"characters": "matrix"
					},
					"BwAAAEwZAAAAAAAATRkAAAAAAAAAAAAATRkAAAAAAABNGQAAAAAAAAYAAABtYXRyaWNNGQAAAAAAAE4ZAAAAAAAAAAAAAE4ZAAAAAAAATxkAAAAAAAAAAAAATxkAAAAAAABQGQAAAAAAAAAAAABQGQAAAAAAAFEZAAAAAAAAAAAAAFEZAAAAAAAAUhkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAUhkAAAAAAABMGQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3981,
					1,
					"insert_completion",
					{
						"completion": "MatrixFourFour",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "MatrixFourFour"
					},
					"AgAAAEwZAAAAAAAATBkAAAAAAAAGAAAAbWF0cml4TBkAAAAAAABaGQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAUhkAAAAAAABSGQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3982,
					1,
					"insert",
					{
						"characters": "::new_id"
					},
					"CAAAAFoZAAAAAAAAWxkAAAAAAAAAAAAAWxkAAAAAAABcGQAAAAAAAAAAAABcGQAAAAAAAF0ZAAAAAAAAAAAAAF0ZAAAAAAAAXhkAAAAAAAAAAAAAXhkAAAAAAABfGQAAAAAAAAAAAABfGQAAAAAAAGAZAAAAAAAAAAAAAGAZAAAAAAAAYRkAAAAAAAAAAAAAYRkAAAAAAABiGQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAWhkAAAAAAABaGQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3983,
					1,
					"insert_completion",
					{
						"completion": "new_identity",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "new_identity"
					},
					"AgAAAFwZAAAAAAAAXBkAAAAAAAAGAAAAbmV3X2lkXBkAAAAAAABoGQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAYhkAAAAAAABiGQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3984,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAGgZAAAAAAAAahkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAaBkAAAAAAABoGQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3986,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAGoZAAAAAAAAaxkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAahkAAAAAAABqGQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3989,
					1,
					"insert",
					{
						"characters": "\na.translate"
					},
					"DQAAAGsZAAAAAAAAbBkAAAAAAAAAAAAAbBkAAAAAAAB0GQAAAAAAAAAAAAB0GQAAAAAAAHUZAAAAAAAAAAAAAHUZAAAAAAAAdhkAAAAAAAAAAAAAdhkAAAAAAAB3GQAAAAAAAAAAAAB3GQAAAAAAAHgZAAAAAAAAAAAAAHgZAAAAAAAAeRkAAAAAAAAAAAAAeRkAAAAAAAB6GQAAAAAAAAAAAAB6GQAAAAAAAHsZAAAAAAAAAAAAAHsZAAAAAAAAfBkAAAAAAAAAAAAAfBkAAAAAAAB9GQAAAAAAAAAAAAB9GQAAAAAAAH4ZAAAAAAAAAAAAAH4ZAAAAAAAAfxkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAaxkAAAAAAABrGQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3990,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAH8ZAAAAAAAAgRkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAfxkAAAAAAAB/GQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3991,
					1,
					"insert",
					{
						"characters": "new"
					},
					"AwAAAIAZAAAAAAAAgRkAAAAAAAAAAAAAgRkAAAAAAACCGQAAAAAAAAAAAACCGQAAAAAAAIMZAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAgBkAAAAAAACAGQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3992,
					1,
					"insert",
					{
						"characters": " Ve"
					},
					"AwAAAIMZAAAAAAAAhBkAAAAAAAAAAAAAhBkAAAAAAACFGQAAAAAAAAAAAACFGQAAAAAAAIYZAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAgxkAAAAAAACDGQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3993,
					1,
					"insert_completion",
					{
						"completion": "VecThreeFloat",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "VecThreeFloat"
					},
					"AgAAAIQZAAAAAAAAhBkAAAAAAAACAAAAVmWEGQAAAAAAAJEZAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAhhkAAAAAAACGGQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3995,
					1,
					"left_delete",
					null,
					"AQAAAIMZAAAAAAAAgxkAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAhBkAAAAAAACEGQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3997,
					1,
					"left_delete",
					null,
					"AQAAAIAZAAAAAAAAgBkAAAAAAAADAAAAbmV3",
					"AgAAAAAAAAABAAAAgxkAAAAAAACAGQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4000,
					1,
					"insert",
					{
						"characters": "::new"
					},
					"BQAAAI0ZAAAAAAAAjhkAAAAAAAAAAAAAjhkAAAAAAACPGQAAAAAAAAAAAACPGQAAAAAAAJAZAAAAAAAAAAAAAJAZAAAAAAAAkRkAAAAAAAAAAAAAkRkAAAAAAACSGQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAjRkAAAAAAACNGQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4001,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJIZAAAAAAAAlBkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAkhkAAAAAAACSGQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4002,
					1,
					"insert",
					{
						"characters": "1,2,4"
					},
					"BQAAAJMZAAAAAAAAlBkAAAAAAAAAAAAAlBkAAAAAAACVGQAAAAAAAAAAAACVGQAAAAAAAJYZAAAAAAAAAAAAAJYZAAAAAAAAlxkAAAAAAAAAAAAAlxkAAAAAAACYGQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAkxkAAAAAAACTGQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4005,
					1,
					"insert",
					{
						"characters": ".0"
					},
					"AgAAAJQZAAAAAAAAlRkAAAAAAAAAAAAAlRkAAAAAAACWGQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAlBkAAAAAAACUGQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4006,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJYZAAAAAAAAlxkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAlhkAAAAAAACWGQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4008,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAAJkZAAAAAAAAmhkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAmRkAAAAAAACZGQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4009,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJoZAAAAAAAAmxkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAmhkAAAAAAACaGQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4011,
					1,
					"left_delete",
					null,
					"AQAAAJYZAAAAAAAAlhkAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAlxkAAAAAAACXGQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4013,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJcZAAAAAAAAmBkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAlxkAAAAAAACXGQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4016,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAJoZAAAAAAAAmxkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAmhkAAAAAAACaGQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4019,
					1,
					"left_delete",
					null,
					"AQAAAJsZAAAAAAAAmxkAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAnBkAAAAAAACcGQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4022,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJwZAAAAAAAAnRkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAnBkAAAAAAACcGQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4024,
					1,
					"insert",
					{
						"characters": ".0"
					},
					"AgAAAJ4ZAAAAAAAAnxkAAAAAAAAAAAAAnxkAAAAAAACgGQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAnhkAAAAAAACeGQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4028,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAKIZAAAAAAAAoxkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAohkAAAAAAACiGQAAAAAAAP///////+9/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4033,
					1,
					"insert",
					{
						"characters": "\n\nlet"
					},
					"CAAAAKMZAAAAAAAApBkAAAAAAAAAAAAApBkAAAAAAACsGQAAAAAAAAAAAACsGQAAAAAAAK0ZAAAAAAAAAAAAAK0ZAAAAAAAAtRkAAAAAAAAAAAAApBkAAAAAAACkGQAAAAAAAAgAAAAgICAgICAgIK0ZAAAAAAAArhkAAAAAAAAAAAAArhkAAAAAAACvGQAAAAAAAAAAAACvGQAAAAAAALAZAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAoxkAAAAAAACjGQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4034,
					1,
					"insert",
					{
						"characters": " point"
					},
					"BgAAALAZAAAAAAAAsRkAAAAAAAAAAAAAsRkAAAAAAACyGQAAAAAAAAAAAACyGQAAAAAAALMZAAAAAAAAAAAAALMZAAAAAAAAtBkAAAAAAAAAAAAAtBkAAAAAAAC1GQAAAAAAAAAAAAC1GQAAAAAAALYZAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAsBkAAAAAAACwGQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4035,
					5,
					"left_delete",
					null,
					"BQAAALUZAAAAAAAAtRkAAAAAAAABAAAAdLQZAAAAAAAAtBkAAAAAAAABAAAAbrMZAAAAAAAAsxkAAAAAAAABAAAAabIZAAAAAAAAshkAAAAAAAABAAAAb7EZAAAAAAAAsRkAAAAAAAABAAAAcA",
					"AgAAAAAAAAABAAAAthkAAAAAAAC2GQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4036,
					1,
					"insert",
					{
						"characters": "mut"
					},
					"AwAAALEZAAAAAAAAshkAAAAAAAAAAAAAshkAAAAAAACzGQAAAAAAAAAAAACzGQAAAAAAALQZAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAsRkAAAAAAACxGQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4037,
					1,
					"insert",
					{
						"characters": " point"
					},
					"BgAAALQZAAAAAAAAtRkAAAAAAAAAAAAAtRkAAAAAAAC2GQAAAAAAAAAAAAC2GQAAAAAAALcZAAAAAAAAAAAAALcZAAAAAAAAuBkAAAAAAAAAAAAAuBkAAAAAAAC5GQAAAAAAAAAAAAC5GQAAAAAAALoZAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAtBkAAAAAAAC0GQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4038,
					9,
					"left_delete",
					null,
					"CQAAALkZAAAAAAAAuRkAAAAAAAABAAAAdLgZAAAAAAAAuBkAAAAAAAABAAAAbrcZAAAAAAAAtxkAAAAAAAABAAAAabYZAAAAAAAAthkAAAAAAAABAAAAb7UZAAAAAAAAtRkAAAAAAAABAAAAcLQZAAAAAAAAtBkAAAAAAAABAAAAILMZAAAAAAAAsxkAAAAAAAABAAAAdLIZAAAAAAAAshkAAAAAAAABAAAAdbEZAAAAAAAAsRkAAAAAAAABAAAAbQ",
					"AgAAAAAAAAABAAAAuhkAAAAAAAC6GQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4039,
					1,
					"insert",
					{
						"characters": "point"
					},
					"BQAAALEZAAAAAAAAshkAAAAAAAAAAAAAshkAAAAAAACzGQAAAAAAAAAAAACzGQAAAAAAALQZAAAAAAAAAAAAALQZAAAAAAAAtRkAAAAAAAAAAAAAtRkAAAAAAAC2GQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAsRkAAAAAAACxGQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4040,
					1,
					"insert",
					{
						"characters": "  ="
					},
					"AwAAALYZAAAAAAAAtxkAAAAAAAAAAAAAtxkAAAAAAAC4GQAAAAAAAAAAAAC4GQAAAAAAALkZAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAthkAAAAAAAC2GQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4041,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALkZAAAAAAAAuhkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAuRkAAAAAAAC5GQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4042,
					3,
					"left_delete",
					null,
					"AwAAALkZAAAAAAAAuRkAAAAAAAABAAAAILgZAAAAAAAAuBkAAAAAAAABAAAAPbcZAAAAAAAAtxkAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAuhkAAAAAAAC6GQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4043,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAALcZAAAAAAAAuBkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAtxkAAAAAAAC3GQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4044,
					1,
					"insert",
					{
						"characters": " Vector"
					},
					"BwAAALgZAAAAAAAAuRkAAAAAAAAAAAAAuRkAAAAAAAC6GQAAAAAAAAAAAAC6GQAAAAAAALsZAAAAAAAAAAAAALsZAAAAAAAAvBkAAAAAAAAAAAAAvBkAAAAAAAC9GQAAAAAAAAAAAAC9GQAAAAAAAL4ZAAAAAAAAAAAAAL4ZAAAAAAAAvxkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAuBkAAAAAAAC4GQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4045,
					1,
					"insert_completion",
					{
						"completion": "vectors",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "vectors"
					},
					"AgAAALkZAAAAAAAAuRkAAAAAAAAGAAAAVmVjdG9yuRkAAAAAAADAGQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAvxkAAAAAAAC/GQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4047,
					1,
					"insert",
					{
						"characters": "Vector"
					},
					"BwAAALkZAAAAAAAAuhkAAAAAAAAAAAAAuhkAAAAAAAC6GQAAAAAAAAcAAAB2ZWN0b3JzuhkAAAAAAAC7GQAAAAAAAAAAAAC7GQAAAAAAALwZAAAAAAAAAAAAALwZAAAAAAAAvRkAAAAAAAAAAAAAvRkAAAAAAAC+GQAAAAAAAAAAAAC+GQAAAAAAAL8ZAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAwBkAAAAAAAC5GQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4049,
					1,
					"insert_completion",
					{
						"completion": "VecThreeFloat",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "VecThreeFloat"
					},
					"AgAAALkZAAAAAAAAuRkAAAAAAAAGAAAAVmVjdG9yuRkAAAAAAADGGQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAvxkAAAAAAAC/GQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4050,
					1,
					"insert",
					{
						"characters": "::new"
					},
					"BQAAAMYZAAAAAAAAxxkAAAAAAAAAAAAAxxkAAAAAAADIGQAAAAAAAAAAAADIGQAAAAAAAMkZAAAAAAAAAAAAAMkZAAAAAAAAyhkAAAAAAAAAAAAAyhkAAAAAAADLGQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAxhkAAAAAAADGGQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4051,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAMsZAAAAAAAAzRkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAyxkAAAAAAADLGQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4052,
					1,
					"insert",
					{
						"characters": "2.0,"
					},
					"BAAAAMwZAAAAAAAAzRkAAAAAAAAAAAAAzRkAAAAAAADOGQAAAAAAAAAAAADOGQAAAAAAAM8ZAAAAAAAAAAAAAM8ZAAAAAAAA0BkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAzBkAAAAAAADMGQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4053,
					1,
					"insert",
					{
						"characters": " 1.5,"
					},
					"BQAAANAZAAAAAAAA0RkAAAAAAAAAAAAA0RkAAAAAAADSGQAAAAAAAAAAAADSGQAAAAAAANMZAAAAAAAAAAAAANMZAAAAAAAA1BkAAAAAAAAAAAAA1BkAAAAAAADVGQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0BkAAAAAAADQGQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4054,
					1,
					"insert",
					{
						"characters": " 123."
					},
					"BQAAANUZAAAAAAAA1hkAAAAAAAAAAAAA1hkAAAAAAADXGQAAAAAAAAAAAADXGQAAAAAAANgZAAAAAAAAAAAAANgZAAAAAAAA2RkAAAAAAAAAAAAA2RkAAAAAAADaGQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA1RkAAAAAAADVGQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4055,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAANoZAAAAAAAA2xkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA2hkAAAAAAADaGQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4056,
					1,
					"left_delete",
					null,
					"AQAAANoZAAAAAAAA2hkAAAAAAAABAAAAMA",
					"AgAAAAAAAAABAAAA2xkAAAAAAADbGQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4057,
					1,
					"insert",
					{
						"characters": "123"
					},
					"AwAAANoZAAAAAAAA2xkAAAAAAAAAAAAA2xkAAAAAAADcGQAAAAAAAAAAAADcGQAAAAAAAN0ZAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA2hkAAAAAAADaGQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4059,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAN4ZAAAAAAAA3xkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA3hkAAAAAAADeGQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4064,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAAN8ZAAAAAAAA4BkAAAAAAAAAAAAA4BkAAAAAAADoGQAAAAAAAAAAAADoGQAAAAAAAOkZAAAAAAAAAAAAAOkZAAAAAAAA8RkAAAAAAAAAAAAA4BkAAAAAAADgGQAAAAAAAAgAAAAgICAgICAgIA",
					"AgAAAAAAAAABAAAA3xkAAAAAAADfGQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4065,
					1,
					"insert",
					{
						"characters": "let"
					},
					"AwAAAOkZAAAAAAAA6hkAAAAAAAAAAAAA6hkAAAAAAADrGQAAAAAAAAAAAADrGQAAAAAAAOwZAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA6RkAAAAAAADpGQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4066,
					1,
					"insert",
					{
						"characters": " res"
					},
					"BAAAAOwZAAAAAAAA7RkAAAAAAAAAAAAA7RkAAAAAAADuGQAAAAAAAAAAAADuGQAAAAAAAO8ZAAAAAAAAAAAAAO8ZAAAAAAAA8BkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA7BkAAAAAAADsGQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4067,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAPAZAAAAAAAA8RkAAAAAAAAAAAAA8RkAAAAAAADyGQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA8BkAAAAAAADwGQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4068,
					1,
					"insert",
					{
						"characters": " Mat"
					},
					"BAAAAPIZAAAAAAAA8xkAAAAAAAAAAAAA8xkAAAAAAAD0GQAAAAAAAAAAAAD0GQAAAAAAAPUZAAAAAAAAAAAAAPUZAAAAAAAA9hkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA8hkAAAAAAADyGQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4070,
					1,
					"left_delete",
					null,
					"AQAAAPMZAAAAAAAA8xkAAAAAAAADAAAATWF0",
					"AgAAAAAAAAABAAAA9hkAAAAAAADzGQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4071,
					1,
					"insert",
					{
						"characters": "Matr"
					},
					"BAAAAPMZAAAAAAAA9BkAAAAAAAAAAAAA9BkAAAAAAAD1GQAAAAAAAAAAAAD1GQAAAAAAAPYZAAAAAAAAAAAAAPYZAAAAAAAA9xkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA8xkAAAAAAADzGQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4072,
					1,
					"insert_completion",
					{
						"completion": "MatrixFourFour",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "MatrixFourFour"
					},
					"AgAAAPMZAAAAAAAA8xkAAAAAAAAEAAAATWF0cvMZAAAAAAAAARoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA9xkAAAAAAAD3GQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4073,
					1,
					"insert",
					{
						"characters": "::apply_"
					},
					"CAAAAAEaAAAAAAAAAhoAAAAAAAAAAAAAAhoAAAAAAAADGgAAAAAAAAAAAAADGgAAAAAAAAQaAAAAAAAAAAAAAAQaAAAAAAAABRoAAAAAAAAAAAAABRoAAAAAAAAGGgAAAAAAAAAAAAAGGgAAAAAAAAcaAAAAAAAAAAAAAAcaAAAAAAAACBoAAAAAAAAAAAAACBoAAAAAAAAJGgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAARoAAAAAAAABGgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4078,
					1,
					"left_delete",
					null,
					"AQAAAIwJAAAAAAAAjAkAAAAAAAABAAAAdg",
					"AgAAAAAAAAABAAAAjQkAAAAAAACNCQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4079,
					1,
					"insert",
					{
						"characters": "_"
					},
					"AQAAAIwJAAAAAAAAjQkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAjAkAAAAAAACMCQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4080,
					1,
					"insert",
					{
						"characters": "vec_three"
					},
					"CQAAAI0JAAAAAAAAjgkAAAAAAAAAAAAAjgkAAAAAAACPCQAAAAAAAAAAAACPCQAAAAAAAJAJAAAAAAAAAAAAAJAJAAAAAAAAkQkAAAAAAAAAAAAAkQkAAAAAAACSCQAAAAAAAAAAAACSCQAAAAAAAJMJAAAAAAAAAAAAAJMJAAAAAAAAlAkAAAAAAAAAAAAAlAkAAAAAAACVCQAAAAAAAAAAAACVCQAAAAAAAJYJAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAjQkAAAAAAACNCQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4101,
					1,
					"insert",
					{
						"characters": "applyve"
					},
					"CAAAADMZAAAAAAAANBkAAAAAAAAAAAAANBkAAAAAAAA0GQAAAAAAAAkAAAB0cmFuc2xhdGU0GQAAAAAAADUZAAAAAAAAAAAAADUZAAAAAAAANhkAAAAAAAAAAAAANhkAAAAAAAA3GQAAAAAAAAAAAAA3GQAAAAAAADgZAAAAAAAAAAAAADgZAAAAAAAAORkAAAAAAAAAAAAAORkAAAAAAAA6GQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAPBkAAAAAAAAzGQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4102,
					1,
					"insert_completion",
					{
						"completion": "apply_vec_three",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "apply_vec_three"
					},
					"AgAAADMZAAAAAAAAMxkAAAAAAAAHAAAAYXBwbHl2ZTMZAAAAAAAAQhkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAOhkAAAAAAAA6GQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4110,
					1,
					"left_delete",
					null,
					"AQAAABIaAAAAAAAAEhoAAAAAAAAGAAAAYXBwbHlf",
					"AgAAAAAAAAABAAAAGBoAAAAAAAASGgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4111,
					1,
					"paste",
					null,
					"AQAAABIaAAAAAAAAIRoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAEhoAAAAAAAASGgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4112,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAACEaAAAAAAAAIxoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAIRoAAAAAAAAhGgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4114,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAACMaAAAAAAAAJBoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAIxoAAAAAAAAjGgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4116,
					1,
					"insert",
					{
						"characters": "&a,"
					},
					"AwAAACIaAAAAAAAAIxoAAAAAAAAAAAAAIxoAAAAAAAAkGgAAAAAAAAAAAAAkGgAAAAAAACUaAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAIhoAAAAAAAAiGgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4117,
					1,
					"insert",
					{
						"characters": " &point"
					},
					"BwAAACUaAAAAAAAAJhoAAAAAAAAAAAAAJhoAAAAAAAAnGgAAAAAAAAAAAAAnGgAAAAAAACgaAAAAAAAAAAAAACgaAAAAAAAAKRoAAAAAAAAAAAAAKRoAAAAAAAAqGgAAAAAAAAAAAAAqGgAAAAAAACsaAAAAAAAAAAAAACsaAAAAAAAALBoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAJRoAAAAAAAAlGgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4121,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAC4aAAAAAAAALxoAAAAAAAAAAAAALxoAAAAAAAA3GgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAALhoAAAAAAAAuGgAAAAAAAP///////+9/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4123,
					1,
					"cut",
					null,
					"AQAAAO8ZAAAAAAAA7xkAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAA7xkAAAAAAADvGQAAAAAAAAAAAAAAAE1AAQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4125,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAC4aAAAAAAAALxoAAAAAAAAAAAAALxoAAAAAAAAwGgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAALhoAAAAAAAAuGgAAAAAAAAAAAAAAAAAAAQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4127,
					1,
					"reindent",
					null,
					"AQAAAC8aAAAAAAAANxoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAALxoAAAAAAAAvGgAAAAAAAAAAAAAAAAAAAQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4128,
					1,
					"insert",
					{
						"characters": "assert"
					},
					"BwAAADcaAAAAAAAAOBoAAAAAAAAAAAAAORoAAAAAAAA5GgAAAAAAAAgAAAAgICAgICAgIDgaAAAAAAAAORoAAAAAAAAAAAAAORoAAAAAAAA6GgAAAAAAAAAAAAA6GgAAAAAAADsaAAAAAAAAAAAAADsaAAAAAAAAPBoAAAAAAAAAAAAAPBoAAAAAAAA9GgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAANxoAAAAAAAA3GgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4129,
					1,
					"insert_completion",
					{
						"completion": "assert!(${1});",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "assert"
					},
					"AgAAADcaAAAAAAAANxoAAAAAAAAGAAAAYXNzZXJ0NxoAAAAAAABBGgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAPRoAAAAAAAA9GgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4131,
					1,
					"insert",
					{
						"characters": "_eq"
					},
					"AwAAAD0aAAAAAAAAPhoAAAAAAAAAAAAAPhoAAAAAAAA/GgAAAAAAAAAAAAA/GgAAAAAAAEAaAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAPRoAAAAAAAA9GgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4134,
					1,
					"insert",
					{
						"characters": "res.x,"
					},
					"BgAAAEIaAAAAAAAAQxoAAAAAAAAAAAAAQxoAAAAAAABEGgAAAAAAAAAAAABEGgAAAAAAAEUaAAAAAAAAAAAAAEUaAAAAAAAARhoAAAAAAAAAAAAARhoAAAAAAABHGgAAAAAAAAAAAABHGgAAAAAAAEgaAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQhoAAAAAAABCGgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4135,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEgaAAAAAAAASRoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAASBoAAAAAAABIGgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4136,
					1,
					"insert",
					{
						"characters": "3.0"
					},
					"AwAAAEkaAAAAAAAAShoAAAAAAAAAAAAAShoAAAAAAABLGgAAAAAAAAAAAABLGgAAAAAAAEwaAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAASRoAAAAAAABJGgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4137,
					2,
					"rust_fmt_format_buffer",
					null,
					"AQAAAE8aAAAAAAAATxoAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAATBoAAAAAAABMGgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4146,
					1,
					"insert",
					{
						"characters": "&"
					},
					"AQAAALIJAAAAAAAAswkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAsgkAAAAAAACyCQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4153,
					1,
					"left_delete",
					null,
					"AQAAAGULAAAAAAAAZQsAAAAAAAABAAAAMQ",
					"AgAAAAAAAAABAAAAZgsAAAAAAABmCwAAAAAAAAAAAAAAYGdAAQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4154,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AQAAAGULAAAAAAAAZgsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAZQsAAAAAAABlCwAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4157,
					1,
					"left_delete",
					null,
					"AQAAAIsLAAAAAAAAiwsAAAAAAAABAAAAMQ",
					"AgAAAAAAAAABAAAAjAsAAAAAAACMCwAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4158,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AQAAAIsLAAAAAAAAjAsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAiwsAAAAAAACLCwAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4162,
					1,
					"left_delete",
					null,
					"AQAAALELAAAAAAAAsQsAAAAAAAABAAAAMQ",
					"AgAAAAAAAAABAAAAsgsAAAAAAACyCwAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4163,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AQAAALELAAAAAAAAsgsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAsQsAAAAAAACxCwAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4165,
					1,
					"left_delete",
					null,
					"AQAAANcLAAAAAAAA1wsAAAAAAAABAAAAMQ",
					"AgAAAAAAAAABAAAA2AsAAAAAAADYCwAAAAAAAAAAAAAAoGVAAQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4166,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AQAAANcLAAAAAAAA2AsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA1wsAAAAAAADXCwAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4203,
					1,
					"left_delete",
					null,
					"AQAAACsKAAAAAAAAKwoAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAALAoAAAAAAAAsCgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4209,
					3,
					"left_delete",
					null,
					"DAAAAKgKAAAAAAAAqAoAAAAAAAABAAAAIIIKAAAAAAAAggoAAAAAAAABAAAAIFwKAAAAAAAAXAoAAAAAAAABAAAAIDYKAAAAAAAANgoAAAAAAAABAAAAIKQKAAAAAAAApAoAAAAAAAABAAAALH8KAAAAAAAAfwoAAAAAAAABAAAALFoKAAAAAAAAWgoAAAAAAAABAAAALDUKAAAAAAAANQoAAAAAAAABAAAALKAKAAAAAAAAoAoAAAAAAAABAAAAMHwKAAAAAAAAfAoAAAAAAAABAAAAMFgKAAAAAAAAWAoAAAAAAAABAAAAMDQKAAAAAAAANAoAAAAAAAABAAAAMA",
					"AgAAAAAAAAAEAAAANwoAAAAAAAA3CgAAAAAAAAAAAAAAAPC/XQoAAAAAAABdCgAAAAAAAAAAAAAAAPC/gwoAAAAAAACDCgAAAAAAAAAAAAAAAPC/qQoAAAAAAACpCgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4211,
					1,
					"insert",
					{
						"characters": ","
					},
					"BAAAAJ4KAAAAAAAAnwoAAAAAAAAAAAAAewoAAAAAAAB8CgAAAAAAAAAAAABYCgAAAAAAAFkKAAAAAAAAAAAAADUKAAAAAAAANgoAAAAAAAAAAAAA",
					"AgAAAAAAAAAEAAAANQoAAAAAAAA1CgAAAAAAAAAAAAAAAPC/WAoAAAAAAABYCgAAAAAAAAAAAAAAAPC/ewoAAAAAAAB7CgAAAAAAAAAAAAAAAPC/ngoAAAAAAACeCgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4212,
					1,
					"insert",
					{
						"characters": " 0"
					},
					"CAAAAKIKAAAAAAAAowoAAAAAAAAAAAAAfgoAAAAAAAB/CgAAAAAAAAAAAABaCgAAAAAAAFsKAAAAAAAAAAAAADYKAAAAAAAANwoAAAAAAAAAAAAApgoAAAAAAACnCgAAAAAAAAAAAACBCgAAAAAAAIIKAAAAAAAAAAAAAFwKAAAAAAAAXQoAAAAAAAAAAAAANwoAAAAAAAA4CgAAAAAAAAAAAAA",
					"AgAAAAAAAAAEAAAANgoAAAAAAAA2CgAAAAAAAAAAAAAAAPC/WgoAAAAAAABaCgAAAAAAAAAAAAAAAPC/fgoAAAAAAAB+CgAAAAAAAAAAAAAAAPC/ogoAAAAAAACiCgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4219,
					3,
					"left_delete",
					null,
					"DAAAAEALAAAAAAAAQAsAAAAAAAABAAAAIBoLAAAAAAAAGgsAAAAAAAABAAAAIPQKAAAAAAAA9AoAAAAAAAABAAAAIM4KAAAAAAAAzgoAAAAAAAABAAAAIDwLAAAAAAAAPAsAAAAAAAABAAAALBcLAAAAAAAAFwsAAAAAAAABAAAALPIKAAAAAAAA8goAAAAAAAABAAAALM0KAAAAAAAAzQoAAAAAAAABAAAALDgLAAAAAAAAOAsAAAAAAAABAAAAMRQLAAAAAAAAFAsAAAAAAAABAAAAMfAKAAAAAAAA8AoAAAAAAAABAAAAMcwKAAAAAAAAzAoAAAAAAAABAAAAMQ",
					"AgAAAAAAAAAEAAAAzwoAAAAAAADPCgAAAAAAAAAAAAAAAPC/9QoAAAAAAAD1CgAAAAAAAAAAAAAAAPC/GwsAAAAAAAAbCwAAAAAAAAAAAAAAAPC/QQsAAAAAAABBCwAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4221,
					1,
					"insert",
					{
						"characters": ","
					},
					"BAAAADYLAAAAAAAANwsAAAAAAAAAAAAAEwsAAAAAAAAUCwAAAAAAAAAAAADwCgAAAAAAAPEKAAAAAAAAAAAAAM0KAAAAAAAAzgoAAAAAAAAAAAAA",
					"AgAAAAAAAAAEAAAAzQoAAAAAAADNCgAAAAAAAAAAAAAAAPC/8AoAAAAAAADwCgAAAAAAAAAAAAAAAPC/EwsAAAAAAAATCwAAAAAAAAAAAAAAAPC/NgsAAAAAAAA2CwAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4222,
					1,
					"insert",
					{
						"characters": " 1"
					},
					"CAAAADoLAAAAAAAAOwsAAAAAAAAAAAAAFgsAAAAAAAAXCwAAAAAAAAAAAADyCgAAAAAAAPMKAAAAAAAAAAAAAM4KAAAAAAAAzwoAAAAAAAAAAAAAPgsAAAAAAAA/CwAAAAAAAAAAAAAZCwAAAAAAABoLAAAAAAAAAAAAAPQKAAAAAAAA9QoAAAAAAAAAAAAAzwoAAAAAAADQCgAAAAAAAAAAAAA",
					"AgAAAAAAAAAEAAAAzgoAAAAAAADOCgAAAAAAAAAAAAAAAPC/8goAAAAAAADyCgAAAAAAAAAAAAAAAPC/FgsAAAAAAAAWCwAAAAAAAAAAAAAAAPC/OgsAAAAAAAA6CwAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4227,
					2,
					"left_delete",
					null,
					"CAAAANcLAAAAAAAA1wsAAAAAAAABAAAALLELAAAAAAAAsQsAAAAAAAABAAAALIsLAAAAAAAAiwsAAAAAAAABAAAALGULAAAAAAAAZQsAAAAAAAABAAAALNMLAAAAAAAA0wsAAAAAAAABAAAAMq4LAAAAAAAArgsAAAAAAAABAAAAMokLAAAAAAAAiQsAAAAAAAABAAAAMmQLAAAAAAAAZAsAAAAAAAABAAAAMg",
					"AgAAAAAAAAAEAAAAZgsAAAAAAABmCwAAAAAAAAAAAAAAAPC/jAsAAAAAAACMCwAAAAAAAAAAAAAAAPC/sgsAAAAAAACyCwAAAAAAAAAAAAAAAPC/2AsAAAAAAADYCwAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4229,
					1,
					"left_delete",
					null,
					"BAAAANALAAAAAAAA0AsAAAAAAAABAAAAIKwLAAAAAAAArAsAAAAAAAABAAAAIIgLAAAAAAAAiAsAAAAAAAABAAAAIGQLAAAAAAAAZAsAAAAAAAABAAAAIA",
					"AgAAAAAAAAAEAAAAZQsAAAAAAABlCwAAAAAAAAAAAAAAAPC/iQsAAAAAAACJCwAAAAAAAAAAAAAAAPC/rQsAAAAAAACtCwAAAAAAAAAAAAAAAPC/0QsAAAAAAADRCwAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4231,
					1,
					"insert",
					{
						"characters": ","
					},
					"BAAAAM4LAAAAAAAAzwsAAAAAAAAAAAAAqwsAAAAAAACsCwAAAAAAAAAAAACICwAAAAAAAIkLAAAAAAAAAAAAAGULAAAAAAAAZgsAAAAAAAAAAAAA",
					"AgAAAAAAAAAEAAAAZQsAAAAAAABlCwAAAAAAAAAAAAAAAPC/iAsAAAAAAACICwAAAAAAAAAAAAAAAPC/qwsAAAAAAACrCwAAAAAAAAAAAAAAAPC/zgsAAAAAAADOCwAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4232,
					1,
					"insert",
					{
						"characters": " 2"
					},
					"CAAAANILAAAAAAAA0wsAAAAAAAAAAAAArgsAAAAAAACvCwAAAAAAAAAAAACKCwAAAAAAAIsLAAAAAAAAAAAAAGYLAAAAAAAAZwsAAAAAAAAAAAAA1gsAAAAAAADXCwAAAAAAAAAAAACxCwAAAAAAALILAAAAAAAAAAAAAIwLAAAAAAAAjQsAAAAAAAAAAAAAZwsAAAAAAABoCwAAAAAAAAAAAAA",
					"AgAAAAAAAAAEAAAAZgsAAAAAAABmCwAAAAAAAAAAAAAAAPC/igsAAAAAAACKCwAAAAAAAAAAAAAAAPC/rgsAAAAAAACuCwAAAAAAAAAAAAAAAPC/0gsAAAAAAADSCwAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4233,
					2,
					"rust_fmt_format_buffer",
					null,
					"AQAAACsKAAAAAAAALAoAAAAAAAAAAAAA",
					"AgAAAAAAAAAEAAAAaAsAAAAAAABoCwAAAAAAAAAAAAAAAPC/jgsAAAAAAACOCwAAAAAAAAAAAAAAAPC/tAsAAAAAAAC0CwAAAAAAAAAAAAAAAPC/2gsAAAAAAADaCwAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4241,
					1,
					"paste",
					null,
					"AQAAADAaAAAAAAAAUBoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAMBoAAAAAAAAwGgAAAAAAAAAAAAAAAAAAAQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4244,
					1,
					"left_delete",
					null,
					"AQAAAGwaAAAAAAAAbBoAAAAAAAABAAAAMA",
					"AgAAAAAAAAABAAAAbRoAAAAAAABtGgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4245,
					1,
					"insert",
					{
						"characters": "5"
					},
					"AQAAAGwaAAAAAAAAbRoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAbBoAAAAAAABsGgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4247,
					1,
					"paste",
					null,
					"AQAAAFAaAAAAAAAAcBoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAbRoAAAAAAABtGgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4251,
					1,
					"left_delete",
					null,
					"AQAAAGcaAAAAAAAAZxoAAAAAAAABAAAAeA",
					"AgAAAAAAAAABAAAAaBoAAAAAAABoGgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4252,
					1,
					"insert",
					{
						"characters": "y"
					},
					"AQAAAGcaAAAAAAAAaBoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAZxoAAAAAAABnGgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4254,
					1,
					"left_delete",
					null,
					"AQAAAIcaAAAAAAAAhxoAAAAAAAABAAAAeA",
					"AgAAAAAAAAABAAAAiBoAAAAAAACIGgAAAAAAAAAAAAAAoGVAAQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4255,
					1,
					"insert",
					{
						"characters": "z"
					},
					"AQAAAIcaAAAAAAAAiBoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAhxoAAAAAAACHGgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4264,
					3,
					"left_delete",
					null,
					"AwAAAIwaAAAAAAAAjBoAAAAAAAABAAAANYsaAAAAAAAAixoAAAAAAAABAAAALooaAAAAAAAAihoAAAAAAAABAAAAMw",
					"AgAAAAAAAAABAAAAjRoAAAAAAACNGgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4265,
					1,
					"insert",
					{
						"characters": "127.123"
					},
					"BwAAAIoaAAAAAAAAixoAAAAAAAAAAAAAixoAAAAAAACMGgAAAAAAAAAAAACMGgAAAAAAAI0aAAAAAAAAAAAAAI0aAAAAAAAAjhoAAAAAAAAAAAAAjhoAAAAAAACPGgAAAAAAAAAAAACPGgAAAAAAAJAaAAAAAAAAAAAAAJAaAAAAAAAAkRoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAihoAAAAAAACKGgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4288,
					1,
					"insert",
					{
						"characters": "m44"
					},
					"BAAAADwAAAAAAAAAPQAAAAAAAAAAAAAAPQAAAAAAAAA9AAAAAAAAAA4AAABNYXRyaXhGb3VyRm91cj0AAAAAAAAAPgAAAAAAAAAAAAAAPgAAAAAAAAA/AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAASgAAAAAAAAA8AAAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAAAAAAAAAOoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4297,
					1,
					"paste",
					null,
					"AgAAADwAAAAAAAAAPwAAAAAAAAAAAAAAPwAAAAAAAAA/AAAAAAAAAAMAAABtNDQ",
					"AgAAAAAAAAABAAAAPAAAAAAAAAA/AAAAAAAAAAAAAAAAAPC/AQAAAAEAAADfAAAAAAAAAN8AAAAAAAAAAAAAAAAA8L8"
				],
				[
					4301,
					1,
					"paste",
					null,
					"AgAAAGMAAAAAAAAAZgAAAAAAAAAAAAAAZgAAAAAAAABmAAAAAAAAAA4AAABNYXRyaXhGb3VyRm91cg",
					"AgAAAAAAAAABAAAAcQAAAAAAAABjAAAAAAAAAAAAAAAAAPC/AQAAAAEAAADfAAAAAAAAAN8AAAAAAAAAAAAAAAAA8L8"
				],
				[
					4307,
					1,
					"paste",
					null,
					"AgAAAJIAAAAAAAAAlQAAAAAAAAAAAAAAlQAAAAAAAACVAAAAAAAAAA4AAABNYXRyaXhGb3VyRm91cg",
					"AgAAAAAAAAABAAAAoAAAAAAAAACSAAAAAAAAAAAAAAAAAPC/AQAAAAEAAADUAAAAAAAAANQAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4311,
					1,
					"paste",
					null,
					"AgAAAAQBAAAAAAAABwEAAAAAAAAAAAAABwEAAAAAAAAHAQAAAAAAAA4AAABNYXRyaXhGb3VyRm91cg",
					"AgAAAAAAAAABAAAAEgEAAAAAAAAEAQAAAAAAAAAAAAAAAPC/AQAAAAEAAADJAAAAAAAAAMkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4316,
					1,
					"paste",
					null,
					"AgAAAAACAAAAAAAAAwIAAAAAAAAAAAAAAwIAAAAAAAADAgAAAAAAAA4AAABNYXRyaXhGb3VyRm91cg",
					"AgAAAAAAAAABAAAAAAIAAAAAAAAOAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADJAAAAAAAAAMkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4321,
					1,
					"paste",
					null,
					"AgAAAA0DAAAAAAAAEAMAAAAAAAAAAAAAEAMAAAAAAAAQAwAAAAAAAA4AAABNYXRyaXhGb3VyRm91cg",
					"AgAAAAAAAAABAAAADQMAAAAAAAAbAwAAAAAAAAAAAAAAAPC/AQAAAAEAAADJAAAAAAAAAMkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4326,
					1,
					"paste",
					null,
					"AgAAAAEEAAAAAAAABAQAAAAAAAAAAAAABAQAAAAAAAAEBAAAAAAAAA4AAABNYXRyaXhGb3VyRm91cg",
					"AgAAAAAAAAABAAAAAQQAAAAAAAAPBAAAAAAAAAAAAAAAAPC/AQAAAAEAAADJAAAAAAAAAMkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4331,
					1,
					"paste",
					null,
					"AgAAAEIFAAAAAAAARQUAAAAAAAAAAAAARQUAAAAAAABFBQAAAAAAAA4AAABNYXRyaXhGb3VyRm91cg",
					"AgAAAAAAAAABAAAAQgUAAAAAAABQBQAAAAAAAAAAAAAAAPC/AQAAAAEAAADJAAAAAAAAAMkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4336,
					1,
					"paste",
					null,
					"AgAAAIMGAAAAAAAAhgYAAAAAAAAAAAAAhgYAAAAAAACGBgAAAAAAAA4AAABNYXRyaXhGb3VyRm91cg",
					"AgAAAAAAAAABAAAAgwYAAAAAAACRBgAAAAAAAAAAAAAAAPC/AQAAAAEAAADJAAAAAAAAAMkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4341,
					1,
					"paste",
					null,
					"AgAAANYHAAAAAAAA2QcAAAAAAAAAAAAA2QcAAAAAAADZBwAAAAAAAA4AAABNYXRyaXhGb3VyRm91cg",
					"AgAAAAAAAAABAAAA1gcAAAAAAADkBwAAAAAAAAAAAAAAAPC/AQAAAAEAAADJAAAAAAAAAMkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4348,
					1,
					"paste",
					null,
					"AgAAAJIHAAAAAAAAlQcAAAAAAAAAAAAAlQcAAAAAAACVBwAAAAAAAA4AAABNYXRyaXhGb3VyRm91cg",
					"AgAAAAAAAAABAAAAkgcAAAAAAACgBwAAAAAAAAAAAAAAAPC/AQAAAAEAAADJAAAAAAAAAMkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4355,
					1,
					"paste",
					null,
					"AgAAAJsHAAAAAAAAngcAAAAAAAAAAAAAngcAAAAAAACeBwAAAAAAAA4AAABNYXRyaXhGb3VyRm91cg",
					"AgAAAAAAAAABAAAAmwcAAAAAAACpBwAAAAAAAAAAAAAAAPC/AQAAAAEAAADJAAAAAAAAAMkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4365,
					1,
					"",
					null,
					"CwAAAH4ZAAAAAAAAgRkAAAAAAAAOAAAATWF0cml4Rm91ckZvdXLYGAAAAAAAANsYAAAAAAAADgAAAE1hdHJpeEZvdXJGb3VyrRQAAAAAAACwFAAAAAAAAA4AAABNYXRyaXhGb3VyRm91co4RAAAAAAAAkREAAAAAAAAOAAAATWF0cml4Rm91ckZvdXKWEAAAAAAAAJkQAAAAAAAADgAAAE1hdHJpeEZvdXJGb3VyZRAAAAAAAABoEAAAAAAAAA4AAABNYXRyaXhGb3VyRm91cvEOAAAAAAAA9A4AAAAAAAAOAAAATWF0cml4Rm91ckZvdXIFDgAAAAAAAAgOAAAAAAAADgAAAE1hdHJpeEZvdXJGb3Vywg0AAAAAAADFDQAAAAAAAA4AAABNYXRyaXhGb3VyRm91crsMAAAAAAAAvgwAAAAAAAAOAAAATWF0cml4Rm91ckZvdXIZCQAAAAAAABwJAAAAAAAADgAAAE1hdHJpeEZvdXJGb3Vy",
					"AgAAAAAAAAABAAAAGQkAAAAAAAAnCQAAAAAAAAAAAAAAAPC/AQAAAAEAAADJAAAAAAAAAMkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4376,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAC4AAAAAAAAALwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAALgAAAAAAAAAuAAAAAAAAAAAAAAAAAPC/AQAAAAEAAADODQAAAAAAAM4NAAAAAAAAAAAAAAAA8L8"
				],
				[
					4377,
					1,
					"insert",
					{
						"characters": " Clone"
					},
					"BgAAAC8AAAAAAAAAMAAAAAAAAAAAAAAAMAAAAAAAAAAxAAAAAAAAAAAAAAAxAAAAAAAAADIAAAAAAAAAAAAAADIAAAAAAAAAMwAAAAAAAAAAAAAAMwAAAAAAAAA0AAAAAAAAAAAAAAA0AAAAAAAAADUAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAALwAAAAAAAAAvAAAAAAAAAAAAAAAAAPC/AQAAAAEAAADPDQAAAAAAAM8NAAAAAAAAAAAAAAAA8L8"
				],
				[
					4390,
					1,
					"insert",
					{
						"characters": "pub"
					},
					"AwAAAE0AAAAAAAAATgAAAAAAAAAAAAAATgAAAAAAAABPAAAAAAAAAAAAAABPAAAAAAAAAFAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAATQAAAAAAAABNAAAAAAAAAAAAAAAAAD1AAQAAAAEAAADVDQAAAAAAANUNAAAAAAAAAAAAAAAA8L8"
				],
				[
					4391,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFAAAAAAAAAAUQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAUAAAAAAAAABQAAAAAAAAAAAAAAAAAPC/AQAAAAEAAADYDQAAAAAAANgNAAAAAAAAAAAAAAAA8L8"
				],
				[
					4392,
					4,
					"left_delete",
					null,
					"BAAAAFAAAAAAAAAAUAAAAAAAAAABAAAAIE8AAAAAAAAATwAAAAAAAAABAAAAYk4AAAAAAAAATgAAAAAAAAABAAAAdU0AAAAAAAAATQAAAAAAAAABAAAAcA",
					"AgAAAAAAAAABAAAAUQAAAAAAAABRAAAAAAAAAAAAAAAAAPC/AQAAAAEAAADZDQAAAAAAANkNAAAAAAAAAAAAAAAA8L8"
				],
				[
					4393,
					1,
					"insert",
					{
						"characters": "pub"
					},
					"AwAAAE0AAAAAAAAATgAAAAAAAAAAAAAATgAAAAAAAABPAAAAAAAAAAAAAABPAAAAAAAAAFAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAATQAAAAAAAABNAAAAAAAAAAAAAAAAAPC/AQAAAAEAAADVDQAAAAAAANUNAAAAAAAAAAAAAAAA8L8"
				],
				[
					4394,
					3,
					"left_delete",
					null,
					"AwAAAE8AAAAAAAAATwAAAAAAAAABAAAAYk4AAAAAAAAATgAAAAAAAAABAAAAdU0AAAAAAAAATQAAAAAAAAABAAAAcA",
					"AgAAAAAAAAABAAAAUAAAAAAAAABQAAAAAAAAAAAAAAAAAPC/AQAAAAEAAADYDQAAAAAAANgNAAAAAAAAAAAAAAAA8L8"
				],
				[
					4397,
					1,
					"insert",
					{
						"characters": "pub"
					},
					"AwAAAE0AAAAAAAAATgAAAAAAAAAAAAAATgAAAAAAAABPAAAAAAAAAAAAAABPAAAAAAAAAFAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAATQAAAAAAAABNAAAAAAAAAAAAAAAAAPC/AQAAAAEAAADVDQAAAAAAANUNAAAAAAAAAAAAAAAA8L8"
				],
				[
					4398,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFAAAAAAAAAAUQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAUAAAAAAAAABQAAAAAAAAAAAAAAAAAPC/AQAAAAEAAADYDQAAAAAAANgNAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "gengar_engine/src/engine/vectors.rs",
			"settings":
			{
				"buffer_size": 663,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					4,
					1,
					"paste",
					null,
					"AgAAAAsAAAAAAAAAGAAAAAAAAAAAAAAAGAAAAAAAAAAYAAAAAAAAABAAAABWZWN0b3JUaHJlZUZsb2F0",
					"AQAAAAAAAAABAAAAGwAAAAAAAAALAAAAAAAAAAAAAAAAAPC/"
				],
				[
					9,
					1,
					"paste",
					null,
					"AgAAAFMAAAAAAAAAYAAAAAAAAAAAAAAAYAAAAAAAAABgAAAAAAAAABAAAABWZWN0b3JUaHJlZUZsb2F0",
					"AQAAAAAAAAABAAAAUwAAAAAAAABjAAAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					1,
					"paste",
					null,
					"AgAAAKgAAAAAAAAAtQAAAAAAAAAAAAAAtQAAAAAAAAC1AAAAAAAAABAAAABWZWN0b3JUaHJlZUZsb2F0",
					"AQAAAAAAAAABAAAAqAAAAAAAAAC4AAAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"paste",
					null,
					"AgAAAI0AAAAAAAAAmgAAAAAAAAAAAAAAmgAAAAAAAACaAAAAAAAAABAAAABWZWN0b3JUaHJlZUZsb2F0",
					"AQAAAAAAAAABAAAAjQAAAAAAAACdAAAAAAAAAAAAAAAAAPC/"
				],
				[
					25,
					1,
					"insert",
					{
						"characters": "VecThFloat"
					},
					"CwAAAAsAAAAAAAAADAAAAAAAAAAAAAAADAAAAAAAAAAMAAAAAAAAAA0AAABWZWNUaHJlZUZsb2F0DAAAAAAAAAANAAAAAAAAAAAAAAANAAAAAAAAAA4AAAAAAAAAAAAAAA4AAAAAAAAADwAAAAAAAAAAAAAADwAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAABEAAAAAAAAAAAAAABEAAAAAAAAAEgAAAAAAAAAAAAAAEgAAAAAAAAATAAAAAAAAAAAAAAATAAAAAAAAABQAAAAAAAAAAAAAABQAAAAAAAAAFQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACwAAAAAAAAAYAAAAAAAAAAAAAAAAAPC/"
				],
				[
					26,
					7,
					"left_delete",
					null,
					"BwAAABQAAAAAAAAAFAAAAAAAAAABAAAAdBMAAAAAAAAAEwAAAAAAAAABAAAAYRIAAAAAAAAAEgAAAAAAAAABAAAAbxEAAAAAAAAAEQAAAAAAAAABAAAAbBAAAAAAAAAAEAAAAAAAAAABAAAARg8AAAAAAAAADwAAAAAAAAABAAAAaA4AAAAAAAAADgAAAAAAAAABAAAAVA",
					"AQAAAAAAAAABAAAAFQAAAAAAAAAVAAAAAAAAAAAAAAAAAPC/"
				],
				[
					27,
					1,
					"insert",
					{
						"characters": "Trw"
					},
					"AwAAAA4AAAAAAAAADwAAAAAAAAAAAAAADwAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAABEAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADgAAAAAAAAAOAAAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					2,
					"left_delete",
					null,
					"AgAAABAAAAAAAAAAEAAAAAAAAAABAAAAdw8AAAAAAAAADwAAAAAAAAABAAAAcg",
					"AQAAAAAAAAABAAAAEQAAAAAAAAARAAAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					1,
					"insert",
					{
						"characters": "hreeFLoat"
					},
					"CQAAAA8AAAAAAAAAEAAAAAAAAAAAAAAAEAAAAAAAAAARAAAAAAAAAAAAAAARAAAAAAAAABIAAAAAAAAAAAAAABIAAAAAAAAAEwAAAAAAAAAAAAAAEwAAAAAAAAAUAAAAAAAAAAAAAAAUAAAAAAAAABUAAAAAAAAAAAAAABUAAAAAAAAAFgAAAAAAAAAAAAAAFgAAAAAAAAAXAAAAAAAAAAAAAAAXAAAAAAAAABgAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADwAAAAAAAAAPAAAAAAAAAAAAAAAAAPC/"
				],
				[
					30,
					4,
					"left_delete",
					null,
					"BAAAABcAAAAAAAAAFwAAAAAAAAABAAAAdBYAAAAAAAAAFgAAAAAAAAABAAAAYRUAAAAAAAAAFQAAAAAAAAABAAAAbxQAAAAAAAAAFAAAAAAAAAABAAAATA",
					"AQAAAAAAAAABAAAAGAAAAAAAAAAYAAAAAAAAAAAAAAAAAPC/"
				],
				[
					31,
					1,
					"insert",
					{
						"characters": "loat"
					},
					"BAAAABQAAAAAAAAAFQAAAAAAAAAAAAAAFQAAAAAAAAAWAAAAAAAAAAAAAAAWAAAAAAAAABcAAAAAAAAAAAAAABcAAAAAAAAAGAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFAAAAAAAAAAUAAAAAAAAAAAAAAAAAPC/"
				],
				[
					33,
					1,
					"insert",
					{
						"characters": "VecThreeFloat"
					},
					"DgAAAAsAAAAAAAAADAAAAAAAAAAAAAAADAAAAAAAAAAMAAAAAAAAAA0AAABWZWNUaHJlZUZsb2F0DAAAAAAAAAANAAAAAAAAAAAAAAANAAAAAAAAAA4AAAAAAAAAAAAAAA4AAAAAAAAADwAAAAAAAAAAAAAADwAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAABEAAAAAAAAAAAAAABEAAAAAAAAAEgAAAAAAAAAAAAAAEgAAAAAAAAATAAAAAAAAAAAAAAATAAAAAAAAABQAAAAAAAAAAAAAABQAAAAAAAAAFQAAAAAAAAAAAAAAFQAAAAAAAAAWAAAAAAAAAAAAAAAWAAAAAAAAABcAAAAAAAAAAAAAABcAAAAAAAAAGAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGAAAAAAAAAALAAAAAAAAAAAAAAAAAPC/"
				],
				[
					37,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAAAAAAAAAAAAAQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					39,
					1,
					"paste",
					null,
					"AQAAAAAAAAAAAAAACgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
				],
				[
					43,
					2,
					"toggle_comment",
					{
						"block": false
					},
					"AgAAAAAAAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAvLyA",
					"AQAAAAAAAAABAAAACgAAAAAAAAAKAAAAAAAAAAAAAAAAAPC/"
				],
				[
					50,
					1,
					"cut",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAAALAAAAI1tyZXByKEMpXQo",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFtA"
				],
				[
					55,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAMYAAAAAAAAAxwAAAAAAAAAAAAAAxwAAAAAAAADIAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxgAAAAAAAADGAAAAAAAAAAAAAAAAAEJA"
				],
				[
					56,
					1,
					"paste",
					null,
					"AQAAAMgAAAAAAAAA0wAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyAAAAAAAAADIAAAAAAAAAAAAAAAAAPC/"
				],
				[
					58,
					1,
					"insert",
					{
						"characters": "pub"
					},
					"AwAAANMAAAAAAAAA1AAAAAAAAAAAAAAA1AAAAAAAAADVAAAAAAAAAAAAAADVAAAAAAAAANYAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0wAAAAAAAADTAAAAAAAAAAAAAAAAAPC/"
				],
				[
					59,
					1,
					"insert",
					{
						"characters": " struct"
					},
					"BwAAANYAAAAAAAAA1wAAAAAAAAAAAAAA1wAAAAAAAADYAAAAAAAAAAAAAADYAAAAAAAAANkAAAAAAAAAAAAAANkAAAAAAAAA2gAAAAAAAAAAAAAA2gAAAAAAAADbAAAAAAAAAAAAAADbAAAAAAAAANwAAAAAAAAAAAAAANwAAAAAAAAA3QAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1gAAAAAAAADWAAAAAAAAAAAAAAAAAPC/"
				],
				[
					60,
					1,
					"insert",
					{
						"characters": " VecTGh"
					},
					"BwAAAN0AAAAAAAAA3gAAAAAAAAAAAAAA3gAAAAAAAADfAAAAAAAAAAAAAADfAAAAAAAAAOAAAAAAAAAAAAAAAOAAAAAAAAAA4QAAAAAAAAAAAAAA4QAAAAAAAADiAAAAAAAAAAAAAADiAAAAAAAAAOMAAAAAAAAAAAAAAOMAAAAAAAAA5AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3QAAAAAAAADdAAAAAAAAAAAAAAAAAPC/"
				],
				[
					61,
					2,
					"left_delete",
					null,
					"AgAAAOMAAAAAAAAA4wAAAAAAAAABAAAAaOIAAAAAAAAA4gAAAAAAAAABAAAARw",
					"AQAAAAAAAAABAAAA5AAAAAAAAADkAAAAAAAAAAAAAAAAAPC/"
				],
				[
					62,
					1,
					"insert",
					{
						"characters": "thr"
					},
					"AwAAAOIAAAAAAAAA4wAAAAAAAAAAAAAA4wAAAAAAAADkAAAAAAAAAAAAAADkAAAAAAAAAOUAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4gAAAAAAAADiAAAAAAAAAAAAAAAAAPC/"
				],
				[
					63,
					3,
					"left_delete",
					null,
					"AwAAAOQAAAAAAAAA5AAAAAAAAAABAAAAcuMAAAAAAAAA4wAAAAAAAAABAAAAaOIAAAAAAAAA4gAAAAAAAAABAAAAdA",
					"AQAAAAAAAAABAAAA5QAAAAAAAADlAAAAAAAAAAAAAAAAAPC/"
				],
				[
					64,
					1,
					"insert",
					{
						"characters": "hreeFloatC"
					},
					"CgAAAOIAAAAAAAAA4wAAAAAAAAAAAAAA4wAAAAAAAADkAAAAAAAAAAAAAADkAAAAAAAAAOUAAAAAAAAAAAAAAOUAAAAAAAAA5gAAAAAAAAAAAAAA5gAAAAAAAADnAAAAAAAAAAAAAADnAAAAAAAAAOgAAAAAAAAAAAAAAOgAAAAAAAAA6QAAAAAAAAAAAAAA6QAAAAAAAADqAAAAAAAAAAAAAADqAAAAAAAAAOsAAAAAAAAAAAAAAOsAAAAAAAAA7AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4gAAAAAAAADiAAAAAAAAAAAAAAAAAPC/"
				],
				[
					65,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOwAAAAAAAAA7QAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7AAAAAAAAADsAAAAAAAAAAAAAAAAAPC/"
				],
				[
					66,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAO0AAAAAAAAA7wAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7QAAAAAAAADtAAAAAAAAAAAAAAAAAPC/"
				],
				[
					67,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAAO4AAAAAAAAA7wAAAAAAAAAAAAAA7wAAAAAAAADwAAAAAAAAAAAAAADvAAAAAAAAAPMAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7gAAAAAAAADuAAAAAAAAAAAAAAAAAPC/"
				],
				[
					68,
					1,
					"rust_fmt_format_buffer",
					null,
					"AQAAAO4AAAAAAAAA7gAAAAAAAAAGAAAACiAgICAK",
					"AQAAAAAAAAABAAAA8wAAAAAAAADzAAAAAAAAAAAAAAAAAPC/"
				],
				[
					78,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAAO4AAAAAAAAA7wAAAAAAAAAAAAAA7wAAAAAAAADwAAAAAAAAAAAAAADvAAAAAAAAAPMAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7gAAAAAAAADuAAAAAAAAAAAAAAAAAPC/"
				],
				[
					79,
					1,
					"paste",
					null,
					"AQAAAPMAAAAAAAAAHgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8wAAAAAAAADzAAAAAAAAAAAAAAAAAPC/"
				],
				[
					82,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAACABAAAAAAAAIQEAAAAAAAAAAAAAIQEAAAAAAAAiAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIAEAAAAAAAAgAQAAAAAAAAAAAAAAAFtA"
				],
				[
					83,
					1,
					"rust_fmt_format_buffer",
					null,
					"AQAAACEBAAAAAAAAIQEAAAAAAAACAAAACgo",
					"AQAAAAAAAAABAAAAIgEAAAAAAAAiAQAAAAAAAAAAAAAAAPC/"
				],
				[
					86,
					1,
					"insert",
					{
						"characters": "\n//"
					},
					"AwAAAMcAAAAAAAAAyAAAAAAAAAAAAAAAyAAAAAAAAADJAAAAAAAAAAAAAADJAAAAAAAAAMoAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxwAAAAAAAADHAAAAAAAAAAAAAAAAAPC/"
				],
				[
					87,
					1,
					"insert",
					{
						"characters": " Used"
					},
					"BQAAAMoAAAAAAAAAywAAAAAAAAAAAAAAywAAAAAAAADMAAAAAAAAAAAAAADMAAAAAAAAAM0AAAAAAAAAAAAAAM0AAAAAAAAAzgAAAAAAAAAAAAAAzgAAAAAAAADPAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAygAAAAAAAADKAAAAAAAAAAAAAAAAAPC/"
				],
				[
					88,
					1,
					"insert",
					{
						"characters": " for"
					},
					"BAAAAM8AAAAAAAAA0AAAAAAAAAAAAAAA0AAAAAAAAADRAAAAAAAAAAAAAADRAAAAAAAAANIAAAAAAAAAAAAAANIAAAAAAAAA0wAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzwAAAAAAAADPAAAAAAAAAAAAAAAAAPC/"
				],
				[
					89,
					1,
					"insert",
					{
						"characters": " any"
					},
					"BAAAANMAAAAAAAAA1AAAAAAAAAAAAAAA1AAAAAAAAADVAAAAAAAAAAAAAADVAAAAAAAAANYAAAAAAAAAAAAAANYAAAAAAAAA1wAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0wAAAAAAAADTAAAAAAAAAAAAAAAAAPC/"
				],
				[
					90,
					1,
					"insert",
					{
						"characters": " c"
					},
					"AgAAANcAAAAAAAAA2AAAAAAAAAAAAAAA2AAAAAAAAADZAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1wAAAAAAAADXAAAAAAAAAAAAAAAAAPC/"
				],
				[
					91,
					1,
					"insert",
					{
						"characters": " conversion"
					},
					"CwAAANkAAAAAAAAA2gAAAAAAAAAAAAAA2gAAAAAAAADbAAAAAAAAAAAAAADbAAAAAAAAANwAAAAAAAAAAAAAANwAAAAAAAAA3QAAAAAAAAAAAAAA3QAAAAAAAADeAAAAAAAAAAAAAADeAAAAAAAAAN8AAAAAAAAAAAAAAN8AAAAAAAAA4AAAAAAAAAAAAAAA4AAAAAAAAADhAAAAAAAAAAAAAADhAAAAAAAAAOIAAAAAAAAAAAAAAOIAAAAAAAAA4wAAAAAAAAAAAAAA4wAAAAAAAADkAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2QAAAAAAAADZAAAAAAAAAAAAAAAAAPC/"
				],
				[
					94,
					1,
					"insert",
					{
						"characters": "ffi"
					},
					"BAAAANgAAAAAAAAA2QAAAAAAAAAAAAAA2QAAAAAAAADZAAAAAAAAAAwAAABjIGNvbnZlcnNpb27ZAAAAAAAAANoAAAAAAAAAAAAAANoAAAAAAAAA2wAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5AAAAAAAAADYAAAAAAAAAAAAAAAAAPC/"
				],
				[
					95,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANsAAAAAAAAA3AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2wAAAAAAAADbAAAAAAAAAAAAAAAAAPC/"
				],
				[
					96,
					4,
					"left_delete",
					null,
					"BAAAANsAAAAAAAAA2wAAAAAAAAABAAAAINoAAAAAAAAA2gAAAAAAAAABAAAAadkAAAAAAAAA2QAAAAAAAAABAAAAZtgAAAAAAAAA2AAAAAAAAAABAAAAZg",
					"AQAAAAAAAAABAAAA3AAAAAAAAADcAAAAAAAAAAAAAAAAAPC/"
				],
				[
					97,
					1,
					"insert",
					{
						"characters": "FFI"
					},
					"AwAAANgAAAAAAAAA2QAAAAAAAAAAAAAA2QAAAAAAAADaAAAAAAAAAAAAAADaAAAAAAAAANsAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2AAAAAAAAADYAAAAAAAAAAAAAAAAAPC/"
				],
				[
					98,
					1,
					"insert",
					{
						"characters": " C"
					},
					"AgAAANsAAAAAAAAA3AAAAAAAAAAAAAAA3AAAAAAAAADdAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2wAAAAAAAADbAAAAAAAAAAAAAAAAAPC/"
				],
				[
					99,
					1,
					"insert",
					{
						"characters": " stuffs"
					},
					"BwAAAN0AAAAAAAAA3gAAAAAAAAAAAAAA3gAAAAAAAADfAAAAAAAAAAAAAADfAAAAAAAAAOAAAAAAAAAAAAAAAOAAAAAAAAAA4QAAAAAAAAAAAAAA4QAAAAAAAADiAAAAAAAAAAAAAADiAAAAAAAAAOMAAAAAAAAAAAAAAOMAAAAAAAAA5AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3QAAAAAAAADdAAAAAAAAAAAAAAAAAPC/"
				],
				[
					100,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAOQAAAAAAAAA5QAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5AAAAAAAAADkAAAAAAAAAAAAAAAAAPC/"
				],
				[
					101,
					2,
					"left_delete",
					null,
					"AgAAAOQAAAAAAAAA5AAAAAAAAAABAAAAMOMAAAAAAAAA4wAAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAA5QAAAAAAAADlAAAAAAAAAAAAAAAAAPC/"
				],
				[
					102,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOMAAAAAAAAA5AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4wAAAAAAAADjAAAAAAAAAAAAAAAAAPC/"
				],
				[
					103,
					1,
					"left_delete",
					null,
					"AQAAAOMAAAAAAAAA4wAAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAA5AAAAAAAAADkAAAAAAAAAAAAAAAAAPC/"
				],
				[
					104,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAAOMAAAAAAAAA5AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4wAAAAAAAADjAAAAAAAAAAAAAAAAAPC/"
				],
				[
					105,
					1,
					"insert",
					{
						"characters": " Like"
					},
					"BQAAAOQAAAAAAAAA5QAAAAAAAAAAAAAA5QAAAAAAAADmAAAAAAAAAAAAAADmAAAAAAAAAOcAAAAAAAAAAAAAAOcAAAAAAAAA6AAAAAAAAAAAAAAA6AAAAAAAAADpAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5AAAAAAAAADkAAAAAAAAAAAAAAAAAPC/"
				],
				[
					107,
					1,
					"insert",
					{
						"characters": " opengl"
					},
					"BwAAAOkAAAAAAAAA6gAAAAAAAAAAAAAA6gAAAAAAAADrAAAAAAAAAAAAAADrAAAAAAAAAOwAAAAAAAAAAAAAAOwAAAAAAAAA7QAAAAAAAAAAAAAA7QAAAAAAAADuAAAAAAAAAAAAAADuAAAAAAAAAO8AAAAAAAAAAAAAAO8AAAAAAAAA8AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6QAAAAAAAADpAAAAAAAAAAAAAAAAAPC/"
				],
				[
					108,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAPAAAAAAAAAA8QAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8AAAAAAAAADwAAAAAAAAAAAAAAAAAPC/"
				],
				[
					110,
					1,
					"insert",
					{
						"characters": "graphics"
					},
					"CQAAAOoAAAAAAAAA6wAAAAAAAAAAAAAA6wAAAAAAAADrAAAAAAAAAAcAAABvcGVuZ2wg6wAAAAAAAADsAAAAAAAAAAAAAADsAAAAAAAAAO0AAAAAAAAAAAAAAO0AAAAAAAAA7gAAAAAAAAAAAAAA7gAAAAAAAADvAAAAAAAAAAAAAADvAAAAAAAAAPAAAAAAAAAAAAAAAPAAAAAAAAAA8QAAAAAAAAAAAAAA8QAAAAAAAADyAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8QAAAAAAAADqAAAAAAAAAAAAAAAAAPC/"
				],
				[
					111,
					1,
					"insert",
					{
						"characters": " rendering"
					},
					"CgAAAPIAAAAAAAAA8wAAAAAAAAAAAAAA8wAAAAAAAAD0AAAAAAAAAAAAAAD0AAAAAAAAAPUAAAAAAAAAAAAAAPUAAAAAAAAA9gAAAAAAAAAAAAAA9gAAAAAAAAD3AAAAAAAAAAAAAAD3AAAAAAAAAPgAAAAAAAAAAAAAAPgAAAAAAAAA+QAAAAAAAAAAAAAA+QAAAAAAAAD6AAAAAAAAAAAAAAD6AAAAAAAAAPsAAAAAAAAAAAAAAPsAAAAAAAAA/AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8gAAAAAAAADyAAAAAAAAAAAAAAAAAPC/"
				],
				[
					117,
					1,
					"insert",
					{
						"characters": "ogl"
					},
					"AwAAAOoAAAAAAAAA6wAAAAAAAAAAAAAA6wAAAAAAAADsAAAAAAAAAAAAAADsAAAAAAAAAO0AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6gAAAAAAAADqAAAAAAAAAAAAAAAAAPC/"
				],
				[
					118,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAO0AAAAAAAAA7gAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7QAAAAAAAADtAAAAAAAAAAAAAAAAAPC/"
				],
				[
					133,
					1,
					"insert",
					{
						"characters": "\nimpl"
					},
					"BQAAAFoBAAAAAAAAWwEAAAAAAAAAAAAAWwEAAAAAAABcAQAAAAAAAAAAAABcAQAAAAAAAF0BAAAAAAAAAAAAAF0BAAAAAAAAXgEAAAAAAAAAAAAAXgEAAAAAAABfAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWgEAAAAAAABaAQAAAAAAAAAAAAAAAAAA"
				],
				[
					134,
					1,
					"insert",
					{
						"characters": " From<"
					},
					"BgAAAF8BAAAAAAAAYAEAAAAAAAAAAAAAYAEAAAAAAABhAQAAAAAAAAAAAABhAQAAAAAAAGIBAAAAAAAAAAAAAGIBAAAAAAAAYwEAAAAAAAAAAAAAYwEAAAAAAABkAQAAAAAAAAAAAABkAQAAAAAAAGUBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXwEAAAAAAABfAQAAAAAAAAAAAAAAAPC/"
				],
				[
					135,
					1,
					"insert",
					{
						"characters": "VecThreeFloat>"
					},
					"DgAAAGUBAAAAAAAAZgEAAAAAAAAAAAAAZgEAAAAAAABnAQAAAAAAAAAAAABnAQAAAAAAAGgBAAAAAAAAAAAAAGgBAAAAAAAAaQEAAAAAAAAAAAAAaQEAAAAAAABqAQAAAAAAAAAAAABqAQAAAAAAAGsBAAAAAAAAAAAAAGsBAAAAAAAAbAEAAAAAAAAAAAAAbAEAAAAAAABtAQAAAAAAAAAAAABtAQAAAAAAAG4BAAAAAAAAAAAAAG4BAAAAAAAAbwEAAAAAAAAAAAAAbwEAAAAAAABwAQAAAAAAAAAAAABwAQAAAAAAAHEBAAAAAAAAAAAAAHEBAAAAAAAAcgEAAAAAAAAAAAAAcgEAAAAAAABzAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZQEAAAAAAABlAQAAAAAAAAAAAAAAAPC/"
				],
				[
					136,
					1,
					"insert",
					{
						"characters": " for"
					},
					"BAAAAHMBAAAAAAAAdAEAAAAAAAAAAAAAdAEAAAAAAAB1AQAAAAAAAAAAAAB1AQAAAAAAAHYBAAAAAAAAAAAAAHYBAAAAAAAAdwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcwEAAAAAAABzAQAAAAAAAAAAAAAAAPC/"
				],
				[
					137,
					1,
					"insert",
					{
						"characters": " Vec"
					},
					"BAAAAHcBAAAAAAAAeAEAAAAAAAAAAAAAeAEAAAAAAAB5AQAAAAAAAAAAAAB5AQAAAAAAAHoBAAAAAAAAAAAAAHoBAAAAAAAAewEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdwEAAAAAAAB3AQAAAAAAAAAAAAAAAPC/"
				],
				[
					139,
					1,
					"insert_completion",
					{
						"completion": "VecThreeFloatC",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "VecThreeFloatC"
					},
					"AgAAAHgBAAAAAAAAeAEAAAAAAAADAAAAVmVjeAEAAAAAAACGAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAewEAAAAAAAB7AQAAAAAAAAAAAAAAAPC/"
				],
				[
					140,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIYBAAAAAAAAhwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhgEAAAAAAACGAQAAAAAAAAAAAAAAAPC/"
				],
				[
					141,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAIcBAAAAAAAAiQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhwEAAAAAAACHAQAAAAAAAAAAAAAAAPC/"
				],
				[
					142,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAAIgBAAAAAAAAiQEAAAAAAAAAAAAAiQEAAAAAAACKAQAAAAAAAAAAAACJAQAAAAAAAI0BAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiAEAAAAAAACIAQAAAAAAAAAAAAAAAPC/"
				],
				[
					143,
					1,
					"insert",
					{
						"characters": "fn"
					},
					"AgAAAI0BAAAAAAAAjgEAAAAAAAAAAAAAjgEAAAAAAACPAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjQEAAAAAAACNAQAAAAAAAAAAAAAAAPC/"
				],
				[
					144,
					1,
					"insert",
					{
						"characters": " from"
					},
					"BQAAAI8BAAAAAAAAkAEAAAAAAAAAAAAAkAEAAAAAAACRAQAAAAAAAAAAAACRAQAAAAAAAJIBAAAAAAAAAAAAAJIBAAAAAAAAkwEAAAAAAAAAAAAAkwEAAAAAAACUAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjwEAAAAAAACPAQAAAAAAAAAAAAAAAPC/"
				],
				[
					145,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJQBAAAAAAAAlgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlAEAAAAAAACUAQAAAAAAAAAAAAAAAPC/"
				],
				[
					147,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJYBAAAAAAAAlwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlgEAAAAAAACWAQAAAAAAAAAAAAAAAPC/"
				],
				[
					148,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAJcBAAAAAAAAmQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlwEAAAAAAACXAQAAAAAAAAAAAAAAAPC/"
				],
				[
					149,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAJgBAAAAAAAAmQEAAAAAAAAAAAAAmQEAAAAAAACdAQAAAAAAAAAAAACdAQAAAAAAAJ4BAAAAAAAAAAAAAJ4BAAAAAAAAogEAAAAAAAAAAAAAmQEAAAAAAACZAQAAAAAAAAQAAAAgICAgmQEAAAAAAAChAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmAEAAAAAAACYAQAAAAAAAAAAAAAAAPC/"
				],
				[
					153,
					1,
					"insert",
					{
						"characters": " ->"
					},
					"BAAAAJYBAAAAAAAAlwEAAAAAAAAAAAAAmgEAAAAAAACaAQAAAAAAAAgAAAAgICAgICAgIJcBAAAAAAAAmAEAAAAAAAAAAAAAmAEAAAAAAACZAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlgEAAAAAAACWAQAAAAAAAAAAAAAAAPC/"
				],
				[
					154,
					1,
					"insert",
					{
						"characters": " Self"
					},
					"BQAAAJkBAAAAAAAAmgEAAAAAAAAAAAAAmgEAAAAAAACbAQAAAAAAAAAAAACbAQAAAAAAAJwBAAAAAAAAAAAAAJwBAAAAAAAAnQEAAAAAAAAAAAAAnQEAAAAAAACeAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmQEAAAAAAACZAQAAAAAAAAAAAAAAAPC/"
				],
				[
					157,
					1,
					"insert",
					{
						"characters": "input:"
					},
					"BgAAAJUBAAAAAAAAlgEAAAAAAAAAAAAAlgEAAAAAAACXAQAAAAAAAAAAAACXAQAAAAAAAJgBAAAAAAAAAAAAAJgBAAAAAAAAmQEAAAAAAAAAAAAAmQEAAAAAAACaAQAAAAAAAAAAAACaAQAAAAAAAJsBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlQEAAAAAAACVAQAAAAAAAAAAAAAAAPC/"
				],
				[
					158,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJsBAAAAAAAAnAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmwEAAAAAAACbAQAAAAAAAAAAAAAAAPC/"
				],
				[
					165,
					1,
					"paste",
					null,
					"AQAAAJwBAAAAAAAAqQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnAEAAAAAAACcAQAAAAAAAAAAAAAAAPC/"
				],
				[
					167,
					1,
					"reindent",
					null,
					"AQAAALUBAAAAAAAAvQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtQEAAAAAAAC1AQAAAAAAAAAAAAAAwGxA"
				],
				[
					168,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAL0BAAAAAAAAwQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvQEAAAAAAAC9AQAAAAAAAAAAAAAAAPC/"
				],
				[
					176,
					1,
					"paste",
					null,
					"AQAAAMEBAAAAAAAAzwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwQEAAAAAAADBAQAAAAAAAAAAAAAAYHNA"
				],
				[
					178,
					1,
					"left_delete",
					null,
					"AQAAAL0BAAAAAAAAvQEAAAAAAAAEAAAAICAgIA",
					"AQAAAAAAAAABAAAAwQEAAAAAAADBAQAAAAAAAAAAAAAAAPC/"
				],
				[
					180,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMsBAAAAAAAAzAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAywEAAAAAAADLAQAAAAAAAP///////+9/"
				],
				[
					181,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAMwBAAAAAAAAzgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzAEAAAAAAADMAQAAAAAAAAAAAAAAAPC/"
				],
				[
					182,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAM0BAAAAAAAAzgEAAAAAAAAAAAAAzgEAAAAAAADWAQAAAAAAAAAAAADWAQAAAAAAANcBAAAAAAAAAAAAANcBAAAAAAAA3wEAAAAAAAAAAAAAzgEAAAAAAADOAQAAAAAAAAgAAAAgICAgICAgIM4BAAAAAAAA2gEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzQEAAAAAAADNAQAAAAAAAAAAAAAAAPC/"
				],
				[
					183,
					1,
					"insert",
					{
						"characters": "ip"
					},
					"AgAAANoBAAAAAAAA2wEAAAAAAAAAAAAA2wEAAAAAAADcAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2gEAAAAAAADaAQAAAAAAAAAAAAAAAPC/"
				],
				[
					184,
					2,
					"left_delete",
					null,
					"AgAAANsBAAAAAAAA2wEAAAAAAAABAAAAcNoBAAAAAAAA2gEAAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAA3AEAAAAAAADcAQAAAAAAAAAAAAAAAPC/"
				],
				[
					185,
					1,
					"insert",
					{
						"characters": "x:"
					},
					"AgAAANoBAAAAAAAA2wEAAAAAAAAAAAAA2wEAAAAAAADcAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2gEAAAAAAADaAQAAAAAAAAAAAAAAAPC/"
				],
				[
					186,
					1,
					"insert",
					{
						"characters": " input.x,"
					},
					"CQAAANwBAAAAAAAA3QEAAAAAAAAAAAAA3QEAAAAAAADeAQAAAAAAAAAAAADeAQAAAAAAAN8BAAAAAAAAAAAAAN8BAAAAAAAA4AEAAAAAAAAAAAAA4AEAAAAAAADhAQAAAAAAAAAAAADhAQAAAAAAAOIBAAAAAAAAAAAAAOIBAAAAAAAA4wEAAAAAAAAAAAAA4wEAAAAAAADkAQAAAAAAAAAAAADkAQAAAAAAAOUBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3AEAAAAAAADcAQAAAAAAAAAAAAAAAPC/"
				],
				[
					187,
					1,
					"insert",
					{
						"characters": "\ny:"
					},
					"BAAAAOUBAAAAAAAA5gEAAAAAAAAAAAAA5gEAAAAAAADyAQAAAAAAAAAAAADyAQAAAAAAAPMBAAAAAAAAAAAAAPMBAAAAAAAA9AEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5QEAAAAAAADlAQAAAAAAAAAAAAAAAPC/"
				],
				[
					188,
					1,
					"insert",
					{
						"characters": " input.y"
					},
					"CAAAAPQBAAAAAAAA9QEAAAAAAAAAAAAA9QEAAAAAAAD2AQAAAAAAAAAAAAD2AQAAAAAAAPcBAAAAAAAAAAAAAPcBAAAAAAAA+AEAAAAAAAAAAAAA+AEAAAAAAAD5AQAAAAAAAAAAAAD5AQAAAAAAAPoBAAAAAAAAAAAAAPoBAAAAAAAA+wEAAAAAAAAAAAAA+wEAAAAAAAD8AQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9AEAAAAAAAD0AQAAAAAAAAAAAAAAAPC/"
				],
				[
					191,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAPwBAAAAAAAA/QEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/AEAAAAAAAD8AQAAAAAAAAAAAAAAAPC/"
				],
				[
					192,
					1,
					"insert",
					{
						"characters": "\nz:"
					},
					"BAAAAP0BAAAAAAAA/gEAAAAAAAAAAAAA/gEAAAAAAAAKAgAAAAAAAAAAAAAKAgAAAAAAAAsCAAAAAAAAAAAAAAsCAAAAAAAADAIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/QEAAAAAAAD9AQAAAAAAAAAAAAAAAPC/"
				],
				[
					193,
					1,
					"insert",
					{
						"characters": " input.z"
					},
					"CAAAAAwCAAAAAAAADQIAAAAAAAAAAAAADQIAAAAAAAAOAgAAAAAAAAAAAAAOAgAAAAAAAA8CAAAAAAAAAAAAAA8CAAAAAAAAEAIAAAAAAAAAAAAAEAIAAAAAAAARAgAAAAAAAAAAAAARAgAAAAAAABICAAAAAAAAAAAAABICAAAAAAAAEwIAAAAAAAAAAAAAEwIAAAAAAAAUAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADAIAAAAAAAAMAgAAAAAAAAAAAAAAAPC/"
				],
				[
					194,
					1,
					"rust_fmt_format_buffer",
					null,
					"AgAAABQCAAAAAAAAFQIAAAAAAAAAAAAAJwIAAAAAAAAoAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFAIAAAAAAAAUAgAAAAAAAAAAAAAAAPC/"
				],
				[
					212,
					2,
					"left_delete",
					null,
					"AgAAADUBAAAAAAAANQEAAAAAAAABAAAANDQBAAAAAAAANAEAAAAAAAABAAAANg",
					"AQAAAAAAAAABAAAANgEAAAAAAAA2AQAAAAAAAAAAAAAAAPC/"
				],
				[
					213,
					1,
					"insert",
					{
						"characters": "32"
					},
					"AgAAADQBAAAAAAAANQEAAAAAAAAAAAAANQEAAAAAAAA2AQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANAEAAAAAAAA0AQAAAAAAAAAAAAAAAPC/"
				],
				[
					215,
					2,
					"left_delete",
					null,
					"AgAAAEUBAAAAAAAARQEAAAAAAAABAAAANEQBAAAAAAAARAEAAAAAAAABAAAANg",
					"AQAAAAAAAAABAAAARgEAAAAAAABGAQAAAAAAAAAAAAAAQFlA"
				],
				[
					216,
					1,
					"insert",
					{
						"characters": "32"
					},
					"AgAAAEQBAAAAAAAARQEAAAAAAAAAAAAARQEAAAAAAABGAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARAEAAAAAAABEAQAAAAAAAAAAAAAAAPC/"
				],
				[
					218,
					2,
					"left_delete",
					null,
					"AgAAAFUBAAAAAAAAVQEAAAAAAAABAAAANFQBAAAAAAAAVAEAAAAAAAABAAAANg",
					"AQAAAAAAAAABAAAAVgEAAAAAAABWAQAAAAAAAAAAAAAAQFlA"
				],
				[
					219,
					1,
					"insert",
					{
						"characters": "32"
					},
					"AgAAAFQBAAAAAAAAVQEAAAAAAAAAAAAAVQEAAAAAAABWAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVAEAAAAAAABUAQAAAAAAAAAAAAAAAPC/"
				],
				[
					226,
					1,
					"insert",
					{
						"characters": " as"
					},
					"AwAAAOQBAAAAAAAA5QEAAAAAAAAAAAAA5QEAAAAAAADmAQAAAAAAAAAAAADmAQAAAAAAAOcBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5AEAAAAAAADkAQAAAAAAAAAAAAAAAPC/"
				],
				[
					227,
					1,
					"insert",
					{
						"characters": " f32"
					},
					"BAAAAOcBAAAAAAAA6AEAAAAAAAAAAAAA6AEAAAAAAADpAQAAAAAAAAAAAADpAQAAAAAAAOoBAAAAAAAAAAAAAOoBAAAAAAAA6wEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5wEAAAAAAADnAQAAAAAAAAAAAAAAAPC/"
				],
				[
					230,
					1,
					"insert",
					{
						"characters": " sa"
					},
					"AwAAAAMCAAAAAAAABAIAAAAAAAAAAAAABAIAAAAAAAAFAgAAAAAAAAAAAAAFAgAAAAAAAAYCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAwIAAAAAAAADAgAAAAAAAAAAAAAAAPC/"
				],
				[
					231,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAYCAAAAAAAABwIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABgIAAAAAAAAGAgAAAAAAAAAAAAAAAPC/"
				],
				[
					232,
					3,
					"left_delete",
					null,
					"AwAAAAYCAAAAAAAABgIAAAAAAAABAAAAIAUCAAAAAAAABQIAAAAAAAABAAAAYQQCAAAAAAAABAIAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAABwIAAAAAAAAHAgAAAAAAAAAAAAAAAPC/"
				],
				[
					233,
					1,
					"insert",
					{
						"characters": "as"
					},
					"AgAAAAQCAAAAAAAABQIAAAAAAAAAAAAABQIAAAAAAAAGAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABAIAAAAAAAAEAgAAAAAAAAAAAAAAAPC/"
				],
				[
					234,
					1,
					"insert",
					{
						"characters": " f32"
					},
					"BAAAAAYCAAAAAAAABwIAAAAAAAAAAAAABwIAAAAAAAAIAgAAAAAAAAAAAAAIAgAAAAAAAAkCAAAAAAAAAAAAAAkCAAAAAAAACgIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABgIAAAAAAAAGAgAAAAAAAAAAAAAAAPC/"
				],
				[
					237,
					1,
					"insert",
					{
						"characters": " as"
					},
					"AwAAACICAAAAAAAAIwIAAAAAAAAAAAAAIwIAAAAAAAAkAgAAAAAAAAAAAAAkAgAAAAAAACUCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIgIAAAAAAAAiAgAAAAAAAAAAAAAAAPC/"
				],
				[
					238,
					1,
					"insert",
					{
						"characters": " f32"
					},
					"BAAAACUCAAAAAAAAJgIAAAAAAAAAAAAAJgIAAAAAAAAnAgAAAAAAAAAAAAAnAgAAAAAAACgCAAAAAAAAAAAAACgCAAAAAAAAKQIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJQIAAAAAAAAlAgAAAAAAAAAAAAAAAPC/"
				],
				[
					244,
					1,
					"insert",
					{
						"characters": "f2"
					},
					"AgAAAN0BAAAAAAAA3gEAAAAAAAAAAAAA3gEAAAAAAADfAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3QEAAAAAAADdAQAAAAAAAAAAAAAAAPC/"
				],
				[
					245,
					1,
					"left_delete",
					null,
					"AQAAAN4BAAAAAAAA3gEAAAAAAAABAAAAMg",
					"AQAAAAAAAAABAAAA3wEAAAAAAADfAQAAAAAAAAAAAAAAAPC/"
				],
				[
					246,
					1,
					"insert",
					{
						"characters": "32::"
					},
					"BAAAAN4BAAAAAAAA3wEAAAAAAAAAAAAA3wEAAAAAAADgAQAAAAAAAAAAAADgAQAAAAAAAOEBAAAAAAAAAAAAAOEBAAAAAAAA4gEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3gEAAAAAAADeAQAAAAAAAAAAAAAAAPC/"
				],
				[
					247,
					2,
					"left_delete",
					null,
					"AgAAAOEBAAAAAAAA4QEAAAAAAAABAAAAOuABAAAAAAAA4AEAAAAAAAABAAAAOg",
					"AQAAAAAAAAABAAAA4gEAAAAAAADiAQAAAAAAAAAAAAAAAPC/"
				],
				[
					248,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAAOABAAAAAAAA4QEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4AEAAAAAAADgAQAAAAAAAAAAAAAAAPC/"
				],
				[
					249,
					1,
					"left_delete",
					null,
					"AQAAAOABAAAAAAAA4AEAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAA4QEAAAAAAADhAQAAAAAAAAAAAAAAAPC/"
				],
				[
					250,
					1,
					"insert",
					{
						"characters": ".try_from("
					},
					"CgAAAOABAAAAAAAA4QEAAAAAAAAAAAAA4QEAAAAAAADiAQAAAAAAAAAAAADiAQAAAAAAAOMBAAAAAAAAAAAAAOMBAAAAAAAA5AEAAAAAAAAAAAAA5AEAAAAAAADlAQAAAAAAAAAAAADlAQAAAAAAAOYBAAAAAAAAAAAAAOYBAAAAAAAA5wEAAAAAAAAAAAAA5wEAAAAAAADoAQAAAAAAAAAAAADoAQAAAAAAAOkBAAAAAAAAAAAAAOkBAAAAAAAA6gEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4AEAAAAAAADgAQAAAAAAAAAAAAAAAPC/"
				],
				[
					251,
					1,
					"left_delete",
					null,
					"AQAAAOkBAAAAAAAA6QEAAAAAAAABAAAAKA",
					"AQAAAAAAAAABAAAA6gEAAAAAAADqAQAAAAAAAAAAAAAAAPC/"
				],
				[
					252,
					1,
					"insert",
					{
						"characters": "::<"
					},
					"AwAAAOkBAAAAAAAA6gEAAAAAAAAAAAAA6gEAAAAAAADrAQAAAAAAAAAAAADrAQAAAAAAAOwBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6QEAAAAAAADpAQAAAAAAAAAAAAAAAPC/"
				],
				[
					253,
					3,
					"left_delete",
					null,
					"AwAAAOsBAAAAAAAA6wEAAAAAAAABAAAAPOoBAAAAAAAA6gEAAAAAAAABAAAAOukBAAAAAAAA6QEAAAAAAAABAAAAOg",
					"AQAAAAAAAAABAAAA7AEAAAAAAADsAQAAAAAAAAAAAAAAAPC/"
				],
				[
					254,
					1,
					"insert",
					{
						"characters": "("
					},
					"AQAAAOkBAAAAAAAA6gEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6QEAAAAAAADpAQAAAAAAAAAAAAAAAPC/"
				],
				[
					256,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAPEBAAAAAAAA8gEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8QEAAAAAAADxAQAAAAAAAAAAAAAAAPC/"
				],
				[
					259,
					7,
					"left_delete",
					null,
					"BwAAAPgBAAAAAAAA+AEAAAAAAAABAAAAMvcBAAAAAAAA9wEAAAAAAAABAAAAM/YBAAAAAAAA9gEAAAAAAAABAAAAZvUBAAAAAAAA9QEAAAAAAAABAAAAIPQBAAAAAAAA9AEAAAAAAAABAAAAc/MBAAAAAAAA8wEAAAAAAAABAAAAYfIBAAAAAAAA8gEAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAA+QEAAAAAAAD5AQAAAAAAAAAAAAAAAPC/"
				],
				[
					262,
					1,
					"left_delete",
					null,
					"AQAAAOABAAAAAAAA4AEAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAA4QEAAAAAAADhAQAAAAAAAAAAAAAAAPC/"
				],
				[
					263,
					1,
					"insert",
					{
						"characters": "::"
					},
					"AgAAAOABAAAAAAAA4QEAAAAAAAAAAAAA4QEAAAAAAADiAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4AEAAAAAAADgAQAAAAAAAAAAAAAAAPC/"
				],
				[
					280,
					1,
					"left_delete",
					null,
					"AQAAAN0BAAAAAAAA3QEAAAAAAAAOAAAAZjMyOjp0cnlfZnJvbSg",
					"AQAAAAAAAAABAAAA6wEAAAAAAADdAQAAAAAAAAAAAAAAAPC/"
				],
				[
					283,
					1,
					"left_delete",
					null,
					"AQAAAOQBAAAAAAAA5AEAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAA5QEAAAAAAADlAQAAAAAAAAAAAAAAAPC/"
				],
				[
					284,
					1,
					"insert",
					{
						"characters": " as"
					},
					"AwAAAOQBAAAAAAAA5QEAAAAAAAAAAAAA5QEAAAAAAADmAQAAAAAAAAAAAADmAQAAAAAAAOcBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5AEAAAAAAADkAQAAAAAAAAAAAAAAAPC/"
				],
				[
					285,
					1,
					"insert",
					{
						"characters": " f32"
					},
					"BAAAAOcBAAAAAAAA6AEAAAAAAAAAAAAA6AEAAAAAAADpAQAAAAAAAAAAAADpAQAAAAAAAOoBAAAAAAAAAAAAAOoBAAAAAAAA6wEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5wEAAAAAAADnAQAAAAAAAAAAAAAAAPC/"
				],
				[
					300,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAAGIAAAAAAAAAYwAAAAAAAAAAAAAAYwAAAAAAAABnAAAAAAAAAAAAAABnAAAAAAAAAGgAAAAAAAAAAAAAAGgAAAAAAAAAbAAAAAAAAAAAAAAAYwAAAAAAAABjAAAAAAAAAAQAAAAgICAg",
					"AgAAAAAAAAABAAAAnAAAAAAAAACcAAAAAAAAAAAAAAAAAPC/AQAAAAEAAABiAAAAAAAAAGIAAAAAAAAA////////738"
				],
				[
					302,
					1,
					"reindent",
					null,
					"AQAAAGMAAAAAAAAAZwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAogAAAAAAAACiAAAAAAAAAAAAAAAAAPC/AQAAAAEAAABjAAAAAAAAAGMAAAAAAAAAAAAAAAAAPUA"
				],
				[
					303,
					1,
					"insert",
					{
						"characters": "pub"
					},
					"BAAAAGcAAAAAAAAAaAAAAAAAAAAAAAAAaQAAAAAAAABpAAAAAAAAAAQAAAAgICAgaAAAAAAAAABpAAAAAAAAAAAAAABpAAAAAAAAAGoAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAApgAAAAAAAACmAAAAAAAAAAAAAAAAAPC/AQAAAAEAAABnAAAAAAAAAGcAAAAAAAAAAAAAAAAA8L8"
				],
				[
					304,
					1,
					"insert",
					{
						"characters": " fn"
					},
					"AwAAAGoAAAAAAAAAawAAAAAAAAAAAAAAawAAAAAAAABsAAAAAAAAAAAAAABsAAAAAAAAAG0AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAApQAAAAAAAAClAAAAAAAAAAAAAAAAAPC/AQAAAAEAAABqAAAAAAAAAGoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					305,
					1,
					"insert",
					{
						"characters": " new"
					},
					"BAAAAG0AAAAAAAAAbgAAAAAAAAAAAAAAbgAAAAAAAABvAAAAAAAAAAAAAABvAAAAAAAAAHAAAAAAAAAAAAAAAHAAAAAAAAAAcQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAqAAAAAAAAACoAAAAAAAAAAAAAAAAAPC/AQAAAAEAAABtAAAAAAAAAG0AAAAAAAAAAAAAAAAA8L8"
				],
				[
					306,
					4,
					"swap_line_down",
					null,
					"CAAAAHMAAAAAAAAAggAAAAAAAAAAAAAAYwAAAAAAAABjAAAAAAAAAA8AAAAgICAgcHViIGZuIG5ldwqtAAAAAAAAALwAAAAAAAAAAAAAAGQAAAAAAAAAZAAAAAAAAAAPAAAAICAgIHB1YiBmbiBuZXcKzwAAAAAAAADeAAAAAAAAAAAAAACeAAAAAAAAAJ4AAAAAAAAADwAAACAgICBwdWIgZm4gbmV3CtUAAAAAAAAA5AAAAAAAAAAAAAAAwAAAAAAAAADAAAAAAAAAAA8AAAAgICAgcHViIGZuIG5ldwo",
					"AgAAAAAAAAABAAAArAAAAAAAAACsAAAAAAAAAAAAAAAAAPC/AQAAAAEAAABxAAAAAAAAAHEAAAAAAAAAAAAAAAAA8L8"
				],
				[
					308,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAMUAAAAAAAAAxgAAAAAAAAAAAAAAxgAAAAAAAADKAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAnQAAAAAAAACdAAAAAAAAAAAAAAAAAPC/AQAAAAEAAADFAAAAAAAAAMUAAAAAAAAAAAAAAABAWUA"
				],
				[
					312,
					1,
					"insert",
					{
						"characters": "_empty"
					},
					"BwAAANkAAAAAAAAA2gAAAAAAAAAAAAAAxgAAAAAAAADGAAAAAAAAAAQAAAAgICAg1gAAAAAAAADXAAAAAAAAAAAAAADXAAAAAAAAANgAAAAAAAAAAAAAANgAAAAAAAAA2QAAAAAAAAAAAAAA2QAAAAAAAADaAAAAAAAAAAAAAADaAAAAAAAAANsAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAnQAAAAAAAACdAAAAAAAAAAAAAAAAAPC/AQAAAAEAAADZAAAAAAAAANkAAAAAAAAA////////738"
				],
				[
					313,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAANsAAAAAAAAA3QAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAnQAAAAAAAACdAAAAAAAAAAAAAAAAAPC/AQAAAAEAAADbAAAAAAAAANsAAAAAAAAAAAAAAAAA8L8"
				],
				[
					316,
					1,
					"insert",
					{
						"characters": "x"
					},
					"AgAAANYAAAAAAAAA1wAAAAAAAAAAAAAA1wAAAAAAAADXAAAAAAAAAAUAAABlbXB0eQ",
					"AgAAAAAAAAABAAAAnQAAAAAAAACdAAAAAAAAAAAAAAAAAPC/AQAAAAEAAADbAAAAAAAAANYAAAAAAAAAAAAAAAAA8L8"
				],
				[
					317,
					1,
					"left_delete",
					null,
					"AQAAANYAAAAAAAAA1gAAAAAAAAABAAAAeA",
					"AgAAAAAAAAABAAAAnQAAAAAAAACdAAAAAAAAAAAAAAAAAPC/AQAAAAEAAADXAAAAAAAAANcAAAAAAAAAAAAAAAAA8L8"
				],
				[
					318,
					1,
					"insert",
					{
						"characters": "zeo"
					},
					"AwAAANYAAAAAAAAA1wAAAAAAAAAAAAAA1wAAAAAAAADYAAAAAAAAAAAAAADYAAAAAAAAANkAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAnQAAAAAAAACdAAAAAAAAAAAAAAAAAPC/AQAAAAEAAADWAAAAAAAAANYAAAAAAAAAAAAAAAAA8L8"
				],
				[
					319,
					1,
					"left_delete",
					null,
					"AQAAANgAAAAAAAAA2AAAAAAAAAABAAAAbw",
					"AgAAAAAAAAABAAAAnQAAAAAAAACdAAAAAAAAAAAAAAAAAPC/AQAAAAEAAADZAAAAAAAAANkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					320,
					1,
					"insert",
					{
						"characters": "ro"
					},
					"AgAAANgAAAAAAAAA2QAAAAAAAAAAAAAA2QAAAAAAAADaAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAnQAAAAAAAACdAAAAAAAAAAAAAAAAAPC/AQAAAAEAAADYAAAAAAAAANgAAAAAAAAAAAAAAAAA8L8"
				],
				[
					323,
					1,
					"insert",
					{
						"characters": " ->"
					},
					"AwAAANwAAAAAAAAA3QAAAAAAAAAAAAAA3QAAAAAAAADeAAAAAAAAAAAAAADeAAAAAAAAAN8AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAnQAAAAAAAACdAAAAAAAAAAAAAAAAAPC/AQAAAAEAAADcAAAAAAAAANwAAAAAAAAA////////738"
				],
				[
					324,
					1,
					"insert",
					{
						"characters": " Vec"
					},
					"BAAAAN8AAAAAAAAA4AAAAAAAAAAAAAAA4AAAAAAAAADhAAAAAAAAAAAAAADhAAAAAAAAAOIAAAAAAAAAAAAAAOIAAAAAAAAA4wAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAnQAAAAAAAACdAAAAAAAAAAAAAAAAAPC/AQAAAAEAAADfAAAAAAAAAN8AAAAAAAAAAAAAAAAA8L8"
				],
				[
					325,
					1,
					"insert_completion",
					{
						"completion": "VecThreeFloat",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "VecThreeFloat"
					},
					"AgAAAOAAAAAAAAAA4AAAAAAAAAADAAAAVmVj4AAAAAAAAADtAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAnQAAAAAAAACdAAAAAAAAAAAAAAAAAPC/AQAAAAEAAADjAAAAAAAAAOMAAAAAAAAAAAAAAAAA8L8"
				],
				[
					326,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAO0AAAAAAAAA7gAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAnQAAAAAAAACdAAAAAAAAAAAAAAAAAPC/AQAAAAEAAADtAAAAAAAAAO0AAAAAAAAAAAAAAAAA8L8"
				],
				[
					327,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAO4AAAAAAAAA8AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAnQAAAAAAAACdAAAAAAAAAAAAAAAAAPC/AQAAAAEAAADuAAAAAAAAAO4AAAAAAAAAAAAAAAAA8L8"
				],
				[
					328,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAO8AAAAAAAAA8AAAAAAAAAAAAAAA8AAAAAAAAAD0AAAAAAAAAAAAAAD0AAAAAAAAAPUAAAAAAAAAAAAAAPUAAAAAAAAA+QAAAAAAAAAAAAAA8AAAAAAAAADwAAAAAAAAAAQAAAAgICAg8AAAAAAAAAD4AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAnQAAAAAAAACdAAAAAAAAAAAAAAAAAPC/AQAAAAEAAADvAAAAAAAAAO8AAAAAAAAAAAAAAAAA8L8"
				],
				[
					329,
					2,
					"rust_fmt_format_buffer",
					null,
					"AgAAAGMAAAAAAAAAYwAAAAAAAAABAAAACu4AAAAAAAAA7gAAAAAAAAAOAAAACiAgICAgICAgCiAgICA",
					"AgAAAAAAAAABAAAAnQAAAAAAAACdAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAD4AAAAAAAAAPgAAAAAAAAAAAAAAAAA8L8"
				],
				[
					332,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAO4AAAAAAAAA7wAAAAAAAAAAAAAA7wAAAAAAAADzAAAAAAAAAAAAAADzAAAAAAAAAPQAAAAAAAAAAAAAAPQAAAAAAAAA+AAAAAAAAAAAAAAA7wAAAAAAAADvAAAAAAAAAAQAAAAgICAg7wAAAAAAAAD3AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAnAAAAAAAAACcAAAAAAAAAAAAAAAAAPC/AQAAAAEAAADuAAAAAAAAAO4AAAAAAAAAAAAAAAAAckA"
				],
				[
					333,
					1,
					"insert",
					{
						"characters": "vec"
					},
					"AwAAAPcAAAAAAAAA+AAAAAAAAAAAAAAA+AAAAAAAAAD5AAAAAAAAAAAAAAD5AAAAAAAAAPoAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAnAAAAAAAAACcAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAD3AAAAAAAAAPcAAAAAAAAAAAAAAAAA8L8"
				],
				[
					334,
					1,
					"insert_completion",
					{
						"completion": "VecThreeFloat",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "VecThreeFloat"
					},
					"AgAAAPcAAAAAAAAA9wAAAAAAAAADAAAAdmVj9wAAAAAAAAAEAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAnAAAAAAAAACcAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAD6AAAAAAAAAPoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					335,
					1,
					"insert",
					{
						"characters": "::new"
					},
					"BQAAAAQBAAAAAAAABQEAAAAAAAAAAAAABQEAAAAAAAAGAQAAAAAAAAAAAAAGAQAAAAAAAAcBAAAAAAAAAAAAAAcBAAAAAAAACAEAAAAAAAAAAAAACAEAAAAAAAAJAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAnAAAAAAAAACcAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAEAQAAAAAAAAQBAAAAAAAAAAAAAAAA8L8"
				],
				[
					336,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAAkBAAAAAAAACwEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAnAAAAAAAAACcAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAJAQAAAAAAAAkBAAAAAAAAAAAAAAAA8L8"
				],
				[
					337,
					1,
					"insert",
					{
						"characters": "0,0"
					},
					"AwAAAAoBAAAAAAAACwEAAAAAAAAAAAAACwEAAAAAAAAMAQAAAAAAAAAAAAAMAQAAAAAAAA0BAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAnAAAAAAAAACcAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAKAQAAAAAAAAoBAAAAAAAAAAAAAAAA8L8"
				],
				[
					338,
					2,
					"left_delete",
					null,
					"AgAAAAwBAAAAAAAADAEAAAAAAAABAAAAMAsBAAAAAAAACwEAAAAAAAABAAAALA",
					"AgAAAAAAAAABAAAAnAAAAAAAAACcAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAANAQAAAAAAAA0BAAAAAAAAAAAAAAAA8L8"
				],
				[
					339,
					1,
					"insert",
					{
						"characters": ".0,"
					},
					"AwAAAAsBAAAAAAAADAEAAAAAAAAAAAAADAEAAAAAAAANAQAAAAAAAAAAAAANAQAAAAAAAA4BAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAnAAAAAAAAACcAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAALAQAAAAAAAAsBAAAAAAAAAAAAAAAA8L8"
				],
				[
					340,
					1,
					"insert",
					{
						"characters": " 90.0"
					},
					"BQAAAA4BAAAAAAAADwEAAAAAAAAAAAAADwEAAAAAAAAQAQAAAAAAAAAAAAAQAQAAAAAAABEBAAAAAAAAAAAAABEBAAAAAAAAEgEAAAAAAAAAAAAAEgEAAAAAAAATAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAnAAAAAAAAACcAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAOAQAAAAAAAA4BAAAAAAAAAAAAAAAA8L8"
				],
				[
					341,
					4,
					"left_delete",
					null,
					"BAAAABIBAAAAAAAAEgEAAAAAAAABAAAAMBEBAAAAAAAAEQEAAAAAAAABAAAALhABAAAAAAAAEAEAAAAAAAABAAAAMA8BAAAAAAAADwEAAAAAAAABAAAAOQ",
					"AgAAAAAAAAABAAAAnAAAAAAAAACcAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAATAQAAAAAAABMBAAAAAAAAAAAAAAAA8L8"
				],
				[
					342,
					1,
					"insert",
					{
						"characters": "0.0,"
					},
					"BAAAAA8BAAAAAAAAEAEAAAAAAAAAAAAAEAEAAAAAAAARAQAAAAAAAAAAAAARAQAAAAAAABIBAAAAAAAAAAAAABIBAAAAAAAAEwEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAnAAAAAAAAACcAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAPAQAAAAAAAA8BAAAAAAAAAAAAAAAA8L8"
				],
				[
					343,
					1,
					"insert",
					{
						"characters": " 0.0"
					},
					"BAAAABMBAAAAAAAAFAEAAAAAAAAAAAAAFAEAAAAAAAAVAQAAAAAAAAAAAAAVAQAAAAAAABYBAAAAAAAAAAAAABYBAAAAAAAAFwEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAnAAAAAAAAACcAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAATAQAAAAAAABMBAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "gengar_engine/Cargo.toml",
			"settings":
			{
				"buffer_size": 85,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					2,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAFMAAAAAAAAAVAAAAAAAAAAAAAAA",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFMAAAAAAAAAUwAAAAAAAAD////////vfw"
				],
				[
					3,
					1,
					"paste",
					null,
					"AQAAAFQAAAAAAAAAggAAAAAAAAAAAAAA",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFQAAAAAAAAAVAAAAAAAAAAAAAAAAADwvw"
				],
				[
					7,
					1,
					"insert",
					{
						"characters": "render_opengl"
					},
					"DgAAAFsAAAAAAAAAXAAAAAAAAAAAAAAAXAAAAAAAAABcAAAAAAAAAAYAAABlbmdpbmVcAAAAAAAAAF0AAAAAAAAAAAAAAF0AAAAAAAAAXgAAAAAAAAAAAAAAXgAAAAAAAABfAAAAAAAAAAAAAABfAAAAAAAAAGAAAAAAAAAAAAAAAGAAAAAAAAAAYQAAAAAAAAAAAAAAYQAAAAAAAABiAAAAAAAAAAAAAABiAAAAAAAAAGMAAAAAAAAAAAAAAGMAAAAAAAAAZAAAAAAAAAAAAAAAZAAAAAAAAABlAAAAAAAAAAAAAABlAAAAAAAAAGYAAAAAAAAAAAAAAGYAAAAAAAAAZwAAAAAAAAAAAAAAZwAAAAAAAABoAAAAAAAAAAAAAAA",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGEAAAAAAAAAWwAAAAAAAAAAAAAAAADwvw"
				],
				[
					11,
					1,
					"insert",
					{
						"characters": "render_opengl"
					},
					"DgAAAH8AAAAAAAAAgAAAAAAAAAAAAAAAgAAAAAAAAACAAAAAAAAAAAYAAABlbmdpbmWAAAAAAAAAAIEAAAAAAAAAAAAAAIEAAAAAAAAAggAAAAAAAAAAAAAAggAAAAAAAACDAAAAAAAAAAAAAACDAAAAAAAAAIQAAAAAAAAAAAAAAIQAAAAAAAAAhQAAAAAAAAAAAAAAhQAAAAAAAACGAAAAAAAAAAAAAACGAAAAAAAAAIcAAAAAAAAAAAAAAIcAAAAAAAAAiAAAAAAAAAAAAAAAiAAAAAAAAACJAAAAAAAAAAAAAACJAAAAAAAAAIoAAAAAAAAAAAAAAIoAAAAAAAAAiwAAAAAAAAAAAAAAiwAAAAAAAACMAAAAAAAAAAAAAAA",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIUAAAAAAAAAfwAAAAAAAAAAAAAAAADwvw"
				],
				[
					14,
					1,
					"cut",
					null,
					"AQAAAFQAAAAAAAAAVAAAAAAAAAA8AAAAZ2VuZ2FyX3JlbmRlcl9vcGVuZ2wgPSB7IHBhdGggPSAiLi4vZ2VuZ2FyX3JlbmRlcl9vcGVuZ2wiIH0K",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGsAAAAAAAAAawAAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "gengar_render_opengl/src/ogl_render.rs",
			"settings":
			{
				"buffer_size": 5244,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					1533,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAOABAAAAAAAA4QEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA4AEAAAAAAADgAQAAAAAAAP///////+9/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					1534,
					1,
					"paste",
					null,
					"AQAAAOEBAAAAAAAANgIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA4QEAAAAAAADhAQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					1535,
					2,
					"rust_fmt_format_buffer",
					null,
					"AwAAAAwCAAAAAAAADAIAAAAAAAABAAAAIAwCAAAAAAAADQIAAAAAAAAAAAAANQIAAAAAAAA1AgAAAAAAAAEAAAAK",
					"AgAAAAAAAAABAAAANgIAAAAAAAA2AgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					1537,
					1,
					"cut",
					null,
					"AQAAAOEBAAAAAAAA4QEAAAAAAAAsAAAAI1thbGxvdyhkZWFkX2NvZGUsIG5vbl91cHBlcl9jYXNlX2dsb2JhbHMpXQo",
					"AgAAAAAAAAABAAAACQIAAAAAAAAJAgAAAAAAAAAAAAAAAHJAAQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					1540,
					1,
					"insert",
					{
						"characters": "GL_"
					},
					"AwAAAOsBAAAAAAAA7AEAAAAAAAAAAAAA7AEAAAAAAADtAQAAAAAAAAAAAADtAQAAAAAAAO4BAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA6wEAAAAAAADrAQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					1543,
					1,
					"left_delete",
					null,
					"AQAAAOEBAAAAAAAA4QEAAAAAAAAKAAAAcHViIGNvbnN0IA",
					"AgAAAAAAAAABAAAA6wEAAAAAAADhAQAAAAAAAAAAAAAAAAAAAQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					1544,
					1,
					"insert",
					{
						"characters": "const"
					},
					"BQAAAOEBAAAAAAAA4gEAAAAAAAAAAAAA4gEAAAAAAADjAQAAAAAAAAAAAADjAQAAAAAAAOQBAAAAAAAAAAAAAOQBAAAAAAAA5QEAAAAAAAAAAAAA5QEAAAAAAADmAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA4QEAAAAAAADhAQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					1545,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOYBAAAAAAAA5wEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA5gEAAAAAAADmAQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					1549,
					1,
					"insert",
					{
						"characters": "i32"
					},
					"BAAAAPEBAAAAAAAA8gEAAAAAAAAAAAAA8gEAAAAAAADyAQAAAAAAAA4AAAB0eXBlczo6R0xlbnVtIPIBAAAAAAAA8wEAAAAAAAAAAAAA8wEAAAAAAAD0AQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA/wEAAAAAAADxAQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					1550,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAPQBAAAAAAAA9QEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA9AEAAAAAAAD0AQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					1596,
					1,
					"paste",
					null,
					"AgAAAE4QAAAAAAAAZhAAAAAAAAAAAAAAZhAAAAAAAABmEAAAAAAAABUAAABnbFZlcnRleEF0dHJpYlBvaW50ZXI",
					"AgAAAAAAAAABAAAAYxAAAAAAAABOEAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					1597,
					2,
					"rust_fmt_format_buffer",
					null,
					"BQAAAGgQAAAAAAAAdRAAAAAAAAAAAAAAfhAAAAAAAACKEAAAAAAAAAAAAACNEAAAAAAAAJkQAAAAAAAAAAAAAKMQAAAAAAAArxAAAAAAAAAAAAAA1RAAAAAAAADfEAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAZhAAAAAAAABmEAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					1601,
					1,
					"insert",
					{
						"characters": "_v3"
					},
					"AwAAAGYQAAAAAAAAZxAAAAAAAAAAAAAAZxAAAAAAAABoEAAAAAAAAAAAAABoEAAAAAAAAGkQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAZhAAAAAAAABmEAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					1610,
					1,
					"insert",
					{
						"characters": "_v3"
					},
					"AwAAAMcFAAAAAAAAyAUAAAAAAAAAAAAAyAUAAAAAAADJBQAAAAAAAAAAAADJBQAAAAAAAMoFAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAxwUAAAAAAADHBQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					1611,
					1,
					"left_delete",
					null,
					"AQAAAMkFAAAAAAAAyQUAAAAAAAABAAAAMw",
					"AgAAAAAAAAABAAAAygUAAAAAAADKBQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					1612,
					1,
					"insert",
					{
						"characters": "3"
					},
					"AQAAAMkFAAAAAAAAygUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAyQUAAAAAAADJBQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					1634,
					1,
					"cut",
					null,
					"AQAAAOEBAAAAAAAA4QEAAAAAAAAeAAAAY29uc3QgR0xfRkxPQVQ6IGkzMiA9IDB4MTQwNjsK",
					"AgAAAAAAAAABAAAA/gEAAAAAAAD+AQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					1644,
					1,
					"cut",
					null,
					"AQAAAHYQAAAAAAAAdhAAAAAAAAAWAAAAICAgICAgICAgICAgR0xfRkxPQVQsCg",
					"AgAAAAAAAAABAAAAixAAAAAAAACLEAAAAAAAAAAAAAAAcHJAAQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					1645,
					2,
					"rust_fmt_format_buffer",
					null,
					"BAAAAFAQAAAAAAAAUBAAAAAAAAANAAAACiAgICAgICAgICAgIFkQAAAAAAAAWRAAAAAAAAAMAAAACiAgICAgICAgICAgXBAAAAAAAABcEAAAAAAAAAwAAAAKICAgICAgICAgICCCEAAAAAAAAIIQAAAAAAAACgAAACwKICAgICAgICA",
					"AgAAAAAAAAABAAAAdhAAAAAAAAB2EAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					1649,
					3,
					"left_delete",
					null,
					"AwAAAFoQAAAAAAAAWhAAAAAAAAAoAAAAMywgc3RkOjptZW06OnNpemVfb2Y6OjxWZWNUaHJlZUZsb2F0Qz4oKVkQAAAAAAAAWRAAAAAAAAABAAAAIFgQAAAAAAAAWBAAAAAAAAABAAAALA",
					"AgAAAAAAAAABAAAAghAAAAAAAABaEAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					1662,
					3,
					"left_delete",
					null,
					"AwAAALYFAAAAAAAAtgUAAAAAAAANAAAAdTMyLCBpMzIsIGkzMrUFAAAAAAAAtQUAAAAAAAABAAAAILQFAAAAAAAAtAUAAAAAAAABAAAALA",
					"AgAAAAAAAAABAAAAwwUAAAAAAAC2BQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					1679,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAHQQAAAAAAAAdRAAAAAAAAAAAAAAdRAAAAAAAAB9EAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAdBAAAAAAAAB0EAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					1680,
					2,
					"rust_fmt_format_buffer",
					null,
					"AQAAAHUQAAAAAAAAdRAAAAAAAAAIAAAAICAgICAgICA",
					"AgAAAAAAAAABAAAAfRAAAAAAAAB9EAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					1804,
					1,
					"insert",
					{
						"characters": "\n\nfn"
					},
					"BwAAAIoQAAAAAAAAixAAAAAAAAAAAAAAixAAAAAAAACPEAAAAAAAAAAAAACPEAAAAAAAAJAQAAAAAAAAAAAAAJAQAAAAAAAAlBAAAAAAAAAAAAAAixAAAAAAAACLEAAAAAAAAAQAAAAgICAgkBAAAAAAAACREAAAAAAAAAAAAACREAAAAAAAAJIQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAihAAAAAAAACKEAAAAAAAAP///////+9/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					1805,
					1,
					"insert",
					{
						"characters": " rend"
					},
					"BQAAAJIQAAAAAAAAkxAAAAAAAAAAAAAAkxAAAAAAAACUEAAAAAAAAAAAAACUEAAAAAAAAJUQAAAAAAAAAAAAAJUQAAAAAAAAlhAAAAAAAAAAAAAAlhAAAAAAAACXEAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAkhAAAAAAAACSEAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					1806,
					1,
					"left_delete",
					null,
					"AQAAAJYQAAAAAAAAlhAAAAAAAAABAAAAZA",
					"AgAAAAAAAAABAAAAlxAAAAAAAACXEAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					1807,
					1,
					"insert",
					{
						"characters": "der"
					},
					"AwAAAJYQAAAAAAAAlxAAAAAAAAAAAAAAlxAAAAAAAACYEAAAAAAAAAAAAACYEAAAAAAAAJkQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAlhAAAAAAAACWEAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					1808,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJkQAAAAAAAAmxAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAmRAAAAAAAACZEAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					1810,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJsQAAAAAAAAnBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAmxAAAAAAAACbEAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					1811,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAJwQAAAAAAAAnhAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAnBAAAAAAAACcEAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					1812,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAJ0QAAAAAAAAnhAAAAAAAAAAAAAAnhAAAAAAAACiEAAAAAAAAAAAAACiEAAAAAAAAKMQAAAAAAAAAAAAAKMQAAAAAAAApxAAAAAAAAAAAAAAnhAAAAAAAACeEAAAAAAAAAQAAAAgICAgnhAAAAAAAACmEAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAnRAAAAAAAACdEAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					1813,
					2,
					"rust_fmt_format_buffer",
					null,
					"AQAAAJ0QAAAAAAAAnRAAAAAAAAAOAAAACiAgICAgICAgCiAgICA",
					"AgAAAAAAAAABAAAAphAAAAAAAACmEAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					1818,
					1,
					"insert",
					{
						"characters": "&se"
					},
					"AwAAAJoQAAAAAAAAmxAAAAAAAAAAAAAAmxAAAAAAAACcEAAAAAAAAAAAAACcEAAAAAAAAJ0QAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAmhAAAAAAAACaEAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					1819,
					1,
					"left_delete",
					null,
					"AQAAAJwQAAAAAAAAnBAAAAAAAAABAAAAZQ",
					"AgAAAAAAAAABAAAAnRAAAAAAAACdEAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					1820,
					1,
					"insert",
					{
						"characters": "elf"
					},
					"AwAAAJwQAAAAAAAAnRAAAAAAAAAAAAAAnRAAAAAAAACeEAAAAAAAAAAAAACeEAAAAAAAAJ8QAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAnBAAAAAAAACcEAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					1825,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAKIQAAAAAAAAoxAAAAAAAAAAAAAAoxAAAAAAAACnEAAAAAAAAAAAAACnEAAAAAAAAKgQAAAAAAAAAAAAAKgQAAAAAAAArBAAAAAAAAAAAAAAoxAAAAAAAACjEAAAAAAAAAQAAAAgICAgoxAAAAAAAACrEAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAohAAAAAAAACiEAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					1826,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAKsQAAAAAAAArBAAAAAAAAAAAAAArBAAAAAAAACtEAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAqxAAAAAAAACrEAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					1827,
					1,
					"insert",
					{
						"characters": " glraw"
					},
					"BgAAAK0QAAAAAAAArhAAAAAAAAAAAAAArhAAAAAAAACvEAAAAAAAAAAAAACvEAAAAAAAALAQAAAAAAAAAAAAALAQAAAAAAAAsRAAAAAAAAAAAAAAsRAAAAAAAACyEAAAAAAAAAAAAACyEAAAAAAAALMQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAArRAAAAAAAACtEAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					1828,
					3,
					"left_delete",
					null,
					"AwAAALIQAAAAAAAAshAAAAAAAAABAAAAd7EQAAAAAAAAsRAAAAAAAAABAAAAYbAQAAAAAAAAsBAAAAAAAAABAAAAcg",
					"AgAAAAAAAAABAAAAsxAAAAAAAACzEAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					1829,
					1,
					"insert",
					{
						"characters": "DrawElements"
					},
					"DAAAALAQAAAAAAAAsRAAAAAAAAAAAAAAsRAAAAAAAACyEAAAAAAAAAAAAACyEAAAAAAAALMQAAAAAAAAAAAAALMQAAAAAAAAtBAAAAAAAAAAAAAAtBAAAAAAAAC1EAAAAAAAAAAAAAC1EAAAAAAAALYQAAAAAAAAAAAAALYQAAAAAAAAtxAAAAAAAAAAAAAAtxAAAAAAAAC4EAAAAAAAAAAAAAC4EAAAAAAAALkQAAAAAAAAAAAAALkQAAAAAAAAuhAAAAAAAAAAAAAAuhAAAAAAAAC7EAAAAAAAAAAAAAC7EAAAAAAAALwQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAsBAAAAAAAACwEAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					1838,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAALwQAAAAAAAAvRAAAAAAAAAAAAAAvRAAAAAAAADFEAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAvBAAAAAAAAC8EAAAAAAAAP///////+9/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					1839,
					1,
					"paste",
					null,
					"AQAAAMUQAAAAAAAA+RAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAxRAAAAAAAADFEAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					1840,
					2,
					"rust_fmt_format_buffer",
					null,
					"AQAAAOIQAAAAAAAA6hAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA+RAAAAAAAAD5EAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					1842,
					1,
					"cut",
					null,
					"AQAAAKMQAAAAAAAAoxAAAAAAAAAaAAAAICAgICAgICAvLyBnbERyYXdFbGVtZW50cwo",
					"AgAAAAAAAAABAAAAvBAAAAAAAAC8EAAAAAAAAAAAAAAA4GtAAQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					1845,
					1,
					"insert",
					{
						"characters": "\n//"
					},
					"BAAAAOcQAAAAAAAA6BAAAAAAAAAAAAAA6BAAAAAAAADwEAAAAAAAAAAAAADwEAAAAAAAAPEQAAAAAAAAAAAAAPEQAAAAAAAA8hAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA5xAAAAAAAADnEAAAAAAAAP///////+9/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					1846,
					1,
					"insert",
					{
						"characters": " gl"
					},
					"AwAAAPIQAAAAAAAA8xAAAAAAAAAAAAAA8xAAAAAAAAD0EAAAAAAAAAAAAAD0EAAAAAAAAPUQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA8hAAAAAAAADyEAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					1847,
					1,
					"insert",
					{
						"characters": " Draw"
					},
					"BQAAAPUQAAAAAAAA9hAAAAAAAAAAAAAA9hAAAAAAAAD3EAAAAAAAAAAAAAD3EAAAAAAAAPgQAAAAAAAAAAAAAPgQAAAAAAAA+RAAAAAAAAAAAAAA+RAAAAAAAAD6EAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA9RAAAAAAAAD1EAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					1848,
					5,
					"left_delete",
					null,
					"BQAAAPkQAAAAAAAA+RAAAAAAAAABAAAAd/gQAAAAAAAA+BAAAAAAAAABAAAAYfcQAAAAAAAA9xAAAAAAAAABAAAAcvYQAAAAAAAA9hAAAAAAAAABAAAARPUQAAAAAAAA9RAAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAA+hAAAAAAAAD6EAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					1849,
					1,
					"insert",
					{
						"characters": "DrawElements"
					},
					"DAAAAPUQAAAAAAAA9hAAAAAAAAAAAAAA9hAAAAAAAAD3EAAAAAAAAAAAAAD3EAAAAAAAAPgQAAAAAAAAAAAAAPgQAAAAAAAA+RAAAAAAAAAAAAAA+RAAAAAAAAD6EAAAAAAAAAAAAAD6EAAAAAAAAPsQAAAAAAAAAAAAAPsQAAAAAAAA/BAAAAAAAAAAAAAA/BAAAAAAAAD9EAAAAAAAAAAAAAD9EAAAAAAAAP4QAAAAAAAAAAAAAP4QAAAAAAAA/xAAAAAAAAAAAAAA/xAAAAAAAAAAEQAAAAAAAAAAAAAAEQAAAAAAAAERAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA9RAAAAAAAAD1EAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					1851,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAANAQAAAAAAAA0xAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA4RAAAAAAAADhEAAAAAAAAAAAAAAAgGZAAQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					1853,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAAKsQAAAAAAAArhAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAvxAAAAAAAAC/EAAAAAAAAAAAAAAAQGlAAQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					1866,
					1,
					"insert",
					{
						"characters": "\npug"
					},
					"BQAAALYFAAAAAAAAtwUAAAAAAAAAAAAAtwUAAAAAAAC7BQAAAAAAAAAAAAC7BQAAAAAAALwFAAAAAAAAAAAAALwFAAAAAAAAvQUAAAAAAAAAAAAAvQUAAAAAAAC+BQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAtgUAAAAAAAC2BQAAAAAAAP///////+9/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					1867,
					1,
					"insert",
					{
						"characters": " gl_"
					},
					"BAAAAL4FAAAAAAAAvwUAAAAAAAAAAAAAvwUAAAAAAADABQAAAAAAAAAAAADABQAAAAAAAMEFAAAAAAAAAAAAAMEFAAAAAAAAwgUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAvgUAAAAAAAC+BQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					1868,
					5,
					"left_delete",
					null,
					"BQAAAMEFAAAAAAAAwQUAAAAAAAABAAAAX8AFAAAAAAAAwAUAAAAAAAABAAAAbL8FAAAAAAAAvwUAAAAAAAABAAAAZ74FAAAAAAAAvgUAAAAAAAABAAAAIL0FAAAAAAAAvQUAAAAAAAABAAAAZw",
					"AgAAAAAAAAABAAAAwgUAAAAAAADCBQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					1869,
					1,
					"insert",
					{
						"characters": "b"
					},
					"AQAAAL0FAAAAAAAAvgUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAvQUAAAAAAAC9BQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					1870,
					1,
					"insert",
					{
						"characters": " gl_use_program"
					},
					"DwAAAL4FAAAAAAAAvwUAAAAAAAAAAAAAvwUAAAAAAADABQAAAAAAAAAAAADABQAAAAAAAMEFAAAAAAAAAAAAAMEFAAAAAAAAwgUAAAAAAAAAAAAAwgUAAAAAAADDBQAAAAAAAAAAAADDBQAAAAAAAMQFAAAAAAAAAAAAAMQFAAAAAAAAxQUAAAAAAAAAAAAAxQUAAAAAAADGBQAAAAAAAAAAAADGBQAAAAAAAMcFAAAAAAAAAAAAAMcFAAAAAAAAyAUAAAAAAAAAAAAAyAUAAAAAAADJBQAAAAAAAAAAAADJBQAAAAAAAMoFAAAAAAAAAAAAAMoFAAAAAAAAywUAAAAAAAAAAAAAywUAAAAAAADMBQAAAAAAAAAAAADMBQAAAAAAAM0FAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAvgUAAAAAAAC+BQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					1871,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAM0FAAAAAAAAzwUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAzQUAAAAAAADNBQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					1872,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAM4FAAAAAAAAzwUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAzgUAAAAAAADOBQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					1873,
					1,
					"left_delete",
					null,
					"AQAAAM4FAAAAAAAAzgUAAAAAAAABAAAAOg",
					"AgAAAAAAAAABAAAAzwUAAAAAAADPBQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					1874,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAM0FAAAAAAAAzQUAAAAAAAABAAAAKM0FAAAAAAAAzQUAAAAAAAABAAAAKQ",
					"AgAAAAAAAAABAAAAzgUAAAAAAADOBQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					1875,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAM0FAAAAAAAAzgUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAzQUAAAAAAADNBQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					1876,
					1,
					"insert",
					{
						"characters": " fn"
					},
					"AwAAAM4FAAAAAAAAzwUAAAAAAAAAAAAAzwUAAAAAAADQBQAAAAAAAAAAAADQBQAAAAAAANEFAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAzgUAAAAAAADOBQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					1877,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAANEFAAAAAAAA0wUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0QUAAAAAAADRBQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					1878,
					1,
					"insert",
					{
						"characters": "i32"
					},
					"AwAAANIFAAAAAAAA0wUAAAAAAAAAAAAA0wUAAAAAAADUBQAAAAAAAAAAAADUBQAAAAAAANUFAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0gUAAAAAAADSBQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					1880,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAANYFAAAAAAAA1wUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA1gUAAAAAAADWBQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					1883,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAALsFAAAAAAAAvgUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA1wUAAAAAAADXBQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					1886,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAALsFAAAAAAAAuwUAAAAAAAADAAAALy8g",
					"AgAAAAAAAAABAAAA2gUAAAAAAADaBQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					1892,
					1,
					"insert",
					{
						"characters": "u32"
					},
					"BAAAANIFAAAAAAAA0wUAAAAAAAAAAAAA0wUAAAAAAADTBQAAAAAAAAMAAABpMzLTBQAAAAAAANQFAAAAAAAAAAAAANQFAAAAAAAA1QUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA1QUAAAAAAADSBQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					1904,
					1,
					"left_delete",
					null,
					"AQAAAFQEAAAAAAAAVAQAAAAAAAABAAAAaQ",
					"AgAAAAAAAAABAAAAVQQAAAAAAABVBAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					1905,
					1,
					"insert",
					{
						"characters": "u"
					},
					"AQAAAFQEAAAAAAAAVQQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAVAQAAAAAAABUBAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					1913,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAPcLAAAAAAAA+AsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA9wsAAAAAAAD3CwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					1914,
					1,
					"insert",
					{
						"characters": " u32"
					},
					"BAAAAPgLAAAAAAAA+QsAAAAAAAAAAAAA+QsAAAAAAAD6CwAAAAAAAAAAAAD6CwAAAAAAAPsLAAAAAAAAAAAAAPsLAAAAAAAA/AsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA+AsAAAAAAAD4CwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					1947,
					1,
					"left_delete",
					null,
					"AQAAAHYEAAAAAAAAdgQAAAAAAAABAAAAaQ",
					"AgAAAAAAAAABAAAAdwQAAAAAAAB3BAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					1948,
					1,
					"insert",
					{
						"characters": "u"
					},
					"AQAAAHYEAAAAAAAAdwQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAdgQAAAAAAAB2BAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					1966,
					1,
					"left_delete",
					null,
					"AQAAAJ0EAAAAAAAAnQQAAAAAAAABAAAAaQ",
					"AgAAAAAAAAABAAAAngQAAAAAAACeBAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					1967,
					1,
					"insert",
					{
						"characters": "u"
					},
					"AQAAAJ0EAAAAAAAAngQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAnQQAAAAAAACdBAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					1988,
					1,
					"left_delete",
					null,
					"AQAAANoDAAAAAAAA2gMAAAAAAAABAAAAaQ",
					"AgAAAAAAAAABAAAA2wMAAAAAAADbAwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					1989,
					1,
					"insert",
					{
						"characters": "u"
					},
					"AQAAANoDAAAAAAAA2wMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA2gMAAAAAAADaAwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2001,
					1,
					"left_delete",
					null,
					"AQAAANIIAAAAAAAA0ggAAAAAAAABAAAAaQ",
					"AgAAAAAAAAABAAAA0wgAAAAAAADTCAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2002,
					1,
					"insert",
					{
						"characters": "u"
					},
					"AQAAANIIAAAAAAAA0wgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0ggAAAAAAADSCAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2024,
					1,
					"left_delete",
					null,
					"AQAAAGsDAAAAAAAAawMAAAAAAAABAAAAaQ",
					"AgAAAAAAAAABAAAAbAMAAAAAAABsAwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2025,
					1,
					"insert",
					{
						"characters": "u"
					},
					"AQAAAGsDAAAAAAAAbAMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAawMAAAAAAABrAwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2039,
					1,
					"left_delete",
					null,
					"AQAAAI0DAAAAAAAAjQMAAAAAAAABAAAAaQ",
					"AgAAAAAAAAABAAAAjgMAAAAAAACOAwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2040,
					1,
					"insert",
					{
						"characters": "u"
					},
					"AQAAAI0DAAAAAAAAjgMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAjQMAAAAAAACNAwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2051,
					1,
					"left_delete",
					null,
					"AQAAALcDAAAAAAAAtwMAAAAAAAABAAAAaQ",
					"AgAAAAAAAAABAAAAuAMAAAAAAAC4AwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2052,
					1,
					"insert",
					{
						"characters": "u"
					},
					"AQAAALcDAAAAAAAAuAMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAtwMAAAAAAAC3AwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2063,
					1,
					"left_delete",
					null,
					"AQAAABEGAAAAAAAAEQYAAAAAAAABAAAAaQ",
					"AgAAAAAAAAABAAAAEgYAAAAAAAASBgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2064,
					1,
					"insert",
					{
						"characters": "u"
					},
					"AQAAABEGAAAAAAAAEgYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAEQYAAAAAAAARBgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2077,
					1,
					"left_delete",
					null,
					"AQAAAA4EAAAAAAAADgQAAAAAAAABAAAAaQ",
					"AgAAAAAAAAABAAAADwQAAAAAAAAPBAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2078,
					1,
					"insert",
					{
						"characters": "u"
					},
					"AQAAAA4EAAAAAAAADwQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAADgQAAAAAAAAOBAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2085,
					1,
					"left_delete",
					null,
					"AQAAAAAIAAAAAAAAAAgAAAAAAAABAAAAaQ",
					"AgAAAAAAAAABAAAAAQgAAAAAAAABCAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2086,
					1,
					"insert",
					{
						"characters": "u"
					},
					"AQAAAAAIAAAAAAAAAQgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAgAAAAAAAAACAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2106,
					1,
					"left_delete",
					null,
					"AQAAAHsEAAAAAAAAewQAAAAAAAABAAAAaQ",
					"AgAAAAAAAAABAAAAfAQAAAAAAAB8BAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2107,
					1,
					"insert",
					{
						"characters": "u"
					},
					"AQAAAHsEAAAAAAAAfAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAewQAAAAAAAB7BAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2131,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAANEQAAAAAAAA0RAAAAAAAAADAAAALy8g",
					"AgAAAAAAAAABAAAAyRAAAAAAAADJEAAAAAAAAAAAAAAAAAAAAQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2135,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAMUQAAAAAAAAxhAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAxRAAAAAAAADFEAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2136,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMYQAAAAAAAAxxAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAxhAAAAAAAADGEAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2137,
					1,
					"insert",
					{
						"characters": "prog_id:"
					},
					"CAAAAMcQAAAAAAAAyBAAAAAAAAAAAAAAyBAAAAAAAADJEAAAAAAAAAAAAADJEAAAAAAAAMoQAAAAAAAAAAAAAMoQAAAAAAAAyxAAAAAAAAAAAAAAyxAAAAAAAADMEAAAAAAAAAAAAADMEAAAAAAAAM0QAAAAAAAAAAAAAM0QAAAAAAAAzhAAAAAAAAAAAAAAzhAAAAAAAADPEAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAxxAAAAAAAADHEAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2138,
					1,
					"insert",
					{
						"characters": " u32"
					},
					"BAAAAM8QAAAAAAAA0BAAAAAAAAAAAAAA0BAAAAAAAADREAAAAAAAAAAAAADREAAAAAAAANIQAAAAAAAAAAAAANIQAAAAAAAA0xAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAzxAAAAAAAADPEAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2145,
					1,
					"insert",
					{
						"characters": "prog_id"
					},
					"CAAAAOwQAAAAAAAA7RAAAAAAAAAAAAAA7RAAAAAAAADtEAAAAAAAAA0AAABzaGFkZXJQcm9ncmFt7RAAAAAAAADuEAAAAAAAAAAAAADuEAAAAAAAAO8QAAAAAAAAAAAAAO8QAAAAAAAA8BAAAAAAAAAAAAAA8BAAAAAAAADxEAAAAAAAAAAAAADxEAAAAAAAAPIQAAAAAAAAAAAAAPIQAAAAAAAA8xAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA+RAAAAAAAADsEAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2147,
					1,
					"insert",
					{
						"characters": "()"
					},
					"AgAAAN8QAAAAAAAA4BAAAAAAAAAAAAAA4BAAAAAAAADhEAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA3xAAAAAAAADfEAAAAAAAAAAAAAAAAE1AAQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2149,
					1,
					"insert",
					{
						"characters": "self.gl_use_"
					},
					"DAAAAOAQAAAAAAAA4RAAAAAAAAAAAAAA4RAAAAAAAADiEAAAAAAAAAAAAADiEAAAAAAAAOMQAAAAAAAAAAAAAOMQAAAAAAAA5BAAAAAAAAAAAAAA5BAAAAAAAADlEAAAAAAAAAAAAADlEAAAAAAAAOYQAAAAAAAAAAAAAOYQAAAAAAAA5xAAAAAAAAAAAAAA5xAAAAAAAADoEAAAAAAAAAAAAADoEAAAAAAAAOkQAAAAAAAAAAAAAOkQAAAAAAAA6hAAAAAAAAAAAAAA6hAAAAAAAADrEAAAAAAAAAAAAADrEAAAAAAAAOwQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA4BAAAAAAAADgEAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2150,
					1,
					"insert",
					{
						"characters": "program"
					},
					"BwAAAOwQAAAAAAAA7RAAAAAAAAAAAAAA7RAAAAAAAADuEAAAAAAAAAAAAADuEAAAAAAAAO8QAAAAAAAAAAAAAO8QAAAAAAAA8BAAAAAAAAAAAAAA8BAAAAAAAADxEAAAAAAAAAAAAADxEAAAAAAAAPIQAAAAAAAAAAAAAPIQAAAAAAAA8xAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA7BAAAAAAAADsEAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2152,
					1,
					"insert",
					{
						"characters": "()"
					},
					"AgAAAPQQAAAAAAAA9RAAAAAAAAAAAAAA9RAAAAAAAAD2EAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA9BAAAAAAAAD0EAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2153,
					1,
					"left_delete",
					null,
					"AQAAAPUQAAAAAAAA9RAAAAAAAAABAAAAKQ",
					"AgAAAAAAAAABAAAA9hAAAAAAAAD2EAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2156,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAAoRAAAAAAAACxEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAChEAAAAAAAAKEQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2164,
					1,
					"left_delete",
					null,
					"AQAAAPUQAAAAAAAA9RAAAAAAAAAMAAAAZ2xVc2VQcm9ncmFt",
					"AgAAAAAAAAABAAAAAREAAAAAAAD1EAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2166,
					1,
					"left_delete",
					null,
					"AQAAAPUQAAAAAAAA9RAAAAAAAAABAAAAKA",
					"AgAAAAAAAAABAAAA9hAAAAAAAAD2EAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2169,
					1,
					"left_delete",
					null,
					"AQAAAP0QAAAAAAAA/RAAAAAAAAABAAAAKQ",
					"AgAAAAAAAAABAAAA/hAAAAAAAAD+EAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2200,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAANMQAAAAAAAA1BAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0xAAAAAAAADTEAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2201,
					1,
					"insert",
					{
						"characters": " voa:"
					},
					"BQAAANQQAAAAAAAA1RAAAAAAAAAAAAAA1RAAAAAAAADWEAAAAAAAAAAAAADWEAAAAAAAANcQAAAAAAAAAAAAANcQAAAAAAAA2BAAAAAAAAAAAAAA2BAAAAAAAADZEAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA1BAAAAAAAADUEAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2202,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANkQAAAAAAAA2hAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA2RAAAAAAAADZEAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2203,
					4,
					"left_delete",
					null,
					"BAAAANkQAAAAAAAA2RAAAAAAAAABAAAAINgQAAAAAAAA2BAAAAAAAAABAAAAOtcQAAAAAAAA1xAAAAAAAAABAAAAYdYQAAAAAAAA1hAAAAAAAAABAAAAbw",
					"AgAAAAAAAAABAAAA2hAAAAAAAADaEAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2204,
					1,
					"insert",
					{
						"characters": "ao:"
					},
					"AwAAANYQAAAAAAAA1xAAAAAAAAAAAAAA1xAAAAAAAADYEAAAAAAAAAAAAADYEAAAAAAAANkQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA1hAAAAAAAADWEAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2205,
					1,
					"insert",
					{
						"characters": " &Var"
					},
					"BQAAANkQAAAAAAAA2hAAAAAAAAAAAAAA2hAAAAAAAADbEAAAAAAAAAAAAADbEAAAAAAAANwQAAAAAAAAAAAAANwQAAAAAAAA3RAAAAAAAAAAAAAA3RAAAAAAAADeEAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA2RAAAAAAAADZEAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2206,
					1,
					"left_delete",
					null,
					"AQAAAN0QAAAAAAAA3RAAAAAAAAABAAAAcg",
					"AgAAAAAAAAABAAAA3hAAAAAAAADeEAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2207,
					1,
					"insert",
					{
						"characters": "o"
					},
					"AQAAAN0QAAAAAAAA3hAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA3RAAAAAAAADdEAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2212,
					1,
					"insert",
					{
						"characters": "?"
					},
					"AQAAACwRAAAAAAAALREAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAALBEAAAAAAAAsEQAAAAAAAAAAAAAA0HNAAQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2213,
					1,
					"left_delete",
					null,
					"AQAAACwRAAAAAAAALBEAAAAAAAABAAAAPw",
					"AgAAAAAAAAABAAAALREAAAAAAAAtEQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2214,
					1,
					"insert",
					{
						"characters": "?"
					},
					"AQAAACwRAAAAAAAALREAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAALBEAAAAAAAAsEQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2215,
					1,
					"left_delete",
					null,
					"AQAAACwRAAAAAAAALBEAAAAAAAABAAAAPw",
					"AgAAAAAAAAABAAAALREAAAAAAAAtEQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2216,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAABIRAAAAAAAAEhEAAAAAAAADAAAALy8g",
					"AgAAAAAAAAABAAAALBEAAAAAAAAsEQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2225,
					1,
					"paste",
					null,
					"AQAAAAoRAAAAAAAANxEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAChEAAAAAAAAKEQAAAAAAAAAAAAAAAAAAAQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2226,
					1,
					"cut",
					null,
					"AQAAADcRAAAAAAAANxEAAAAAAAAgAAAAICAgICAgICBnbEJpbmRWZXJ0ZXhBcnJheShWQU8pOwo",
					"AgAAAAAAAAABAAAANxEAAAAAAAA3EQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2268,
					1,
					"insert",
					{
						"characters": "\npub"
					},
					"BQAAANcFAAAAAAAA2AUAAAAAAAAAAAAA2AUAAAAAAADcBQAAAAAAAAAAAADcBQAAAAAAAN0FAAAAAAAAAAAAAN0FAAAAAAAA3gUAAAAAAAAAAAAA3gUAAAAAAADfBQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA1wUAAAAAAADXBQAAAAAAAP///////+9/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2269,
					1,
					"insert",
					{
						"characters": " gld"
					},
					"BAAAAN8FAAAAAAAA4AUAAAAAAAAAAAAA4AUAAAAAAADhBQAAAAAAAAAAAADhBQAAAAAAAOIFAAAAAAAAAAAAAOIFAAAAAAAA4wUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA3wUAAAAAAADfBQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2270,
					1,
					"left_delete",
					null,
					"AQAAAOIFAAAAAAAA4gUAAAAAAAABAAAAZA",
					"AgAAAAAAAAABAAAA4wUAAAAAAADjBQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2271,
					1,
					"insert",
					{
						"characters": "_draw_elements:"
					},
					"DwAAAOIFAAAAAAAA4wUAAAAAAAAAAAAA4wUAAAAAAADkBQAAAAAAAAAAAADkBQAAAAAAAOUFAAAAAAAAAAAAAOUFAAAAAAAA5gUAAAAAAAAAAAAA5gUAAAAAAADnBQAAAAAAAAAAAADnBQAAAAAAAOgFAAAAAAAAAAAAAOgFAAAAAAAA6QUAAAAAAAAAAAAA6QUAAAAAAADqBQAAAAAAAAAAAADqBQAAAAAAAOsFAAAAAAAAAAAAAOsFAAAAAAAA7AUAAAAAAAAAAAAA7AUAAAAAAADtBQAAAAAAAAAAAADtBQAAAAAAAO4FAAAAAAAAAAAAAO4FAAAAAAAA7wUAAAAAAAAAAAAA7wUAAAAAAADwBQAAAAAAAAAAAADwBQAAAAAAAPEFAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA4gUAAAAAAADiBQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2272,
					1,
					"insert",
					{
						"characters": " fn"
					},
					"AwAAAPEFAAAAAAAA8gUAAAAAAAAAAAAA8gUAAAAAAADzBQAAAAAAAAAAAADzBQAAAAAAAPQFAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA8QUAAAAAAADxBQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2273,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAPQFAAAAAAAA9gUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA9AUAAAAAAAD0BQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2274,
					1,
					"insert",
					{
						"characters": "i32,"
					},
					"BAAAAPUFAAAAAAAA9gUAAAAAAAAAAAAA9gUAAAAAAAD3BQAAAAAAAAAAAAD3BQAAAAAAAPgFAAAAAAAAAAAAAPgFAAAAAAAA+QUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA9QUAAAAAAAD1BQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2275,
					1,
					"insert",
					{
						"characters": " i32,"
					},
					"BQAAAPkFAAAAAAAA+gUAAAAAAAAAAAAA+gUAAAAAAAD7BQAAAAAAAAAAAAD7BQAAAAAAAPwFAAAAAAAAAAAAAPwFAAAAAAAA/QUAAAAAAAAAAAAA/QUAAAAAAAD+BQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA+QUAAAAAAAD5BQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2276,
					1,
					"insert",
					{
						"characters": " i32,"
					},
					"BQAAAP4FAAAAAAAA/wUAAAAAAAAAAAAA/wUAAAAAAAAABgAAAAAAAAAAAAAABgAAAAAAAAEGAAAAAAAAAAAAAAEGAAAAAAAAAgYAAAAAAAAAAAAAAgYAAAAAAAADBgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA/gUAAAAAAAD+BQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2277,
					1,
					"insert",
					{
						"characters": " *const"
					},
					"BwAAAAMGAAAAAAAABAYAAAAAAAAAAAAABAYAAAAAAAAFBgAAAAAAAAAAAAAFBgAAAAAAAAYGAAAAAAAAAAAAAAYGAAAAAAAABwYAAAAAAAAAAAAABwYAAAAAAAAIBgAAAAAAAAAAAAAIBgAAAAAAAAkGAAAAAAAAAAAAAAkGAAAAAAAACgYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAwYAAAAAAAADBgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2278,
					1,
					"insert",
					{
						"characters": " libc::c_c"
					},
					"CgAAAAoGAAAAAAAACwYAAAAAAAAAAAAACwYAAAAAAAAMBgAAAAAAAAAAAAAMBgAAAAAAAA0GAAAAAAAAAAAAAA0GAAAAAAAADgYAAAAAAAAAAAAADgYAAAAAAAAPBgAAAAAAAAAAAAAPBgAAAAAAABAGAAAAAAAAAAAAABAGAAAAAAAAEQYAAAAAAAAAAAAAEQYAAAAAAAASBgAAAAAAAAAAAAASBgAAAAAAABMGAAAAAAAAAAAAABMGAAAAAAAAFAYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAACgYAAAAAAAAKBgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2279,
					1,
					"insert",
					{
						"characters": "oi"
					},
					"AgAAABQGAAAAAAAAFQYAAAAAAAAAAAAAFQYAAAAAAAAWBgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAFAYAAAAAAAAUBgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2280,
					3,
					"left_delete",
					null,
					"AwAAABUGAAAAAAAAFQYAAAAAAAABAAAAaRQGAAAAAAAAFAYAAAAAAAABAAAAbxMGAAAAAAAAEwYAAAAAAAABAAAAYw",
					"AgAAAAAAAAABAAAAFgYAAAAAAAAWBgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2281,
					1,
					"insert",
					{
						"characters": "void"
					},
					"BAAAABMGAAAAAAAAFAYAAAAAAAAAAAAAFAYAAAAAAAAVBgAAAAAAAAAAAAAVBgAAAAAAABYGAAAAAAAAAAAAABYGAAAAAAAAFwYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAEwYAAAAAAAATBgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2282,
					2,
					"rust_fmt_format_buffer",
					null,
					"AQAAABgGAAAAAAAAGQYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAFwYAAAAAAAAXBgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2287,
					1,
					"insert",
					{
						"characters": "vec<"
					},
					"BQAAAAQGAAAAAAAABQYAAAAAAAAAAAAABQYAAAAAAAAFBgAAAAAAABMAAAAqY29uc3QgbGliYzo6Y192b2lkBQYAAAAAAAAGBgAAAAAAAAAAAAAGBgAAAAAAAAcGAAAAAAAAAAAAAAcGAAAAAAAACAYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAFwYAAAAAAAAEBgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2288,
					4,
					"left_delete",
					null,
					"BAAAAAcGAAAAAAAABwYAAAAAAAABAAAAPAYGAAAAAAAABgYAAAAAAAABAAAAYwUGAAAAAAAABQYAAAAAAAABAAAAZQQGAAAAAAAABAYAAAAAAAABAAAAdg",
					"AgAAAAAAAAABAAAACAYAAAAAAAAIBgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2289,
					1,
					"insert",
					{
						"characters": "Vec<i32>"
					},
					"CAAAAAQGAAAAAAAABQYAAAAAAAAAAAAABQYAAAAAAAAGBgAAAAAAAAAAAAAGBgAAAAAAAAcGAAAAAAAAAAAAAAcGAAAAAAAACAYAAAAAAAAAAAAACAYAAAAAAAAJBgAAAAAAAAAAAAAJBgAAAAAAAAoGAAAAAAAAAAAAAAoGAAAAAAAACwYAAAAAAAAAAAAACwYAAAAAAAAMBgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAABAYAAAAAAAAEBgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2296,
					1,
					"left_delete",
					null,
					"AQAAAPoFAAAAAAAA+gUAAAAAAAAEAAAAaTMyLA",
					"AgAAAAAAAAABAAAA+gUAAAAAAAD+BQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2297,
					2,
					"rust_fmt_format_buffer",
					null,
					"AQAAAPoFAAAAAAAA+gUAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAA+gUAAAAAAAD6BQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2303,
					1,
					"insert",
					{
						"characters": "u"
					},
					"AQAAAAMGAAAAAAAABAYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAwYAAAAAAAADBgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2307,
					1,
					"left_delete",
					null,
					"AQAAAAQGAAAAAAAABAYAAAAAAAABAAAAaQ",
					"AgAAAAAAAAABAAAABQYAAAAAAAAFBgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2312,
					1,
					"left_delete",
					null,
					"AQAAAPoFAAAAAAAA+gUAAAAAAAAFAAAAaTMyLCA",
					"AgAAAAAAAAABAAAA/wUAAAAAAAD6BQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2315,
					1,
					"insert",
					{
						"characters": "&mut"
					},
					"BAAAAPoFAAAAAAAA+wUAAAAAAAAAAAAA+wUAAAAAAAD8BQAAAAAAAAAAAAD8BQAAAAAAAP0FAAAAAAAAAAAAAP0FAAAAAAAA/gUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA+gUAAAAAAAD6BQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2316,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAP4FAAAAAAAA/wUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA/gUAAAAAAAD+BQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2326,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAABARAAAAAAAAEREAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAEBEAAAAAAAAQEQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2327,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABERAAAAAAAAEhEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAEREAAAAAAAAREQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2328,
					1,
					"insert",
					{
						"characters": "indecie,"
					},
					"CAAAABIRAAAAAAAAExEAAAAAAAAAAAAAExEAAAAAAAAUEQAAAAAAAAAAAAAUEQAAAAAAABURAAAAAAAAAAAAABURAAAAAAAAFhEAAAAAAAAAAAAAFhEAAAAAAAAXEQAAAAAAAAAAAAAXEQAAAAAAABgRAAAAAAAAAAAAABgRAAAAAAAAGREAAAAAAAAAAAAAGREAAAAAAAAaEQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAEhEAAAAAAAASEQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2329,
					1,
					"insert",
					{
						"characters": " vec<"
					},
					"BQAAABoRAAAAAAAAGxEAAAAAAAAAAAAAGxEAAAAAAAAcEQAAAAAAAAAAAAAcEQAAAAAAAB0RAAAAAAAAAAAAAB0RAAAAAAAAHhEAAAAAAAAAAAAAHhEAAAAAAAAfEQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAGhEAAAAAAAAaEQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2330,
					1,
					"insert",
					{
						"characters": "u32>"
					},
					"BAAAAB8RAAAAAAAAIBEAAAAAAAAAAAAAIBEAAAAAAAAhEQAAAAAAAAAAAAAhEQAAAAAAACIRAAAAAAAAAAAAACIRAAAAAAAAIxEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAHxEAAAAAAAAfEQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2334,
					1,
					"insert",
					{
						"characters": "?"
					},
					"AQAAAJURAAAAAAAAlhEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAlREAAAAAAACVEQAAAAAAAAAAAAAAYHxAAQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2335,
					1,
					"cut",
					null,
					"AQAAAHwRAAAAAAAAfBEAAAAAAAAbAAAAICAgICAgICAvLyBnbERyYXdFbGVtZW50cz8K",
					"AgAAAAAAAAABAAAAlhEAAAAAAACWEQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2338,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAHsRAAAAAAAAfBEAAAAAAAAAAAAAfBEAAAAAAACEEQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAexEAAAAAAAB7EQAAAAAAAP///////+9/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2339,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAIQRAAAAAAAAhhEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAhBEAAAAAAACEEQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2340,
					1,
					"insert",
					{
						"characters": "self.gl_draw_elemen"
					},
					"EwAAAIURAAAAAAAAhhEAAAAAAAAAAAAAhhEAAAAAAACHEQAAAAAAAAAAAACHEQAAAAAAAIgRAAAAAAAAAAAAAIgRAAAAAAAAiREAAAAAAAAAAAAAiREAAAAAAACKEQAAAAAAAAAAAACKEQAAAAAAAIsRAAAAAAAAAAAAAIsRAAAAAAAAjBEAAAAAAAAAAAAAjBEAAAAAAACNEQAAAAAAAAAAAACNEQAAAAAAAI4RAAAAAAAAAAAAAI4RAAAAAAAAjxEAAAAAAAAAAAAAjxEAAAAAAACQEQAAAAAAAAAAAACQEQAAAAAAAJERAAAAAAAAAAAAAJERAAAAAAAAkhEAAAAAAAAAAAAAkhEAAAAAAACTEQAAAAAAAAAAAACTEQAAAAAAAJQRAAAAAAAAAAAAAJQRAAAAAAAAlREAAAAAAAAAAAAAlREAAAAAAACWEQAAAAAAAAAAAACWEQAAAAAAAJcRAAAAAAAAAAAAAJcRAAAAAAAAmBEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAhREAAAAAAACFEQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2341,
					1,
					"insert",
					{
						"characters": "ts"
					},
					"AgAAAJgRAAAAAAAAmREAAAAAAAAAAAAAmREAAAAAAACaEQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAmBEAAAAAAACYEQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2343,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJsRAAAAAAAAnREAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAmxEAAAAAAACbEQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2344,
					1,
					"insert",
					{
						"characters": "GL_TRIANGES"
					},
					"CwAAAJwRAAAAAAAAnREAAAAAAAAAAAAAnREAAAAAAACeEQAAAAAAAAAAAACeEQAAAAAAAJ8RAAAAAAAAAAAAAJ8RAAAAAAAAoBEAAAAAAAAAAAAAoBEAAAAAAAChEQAAAAAAAAAAAAChEQAAAAAAAKIRAAAAAAAAAAAAAKIRAAAAAAAAoxEAAAAAAAAAAAAAoxEAAAAAAACkEQAAAAAAAAAAAACkEQAAAAAAAKURAAAAAAAAAAAAAKURAAAAAAAAphEAAAAAAAAAAAAAphEAAAAAAACnEQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAnBEAAAAAAACcEQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2350,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAK8BAAAAAAAAsAEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAArwEAAAAAAACvAQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2351,
					1,
					"paste",
					null,
					"AQAAALABAAAAAAAACQIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAsAEAAAAAAACwAQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2352,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line.sublime-macro"
					},
					"AQAAAAkCAAAAAAAACgIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAACQIAAAAAAAAJAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2361,
					1,
					"left_delete",
					null,
					"AQAAALABAAAAAAAAsAEAAAAAAAA2AAAAI1thbGxvdyhkZWFkX2NvZGUsIG5vbl91cHBlcl9jYXNlX2dsb2JhbHMpXSBwdWIgY29uc3Qg",
					"AgAAAAAAAAABAAAA5gEAAAAAAACwAQAAAAAAAAAAAAAAAAAAAQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2365,
					1,
					"insert",
					{
						"characters": "const"
					},
					"BQAAALABAAAAAAAAsQEAAAAAAAAAAAAAsQEAAAAAAACyAQAAAAAAAAAAAACyAQAAAAAAALMBAAAAAAAAAAAAALMBAAAAAAAAtAEAAAAAAAAAAAAAtAEAAAAAAAC1AQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAsAEAAAAAAACwAQAAAAAAAAAAAAAAAAAAAQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2366,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALUBAAAAAAAAtgEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAtQEAAAAAAAC1AQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2371,
					1,
					"insert",
					{
						"characters": "i32"
					},
					"BAAAAMEBAAAAAAAAwgEAAAAAAAAAAAAAwgEAAAAAAADCAQAAAAAAAA0AAAB0eXBlczo6R0xlbnVtwgEAAAAAAADDAQAAAAAAAAAAAADDAQAAAAAAAMQBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAzgEAAAAAAADBAQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2375,
					1,
					"insert",
					{
						"characters": "GL_"
					},
					"AwAAALYBAAAAAAAAtwEAAAAAAAAAAAAAtwEAAAAAAAC4AQAAAAAAAAAAAAC4AQAAAAAAALkBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAtgEAAAAAAAC2AQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2397,
					1,
					"insert",
					{
						"characters": "TRIANGLES"
					},
					"CgAAAMMRAAAAAAAAxBEAAAAAAAAAAAAAxBEAAAAAAADEEQAAAAAAAAgAAABUUklBTkdFU8QRAAAAAAAAxREAAAAAAAAAAAAAxREAAAAAAADGEQAAAAAAAAAAAADGEQAAAAAAAMcRAAAAAAAAAAAAAMcRAAAAAAAAyBEAAAAAAAAAAAAAyBEAAAAAAADJEQAAAAAAAAAAAADJEQAAAAAAAMoRAAAAAAAAAAAAAMoRAAAAAAAAyxEAAAAAAAAAAAAAyxEAAAAAAADMEQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAyxEAAAAAAADDEQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2398,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAMwRAAAAAAAAzREAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAzBEAAAAAAADMEQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2399,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAM0RAAAAAAAAzhEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAzREAAAAAAADNEQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2400,
					1,
					"insert",
					{
						"characters": "indecies"
					},
					"CAAAAM4RAAAAAAAAzxEAAAAAAAAAAAAAzxEAAAAAAADQEQAAAAAAAAAAAADQEQAAAAAAANERAAAAAAAAAAAAANERAAAAAAAA0hEAAAAAAAAAAAAA0hEAAAAAAADTEQAAAAAAAAAAAADTEQAAAAAAANQRAAAAAAAAAAAAANQRAAAAAAAA1REAAAAAAAAAAAAA1REAAAAAAADWEQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAzhEAAAAAAADOEQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2404,
					1,
					"insert",
					{
						"characters": ";s"
					},
					"AgAAANcRAAAAAAAA2BEAAAAAAAAAAAAA2BEAAAAAAADZEQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA1xEAAAAAAADXEQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2405,
					1,
					"left_delete",
					null,
					"AQAAANgRAAAAAAAA2BEAAAAAAAABAAAAcw",
					"AgAAAAAAAAABAAAA2REAAAAAAADZEQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2410,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAAD0RAAAAAAAAPhEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAPREAAAAAAAA9EQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2412,
					1,
					"left_delete",
					null,
					"AQAAAD4RAAAAAAAAPhEAAAAAAAABAAAALA",
					"AgAAAAAAAAABAAAAPxEAAAAAAAA/EQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2413,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAD4RAAAAAAAAPxEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAPhEAAAAAAAA+EQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2414,
					2,
					"rust_fmt_format_buffer",
					null,
					"AQAAANMBAAAAAAAA0wEAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAPxEAAAAAAAA/EQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2423,
					1,
					"left_delete",
					null,
					"AQAAAD8RAAAAAAAAPxEAAAAAAAABAAAAdg",
					"AgAAAAAAAAABAAAAQBEAAAAAAABAEQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2424,
					1,
					"insert",
					{
						"characters": "V"
					},
					"AQAAAD8RAAAAAAAAQBEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAPxEAAAAAAAA/EQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2432,
					1,
					"insert",
					{
						"characters": "&mut"
					},
					"BAAAAD8RAAAAAAAAQBEAAAAAAAAAAAAAQBEAAAAAAABBEQAAAAAAAAAAAABBEQAAAAAAAEIRAAAAAAAAAAAAAEIRAAAAAAAAQxEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAPxEAAAAAAAA/EQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2433,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEMRAAAAAAAARBEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQxEAAAAAAABDEQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2443,
					1,
					"left_delete",
					null,
					"AQAAAB4GAAAAAAAAHgYAAAAAAAAEAAAAbXV0IA",
					"AgAAAAAAAAABAAAAIgYAAAAAAAAeBgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2460,
					1,
					"left_delete",
					null,
					"AQAAADwRAAAAAAAAPBEAAAAAAAAEAAAAbXV0IA",
					"AgAAAAAAAAABAAAAQBEAAAAAAAA8EQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2471,
					1,
					"left_delete",
					null,
					"AQAAAIQLAAAAAAAAhAsAAAAAAAABAAAAaQ",
					"AgAAAAAAAAABAAAAhQsAAAAAAACFCwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2472,
					1,
					"insert",
					{
						"characters": "u"
					},
					"AQAAAIQLAAAAAAAAhQsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAhAsAAAAAAACECwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2480,
					1,
					"left_delete",
					null,
					"AQAAACQOAAAAAAAAJA4AAAAAAAABAAAAMA",
					"AgAAAAAAAAABAAAAJQ4AAAAAAAAlDgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2481,
					1,
					"insert",
					{
						"characters": "prog_id"
					},
					"BwAAACQOAAAAAAAAJQ4AAAAAAAAAAAAAJQ4AAAAAAAAmDgAAAAAAAAAAAAAmDgAAAAAAACcOAAAAAAAAAAAAACcOAAAAAAAAKA4AAAAAAAAAAAAAKA4AAAAAAAApDgAAAAAAAAAAAAApDgAAAAAAACoOAAAAAAAAAAAAACoOAAAAAAAAKw4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAJA4AAAAAAAAkDgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2494,
					1,
					"insert",
					{
						"characters": "_id"
					},
					"AwAAAC8RAAAAAAAAMBEAAAAAAAAAAAAAMBEAAAAAAAAxEQAAAAAAAAAAAAAxEQAAAAAAADIRAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAALxEAAAAAAAAvEQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2496,
					4,
					"left_delete",
					null,
					"BAAAADcRAAAAAAAANxEAAAAAAAABAAAAbzYRAAAAAAAANhEAAAAAAAABAAAAYTURAAAAAAAANREAAAAAAAABAAAAVjQRAAAAAAAANBEAAAAAAAABAAAAJg",
					"AgAAAAAAAAABAAAAOBEAAAAAAAA4EQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2497,
					1,
					"insert",
					{
						"characters": "u32"
					},
					"AwAAADQRAAAAAAAANREAAAAAAAAAAAAANREAAAAAAAA2EQAAAAAAAAAAAAA2EQAAAAAAADcRAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAANBEAAAAAAAA0EQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2500,
					3,
					"left_delete",
					null,
					"AwAAAKERAAAAAAAAoREAAAAAAAABAAAAZKARAAAAAAAAoBEAAAAAAAABAAAAaZ8RAAAAAAAAnxEAAAAAAAABAAAALg",
					"AgAAAAAAAAABAAAAohEAAAAAAACiEQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2501,
					1,
					"insert",
					{
						"characters": "_id"
					},
					"AwAAAJ8RAAAAAAAAoBEAAAAAAAAAAAAAoBEAAAAAAAChEQAAAAAAAAAAAAChEQAAAAAAAKIRAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAnxEAAAAAAACfEQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2522,
					1,
					"insert",
					{
						"characters": "gl_shader"
					},
					"CgAAAEEJAAAAAAAAQgkAAAAAAAAAAAAAQgkAAAAAAABCCQAAAAAAABAAAABHTF9WRVJURVhfU0hBREVSQgkAAAAAAABDCQAAAAAAAAAAAABDCQAAAAAAAEQJAAAAAAAAAAAAAEQJAAAAAAAARQkAAAAAAAAAAAAARQkAAAAAAABGCQAAAAAAAAAAAABGCQAAAAAAAEcJAAAAAAAAAAAAAEcJAAAAAAAASAkAAAAAAAAAAAAASAkAAAAAAABJCQAAAAAAAAAAAABJCQAAAAAAAEoJAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQQkAAAAAAABRCQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2524,
					1,
					"insert_completion",
					{
						"completion": "gl_shader_type",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "gl_shader_type"
					},
					"AgAAAEEJAAAAAAAAQQkAAAAAAAAJAAAAZ2xfc2hhZGVyQQkAAAAAAABPCQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAASgkAAAAAAABKCQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2525,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAAE8JAAAAAAAAUAkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAATwkAAAAAAABPCQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2526,
					1,
					"left_delete",
					null,
					"AQAAAE8JAAAAAAAATwkAAAAAAAABAAAAcw",
					"AgAAAAAAAAABAAAAUAkAAAAAAABQCQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2565,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAGQIAAAAAAAAZQgAAAAAAAAAAAAAZQgAAAAAAABpCAAAAAAAAAAAAABpCAAAAAAAAG0IAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAZAgAAAAAAABkCAAAAAAAAP///////+9/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2566,
					2,
					"rust_fmt_format_buffer",
					null,
					"AQAAAG0IAAAAAAAAbQgAAAAAAAAJAAAACiAgICAgICAg",
					"AgAAAAAAAAABAAAAbQgAAAAAAABtCAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2643,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAGQIAAAAAAAAZQgAAAAAAAAAAAAAZQgAAAAAAABpCAAAAAAAAAAAAABpCAAAAAAAAG0IAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAZAgAAAAAAABkCAAAAAAAAAAAAAAA0HNAAQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2644,
					2,
					"rust_fmt_format_buffer",
					null,
					"AQAAAG0IAAAAAAAAbQgAAAAAAAAJAAAACiAgICAgICAg",
					"AgAAAAAAAAABAAAAbQgAAAAAAABtCAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2731,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAABYOAAAAAAAAFw4AAAAAAAAAAAAAFw4AAAAAAAAYDgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAFg4AAAAAAAAWDgAAAAAAAAAAAAAAQFBAAQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2733,
					1,
					"reindent",
					null,
					"AQAAABcOAAAAAAAAHw4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAFw4AAAAAAAAXDgAAAAAAAAAAAAAAAAAAAQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2734,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAB8OAAAAAAAAIA4AAAAAAAAAAAAAIA4AAAAAAAAhDgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAHw4AAAAAAAAfDgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2735,
					1,
					"insert",
					{
						"characters": " dle"
					},
					"BAAAACEOAAAAAAAAIg4AAAAAAAAAAAAAIg4AAAAAAAAjDgAAAAAAAAAAAAAjDgAAAAAAACQOAAAAAAAAAAAAACQOAAAAAAAAJQ4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAIQ4AAAAAAAAhDgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2736,
					2,
					"left_delete",
					null,
					"AgAAACQOAAAAAAAAJA4AAAAAAAABAAAAZSMOAAAAAAAAIw4AAAAAAAABAAAAbA",
					"AgAAAAAAAAABAAAAJQ4AAAAAAAAlDgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2737,
					1,
					"insert",
					{
						"characters": "elete"
					},
					"BQAAACMOAAAAAAAAJA4AAAAAAAAAAAAAJA4AAAAAAAAlDgAAAAAAAAAAAAAlDgAAAAAAACYOAAAAAAAAAAAAACYOAAAAAAAAJw4AAAAAAAAAAAAAJw4AAAAAAAAoDgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAIw4AAAAAAAAjDgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2738,
					1,
					"insert",
					{
						"characters": " teh"
					},
					"BAAAACgOAAAAAAAAKQ4AAAAAAAAAAAAAKQ4AAAAAAAAqDgAAAAAAAAAAAAAqDgAAAAAAACsOAAAAAAAAAAAAACsOAAAAAAAALA4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAKA4AAAAAAAAoDgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2739,
					1,
					"insert",
					{
						"characters": " s"
					},
					"AgAAACwOAAAAAAAALQ4AAAAAAAAAAAAALQ4AAAAAAAAuDgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAALA4AAAAAAAAsDgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2740,
					4,
					"left_delete",
					null,
					"BAAAAC0OAAAAAAAALQ4AAAAAAAABAAAAcywOAAAAAAAALA4AAAAAAAABAAAAICsOAAAAAAAAKw4AAAAAAAABAAAAaCoOAAAAAAAAKg4AAAAAAAABAAAAZQ",
					"AgAAAAAAAAABAAAALg4AAAAAAAAuDgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2741,
					1,
					"insert",
					{
						"characters": "he"
					},
					"AgAAACoOAAAAAAAAKw4AAAAAAAAAAAAAKw4AAAAAAAAsDgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAKg4AAAAAAAAqDgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2742,
					1,
					"insert",
					{
						"characters": " sahders"
					},
					"CAAAACwOAAAAAAAALQ4AAAAAAAAAAAAALQ4AAAAAAAAuDgAAAAAAAAAAAAAuDgAAAAAAAC8OAAAAAAAAAAAAAC8OAAAAAAAAMA4AAAAAAAAAAAAAMA4AAAAAAAAxDgAAAAAAAAAAAAAxDgAAAAAAADIOAAAAAAAAAAAAADIOAAAAAAAAMw4AAAAAAAAAAAAAMw4AAAAAAAA0DgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAALA4AAAAAAAAsDgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2743,
					6,
					"left_delete",
					null,
					"BgAAADMOAAAAAAAAMw4AAAAAAAABAAAAczIOAAAAAAAAMg4AAAAAAAABAAAAcjEOAAAAAAAAMQ4AAAAAAAABAAAAZTAOAAAAAAAAMA4AAAAAAAABAAAAZC8OAAAAAAAALw4AAAAAAAABAAAAaC4OAAAAAAAALg4AAAAAAAABAAAAYQ",
					"AgAAAAAAAAABAAAANA4AAAAAAAA0DgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2744,
					1,
					"insert",
					{
						"characters": "haders?"
					},
					"BwAAAC4OAAAAAAAALw4AAAAAAAAAAAAALw4AAAAAAAAwDgAAAAAAAAAAAAAwDgAAAAAAADEOAAAAAAAAAAAAADEOAAAAAAAAMg4AAAAAAAAAAAAAMg4AAAAAAAAzDgAAAAAAAAAAAAAzDgAAAAAAADQOAAAAAAAAAAAAADQOAAAAAAAANQ4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAALg4AAAAAAAAuDgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2857,
					2,
					"cut",
					null,
					"AgAAADQAAAAAAAAANAAAAAAAAAALAAAALy8gZ2xleHQuaAo0AAAAAAAAADQAAAAAAAAAjQAAAC8vIGh0dHBzOi8vY2hyb21pdW0uZ29vZ2xlc291cmNlLmNvbS9leHRlcm5hbC9wMy9yZWdhbC8rLzM1NTM4ZmE0MTc2YWUwYWI2ZmI4NTIxZmMwYzcyMDBhYmJhZDJlNmUvc3JjL2FwaXRyYWNlL3RoaXJkcGFydHkva2hyb25vcy9HTC9nbGV4dC5oCg",
					"AgAAAAAAAAABAAAAPgAAAAAAAAA+AAAAAAAAAAAAAAAAIIxAAQAAAAEAAADhCQAAAAAAAOQJAAAAAAAAAAAAAAAA8L8"
				],
				[
					2858,
					1,
					"left_delete",
					null,
					"AQAAADMAAAAAAAAAMwAAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAANAAAAAAAAAA0AAAAAAAAAAAAAAAAAPC/AQAAAAEAAABJCQAAAAAAAEwJAAAAAAAAAAAAAAAA8L8"
				],
				[
					2865,
					3,
					"left_delete",
					null,
					"AwAAACYAAAAAAAAAJgAAAAAAAAAKAAAAdW51c2VkX211dCUAAAAAAAAAJQAAAAAAAAABAAAAICQAAAAAAAAAJAAAAAAAAAABAAAALA",
					"AgAAAAAAAAABAAAAMAAAAAAAAAAmAAAAAAAAAAAAAAAAAPC/AQAAAAEAAABICQAAAAAAAEsJAAAAAAAAAAAAAAAA8L8"
				],
				[
					2869,
					3,
					"left_delete",
					null,
					"AwAAABsAAAAAAAAAGwAAAAAAAAAJAAAAZGVhZF9jb2RlGgAAAAAAAAAaAAAAAAAAAAEAAAAgGQAAAAAAAAAZAAAAAAAAAAEAAAAs",
					"AgAAAAAAAAABAAAAJAAAAAAAAAAbAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAA8CQAAAAAAAD8JAAAAAAAAAAAAAAAA8L8"
				],
				[
					2875,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAACMBAAAAAAAAJgEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAMAEAAAAAAAAwAQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAxCQAAAAAAADQJAAAAAAAAAAAAAAAA8L8"
				],
				[
					2879,
					1,
					"cut",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAcAAAAIyFbYWxsb3codW51c2VkX3ZhcmlhYmxlcyldCg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwFxAAQAAAAEAAAA0CQAAAAAAADcJAAAAAAAAAAAAAAAA8L8"
				],
				[
					2880,
					2,
					"rust_fmt_format_buffer",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAYCQAAAAAAABsJAAAAAAAAAAAAAAAA8L8"
				],
				[
					2988,
					1,
					"paste",
					null,
					"AQAAADEFAAAAAAAAXwUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAMQUAAAAAAAAxBQAAAAAAAAAAAAAAAAAAAQAAAAEAAAAXCQAAAAAAABoJAAAAAAAAAAAAAAAA8L8"
				],
				[
					2991,
					1,
					"insert",
					{
						"characters": "enable_vertex_"
					},
					"DwAAAGoFAAAAAAAAawUAAAAAAAAAAAAAawUAAAAAAABrBQAAAAAAAA0AAABkcmF3X2VsZW1lbnRzawUAAAAAAABsBQAAAAAAAAAAAABsBQAAAAAAAG0FAAAAAAAAAAAAAG0FAAAAAAAAbgUAAAAAAAAAAAAAbgUAAAAAAABvBQAAAAAAAAAAAABvBQAAAAAAAHAFAAAAAAAAAAAAAHAFAAAAAAAAcQUAAAAAAAAAAAAAcQUAAAAAAAByBQAAAAAAAAAAAAByBQAAAAAAAHMFAAAAAAAAAAAAAHMFAAAAAAAAdAUAAAAAAAAAAAAAdAUAAAAAAAB1BQAAAAAAAAAAAAB1BQAAAAAAAHYFAAAAAAAAAAAAAHYFAAAAAAAAdwUAAAAAAAAAAAAAdwUAAAAAAAB4BQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAdwUAAAAAAABqBQAAAAAAAAAAAAAAAPC/AQAAAAEAAABFCQAAAAAAAEgJAAAAAAAAAAAAAAAA8L8"
				],
				[
					2992,
					1,
					"insert",
					{
						"characters": "attrib_array"
					},
					"DAAAAHgFAAAAAAAAeQUAAAAAAAAAAAAAeQUAAAAAAAB6BQAAAAAAAAAAAAB6BQAAAAAAAHsFAAAAAAAAAAAAAHsFAAAAAAAAfAUAAAAAAAAAAAAAfAUAAAAAAAB9BQAAAAAAAAAAAAB9BQAAAAAAAH4FAAAAAAAAAAAAAH4FAAAAAAAAfwUAAAAAAAAAAAAAfwUAAAAAAACABQAAAAAAAAAAAACABQAAAAAAAIEFAAAAAAAAAAAAAIEFAAAAAAAAggUAAAAAAAAAAAAAggUAAAAAAACDBQAAAAAAAAAAAACDBQAAAAAAAIQFAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAeAUAAAAAAAB4BQAAAAAAAAAAAAAAAPC/AQAAAAEAAABGCQAAAAAAAEkJAAAAAAAAAAAAAAAA8L8"
				],
				[
					2996,
					1,
					"insert",
					{
						"characters": "u32"
					},
					"BAAAAIkFAAAAAAAAigUAAAAAAAAAAAAAigUAAAAAAACKBQAAAAAAAA4AAABpMzIsICZWZWM8dTMyPooFAAAAAAAAiwUAAAAAAAAAAAAAiwUAAAAAAACMBQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAlwUAAAAAAACJBQAAAAAAAAAAAAAAAPC/AQAAAAEAAABSCQAAAAAAAFUJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3014,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAEwQAAAAAAAATRAAAAAAAAAAAAAATRAAAAAAAABVEAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAATBAAAAAAAABMEAAAAAAAAP///////+9/AQAAAAEAAABHCQAAAAAAAEoJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3015,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAFUQAAAAAAAAVxAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAVRAAAAAAAABVEAAAAAAAAAAAAAAAAPC/AQAAAAEAAABHCQAAAAAAAEoJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3016,
					1,
					"insert",
					{
						"characters": "se"
					},
					"AgAAAFYQAAAAAAAAVxAAAAAAAAAAAAAAVxAAAAAAAABYEAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAVhAAAAAAAABWEAAAAAAAAAAAAAAAAPC/AQAAAAEAAABHCQAAAAAAAEoJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3017,
					1,
					"left_delete",
					null,
					"AQAAAFcQAAAAAAAAVxAAAAAAAAABAAAAZQ",
					"AgAAAAAAAAABAAAAWBAAAAAAAABYEAAAAAAAAAAAAAAAAPC/AQAAAAEAAABHCQAAAAAAAEoJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3018,
					1,
					"insert",
					{
						"characters": "elf.g_"
					},
					"BgAAAFcQAAAAAAAAWBAAAAAAAAAAAAAAWBAAAAAAAABZEAAAAAAAAAAAAABZEAAAAAAAAFoQAAAAAAAAAAAAAFoQAAAAAAAAWxAAAAAAAAAAAAAAWxAAAAAAAABcEAAAAAAAAAAAAABcEAAAAAAAAF0QAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAVxAAAAAAAABXEAAAAAAAAAAAAAAAAPC/AQAAAAEAAABHCQAAAAAAAEoJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3019,
					1,
					"left_delete",
					null,
					"AQAAAFwQAAAAAAAAXBAAAAAAAAABAAAAXw",
					"AgAAAAAAAAABAAAAXRAAAAAAAABdEAAAAAAAAAAAAAAAAPC/AQAAAAEAAABHCQAAAAAAAEoJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3020,
					1,
					"insert",
					{
						"characters": "l_enable"
					},
					"CAAAAFwQAAAAAAAAXRAAAAAAAAAAAAAAXRAAAAAAAABeEAAAAAAAAAAAAABeEAAAAAAAAF8QAAAAAAAAAAAAAF8QAAAAAAAAYBAAAAAAAAAAAAAAYBAAAAAAAABhEAAAAAAAAAAAAABhEAAAAAAAAGIQAAAAAAAAAAAAAGIQAAAAAAAAYxAAAAAAAAAAAAAAYxAAAAAAAABkEAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAXBAAAAAAAABcEAAAAAAAAAAAAAAAAPC/AQAAAAEAAABHCQAAAAAAAEoJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3021,
					1,
					"insert_completion",
					{
						"completion": "gl_enable_vertex_attrib_array",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "gl_enable_vertex_attrib_array"
					},
					"AgAAAFsQAAAAAAAAWxAAAAAAAAAJAAAAZ2xfZW5hYmxlWxAAAAAAAAB4EAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAZBAAAAAAAABkEAAAAAAAAAAAAAAAAPC/AQAAAAEAAABHCQAAAAAAAEoJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3023,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAHkQAAAAAAAAexAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAeRAAAAAAAAB5EAAAAAAAAAAAAAAAAPC/AQAAAAEAAABHCQAAAAAAAEoJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3024,
					1,
					"insert",
					{
						"characters": "location"
					},
					"CAAAAHoQAAAAAAAAexAAAAAAAAAAAAAAexAAAAAAAAB8EAAAAAAAAAAAAAB8EAAAAAAAAH0QAAAAAAAAAAAAAH0QAAAAAAAAfhAAAAAAAAAAAAAAfhAAAAAAAAB/EAAAAAAAAAAAAAB/EAAAAAAAAIAQAAAAAAAAAAAAAIAQAAAAAAAAgRAAAAAAAAAAAAAAgRAAAAAAAACCEAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAehAAAAAAAAB6EAAAAAAAAAAAAAAAAPC/AQAAAAEAAABHCQAAAAAAAEoJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3026,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAIMQAAAAAAAAhBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAgxAAAAAAAACDEAAAAAAAAAAAAAAAAPC/AQAAAAEAAABHCQAAAAAAAEoJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3044,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAAB8SAAAAAAAAIBIAAAAAAAAAAAAAIBIAAAAAAAAkEgAAAAAAAAAAAAAkEgAAAAAAACUSAAAAAAAAAAAAACUSAAAAAAAAKRIAAAAAAAAAAAAAIBIAAAAAAAAgEgAAAAAAAAQAAAAgICAg",
					"AgAAAAAAAAABAAAAHxIAAAAAAAAfEgAAAAAAAAAAAAAAwGxAAQAAAAEAAABHCQAAAAAAAEoJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3045,
					2,
					"rust_fmt_format_buffer",
					null,
					"AQAAACASAAAAAAAAIBIAAAAAAAAGAAAACiAgICAK",
					"AgAAAAAAAAABAAAAJRIAAAAAAAAlEgAAAAAAAAAAAAAAAPC/AQAAAAEAAABHCQAAAAAAAEoJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3057,
					1,
					"insert",
					{
						"characters": "\nuse"
					},
					"BAAAADsCAAAAAAAAPAIAAAAAAAAAAAAAPAIAAAAAAAA9AgAAAAAAAAAAAAA9AgAAAAAAAD4CAAAAAAAAAAAAAD4CAAAAAAAAPwIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAOwIAAAAAAAA7AgAAAAAAAP///////+9/AQAAAAEAAABHCQAAAAAAAEoJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3058,
					1,
					"insert",
					{
						"characters": " gengar_engine:"
					},
					"DwAAAD8CAAAAAAAAQAIAAAAAAAAAAAAAQAIAAAAAAABBAgAAAAAAAAAAAABBAgAAAAAAAEICAAAAAAAAAAAAAEICAAAAAAAAQwIAAAAAAAAAAAAAQwIAAAAAAABEAgAAAAAAAAAAAABEAgAAAAAAAEUCAAAAAAAAAAAAAEUCAAAAAAAARgIAAAAAAAAAAAAARgIAAAAAAABHAgAAAAAAAAAAAABHAgAAAAAAAEgCAAAAAAAAAAAAAEgCAAAAAAAASQIAAAAAAAAAAAAASQIAAAAAAABKAgAAAAAAAAAAAABKAgAAAAAAAEsCAAAAAAAAAAAAAEsCAAAAAAAATAIAAAAAAAAAAAAATAIAAAAAAABNAgAAAAAAAAAAAABNAgAAAAAAAE4CAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAPwIAAAAAAAA/AgAAAAAAAAAAAAAAAPC/AQAAAAEAAABLCQAAAAAAAE4JAAAAAAAAAAAAAAAA8L8"
				],
				[
					3059,
					1,
					"insert",
					{
						"characters": ":engine::"
					},
					"CQAAAE4CAAAAAAAATwIAAAAAAAAAAAAATwIAAAAAAABQAgAAAAAAAAAAAABQAgAAAAAAAFECAAAAAAAAAAAAAFECAAAAAAAAUgIAAAAAAAAAAAAAUgIAAAAAAABTAgAAAAAAAAAAAABTAgAAAAAAAFQCAAAAAAAAAAAAAFQCAAAAAAAAVQIAAAAAAAAAAAAAVQIAAAAAAABWAgAAAAAAAAAAAABWAgAAAAAAAFcCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAATgIAAAAAAABOAgAAAAAAAAAAAAAAAPC/AQAAAAEAAABaCQAAAAAAAF0JAAAAAAAAAAAAAAAA8L8"
				],
				[
					3060,
					1,
					"insert",
					{
						"characters": "render::"
					},
					"CAAAAFcCAAAAAAAAWAIAAAAAAAAAAAAAWAIAAAAAAABZAgAAAAAAAAAAAABZAgAAAAAAAFoCAAAAAAAAAAAAAFoCAAAAAAAAWwIAAAAAAAAAAAAAWwIAAAAAAABcAgAAAAAAAAAAAABcAgAAAAAAAF0CAAAAAAAAAAAAAF0CAAAAAAAAXgIAAAAAAAAAAAAAXgIAAAAAAABfAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAVwIAAAAAAABXAgAAAAAAAAAAAAAAAPC/AQAAAAEAAABjCQAAAAAAAGYJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3061,
					1,
					"insert",
					{
						"characters": "RenderCommand"
					},
					"DQAAAF8CAAAAAAAAYAIAAAAAAAAAAAAAYAIAAAAAAABhAgAAAAAAAAAAAABhAgAAAAAAAGICAAAAAAAAAAAAAGICAAAAAAAAYwIAAAAAAAAAAAAAYwIAAAAAAABkAgAAAAAAAAAAAABkAgAAAAAAAGUCAAAAAAAAAAAAAGUCAAAAAAAAZgIAAAAAAAAAAAAAZgIAAAAAAABnAgAAAAAAAAAAAABnAgAAAAAAAGgCAAAAAAAAAAAAAGgCAAAAAAAAaQIAAAAAAAAAAAAAaQIAAAAAAABqAgAAAAAAAAAAAABqAgAAAAAAAGsCAAAAAAAAAAAAAGsCAAAAAAAAbAIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAXwIAAAAAAABfAgAAAAAAAAAAAAAAAPC/AQAAAAEAAABrCQAAAAAAAG4JAAAAAAAAAAAAAAAA8L8"
				],
				[
					3062,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAGwCAAAAAAAAbQIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAbAIAAAAAAABsAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAB4CQAAAAAAAHsJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3065,
					1,
					"insert",
					{
						"characters": "render_command"
					},
					"DwAAAF8CAAAAAAAAYAIAAAAAAAAAAAAAYAIAAAAAAABgAgAAAAAAAA0AAABSZW5kZXJDb21tYW5kYAIAAAAAAABhAgAAAAAAAAAAAABhAgAAAAAAAGICAAAAAAAAAAAAAGICAAAAAAAAYwIAAAAAAAAAAAAAYwIAAAAAAABkAgAAAAAAAAAAAABkAgAAAAAAAGUCAAAAAAAAAAAAAGUCAAAAAAAAZgIAAAAAAAAAAAAAZgIAAAAAAABnAgAAAAAAAAAAAABnAgAAAAAAAGgCAAAAAAAAAAAAAGgCAAAAAAAAaQIAAAAAAAAAAAAAaQIAAAAAAABqAgAAAAAAAAAAAABqAgAAAAAAAGsCAAAAAAAAAAAAAGsCAAAAAAAAbAIAAAAAAAAAAAAAbAIAAAAAAABtAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAbAIAAAAAAABfAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAB5CQAAAAAAAHwJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3066,
					1,
					"insert",
					{
						"characters": "::*"
					},
					"AwAAAG0CAAAAAAAAbgIAAAAAAAAAAAAAbgIAAAAAAABvAgAAAAAAAAAAAABvAgAAAAAAAHACAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAbQIAAAAAAABtAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAB6CQAAAAAAAH0JAAAAAAAAAAAAAAAA8L8"
				],
				[
					3067,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAHACAAAAAAAAcgIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAcAIAAAAAAABwAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAB9CQAAAAAAAIAJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3068,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAHACAAAAAAAAcAIAAAAAAAABAAAAKHACAAAAAAAAcAIAAAAAAAABAAAAKQ",
					"AgAAAAAAAAABAAAAcQIAAAAAAABxAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAB/CQAAAAAAAIIJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3069,
					2,
					"rust_fmt_format_buffer",
					null,
					"AwAAAJYBAAAAAAAAzAEAAAAAAAAAAAAASwIAAAAAAABLAgAAAAAAAAAAAABtAgAAAAAAAG0CAAAAAAAANgAAADo6KjsKdXNlIGdlbmdhcl9lbmdpbmU6OmVuZ2luZTo6cmVuZGVyOjpyZW5kZXJfY29tbWFuZA",
					"AgAAAAAAAAABAAAAcAIAAAAAAABwAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAB9CQAAAAAAAIAJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3073,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAAFUSAAAAAAAAVhIAAAAAAAAAAAAAVhIAAAAAAABaEgAAAAAAAAAAAABaEgAAAAAAAFsSAAAAAAAAAAAAAFsSAAAAAAAAXxIAAAAAAAAAAAAAVhIAAAAAAABWEgAAAAAAAAQAAAAgICAg",
					"AgAAAAAAAAABAAAAVRIAAAAAAABVEgAAAAAAAP///////+9/AQAAAAEAAAB9CQAAAAAAAIAJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3074,
					1,
					"paste",
					null,
					"AQAAAFsSAAAAAAAA2xIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAWxIAAAAAAABbEgAAAAAAAAAAAAAAAPC/AQAAAAEAAAB9CQAAAAAAAIAJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3075,
					2,
					"rust_fmt_format_buffer",
					null,
					"AQAAAFsSAAAAAAAAWxIAAAAAAAAEAAAAICAgIA",
					"AgAAAAAAAAABAAAA2xIAAAAAAADbEgAAAAAAAAAAAAAAAPC/AQAAAAEAAAB9CQAAAAAAAIAJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3080,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAFYSAAAAAAAAVxIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAVhIAAAAAAABWEgAAAAAAAAAAAAAAAEJAAQAAAAEAAAB9CQAAAAAAAIAJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3081,
					1,
					"cut",
					null,
					"AQAAAFcSAAAAAAAAVxIAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAVxIAAAAAAABXEgAAAAAAAAAAAAAAAPC/AQAAAAEAAAB9CQAAAAAAAIAJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3083,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAFYSAAAAAAAAVxIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAVhIAAAAAAABWEgAAAAAAAAAAAAAAAAAAAQAAAAEAAAB9CQAAAAAAAIAJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3084,
					1,
					"reindent",
					null,
					"AQAAAFcSAAAAAAAAWxIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAVxIAAAAAAABXEgAAAAAAAAAAAAAAAPC/AQAAAAEAAAB9CQAAAAAAAIAJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3085,
					1,
					"insert",
					{
						"characters": "/*"
					},
					"AgAAAFsSAAAAAAAAXBIAAAAAAAAAAAAAXBIAAAAAAABdEgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAWxIAAAAAAABbEgAAAAAAAAAAAAAAAPC/AQAAAAEAAAB9CQAAAAAAAIAJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3089,
					1,
					"insert",
					{
						"characters": "\n*/"
					},
					"BAAAAN4SAAAAAAAA3xIAAAAAAAAAAAAA3xIAAAAAAADjEgAAAAAAAAAAAADjEgAAAAAAAOQSAAAAAAAAAAAAAOQSAAAAAAAA5RIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA3hIAAAAAAADeEgAAAAAAAP///////+9/AQAAAAEAAAB9CQAAAAAAAIAJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3107,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAAASAAAAAAAAARIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAABIAAAAAAAAAEgAAAAAAAAAAAAAAAPC/AQAAAAEAAAB9CQAAAAAAAIAJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3108,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAESAAAAAAAAAhIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAARIAAAAAAAABEgAAAAAAAAAAAAAAAPC/AQAAAAEAAAB9CQAAAAAAAIAJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3109,
					3,
					"left_delete",
					null,
					"AwAAAAESAAAAAAAAARIAAAAAAAABAAAAIAASAAAAAAAAABIAAAAAAAABAAAALP8RAAAAAAAA/xEAAAAAAAABAAAAaQ",
					"AgAAAAAAAAABAAAAAhIAAAAAAAACEgAAAAAAAAAAAAAAAPC/AQAAAAEAAAB9CQAAAAAAAIAJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3110,
					1,
					"insert",
					{
						"characters": "i"
					},
					"AQAAAP8RAAAAAAAAABIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA/xEAAAAAAAD/EQAAAAAAAAAAAAAAAPC/AQAAAAEAAAB9CQAAAAAAAIAJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3112,
					1,
					"insert",
					{
						"characters": "engine_state:"
					},
					"DQAAAOcRAAAAAAAA6BEAAAAAAAAAAAAA6BEAAAAAAADpEQAAAAAAAAAAAADpEQAAAAAAAOoRAAAAAAAAAAAAAOoRAAAAAAAA6xEAAAAAAAAAAAAA6xEAAAAAAADsEQAAAAAAAAAAAADsEQAAAAAAAO0RAAAAAAAAAAAAAO0RAAAAAAAA7hEAAAAAAAAAAAAA7hEAAAAAAADvEQAAAAAAAAAAAADvEQAAAAAAAPARAAAAAAAAAAAAAPARAAAAAAAA8REAAAAAAAAAAAAA8REAAAAAAADyEQAAAAAAAAAAAADyEQAAAAAAAPMRAAAAAAAAAAAAAPMRAAAAAAAA9BEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA5xEAAAAAAADnEQAAAAAAAAAAAAAAAPC/AQAAAAEAAAB9CQAAAAAAAIAJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3113,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAPQRAAAAAAAA9REAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA9BEAAAAAAAD0EQAAAAAAAAAAAAAAAPC/AQAAAAEAAAB9CQAAAAAAAIAJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3117,
					1,
					"insert",
					{
						"characters": "\nuse"
					},
					"BAAAAHECAAAAAAAAcgIAAAAAAAAAAAAAcgIAAAAAAABzAgAAAAAAAAAAAABzAgAAAAAAAHQCAAAAAAAAAAAAAHQCAAAAAAAAdQIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAcQIAAAAAAABxAgAAAAAAAAAAAAAA4HdAAQAAAAEAAAB9CQAAAAAAAIAJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3118,
					1,
					"insert",
					{
						"characters": " gengar_engine:"
					},
					"DwAAAHUCAAAAAAAAdgIAAAAAAAAAAAAAdgIAAAAAAAB3AgAAAAAAAAAAAAB3AgAAAAAAAHgCAAAAAAAAAAAAAHgCAAAAAAAAeQIAAAAAAAAAAAAAeQIAAAAAAAB6AgAAAAAAAAAAAAB6AgAAAAAAAHsCAAAAAAAAAAAAAHsCAAAAAAAAfAIAAAAAAAAAAAAAfAIAAAAAAAB9AgAAAAAAAAAAAAB9AgAAAAAAAH4CAAAAAAAAAAAAAH4CAAAAAAAAfwIAAAAAAAAAAAAAfwIAAAAAAACAAgAAAAAAAAAAAACAAgAAAAAAAIECAAAAAAAAAAAAAIECAAAAAAAAggIAAAAAAAAAAAAAggIAAAAAAACDAgAAAAAAAAAAAACDAgAAAAAAAIQCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAdQIAAAAAAAB1AgAAAAAAAAAAAAAAAPC/AQAAAAEAAACBCQAAAAAAAIQJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3119,
					1,
					"insert",
					{
						"characters": ":Engine"
					},
					"BwAAAIQCAAAAAAAAhQIAAAAAAAAAAAAAhQIAAAAAAACGAgAAAAAAAAAAAACGAgAAAAAAAIcCAAAAAAAAAAAAAIcCAAAAAAAAiAIAAAAAAAAAAAAAiAIAAAAAAACJAgAAAAAAAAAAAACJAgAAAAAAAIoCAAAAAAAAAAAAAIoCAAAAAAAAiwIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAhAIAAAAAAACEAgAAAAAAAAAAAAAAAPC/AQAAAAEAAACQCQAAAAAAAJMJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3120,
					6,
					"left_delete",
					null,
					"BgAAAIoCAAAAAAAAigIAAAAAAAABAAAAZYkCAAAAAAAAiQIAAAAAAAABAAAAbogCAAAAAAAAiAIAAAAAAAABAAAAaYcCAAAAAAAAhwIAAAAAAAABAAAAZ4YCAAAAAAAAhgIAAAAAAAABAAAAboUCAAAAAAAAhQIAAAAAAAABAAAARQ",
					"AgAAAAAAAAABAAAAiwIAAAAAAACLAgAAAAAAAAAAAAAAAPC/AQAAAAEAAACXCQAAAAAAAJoJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3121,
					1,
					"insert",
					{
						"characters": "engine::"
					},
					"CAAAAIUCAAAAAAAAhgIAAAAAAAAAAAAAhgIAAAAAAACHAgAAAAAAAAAAAACHAgAAAAAAAIgCAAAAAAAAAAAAAIgCAAAAAAAAiQIAAAAAAAAAAAAAiQIAAAAAAACKAgAAAAAAAAAAAACKAgAAAAAAAIsCAAAAAAAAAAAAAIsCAAAAAAAAjAIAAAAAAAAAAAAAjAIAAAAAAACNAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAhQIAAAAAAACFAgAAAAAAAAAAAAAAAPC/AQAAAAEAAACRCQAAAAAAAJQJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3122,
					1,
					"insert",
					{
						"characters": "State;"
					},
					"BgAAAI0CAAAAAAAAjgIAAAAAAAAAAAAAjgIAAAAAAACPAgAAAAAAAAAAAACPAgAAAAAAAJACAAAAAAAAAAAAAJACAAAAAAAAkQIAAAAAAAAAAAAAkQIAAAAAAACSAgAAAAAAAAAAAACSAgAAAAAAAJMCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAjQIAAAAAAACNAgAAAAAAAAAAAAAAAPC/AQAAAAEAAACZCQAAAAAAAJwJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3127,
					1,
					"insert",
					{
						"characters": "state::State"
					},
					"DQAAAI0CAAAAAAAAjgIAAAAAAAAAAAAAjgIAAAAAAACOAgAAAAAAAAUAAABTdGF0ZY4CAAAAAAAAjwIAAAAAAAAAAAAAjwIAAAAAAACQAgAAAAAAAAAAAACQAgAAAAAAAJECAAAAAAAAAAAAAJECAAAAAAAAkgIAAAAAAAAAAAAAkgIAAAAAAACTAgAAAAAAAAAAAACTAgAAAAAAAJQCAAAAAAAAAAAAAJQCAAAAAAAAlQIAAAAAAAAAAAAAlQIAAAAAAACWAgAAAAAAAAAAAACWAgAAAAAAAJcCAAAAAAAAAAAAAJcCAAAAAAAAmAIAAAAAAAAAAAAAmAIAAAAAAACZAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAkgIAAAAAAACNAgAAAAAAAAAAAAAAAPC/AQAAAAEAAACfCQAAAAAAAKIJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3130,
					1,
					"swap_line_up",
					null,
					"AgAAAHICAAAAAAAAcgIAAAAAAAApAAAAdXNlIGdlbmdhcl9lbmdpbmU6OmVuZ2luZTo6c3RhdGU6OlN0YXRlOwpLAgAAAAAAAHQCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAmQIAAAAAAACZAgAAAAAAAAAAAAAAAPC/AQAAAAEAAACmCQAAAAAAAKkJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3139,
					1,
					"insert",
					{
						"characters": " EngineState"
					},
					"DAAAAB0SAAAAAAAAHhIAAAAAAAAAAAAAHhIAAAAAAAAfEgAAAAAAAAAAAAAfEgAAAAAAACASAAAAAAAAAAAAACASAAAAAAAAIRIAAAAAAAAAAAAAIRIAAAAAAAAiEgAAAAAAAAAAAAAiEgAAAAAAACMSAAAAAAAAAAAAACMSAAAAAAAAJBIAAAAAAAAAAAAAJBIAAAAAAAAlEgAAAAAAAAAAAAAlEgAAAAAAACYSAAAAAAAAAAAAACYSAAAAAAAAJxIAAAAAAAAAAAAAJxIAAAAAAAAoEgAAAAAAAAAAAAAoEgAAAAAAACkSAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAHRIAAAAAAAAdEgAAAAAAAAAAAAAAAPC/AQAAAAEAAACmCQAAAAAAAKkJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3141,
					1,
					"insert",
					{
						"characters": "engine"
					},
					"BwAAAB4SAAAAAAAAHxIAAAAAAAAAAAAAHxIAAAAAAAAfEgAAAAAAAAsAAABFbmdpbmVTdGF0ZR8SAAAAAAAAIBIAAAAAAAAAAAAAIBIAAAAAAAAhEgAAAAAAAAAAAAAhEgAAAAAAACISAAAAAAAAAAAAACISAAAAAAAAIxIAAAAAAAAAAAAAIxIAAAAAAAAkEgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAKRIAAAAAAAAeEgAAAAAAAAAAAAAAAPC/AQAAAAEAAACmCQAAAAAAAKkJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3147,
					1,
					"insert",
					{
						"characters": " as"
					},
					"AwAAAHICAAAAAAAAcwIAAAAAAAAAAAAAcwIAAAAAAAB0AgAAAAAAAAAAAAB0AgAAAAAAAHUCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAcgIAAAAAAAByAgAAAAAAAAAAAAAAAPC/AQAAAAEAAACmCQAAAAAAAKkJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3148,
					1,
					"insert",
					{
						"characters": " EngineState"
					},
					"DAAAAHUCAAAAAAAAdgIAAAAAAAAAAAAAdgIAAAAAAAB3AgAAAAAAAAAAAAB3AgAAAAAAAHgCAAAAAAAAAAAAAHgCAAAAAAAAeQIAAAAAAAAAAAAAeQIAAAAAAAB6AgAAAAAAAAAAAAB6AgAAAAAAAHsCAAAAAAAAAAAAAHsCAAAAAAAAfAIAAAAAAAAAAAAAfAIAAAAAAAB9AgAAAAAAAAAAAAB9AgAAAAAAAH4CAAAAAAAAAAAAAH4CAAAAAAAAfwIAAAAAAAAAAAAAfwIAAAAAAACAAgAAAAAAAAAAAACAAgAAAAAAAIECAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAdQIAAAAAAAB1AgAAAAAAAAAAAAAAAPC/AQAAAAEAAACpCQAAAAAAAKwJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3157,
					1,
					"insert",
					{
						"characters": "EngineState,"
					},
					"DQAAAC0SAAAAAAAALhIAAAAAAAAAAAAALhIAAAAAAAAuEgAAAAAAAAYAAABlbmdpbmUuEgAAAAAAAC8SAAAAAAAAAAAAAC8SAAAAAAAAMBIAAAAAAAAAAAAAMBIAAAAAAAAxEgAAAAAAAAAAAAAxEgAAAAAAADISAAAAAAAAAAAAADISAAAAAAAAMxIAAAAAAAAAAAAAMxIAAAAAAAA0EgAAAAAAAAAAAAA0EgAAAAAAADUSAAAAAAAAAAAAADUSAAAAAAAANhIAAAAAAAAAAAAANhIAAAAAAAA3EgAAAAAAAAAAAAA3EgAAAAAAADgSAAAAAAAAAAAAADgSAAAAAAAAORIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAMxIAAAAAAAAtEgAAAAAAAAAAAAAAAPC/AQAAAAEAAAC1CQAAAAAAALgJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3161,
					1,
					"insert",
					{
						"characters": "&"
					},
					"AQAAAC0SAAAAAAAALhIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAALRIAAAAAAAAtEgAAAAAAAAAAAAAAAPC/AQAAAAEAAAC1CQAAAAAAALgJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3179,
					1,
					"left_delete",
					null,
					"AQAAAKYBAAAAAAAApgEAAAAAAAABAAAAKg",
					"AgAAAAAAAAABAAAApwEAAAAAAACnAQAAAAAAAAAAAAAAAPC/AQAAAAEAAAC1CQAAAAAAALgJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3180,
					1,
					"insert",
					{
						"characters": "RenderCOmm"
					},
					"CgAAAKYBAAAAAAAApwEAAAAAAAAAAAAApwEAAAAAAACoAQAAAAAAAAAAAACoAQAAAAAAAKkBAAAAAAAAAAAAAKkBAAAAAAAAqgEAAAAAAAAAAAAAqgEAAAAAAACrAQAAAAAAAAAAAACrAQAAAAAAAKwBAAAAAAAAAAAAAKwBAAAAAAAArQEAAAAAAAAAAAAArQEAAAAAAACuAQAAAAAAAAAAAACuAQAAAAAAAK8BAAAAAAAAAAAAAK8BAAAAAAAAsAEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAApgEAAAAAAACmAQAAAAAAAAAAAAAAAPC/AQAAAAEAAAC0CQAAAAAAALcJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3181,
					3,
					"left_delete",
					null,
					"AwAAAK8BAAAAAAAArwEAAAAAAAABAAAAba4BAAAAAAAArgEAAAAAAAABAAAAba0BAAAAAAAArQEAAAAAAAABAAAATw",
					"AgAAAAAAAAABAAAAsAEAAAAAAACwAQAAAAAAAAAAAAAAAPC/AQAAAAEAAAC+CQAAAAAAAMEJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3182,
					1,
					"insert",
					{
						"characters": "ommand"
					},
					"BgAAAK0BAAAAAAAArgEAAAAAAAAAAAAArgEAAAAAAACvAQAAAAAAAAAAAACvAQAAAAAAALABAAAAAAAAAAAAALABAAAAAAAAsQEAAAAAAAAAAAAAsQEAAAAAAACyAQAAAAAAAAAAAACyAQAAAAAAALMBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAArQEAAAAAAACtAQAAAAAAAAAAAAAAAPC/AQAAAAEAAAC7CQAAAAAAAL4JAAAAAAAAAAAAAAAA8L8"
				],
				[
					3188,
					1,
					"cut",
					null,
					"AQAAALcSAAAAAAAAtxIAAAAAAAAHAAAAICAgIC8qCg",
					"AgAAAAAAAAABAAAAtxIAAAAAAAC3EgAAAAAAAAAAAAAAAAAAAQAAAAEAAADBCQAAAAAAAMQJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3190,
					1,
					"cut",
					null,
					"AQAAADgTAAAAAAAAOBMAAAAAAAAHAAAAICAgICovCg",
					"AgAAAAAAAAABAAAAOBMAAAAAAAA4EwAAAAAAAAAAAAAAAAAAAQAAAAEAAADBCQAAAAAAAMQJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3197,
					1,
					"insert",
					{
						"characters": "engine_state"
					},
					"DQAAAMsSAAAAAAAAzBIAAAAAAAAAAAAAzBIAAAAAAADMEgAAAAAAAAUAAABzdGF0ZcwSAAAAAAAAzRIAAAAAAAAAAAAAzRIAAAAAAADOEgAAAAAAAAAAAADOEgAAAAAAAM8SAAAAAAAAAAAAAM8SAAAAAAAA0BIAAAAAAAAAAAAA0BIAAAAAAADREgAAAAAAAAAAAADREgAAAAAAANISAAAAAAAAAAAAANISAAAAAAAA0xIAAAAAAAAAAAAA0xIAAAAAAADUEgAAAAAAAAAAAADUEgAAAAAAANUSAAAAAAAAAAAAANUSAAAAAAAA1hIAAAAAAAAAAAAA1hIAAAAAAADXEgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0BIAAAAAAADLEgAAAAAAAAAAAAAAAPC/AQAAAAEAAADBCQAAAAAAAMQJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3233,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAOkSAAAAAAAA6hIAAAAAAAAAAAAA6hIAAAAAAADuEgAAAAAAAAAAAADuEgAAAAAAAPISAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA6RIAAAAAAADpEgAAAAAAAP///////+9/AQAAAAEAAADBCQAAAAAAAMQJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3234,
					1,
					"paste",
					null,
					"AQAAAPISAAAAAAAAdxMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA8hIAAAAAAADyEgAAAAAAAAAAAAAAAPC/AQAAAAEAAADBCQAAAAAAAMQJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3235,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line.sublime-macro"
					},
					"AgAAAHcTAAAAAAAAeBMAAAAAAAAAAAAAeBMAAAAAAACAEwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAdxMAAAAAAAB3EwAAAAAAAAAAAAAAAPC/AQAAAAEAAADBCQAAAAAAAMQJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3237,
					1,
					"insert",
					{
						"characters": "?"
					},
					"AgAAAIkTAAAAAAAAihMAAAAAAAAAAAAAeBMAAAAAAAB4EwAAAAAAAAgAAAAgICAgICAgIA",
					"AgAAAAAAAAABAAAAiRMAAAAAAACJEwAAAAAAAAAAAAAAAE1AAQAAAAEAAADBCQAAAAAAAMQJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3240,
					1,
					"left_delete",
					null,
					"AQAAAIETAAAAAAAAgRMAAAAAAAABAAAAPw",
					"AgAAAAAAAAABAAAAghMAAAAAAACCEwAAAAAAAAAAAAAAAPC/AQAAAAEAAADBCQAAAAAAAMQJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3241,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAAIETAAAAAAAAhBMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAgRMAAAAAAACBEwAAAAAAAAAAAAAAAPC/AQAAAAEAAADBCQAAAAAAAMQJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3245,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AwAAAPISAAAAAAAA9RIAAAAAAAAAAAAAHRMAAAAAAAAgEwAAAAAAAAAAAABNEwAAAAAAAFATAAAAAAAAAAAAAA",
					"AgAAAAAAAAADAAAA8hIAAAAAAADyEgAAAAAAAAAAAAAAAE1AGhMAAAAAAAAaEwAAAAAAAAAAAAAAAE1ARxMAAAAAAABHEwAAAAAAAAAAAAAAAE1AAQAAAAEAAADBCQAAAAAAAMQJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3254,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAAPISAAAAAAAA8hIAAAAAAAADAAAALy8g",
					"AgAAAAAAAAABAAAAFBMAAAAAAAAUEwAAAAAAAAAAAAAAgHZAAQAAAAEAAADBCQAAAAAAAMQJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3262,
					1,
					"insert",
					{
						"characters": "command.pro"
					},
					"DAAAAAgTAAAAAAAACRMAAAAAAAAAAAAACRMAAAAAAAAJEwAAAAAAAAcAAABwcm9nX2lkCRMAAAAAAAAKEwAAAAAAAAAAAAAKEwAAAAAAAAsTAAAAAAAAAAAAAAsTAAAAAAAADBMAAAAAAAAAAAAADBMAAAAAAAANEwAAAAAAAAAAAAANEwAAAAAAAA4TAAAAAAAAAAAAAA4TAAAAAAAADxMAAAAAAAAAAAAADxMAAAAAAAAQEwAAAAAAAAAAAAAQEwAAAAAAABETAAAAAAAAAAAAABETAAAAAAAAEhMAAAAAAAAAAAAAEhMAAAAAAAATEwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAADxMAAAAAAAAIEwAAAAAAAAAAAAAAAPC/AQAAAAEAAADBCQAAAAAAAMQJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3263,
					1,
					"insert",
					{
						"characters": "g_id"
					},
					"BAAAABMTAAAAAAAAFBMAAAAAAAAAAAAAFBMAAAAAAAAVEwAAAAAAAAAAAAAVEwAAAAAAABYTAAAAAAAAAAAAABYTAAAAAAAAFxMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAExMAAAAAAAATEwAAAAAAAAAAAAAAAPC/AQAAAAEAAADBCQAAAAAAAMQJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3268,
					1,
					"insert",
					{
						"characters": "render_api"
					},
					"CwAAAPMSAAAAAAAA9BIAAAAAAAAAAAAA9BIAAAAAAAD0EgAAAAAAAAQAAABzZWxm9BIAAAAAAAD1EgAAAAAAAAAAAAD1EgAAAAAAAPYSAAAAAAAAAAAAAPYSAAAAAAAA9xIAAAAAAAAAAAAA9xIAAAAAAAD4EgAAAAAAAAAAAAD4EgAAAAAAAPkSAAAAAAAAAAAAAPkSAAAAAAAA+hIAAAAAAAAAAAAA+hIAAAAAAAD7EgAAAAAAAAAAAAD7EgAAAAAAAPwSAAAAAAAAAAAAAPwSAAAAAAAA/RIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA9xIAAAAAAADzEgAAAAAAAAAAAAAAAPC/AQAAAAEAAADBCQAAAAAAAMQJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3281,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAAHMBAAAAAAAAdgEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAcwEAAAAAAABzAQAAAAAAAAAAAAAAAAAAAQAAAAEAAADBCQAAAAAAAMQJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3286,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAACsTAAAAAAAAKxMAAAAAAAADAAAALy8g",
					"AgAAAAAAAAABAAAAIxMAAAAAAAAjEwAAAAAAAAAAAAAAAAAAAQAAAAEAAADECQAAAAAAAMcJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3291,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAMkSAAAAAAAAyhIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAyRIAAAAAAADJEgAAAAAAAAAAAAAAAPC/AQAAAAEAAADECQAAAAAAAMcJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3292,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMoSAAAAAAAAyxIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAyhIAAAAAAADKEgAAAAAAAAAAAAAAAPC/AQAAAAEAAADECQAAAAAAAMcJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3298,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAAHMBAAAAAAAAcwEAAAAAAAADAAAALy8g",
					"AgAAAAAAAAABAAAAhAEAAAAAAACEAQAAAAAAAAAAAAAAgF5AAQAAAAEAAADECQAAAAAAAMcJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3301,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAAHMBAAAAAAAAdgEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAgQEAAAAAAACBAQAAAAAAAAAAAAAAAPC/AQAAAAEAAADBCQAAAAAAAMQJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3307,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMkSAAAAAAAAyhIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAyRIAAAAAAADJEgAAAAAAAAAAAAAAAPC/AQAAAAEAAADECQAAAAAAAMcJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3311,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMoSAAAAAAAAyxIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAyhIAAAAAAADKEgAAAAAAAAAAAAAAAPC/AQAAAAEAAADECQAAAAAAAMcJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3312,
					1,
					"left_delete",
					null,
					"AQAAAMoSAAAAAAAAyhIAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAyxIAAAAAAADLEgAAAAAAAAAAAAAAAPC/AQAAAAEAAADECQAAAAAAAMcJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3314,
					1,
					"insert",
					{
						"characters": " render"
					},
					"BwAAAMsSAAAAAAAAzBIAAAAAAAAAAAAAzBIAAAAAAADNEgAAAAAAAAAAAADNEgAAAAAAAM4SAAAAAAAAAAAAAM4SAAAAAAAAzxIAAAAAAAAAAAAAzxIAAAAAAADQEgAAAAAAAAAAAADQEgAAAAAAANESAAAAAAAAAAAAANESAAAAAAAA0hIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAyxIAAAAAAADLEgAAAAAAAAAAAAAAAPC/AQAAAAEAAADECQAAAAAAAMcJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3315,
					6,
					"left_delete",
					null,
					"BgAAANESAAAAAAAA0RIAAAAAAAABAAAActASAAAAAAAA0BIAAAAAAAABAAAAZc8SAAAAAAAAzxIAAAAAAAABAAAAZM4SAAAAAAAAzhIAAAAAAAABAAAAbs0SAAAAAAAAzRIAAAAAAAABAAAAZcwSAAAAAAAAzBIAAAAAAAABAAAAcg",
					"AgAAAAAAAAABAAAA0hIAAAAAAADSEgAAAAAAAAAAAAAAAPC/AQAAAAEAAADECQAAAAAAAMcJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3316,
					1,
					"insert",
					{
						"characters": "RenderCOmm"
					},
					"CgAAAMwSAAAAAAAAzRIAAAAAAAAAAAAAzRIAAAAAAADOEgAAAAAAAAAAAADOEgAAAAAAAM8SAAAAAAAAAAAAAM8SAAAAAAAA0BIAAAAAAAAAAAAA0BIAAAAAAADREgAAAAAAAAAAAADREgAAAAAAANISAAAAAAAAAAAAANISAAAAAAAA0xIAAAAAAAAAAAAA0xIAAAAAAADUEgAAAAAAAAAAAADUEgAAAAAAANUSAAAAAAAAAAAAANUSAAAAAAAA1hIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAzBIAAAAAAADMEgAAAAAAAAAAAAAAAPC/AQAAAAEAAADECQAAAAAAAMcJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3317,
					3,
					"left_delete",
					null,
					"AwAAANUSAAAAAAAA1RIAAAAAAAABAAAAbdQSAAAAAAAA1BIAAAAAAAABAAAAbdMSAAAAAAAA0xIAAAAAAAABAAAATw",
					"AgAAAAAAAAABAAAA1hIAAAAAAADWEgAAAAAAAAAAAAAAAPC/AQAAAAEAAADECQAAAAAAAMcJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3318,
					1,
					"insert",
					{
						"characters": "ommand"
					},
					"BgAAANMSAAAAAAAA1BIAAAAAAAAAAAAA1BIAAAAAAADVEgAAAAAAAAAAAADVEgAAAAAAANYSAAAAAAAAAAAAANYSAAAAAAAA1xIAAAAAAAAAAAAA1xIAAAAAAADYEgAAAAAAAAAAAADYEgAAAAAAANkSAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0xIAAAAAAADTEgAAAAAAAAAAAAAAAPC/AQAAAAEAAADECQAAAAAAAMcJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3320,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAADwTAAAAAAAAPxMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAUxMAAAAAAABTEwAAAAAAAAAAAAAA4GtAAQAAAAEAAADECQAAAAAAAMcJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3327,
					3,
					"left_delete",
					null,
					"AwAAAMwSAAAAAAAAzBIAAAAAAAAPAAAAUmVuZGVyQ29tbWFuZCAgyxIAAAAAAADLEgAAAAAAAAEAAAAgyhIAAAAAAADKEgAAAAAAAAEAAAA6",
					"AgAAAAAAAAABAAAA2xIAAAAAAADMEgAAAAAAAAAAAAAAAPC/AQAAAAEAAADECQAAAAAAAMcJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3331,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAACsTAAAAAAAAKxMAAAAAAAADAAAALy8g",
					"AgAAAAAAAAABAAAAMxMAAAAAAAAzEwAAAAAAAAAAAAAAwFxAAQAAAAEAAADECQAAAAAAAMcJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3335,
					1,
					"insert",
					{
						"characters": "render_api"
					},
					"CwAAACwTAAAAAAAALRMAAAAAAAAAAAAALRMAAAAAAAAtEwAAAAAAAAQAAABzZWxmLRMAAAAAAAAuEwAAAAAAAAAAAAAuEwAAAAAAAC8TAAAAAAAAAAAAAC8TAAAAAAAAMBMAAAAAAAAAAAAAMBMAAAAAAAAxEwAAAAAAAAAAAAAxEwAAAAAAADITAAAAAAAAAAAAADITAAAAAAAAMxMAAAAAAAAAAAAAMxMAAAAAAAA0EwAAAAAAAAAAAAA0EwAAAAAAADUTAAAAAAAAAAAAADUTAAAAAAAANhMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAMBMAAAAAAAAsEwAAAAAAAAAAAAAAAPC/AQAAAAEAAADECQAAAAAAAMcJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3344,
					1,
					"insert",
					{
						"characters": "command.vao_id"
					},
					"DwAAAE0TAAAAAAAAThMAAAAAAAAAAAAAThMAAAAAAABOEwAAAAAAAAYAAAB2YW9faWROEwAAAAAAAE8TAAAAAAAAAAAAAE8TAAAAAAAAUBMAAAAAAAAAAAAAUBMAAAAAAABREwAAAAAAAAAAAABREwAAAAAAAFITAAAAAAAAAAAAAFITAAAAAAAAUxMAAAAAAAAAAAAAUxMAAAAAAABUEwAAAAAAAAAAAABUEwAAAAAAAFUTAAAAAAAAAAAAAFUTAAAAAAAAVhMAAAAAAAAAAAAAVhMAAAAAAABXEwAAAAAAAAAAAABXEwAAAAAAAFgTAAAAAAAAAAAAAFgTAAAAAAAAWRMAAAAAAAAAAAAAWRMAAAAAAABaEwAAAAAAAAAAAABaEwAAAAAAAFsTAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAUxMAAAAAAABNEwAAAAAAAAAAAAAAAPC/AQAAAAEAAADECQAAAAAAAMcJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3352,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAAGYTAAAAAAAAZhMAAAAAAAADAAAALy8g",
					"AgAAAAAAAAABAAAAlhMAAAAAAACWEwAAAAAAAAAAAAAAMHlAAQAAAAEAAADECQAAAAAAAMcJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3365,
					1,
					"insert",
					{
						"characters": "render_api"
					},
					"CwAAAGcTAAAAAAAAaBMAAAAAAAAAAAAAaBMAAAAAAABoEwAAAAAAAAQAAABzZWxmaBMAAAAAAABpEwAAAAAAAAAAAABpEwAAAAAAAGoTAAAAAAAAAAAAAGoTAAAAAAAAaxMAAAAAAAAAAAAAaxMAAAAAAABsEwAAAAAAAAAAAABsEwAAAAAAAG0TAAAAAAAAAAAAAG0TAAAAAAAAbhMAAAAAAAAAAAAAbhMAAAAAAABvEwAAAAAAAAAAAABvEwAAAAAAAHATAAAAAAAAAAAAAHATAAAAAAAAcRMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAaxMAAAAAAABnEwAAAAAAAAAAAAAAAPC/AQAAAAEAAADECQAAAAAAAMcJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3371,
					1,
					"insert",
					{
						"characters": "command.in"
					},
					"CwAAAJITAAAAAAAAkxMAAAAAAAAAAAAAkxMAAAAAAACTEwAAAAAAAAgAAABpbmRlY2llc5MTAAAAAAAAlBMAAAAAAAAAAAAAlBMAAAAAAACVEwAAAAAAAAAAAACVEwAAAAAAAJYTAAAAAAAAAAAAAJYTAAAAAAAAlxMAAAAAAAAAAAAAlxMAAAAAAACYEwAAAAAAAAAAAACYEwAAAAAAAJkTAAAAAAAAAAAAAJkTAAAAAAAAmhMAAAAAAAAAAAAAmhMAAAAAAACbEwAAAAAAAAAAAACbEwAAAAAAAJwTAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAmhMAAAAAAACSEwAAAAAAAAAAAAAAAPC/AQAAAAEAAADECQAAAAAAAMcJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3372,
					1,
					"insert",
					{
						"characters": "decies"
					},
					"BgAAAJwTAAAAAAAAnRMAAAAAAAAAAAAAnRMAAAAAAACeEwAAAAAAAAAAAACeEwAAAAAAAJ8TAAAAAAAAAAAAAJ8TAAAAAAAAoBMAAAAAAAAAAAAAoBMAAAAAAAChEwAAAAAAAAAAAAChEwAAAAAAAKITAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAnBMAAAAAAACcEwAAAAAAAAAAAAAAAPC/AQAAAAEAAADECQAAAAAAAMcJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3377,
					1,
					"insert",
					{
						"characters": "&"
					},
					"AQAAAJITAAAAAAAAkxMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAkhMAAAAAAACSEwAAAAAAAAAAAAAAAPC/AQAAAAEAAADECQAAAAAAAMcJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3381,
					1,
					"cut",
					null,
					"AQAAAKcTAAAAAAAApxMAAAAAAABSAAAAICAgICAgICAvLyByZW5kZXJfYXBpLnJlbmRlcihjb21tYW5kLnByb2dfaWQsIGNvbW1hbmQudmFvX2lkLCAmY29tbWFuZC5pbmRlY2llcyk7Cg",
					"AgAAAAAAAAABAAAA3BMAAAAAAADcEwAAAAAAAAAAAAAA4HdAAQAAAAEAAADECQAAAAAAAMcJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3382,
					1,
					"left_delete",
					null,
					"AQAAAKYTAAAAAAAAphMAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAApxMAAAAAAACnEwAAAAAAAAAAAAAAAPC/AQAAAAEAAADECQAAAAAAAMcJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3385,
					4,
					"cut",
					null,
					"BAAAAEIRAAAAAAAAQhEAAAAAAABHAAAAICAgIGZuIHJlbmRlcigmc2VsZiwgcHJvZ19pZDogdTMyLCB2YW9faWQ6IHUzMiwgaW5kZWNpZXM6ICZWZWM8dTMyPikgewpCEQAAAAAAAEIRAAAAAAAAKAAAACAgICAgICAgKHNlbGYuZ2xfdXNlX3Byb2dyYW0pKHByb2dfaWQpOwpCEQAAAAAAAEIRAAAAAAAALQAAACAgICAgICAgKHNlbGYuZ2xfYmluZF92ZXJ0ZXhfYXJyYXkpKHZhb19pZCk7CkIRAAAAAAAAQhEAAAAAAAA5AAAAICAgICAgICAoc2VsZi5nbF9kcmF3X2VsZW1lbnRzKShHTF9UUklBTkdMRVMsIGluZGVjaWVzKTsK",
					"AgAAAAAAAAABAAAAQhEAAAAAAABCEQAAAAAAAAAAAAAAAAAAAQAAAAEAAADECQAAAAAAAMcJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3386,
					1,
					"insert",
					{
						"characters": "x"
					},
					"AQAAAEIRAAAAAAAAQxEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQhEAAAAAAABCEQAAAAAAAAAAAAAAAPC/AQAAAAEAAADECQAAAAAAAMcJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3387,
					1,
					"left_delete",
					null,
					"AQAAAEIRAAAAAAAAQhEAAAAAAAABAAAAeA",
					"AgAAAAAAAAABAAAAQxEAAAAAAABDEQAAAAAAAAAAAAAAAPC/AQAAAAEAAADECQAAAAAAAMcJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3388,
					1,
					"cut",
					null,
					"AQAAAEIRAAAAAAAAQhEAAAAAAAAGAAAAICAgIH0K",
					"AgAAAAAAAAABAAAAQhEAAAAAAABCEQAAAAAAAAAAAAAAAPC/AQAAAAEAAADECQAAAAAAAMcJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3390,
					1,
					"left_delete",
					null,
					"AQAAAEARAAAAAAAAQBEAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAQREAAAAAAABBEQAAAAAAAAAAAAAAAAAAAQAAAAEAAADECQAAAAAAAMcJAAAAAAAAAAAAAAAA8L8"
				],
				[
					3423,
					1,
					"insert",
					{
						"characters": "\npub"
					},
					"BQAAAAsGAAAAAAAADAYAAAAAAAAAAAAADAYAAAAAAAAQBgAAAAAAAAAAAAAQBgAAAAAAABEGAAAAAAAAAAAAABEGAAAAAAAAEgYAAAAAAAAAAAAAEgYAAAAAAAATBgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAEBIAAAAAAAAQEgAAAAAAAAAAAAAAYHxAAQAAAAEAAAALBgAAAAAAAAsGAAAAAAAA////////738"
				],
				[
					3424,
					1,
					"insert",
					{
						"characters": " gl_get_unior"
					},
					"DQAAABMGAAAAAAAAFAYAAAAAAAAAAAAAFAYAAAAAAAAVBgAAAAAAAAAAAAAVBgAAAAAAABYGAAAAAAAAAAAAABYGAAAAAAAAFwYAAAAAAAAAAAAAFwYAAAAAAAAYBgAAAAAAAAAAAAAYBgAAAAAAABkGAAAAAAAAAAAAABkGAAAAAAAAGgYAAAAAAAAAAAAAGgYAAAAAAAAbBgAAAAAAAAAAAAAbBgAAAAAAABwGAAAAAAAAAAAAABwGAAAAAAAAHQYAAAAAAAAAAAAAHQYAAAAAAAAeBgAAAAAAAAAAAAAeBgAAAAAAAB8GAAAAAAAAAAAAAB8GAAAAAAAAIAYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAGBIAAAAAAAAYEgAAAAAAAAAAAAAAAPC/AQAAAAEAAAATBgAAAAAAABMGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3425,
					1,
					"cut",
					null,
					"AQAAAAwGAAAAAAAADAYAAAAAAAAVAAAAICAgIHB1YiBnbF9nZXRfdW5pb3IK",
					"AgAAAAAAAAABAAAAJRIAAAAAAAAlEgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAgBgAAAAAAACAGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3434,
					1,
					"insert",
					{
						"characters": "\npub"
					},
					"BQAAAAsGAAAAAAAADAYAAAAAAAAAAAAADAYAAAAAAAAQBgAAAAAAAAAAAAAQBgAAAAAAABEGAAAAAAAAAAAAABEGAAAAAAAAEgYAAAAAAAAAAAAAEgYAAAAAAAATBgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAEBIAAAAAAAAQEgAAAAAAAAAAAAAAAPC/AQAAAAEAAAALBgAAAAAAAAsGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3435,
					1,
					"insert",
					{
						"characters": " flg_"
					},
					"BQAAABMGAAAAAAAAFAYAAAAAAAAAAAAAFAYAAAAAAAAVBgAAAAAAAAAAAAAVBgAAAAAAABYGAAAAAAAAAAAAABYGAAAAAAAAFwYAAAAAAAAAAAAAFwYAAAAAAAAYBgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAGBIAAAAAAAAYEgAAAAAAAAAAAAAAAPC/AQAAAAEAAAATBgAAAAAAABMGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3436,
					4,
					"left_delete",
					null,
					"BAAAABcGAAAAAAAAFwYAAAAAAAABAAAAXxYGAAAAAAAAFgYAAAAAAAABAAAAZxUGAAAAAAAAFQYAAAAAAAABAAAAbBQGAAAAAAAAFAYAAAAAAAABAAAAZg",
					"AgAAAAAAAAABAAAAHRIAAAAAAAAdEgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAYBgAAAAAAABgGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3437,
					1,
					"insert",
					{
						"characters": "gl_get_uniform"
					},
					"DgAAABQGAAAAAAAAFQYAAAAAAAAAAAAAFQYAAAAAAAAWBgAAAAAAAAAAAAAWBgAAAAAAABcGAAAAAAAAAAAAABcGAAAAAAAAGAYAAAAAAAAAAAAAGAYAAAAAAAAZBgAAAAAAAAAAAAAZBgAAAAAAABoGAAAAAAAAAAAAABoGAAAAAAAAGwYAAAAAAAAAAAAAGwYAAAAAAAAcBgAAAAAAAAAAAAAcBgAAAAAAAB0GAAAAAAAAAAAAAB0GAAAAAAAAHgYAAAAAAAAAAAAAHgYAAAAAAAAfBgAAAAAAAAAAAAAfBgAAAAAAACAGAAAAAAAAAAAAACAGAAAAAAAAIQYAAAAAAAAAAAAAIQYAAAAAAAAiBgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAGRIAAAAAAAAZEgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAUBgAAAAAAABQGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3438,
					1,
					"insert",
					{
						"characters": "_location"
					},
					"CQAAACIGAAAAAAAAIwYAAAAAAAAAAAAAIwYAAAAAAAAkBgAAAAAAAAAAAAAkBgAAAAAAACUGAAAAAAAAAAAAACUGAAAAAAAAJgYAAAAAAAAAAAAAJgYAAAAAAAAnBgAAAAAAAAAAAAAnBgAAAAAAACgGAAAAAAAAAAAAACgGAAAAAAAAKQYAAAAAAAAAAAAAKQYAAAAAAAAqBgAAAAAAAAAAAAAqBgAAAAAAACsGAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAJxIAAAAAAAAnEgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAiBgAAAAAAACIGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3439,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAACsGAAAAAAAALQYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAMBIAAAAAAAAwEgAAAAAAAAAAAAAAAPC/AQAAAAEAAAArBgAAAAAAACsGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3440,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAACsGAAAAAAAAKwYAAAAAAAABAAAAKCsGAAAAAAAAKwYAAAAAAAABAAAAKQ",
					"AgAAAAAAAAABAAAAMhIAAAAAAAAyEgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAsBgAAAAAAACwGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3441,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAACsGAAAAAAAALAYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAMBIAAAAAAAAwEgAAAAAAAAAAAAAAAPC/AQAAAAEAAAArBgAAAAAAACsGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3442,
					1,
					"insert",
					{
						"characters": " fn"
					},
					"AwAAACwGAAAAAAAALQYAAAAAAAAAAAAALQYAAAAAAAAuBgAAAAAAAAAAAAAuBgAAAAAAAC8GAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAMRIAAAAAAAAxEgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAsBgAAAAAAACwGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3443,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAC8GAAAAAAAAMQYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAANBIAAAAAAAA0EgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAvBgAAAAAAAC8GAAAAAAAAAAAAAAAA8L8"
				],
				[
					3444,
					1,
					"insert",
					{
						"characters": "u32,"
					},
					"BAAAADAGAAAAAAAAMQYAAAAAAAAAAAAAMQYAAAAAAAAyBgAAAAAAAAAAAAAyBgAAAAAAADMGAAAAAAAAAAAAADMGAAAAAAAANAYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAANhIAAAAAAAA2EgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAwBgAAAAAAADAGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3445,
					1,
					"insert",
					{
						"characters": " 7st"
					},
					"BAAAADQGAAAAAAAANQYAAAAAAAAAAAAANQYAAAAAAAA2BgAAAAAAAAAAAAA2BgAAAAAAADcGAAAAAAAAAAAAADcGAAAAAAAAOAYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAOhIAAAAAAAA6EgAAAAAAAAAAAAAAAPC/AQAAAAEAAAA0BgAAAAAAADQGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3446,
					3,
					"left_delete",
					null,
					"AwAAADcGAAAAAAAANwYAAAAAAAABAAAAdDYGAAAAAAAANgYAAAAAAAABAAAAczUGAAAAAAAANQYAAAAAAAABAAAANw",
					"AgAAAAAAAAABAAAAPhIAAAAAAAA+EgAAAAAAAAAAAAAAAPC/AQAAAAEAAAA4BgAAAAAAADgGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3447,
					1,
					"insert",
					{
						"characters": "7str"
					},
					"BAAAADUGAAAAAAAANgYAAAAAAAAAAAAANgYAAAAAAAA3BgAAAAAAAAAAAAA3BgAAAAAAADgGAAAAAAAAAAAAADgGAAAAAAAAOQYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAOxIAAAAAAAA7EgAAAAAAAAAAAAAAAPC/AQAAAAEAAAA1BgAAAAAAADUGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3448,
					4,
					"left_delete",
					null,
					"BAAAADgGAAAAAAAAOAYAAAAAAAABAAAAcjcGAAAAAAAANwYAAAAAAAABAAAAdDYGAAAAAAAANgYAAAAAAAABAAAAczUGAAAAAAAANQYAAAAAAAABAAAANw",
					"AgAAAAAAAAABAAAAPxIAAAAAAAA/EgAAAAAAAAAAAAAAAPC/AQAAAAEAAAA5BgAAAAAAADkGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3449,
					1,
					"insert",
					{
						"characters": "&str"
					},
					"BAAAADUGAAAAAAAANgYAAAAAAAAAAAAANgYAAAAAAAA3BgAAAAAAAAAAAAA3BgAAAAAAADgGAAAAAAAAAAAAADgGAAAAAAAAOQYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAOxIAAAAAAAA7EgAAAAAAAAAAAAAAAPC/AQAAAAEAAAA1BgAAAAAAADUGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3451,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAADoGAAAAAAAAOwYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAPxIAAAAAAAA/EgAAAAAAAAAAAAAAAPC/AQAAAAEAAAA6BgAAAAAAADoGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3457,
					1,
					"insert",
					{
						"characters": " ->"
					},
					"AwAAADoGAAAAAAAAOwYAAAAAAAAAAAAAOwYAAAAAAAA8BgAAAAAAAAAAAAA8BgAAAAAAAD0GAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQBIAAAAAAABAEgAAAAAAAAAAAAAAAPC/AQAAAAEAAAA6BgAAAAAAADoGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3458,
					1,
					"insert",
					{
						"characters": " i32"
					},
					"BAAAAD0GAAAAAAAAPgYAAAAAAAAAAAAAPgYAAAAAAAA/BgAAAAAAAAAAAAA/BgAAAAAAAEAGAAAAAAAAAAAAAEAGAAAAAAAAQQYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQxIAAAAAAABDEgAAAAAAAAAAAAAAAPC/AQAAAAEAAAA9BgAAAAAAAD0GAAAAAAAAAAAAAAAA8L8"
				],
				[
					3465,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BgAAAEcSAAAAAAAASBIAAAAAAAAAAAAASBIAAAAAAABMEgAAAAAAAAAAAABMEgAAAAAAAFASAAAAAAAAAAAAAFASAAAAAAAAURIAAAAAAAAAAAAAURIAAAAAAABZEgAAAAAAAAAAAABIEgAAAAAAAEgSAAAAAAAACAAAACAgICAgICAg",
					"AgAAAAAAAAABAAAARxIAAAAAAABHEgAAAAAAAAAAAAAAAPC/AQAAAAEAAABHEgAAAAAAAEcSAAAAAAAA////////738"
				],
				[
					3467,
					1,
					"reindent",
					null,
					"AQAAAEgSAAAAAAAAUBIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAURIAAAAAAABREgAAAAAAAAAAAAAAAPC/AQAAAAEAAABIEgAAAAAAAEgSAAAAAAAAAAAAAAAATUA"
				],
				[
					3468,
					1,
					"insert",
					{
						"characters": "let"
					},
					"BAAAAFASAAAAAAAAURIAAAAAAAAAAAAAUhIAAAAAAABSEgAAAAAAAAgAAAAgICAgICAgIFESAAAAAAAAUhIAAAAAAAAAAAAAUhIAAAAAAABTEgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAWRIAAAAAAABZEgAAAAAAAAAAAAAAAPC/AQAAAAEAAABQEgAAAAAAAFASAAAAAAAAAAAAAAAA8L8"
				],
				[
					3469,
					1,
					"insert",
					{
						"characters": " uni"
					},
					"BAAAAFMSAAAAAAAAVBIAAAAAAAAAAAAAVBIAAAAAAABVEgAAAAAAAAAAAABVEgAAAAAAAFYSAAAAAAAAAAAAAFYSAAAAAAAAVxIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAVBIAAAAAAABUEgAAAAAAAAAAAAAAAPC/AQAAAAEAAABTEgAAAAAAAFMSAAAAAAAAAAAAAAAA8L8"
				],
				[
					3470,
					3,
					"left_delete",
					null,
					"AwAAAFYSAAAAAAAAVhIAAAAAAAABAAAAaVUSAAAAAAAAVRIAAAAAAAABAAAAblQSAAAAAAAAVBIAAAAAAAABAAAAdQ",
					"AgAAAAAAAAABAAAAWBIAAAAAAABYEgAAAAAAAAAAAAAAAPC/AQAAAAEAAABXEgAAAAAAAFcSAAAAAAAAAAAAAAAA8L8"
				],
				[
					3471,
					1,
					"insert",
					{
						"characters": "unif_lo"
					},
					"BwAAAFQSAAAAAAAAVRIAAAAAAAAAAAAAVRIAAAAAAABWEgAAAAAAAAAAAABWEgAAAAAAAFcSAAAAAAAAAAAAAFcSAAAAAAAAWBIAAAAAAAAAAAAAWBIAAAAAAABZEgAAAAAAAAAAAABZEgAAAAAAAFoSAAAAAAAAAAAAAFoSAAAAAAAAWxIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAVRIAAAAAAABVEgAAAAAAAAAAAAAAAPC/AQAAAAEAAABUEgAAAAAAAFQSAAAAAAAAAAAAAAAA8L8"
				],
				[
					3475,
					1,
					"insert",
					{
						"characters": "c"
					},
					"AQAAAFsSAAAAAAAAXBIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAXBIAAAAAAABcEgAAAAAAAAAAAAAAAPC/AQAAAAEAAABbEgAAAAAAAFsSAAAAAAAA////////738"
				],
				[
					3476,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAAFASAAAAAAAAUxIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAXRIAAAAAAABdEgAAAAAAAAAAAAAAAPC/AQAAAAEAAABcEgAAAAAAAFwSAAAAAAAAAAAAAAAA8L8"
				],
				[
					3482,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BgAAAEcSAAAAAAAASBIAAAAAAAAAAAAASBIAAAAAAABMEgAAAAAAAAAAAABMEgAAAAAAAFASAAAAAAAAAAAAAFASAAAAAAAAURIAAAAAAAAAAAAAURIAAAAAAABZEgAAAAAAAAAAAABIEgAAAAAAAEgSAAAAAAAACAAAACAgICAgICAg",
					"AgAAAAAAAAABAAAAYBIAAAAAAABgEgAAAAAAAAAAAAAAAPC/AQAAAAEAAABHEgAAAAAAAEcSAAAAAAAA////////738"
				],
				[
					3484,
					1,
					"reindent",
					null,
					"AQAAAEgSAAAAAAAAUBIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAahIAAAAAAABqEgAAAAAAAAAAAAAAAPC/AQAAAAEAAABIEgAAAAAAAEgSAAAAAAAAAAAAAAAATUA"
				],
				[
					3485,
					1,
					"insert",
					{
						"characters": "\nf"
					},
					"BQAAAFASAAAAAAAAURIAAAAAAAAAAAAAURIAAAAAAABZEgAAAAAAAAAAAABaEgAAAAAAAFoSAAAAAAAACAAAACAgICAgICAgSBIAAAAAAABIEgAAAAAAAAgAAAAgICAgICAgIFESAAAAAAAAUhIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAchIAAAAAAAByEgAAAAAAAAAAAAAAAPC/AQAAAAEAAABQEgAAAAAAAFASAAAAAAAAAAAAAAAA8L8"
				],
				[
					3486,
					1,
					"insert",
					{
						"characters": "or"
					},
					"AgAAAFISAAAAAAAAUxIAAAAAAAAAAAAAUxIAAAAAAABUEgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAbBIAAAAAAABsEgAAAAAAAAAAAAAAAPC/AQAAAAEAAABSEgAAAAAAAFISAAAAAAAAAAAAAAAA8L8"
				],
				[
					3487,
					1,
					"insert",
					{
						"characters": " key"
					},
					"BAAAAFQSAAAAAAAAVRIAAAAAAAAAAAAAVRIAAAAAAABWEgAAAAAAAAAAAABWEgAAAAAAAFcSAAAAAAAAAAAAAFcSAAAAAAAAWBIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAbhIAAAAAAABuEgAAAAAAAAAAAAAAAPC/AQAAAAEAAABUEgAAAAAAAFQSAAAAAAAAAAAAAAAA8L8"
				],
				[
					3489,
					1,
					"insert",
					{
						"characters": " in"
					},
					"AwAAAFgSAAAAAAAAWRIAAAAAAAAAAAAAWRIAAAAAAABaEgAAAAAAAAAAAABaEgAAAAAAAFsSAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAchIAAAAAAAByEgAAAAAAAAAAAAAAAPC/AQAAAAEAAABYEgAAAAAAAFgSAAAAAAAAAAAAAAAA8L8"
				],
				[
					3490,
					1,
					"insert",
					{
						"characters": " command.u"
					},
					"CgAAAFsSAAAAAAAAXBIAAAAAAAAAAAAAXBIAAAAAAABdEgAAAAAAAAAAAABdEgAAAAAAAF4SAAAAAAAAAAAAAF4SAAAAAAAAXxIAAAAAAAAAAAAAXxIAAAAAAABgEgAAAAAAAAAAAABgEgAAAAAAAGESAAAAAAAAAAAAAGESAAAAAAAAYhIAAAAAAAAAAAAAYhIAAAAAAABjEgAAAAAAAAAAAABjEgAAAAAAAGQSAAAAAAAAAAAAAGQSAAAAAAAAZRIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAdRIAAAAAAAB1EgAAAAAAAAAAAAAAAPC/AQAAAAEAAABbEgAAAAAAAFsSAAAAAAAAAAAAAAAA8L8"
				],
				[
					3491,
					1,
					"insert",
					{
						"characters": "niform"
					},
					"BgAAAGUSAAAAAAAAZhIAAAAAAAAAAAAAZhIAAAAAAABnEgAAAAAAAAAAAABnEgAAAAAAAGgSAAAAAAAAAAAAAGgSAAAAAAAAaRIAAAAAAAAAAAAAaRIAAAAAAABqEgAAAAAAAAAAAABqEgAAAAAAAGsSAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAfxIAAAAAAAB/EgAAAAAAAAAAAAAAAPC/AQAAAAEAAABlEgAAAAAAAGUSAAAAAAAAAAAAAAAA8L8"
				],
				[
					3492,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAGsSAAAAAAAAbBIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAhRIAAAAAAACFEgAAAAAAAAAAAAAAAPC/AQAAAAEAAABrEgAAAAAAAGsSAAAAAAAAAAAAAAAA8L8"
				],
				[
					3493,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAGwSAAAAAAAAbhIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAhhIAAAAAAACGEgAAAAAAAAAAAAAAAPC/AQAAAAEAAABsEgAAAAAAAGwSAAAAAAAAAAAAAAAA8L8"
				],
				[
					3494,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAG0SAAAAAAAAbhIAAAAAAAAAAAAAbhIAAAAAAAB2EgAAAAAAAAAAAAB2EgAAAAAAAHcSAAAAAAAAAAAAAHcSAAAAAAAAfxIAAAAAAAAAAAAAbhIAAAAAAABuEgAAAAAAAAgAAAAgICAgICAgIG4SAAAAAAAAehIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAiBIAAAAAAACIEgAAAAAAAAAAAAAAAPC/AQAAAAEAAABtEgAAAAAAAG0SAAAAAAAAAAAAAAAA8L8"
				],
				[
					3504,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAEgSAAAAAAAASRIAAAAAAAAAAAAAbxIAAAAAAABvEgAAAAAAAAwAAAAgICAgICAgICAgICA",
					"AgAAAAAAAAABAAAAnhIAAAAAAACeEgAAAAAAAAAAAAAAAPC/AQAAAAEAAABIEgAAAAAAAEgSAAAAAAAAAAAAAAAAAAA"
				],
				[
					3505,
					1,
					"reindent",
					null,
					"AQAAAEkSAAAAAAAAURIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAkxIAAAAAAACTEgAAAAAAAAAAAAAAAPC/AQAAAAEAAABJEgAAAAAAAEkSAAAAAAAAAAAAAAAA8L8"
				],
				[
					3506,
					1,
					"insert",
					{
						"characters": "let"
					},
					"AwAAAFESAAAAAAAAUhIAAAAAAAAAAAAAUhIAAAAAAABTEgAAAAAAAAAAAABTEgAAAAAAAFQSAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAmxIAAAAAAACbEgAAAAAAAAAAAAAAAPC/AQAAAAEAAABREgAAAAAAAFESAAAAAAAAAAAAAAAA8L8"
				],
				[
					3507,
					1,
					"insert",
					{
						"characters": " unifo"
					},
					"BgAAAFQSAAAAAAAAVRIAAAAAAAAAAAAAVRIAAAAAAABWEgAAAAAAAAAAAABWEgAAAAAAAFcSAAAAAAAAAAAAAFcSAAAAAAAAWBIAAAAAAAAAAAAAWBIAAAAAAABZEgAAAAAAAAAAAABZEgAAAAAAAFoSAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAnhIAAAAAAACeEgAAAAAAAAAAAAAAAPC/AQAAAAEAAABUEgAAAAAAAFQSAAAAAAAAAAAAAAAA8L8"
				],
				[
					3508,
					1,
					"left_delete",
					null,
					"AQAAAFkSAAAAAAAAWRIAAAAAAAABAAAAbw",
					"AgAAAAAAAAABAAAApBIAAAAAAACkEgAAAAAAAAAAAAAAAPC/AQAAAAEAAABaEgAAAAAAAFoSAAAAAAAAAAAAAAAA8L8"
				],
				[
					3509,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAAFkSAAAAAAAAWhIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAoxIAAAAAAACjEgAAAAAAAAAAAAAAAPC/AQAAAAEAAABZEgAAAAAAAFkSAAAAAAAAAAAAAAAA8L8"
				],
				[
					3510,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAFoSAAAAAAAAWxIAAAAAAAAAAAAAWxIAAAAAAABcEgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAApBIAAAAAAACkEgAAAAAAAAAAAAAAAPC/AQAAAAEAAABaEgAAAAAAAFoSAAAAAAAAAAAAAAAA8L8"
				],
				[
					3511,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFwSAAAAAAAAXRIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAphIAAAAAAACmEgAAAAAAAAAAAAAAAPC/AQAAAAEAAABcEgAAAAAAAFwSAAAAAAAAAAAAAAAA8L8"
				],
				[
					3513,
					1,
					"insert",
					{
						"characters": "unis"
					},
					"BQAAAFUSAAAAAAAAVhIAAAAAAAAAAAAAVhIAAAAAAABWEgAAAAAAAAgAAAB1bmlmcyA9IFYSAAAAAAAAVxIAAAAAAAAAAAAAVxIAAAAAAABYEgAAAAAAAAAAAABYEgAAAAAAAFkSAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAApxIAAAAAAACnEgAAAAAAAAAAAAAAAPC/AQAAAAEAAABdEgAAAAAAAFUSAAAAAAAAAAAAAAAA8L8"
				],
				[
					3514,
					1,
					"left_delete",
					null,
					"AQAAAFgSAAAAAAAAWBIAAAAAAAABAAAAcw",
					"AgAAAAAAAAABAAAAoxIAAAAAAACjEgAAAAAAAAAAAAAAAPC/AQAAAAEAAABZEgAAAAAAAFkSAAAAAAAAAAAAAAAA8L8"
				],
				[
					3515,
					1,
					"insert",
					{
						"characters": "fs"
					},
					"AgAAAFgSAAAAAAAAWRIAAAAAAAAAAAAAWRIAAAAAAABaEgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAohIAAAAAAACiEgAAAAAAAAAAAAAAAPC/AQAAAAEAAABYEgAAAAAAAFgSAAAAAAAAAAAAAAAA8L8"
				],
				[
					3516,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFoSAAAAAAAAWxIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAApBIAAAAAAACkEgAAAAAAAAAAAAAAAPC/AQAAAAEAAABaEgAAAAAAAFoSAAAAAAAAAAAAAAAA8L8"
				],
				[
					3517,
					1,
					"left_delete",
					null,
					"AQAAAFoSAAAAAAAAWhIAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAApRIAAAAAAAClEgAAAAAAAAAAAAAAAPC/AQAAAAEAAABbEgAAAAAAAFsSAAAAAAAAAAAAAAAA8L8"
				],
				[
					3518,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAFoSAAAAAAAAWxIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAApBIAAAAAAACkEgAAAAAAAAAAAAAAAPC/AQAAAAEAAABaEgAAAAAAAFoSAAAAAAAAAAAAAAAA8L8"
				],
				[
					3519,
					1,
					"insert",
					{
						"characters": " Vec<Sh"
					},
					"BwAAAFsSAAAAAAAAXBIAAAAAAAAAAAAAXBIAAAAAAABdEgAAAAAAAAAAAABdEgAAAAAAAF4SAAAAAAAAAAAAAF4SAAAAAAAAXxIAAAAAAAAAAAAAXxIAAAAAAABgEgAAAAAAAAAAAABgEgAAAAAAAGESAAAAAAAAAAAAAGESAAAAAAAAYhIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAApRIAAAAAAAClEgAAAAAAAAAAAAAAAPC/AQAAAAEAAABbEgAAAAAAAFsSAAAAAAAAAAAAAAAA8L8"
				],
				[
					3520,
					1,
					"left_delete",
					null,
					"AQAAAGESAAAAAAAAYRIAAAAAAAABAAAAaA",
					"AgAAAAAAAAABAAAArBIAAAAAAACsEgAAAAAAAAAAAAAAAPC/AQAAAAEAAABiEgAAAAAAAGISAAAAAAAAAAAAAAAA8L8"
				],
				[
					3521,
					1,
					"left_delete",
					null,
					"AQAAAGASAAAAAAAAYBIAAAAAAAABAAAAUw",
					"AgAAAAAAAAABAAAAqxIAAAAAAACrEgAAAAAAAAAAAAAAAPC/AQAAAAEAAABhEgAAAAAAAGESAAAAAAAAAAAAAAAA8L8"
				],
				[
					3523,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAEgSAAAAAAAASRIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAqhIAAAAAAACqEgAAAAAAAAAAAAAAAPC/AQAAAAEAAABIEgAAAAAAAEgSAAAAAAAAAAAAAADAZEA"
				],
				[
					3524,
					1,
					"reindent",
					null,
					"AQAAAEkSAAAAAAAAURIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAqxIAAAAAAACrEgAAAAAAAAAAAAAAAPC/AQAAAAEAAABJEgAAAAAAAEkSAAAAAAAAAAAAAAAA8L8"
				],
				[
					3525,
					1,
					"insert",
					{
						"characters": "for"
					},
					"AwAAAFESAAAAAAAAUhIAAAAAAAAAAAAAUhIAAAAAAABTEgAAAAAAAAAAAABTEgAAAAAAAFQSAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAsxIAAAAAAACzEgAAAAAAAAAAAAAAAPC/AQAAAAEAAABREgAAAAAAAFESAAAAAAAAAAAAAAAA8L8"
				],
				[
					3526,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFQSAAAAAAAAVRIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAthIAAAAAAAC2EgAAAAAAAAAAAAAAAPC/AQAAAAEAAABUEgAAAAAAAFQSAAAAAAAAAAAAAAAA8L8"
				],
				[
					3527,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAFUSAAAAAAAAVxIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAtxIAAAAAAAC3EgAAAAAAAAAAAAAAAPC/AQAAAAEAAABVEgAAAAAAAFUSAAAAAAAAAAAAAAAA8L8"
				],
				[
					3528,
					1,
					"insert",
					{
						"characters": "key,value"
					},
					"CQAAAFYSAAAAAAAAVxIAAAAAAAAAAAAAVxIAAAAAAABYEgAAAAAAAAAAAABYEgAAAAAAAFkSAAAAAAAAAAAAAFkSAAAAAAAAWhIAAAAAAAAAAAAAWhIAAAAAAABbEgAAAAAAAAAAAABbEgAAAAAAAFwSAAAAAAAAAAAAAFwSAAAAAAAAXRIAAAAAAAAAAAAAXRIAAAAAAABeEgAAAAAAAAAAAABeEgAAAAAAAF8SAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAuRIAAAAAAAC5EgAAAAAAAAAAAAAAAPC/AQAAAAEAAABWEgAAAAAAAFYSAAAAAAAAAAAAAAAA8L8"
				],
				[
					3530,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFoSAAAAAAAAWxIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAwhIAAAAAAADCEgAAAAAAAAAAAAAAAPC/AQAAAAEAAABaEgAAAAAAAFoSAAAAAAAAAAAAAAAA8L8"
				],
				[
					3533,
					1,
					"insert",
					{
						"characters": " in"
					},
					"AwAAAGESAAAAAAAAYhIAAAAAAAAAAAAAYhIAAAAAAABjEgAAAAAAAAAAAABjEgAAAAAAAGQSAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAwxIAAAAAAADDEgAAAAAAAAAAAAAAAPC/AQAAAAEAAABhEgAAAAAAAGESAAAAAAAA////////738"
				],
				[
					3534,
					1,
					"insert",
					{
						"characters": " command."
					},
					"CQAAAGQSAAAAAAAAZRIAAAAAAAAAAAAAZRIAAAAAAABmEgAAAAAAAAAAAABmEgAAAAAAAGcSAAAAAAAAAAAAAGcSAAAAAAAAaBIAAAAAAAAAAAAAaBIAAAAAAABpEgAAAAAAAAAAAABpEgAAAAAAAGoSAAAAAAAAAAAAAGoSAAAAAAAAaxIAAAAAAAAAAAAAaxIAAAAAAABsEgAAAAAAAAAAAABsEgAAAAAAAG0SAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAxhIAAAAAAADGEgAAAAAAAAAAAAAAAPC/AQAAAAEAAABkEgAAAAAAAGQSAAAAAAAAAAAAAAAA8L8"
				],
				[
					3535,
					1,
					"insert",
					{
						"characters": "uniforms"
					},
					"CAAAAG0SAAAAAAAAbhIAAAAAAAAAAAAAbhIAAAAAAABvEgAAAAAAAAAAAABvEgAAAAAAAHASAAAAAAAAAAAAAHASAAAAAAAAcRIAAAAAAAAAAAAAcRIAAAAAAAByEgAAAAAAAAAAAAByEgAAAAAAAHMSAAAAAAAAAAAAAHMSAAAAAAAAdBIAAAAAAAAAAAAAdBIAAAAAAAB1EgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAzxIAAAAAAADPEgAAAAAAAAAAAAAAAPC/AQAAAAEAAABtEgAAAAAAAG0SAAAAAAAAAAAAAAAA8L8"
				],
				[
					3536,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHUSAAAAAAAAdhIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA1xIAAAAAAADXEgAAAAAAAAAAAAAAAPC/AQAAAAEAAAB1EgAAAAAAAHUSAAAAAAAAAAAAAAAA8L8"
				],
				[
					3537,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAHYSAAAAAAAAeBIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA2BIAAAAAAADYEgAAAAAAAAAAAAAAAPC/AQAAAAEAAAB2EgAAAAAAAHYSAAAAAAAAAAAAAAAA8L8"
				],
				[
					3538,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAHcSAAAAAAAAeBIAAAAAAAAAAAAAeBIAAAAAAACAEgAAAAAAAAAAAACAEgAAAAAAAIESAAAAAAAAAAAAAIESAAAAAAAAiRIAAAAAAAAAAAAAeBIAAAAAAAB4EgAAAAAAAAgAAAAgICAgICAgIHgSAAAAAAAAhBIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA2hIAAAAAAADaEgAAAAAAAAAAAAAAAPC/AQAAAAEAAAB3EgAAAAAAAHcSAAAAAAAAAAAAAAAA8L8"
				],
				[
					3540,
					4,
					"cut",
					null,
					"BAAAAI8SAAAAAAAAjxIAAAAAAAAYAAAAICAgICAgICBsZXQgdW5pZnM6IFZlYzwKjxIAAAAAAACPEgAAAAAAACUAAAAgICAgICAgIGZvciBrZXkgaW4gY29tbWFuZC51bmlmb3JtIHsKjxIAAAAAAACPEgAAAAAAAAEAAAAKjxIAAAAAAACPEgAAAAAAAAoAAAAgICAgICAgIH0K",
					"AgAAAAAAAAABAAAA8BIAAAAAAADwEgAAAAAAAAAAAAAAAPC/AQAAAAEAAACbEgAAAAAAAJsSAAAAAAAAAAAAAACAVUA"
				],
				[
					3541,
					2,
					"rust_fmt_format_buffer",
					null,
					"AgAAAEgSAAAAAAAASBIAAAAAAAABAAAACnYSAAAAAAAAdhIAAAAAAAAWAAAACiAgICAgICAgICAgIAogICAgICAgIA",
					"AgAAAAAAAAABAAAAqBIAAAAAAACoEgAAAAAAAAAAAAAAAPC/AQAAAAEAAACPEgAAAAAAAI8SAAAAAAAAAAAAAAAA8L8"
				],
				[
					3543,
					1,
					"cut",
					null,
					"AQAAAHkSAAAAAAAAeRIAAAAAAAAYAAAAICAgICAgICAvLyBsZXQgdW5pZl9sb2MK",
					"AgAAAAAAAAABAAAAkRIAAAAAAACREgAAAAAAAAAAAAAAAPC/AQAAAAEAAAB5EgAAAAAAAHkSAAAAAAAAAAAAAAAAAAA"
				],
				[
					3544,
					2,
					"rust_fmt_format_buffer",
					null,
					"AQAAAHkSAAAAAAAAeRIAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAeRIAAAAAAAB5EgAAAAAAAAAAAAAAAPC/AQAAAAEAAAB5EgAAAAAAAHkSAAAAAAAAAAAAAAAA8L8"
				],
				[
					3553,
					1,
					"insert",
					{
						"characters": "&"
					},
					"AQAAAGQSAAAAAAAAZRIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAeRIAAAAAAAB5EgAAAAAAAAAAAAAAAPC/AQAAAAEAAABkEgAAAAAAAGQSAAAAAAAAAAAAAAAA8L8"
				],
				[
					3558,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAHcSAAAAAAAAeBIAAAAAAAAAAAAAeBIAAAAAAACAEgAAAAAAAAAAAACAEgAAAAAAAIESAAAAAAAAAAAAAIESAAAAAAAAiRIAAAAAAAAAAAAAeBIAAAAAAAB4EgAAAAAAAAgAAAAgICAgICAgIHgSAAAAAAAAhBIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAehIAAAAAAAB6EgAAAAAAAAAAAAAAAPC/AQAAAAEAAAB3EgAAAAAAAHcSAAAAAAAAAAAAAAAA8L8"
				],
				[
					3559,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAIQSAAAAAAAAhhIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAkBIAAAAAAACQEgAAAAAAAAAAAAAAAPC/AQAAAAEAAACEEgAAAAAAAIQSAAAAAAAAAAAAAAAA8L8"
				],
				[
					3560,
					1,
					"insert",
					{
						"characters": "render"
					},
					"BgAAAIUSAAAAAAAAhhIAAAAAAAAAAAAAhhIAAAAAAACHEgAAAAAAAAAAAACHEgAAAAAAAIgSAAAAAAAAAAAAAIgSAAAAAAAAiRIAAAAAAAAAAAAAiRIAAAAAAACKEgAAAAAAAAAAAACKEgAAAAAAAIsSAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAkhIAAAAAAACSEgAAAAAAAAAAAAAAAPC/AQAAAAEAAACFEgAAAAAAAIUSAAAAAAAAAAAAAAAA8L8"
				],
				[
					3561,
					1,
					"insert_completion",
					{
						"completion": "render_api",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "render_api"
					},
					"AgAAAIUSAAAAAAAAhRIAAAAAAAAGAAAAcmVuZGVyhRIAAAAAAACPEgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAmBIAAAAAAACYEgAAAAAAAAAAAAAAAPC/AQAAAAEAAACLEgAAAAAAAIsSAAAAAAAAAAAAAAAA8L8"
				],
				[
					3562,
					1,
					"insert",
					{
						"characters": ".gl_get_u"
					},
					"CQAAAI8SAAAAAAAAkBIAAAAAAAAAAAAAkBIAAAAAAACREgAAAAAAAAAAAACREgAAAAAAAJISAAAAAAAAAAAAAJISAAAAAAAAkxIAAAAAAAAAAAAAkxIAAAAAAACUEgAAAAAAAAAAAACUEgAAAAAAAJUSAAAAAAAAAAAAAJUSAAAAAAAAlhIAAAAAAAAAAAAAlhIAAAAAAACXEgAAAAAAAAAAAACXEgAAAAAAAJgSAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAnBIAAAAAAACcEgAAAAAAAAAAAAAAAPC/AQAAAAEAAACPEgAAAAAAAI8SAAAAAAAAAAAAAAAA8L8"
				],
				[
					3563,
					1,
					"insert",
					{
						"characters": "niform"
					},
					"BgAAAJgSAAAAAAAAmRIAAAAAAAAAAAAAmRIAAAAAAACaEgAAAAAAAAAAAACaEgAAAAAAAJsSAAAAAAAAAAAAAJsSAAAAAAAAnBIAAAAAAAAAAAAAnBIAAAAAAACdEgAAAAAAAAAAAACdEgAAAAAAAJ4SAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAApRIAAAAAAAClEgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYEgAAAAAAAJgSAAAAAAAAAAAAAAAA8L8"
				],
				[
					3564,
					1,
					"insert_completion",
					{
						"completion": "gl_get_uniform_location",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "gl_get_uniform_location"
					},
					"AgAAAJASAAAAAAAAkBIAAAAAAAAOAAAAZ2xfZ2V0X3VuaWZvcm2QEgAAAAAAAKcSAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAqxIAAAAAAACrEgAAAAAAAAAAAAAAAPC/AQAAAAEAAACeEgAAAAAAAJ4SAAAAAAAAAAAAAAAA8L8"
				],
				[
					3569,
					1,
					"insert",
					{
						"characters": "let"
					},
					"AwAAAIQSAAAAAAAAhRIAAAAAAAAAAAAAhRIAAAAAAACGEgAAAAAAAAAAAACGEgAAAAAAAIcSAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAtBIAAAAAAAC0EgAAAAAAAAAAAAAAAPC/AQAAAAEAAACEEgAAAAAAAIQSAAAAAAAAAAAAAACAVUA"
				],
				[
					3570,
					1,
					"insert",
					{
						"characters": " unif_l"
					},
					"BwAAAIcSAAAAAAAAiBIAAAAAAAAAAAAAiBIAAAAAAACJEgAAAAAAAAAAAACJEgAAAAAAAIoSAAAAAAAAAAAAAIoSAAAAAAAAixIAAAAAAAAAAAAAixIAAAAAAACMEgAAAAAAAAAAAACMEgAAAAAAAI0SAAAAAAAAAAAAAI0SAAAAAAAAjhIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAtxIAAAAAAAC3EgAAAAAAAAAAAAAAAPC/AQAAAAEAAACHEgAAAAAAAIcSAAAAAAAAAAAAAAAA8L8"
				],
				[
					3571,
					6,
					"left_delete",
					null,
					"BgAAAI0SAAAAAAAAjRIAAAAAAAABAAAAbIwSAAAAAAAAjBIAAAAAAAABAAAAX4sSAAAAAAAAixIAAAAAAAABAAAAZooSAAAAAAAAihIAAAAAAAABAAAAaYkSAAAAAAAAiRIAAAAAAAABAAAAbogSAAAAAAAAiBIAAAAAAAABAAAAdQ",
					"AgAAAAAAAAABAAAAvhIAAAAAAAC+EgAAAAAAAAAAAAAAAPC/AQAAAAEAAACOEgAAAAAAAI4SAAAAAAAAAAAAAAAA8L8"
				],
				[
					3572,
					1,
					"insert",
					{
						"characters": "loc"
					},
					"AwAAAIgSAAAAAAAAiRIAAAAAAAAAAAAAiRIAAAAAAACKEgAAAAAAAAAAAACKEgAAAAAAAIsSAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAuBIAAAAAAAC4EgAAAAAAAAAAAAAAAPC/AQAAAAEAAACIEgAAAAAAAIgSAAAAAAAAAAAAAAAA8L8"
				],
				[
					3573,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAIsSAAAAAAAAjBIAAAAAAAAAAAAAjBIAAAAAAACNEgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAuxIAAAAAAAC7EgAAAAAAAAAAAAAAAPC/AQAAAAEAAACLEgAAAAAAAIsSAAAAAAAAAAAAAAAA8L8"
				],
				[
					3574,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAI0SAAAAAAAAjhIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAvRIAAAAAAAC9EgAAAAAAAAAAAAAAAPC/AQAAAAEAAACNEgAAAAAAAI0SAAAAAAAAAAAAAAAA8L8"
				],
				[
					3577,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAALESAAAAAAAAsxIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAvhIAAAAAAAC+EgAAAAAAAAAAAAAAAPC/AQAAAAEAAACxEgAAAAAAALESAAAAAAAAAAAAAAAA8L8"
				],
				[
					3578,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAALESAAAAAAAAsRIAAAAAAAABAAAAKLESAAAAAAAAsRIAAAAAAAABAAAAKQ",
					"AgAAAAAAAAABAAAAwBIAAAAAAADAEgAAAAAAAAAAAAAAAPC/AQAAAAEAAACyEgAAAAAAALISAAAAAAAAAAAAAAAA8L8"
				],
				[
					3580,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAALISAAAAAAAAtBIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAvhIAAAAAAAC+EgAAAAAAAAAAAAAAAPC/AQAAAAEAAACyEgAAAAAAALISAAAAAAAAAAAAAAAA8L8"
				],
				[
					3581,
					1,
					"insert",
					{
						"characters": "command.prog"
					},
					"DAAAALMSAAAAAAAAtBIAAAAAAAAAAAAAtBIAAAAAAAC1EgAAAAAAAAAAAAC1EgAAAAAAALYSAAAAAAAAAAAAALYSAAAAAAAAtxIAAAAAAAAAAAAAtxIAAAAAAAC4EgAAAAAAAAAAAAC4EgAAAAAAALkSAAAAAAAAAAAAALkSAAAAAAAAuhIAAAAAAAAAAAAAuhIAAAAAAAC7EgAAAAAAAAAAAAC7EgAAAAAAALwSAAAAAAAAAAAAALwSAAAAAAAAvRIAAAAAAAAAAAAAvRIAAAAAAAC+EgAAAAAAAAAAAAC+EgAAAAAAAL8SAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAwBIAAAAAAADAEgAAAAAAAAAAAAAAAPC/AQAAAAEAAACzEgAAAAAAALMSAAAAAAAAAAAAAAAA8L8"
				],
				[
					3582,
					1,
					"insert",
					{
						"characters": "id,"
					},
					"AwAAAL8SAAAAAAAAwBIAAAAAAAAAAAAAwBIAAAAAAADBEgAAAAAAAAAAAADBEgAAAAAAAMISAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAzBIAAAAAAADMEgAAAAAAAAAAAAAAAPC/AQAAAAEAAAC/EgAAAAAAAL8SAAAAAAAAAAAAAAAA8L8"
				],
				[
					3583,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMISAAAAAAAAwxIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAzxIAAAAAAADPEgAAAAAAAAAAAAAAAPC/AQAAAAEAAADCEgAAAAAAAMISAAAAAAAAAAAAAAAA8L8"
				],
				[
					3584,
					4,
					"left_delete",
					null,
					"BAAAAMISAAAAAAAAwhIAAAAAAAABAAAAIMESAAAAAAAAwRIAAAAAAAABAAAALMASAAAAAAAAwBIAAAAAAAABAAAAZL8SAAAAAAAAvxIAAAAAAAABAAAAaQ",
					"AgAAAAAAAAABAAAA0BIAAAAAAADQEgAAAAAAAAAAAAAAAPC/AQAAAAEAAADDEgAAAAAAAMMSAAAAAAAAAAAAAAAA8L8"
				],
				[
					3585,
					1,
					"insert",
					{
						"characters": ".id,"
					},
					"BAAAAL8SAAAAAAAAwBIAAAAAAAAAAAAAwBIAAAAAAADBEgAAAAAAAAAAAADBEgAAAAAAAMISAAAAAAAAAAAAAMISAAAAAAAAwxIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAzBIAAAAAAADMEgAAAAAAAAAAAAAAAPC/AQAAAAEAAAC/EgAAAAAAAL8SAAAAAAAAAAAAAAAA8L8"
				],
				[
					3586,
					1,
					"insert",
					{
						"characters": " key"
					},
					"BAAAAMMSAAAAAAAAxBIAAAAAAAAAAAAAxBIAAAAAAADFEgAAAAAAAAAAAADFEgAAAAAAAMYSAAAAAAAAAAAAAMYSAAAAAAAAxxIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0BIAAAAAAADQEgAAAAAAAAAAAAAAAPC/AQAAAAEAAADDEgAAAAAAAMMSAAAAAAAAAAAAAAAA8L8"
				],
				[
					3589,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAMgSAAAAAAAAyRIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA1BIAAAAAAADUEgAAAAAAAAAAAAAAAPC/AQAAAAEAAADIEgAAAAAAAMgSAAAAAAAAAAAAAAAA8L8"
				],
				[
					3595,
					1,
					"left_delete",
					null,
					"AQAAAL8SAAAAAAAAvxIAAAAAAAABAAAALg",
					"AgAAAAAAAAABAAAA1RIAAAAAAADVEgAAAAAAAAAAAAAAAPC/AQAAAAEAAADAEgAAAAAAAMASAAAAAAAAAAAAAAAA8L8"
				],
				[
					3596,
					1,
					"insert",
					{
						"characters": "_"
					},
					"AQAAAL8SAAAAAAAAwBIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA1BIAAAAAAADUEgAAAAAAAAAAAAAAAPC/AQAAAAEAAAC/EgAAAAAAAL8SAAAAAAAAAAAAAAAA8L8"
				],
				[
					3609,
					1,
					"insert",
					{
						"characters": "_"
					},
					"AQAAAIgSAAAAAAAAiRIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA1RIAAAAAAADVEgAAAAAAAAAAAAAAAPC/AQAAAAEAAACIEgAAAAAAAIgSAAAAAAAAAAAAAAAA8L8"
				],
				[
					3613,
					1,
					"insert",
					{
						"characters": "_"
					},
					"AQAAAFoSAAAAAAAAWxIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA1hIAAAAAAADWEgAAAAAAAAAAAAAAAPC/AQAAAAEAAABaEgAAAAAAAFoSAAAAAAAAAAAAAAAA8L8"
				],
				[
					3623,
					1,
					"insert",
					{
						"characters": "\npub"
					},
					"BQAAAEIGAAAAAAAAQwYAAAAAAAAAAAAAQwYAAAAAAABHBgAAAAAAAAAAAABHBgAAAAAAAEgGAAAAAAAAAAAAAEgGAAAAAAAASQYAAAAAAAAAAAAASQYAAAAAAABKBgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA1xIAAAAAAADXEgAAAAAAAAAAAAAAAPC/AQAAAAEAAABCBgAAAAAAAEIGAAAAAAAA////////738"
				],
				[
					3624,
					1,
					"insert",
					{
						"characters": " flg"
					},
					"BAAAAEoGAAAAAAAASwYAAAAAAAAAAAAASwYAAAAAAABMBgAAAAAAAAAAAABMBgAAAAAAAE0GAAAAAAAAAAAAAE0GAAAAAAAATgYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA3xIAAAAAAADfEgAAAAAAAAAAAAAAAPC/AQAAAAEAAABKBgAAAAAAAEoGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3625,
					3,
					"left_delete",
					null,
					"AwAAAE0GAAAAAAAATQYAAAAAAAABAAAAZ0wGAAAAAAAATAYAAAAAAAABAAAAbEsGAAAAAAAASwYAAAAAAAABAAAAZg",
					"AgAAAAAAAAABAAAA4xIAAAAAAADjEgAAAAAAAAAAAAAAAPC/AQAAAAEAAABOBgAAAAAAAE4GAAAAAAAAAAAAAAAA8L8"
				],
				[
					3626,
					1,
					"insert",
					{
						"characters": "gl_uniform_matri"
					},
					"EAAAAEsGAAAAAAAATAYAAAAAAAAAAAAATAYAAAAAAABNBgAAAAAAAAAAAABNBgAAAAAAAE4GAAAAAAAAAAAAAE4GAAAAAAAATwYAAAAAAAAAAAAATwYAAAAAAABQBgAAAAAAAAAAAABQBgAAAAAAAFEGAAAAAAAAAAAAAFEGAAAAAAAAUgYAAAAAAAAAAAAAUgYAAAAAAABTBgAAAAAAAAAAAABTBgAAAAAAAFQGAAAAAAAAAAAAAFQGAAAAAAAAVQYAAAAAAAAAAAAAVQYAAAAAAABWBgAAAAAAAAAAAABWBgAAAAAAAFcGAAAAAAAAAAAAAFcGAAAAAAAAWAYAAAAAAAAAAAAAWAYAAAAAAABZBgAAAAAAAAAAAABZBgAAAAAAAFoGAAAAAAAAAAAAAFoGAAAAAAAAWwYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA4BIAAAAAAADgEgAAAAAAAAAAAAAAAPC/AQAAAAEAAABLBgAAAAAAAEsGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3627,
					1,
					"insert",
					{
						"characters": "x_4fv"
					},
					"BQAAAFsGAAAAAAAAXAYAAAAAAAAAAAAAXAYAAAAAAABdBgAAAAAAAAAAAABdBgAAAAAAAF4GAAAAAAAAAAAAAF4GAAAAAAAAXwYAAAAAAAAAAAAAXwYAAAAAAABgBgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA8BIAAAAAAADwEgAAAAAAAAAAAAAAAPC/AQAAAAEAAABbBgAAAAAAAFsGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3628,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAGAGAAAAAAAAYgYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA9RIAAAAAAAD1EgAAAAAAAAAAAAAAAPC/AQAAAAEAAABgBgAAAAAAAGAGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3629,
					1,
					"insert",
					{
						"characters": "i32,"
					},
					"BAAAAGEGAAAAAAAAYgYAAAAAAAAAAAAAYgYAAAAAAABjBgAAAAAAAAAAAABjBgAAAAAAAGQGAAAAAAAAAAAAAGQGAAAAAAAAZQYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA9xIAAAAAAAD3EgAAAAAAAAAAAAAAAPC/AQAAAAEAAABhBgAAAAAAAGEGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3630,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAGUGAAAAAAAAZgYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA+xIAAAAAAAD7EgAAAAAAAAAAAAAAAPC/AQAAAAEAAABlBgAAAAAAAGUGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3631,
					1,
					"insert",
					{
						"characters": "i32,"
					},
					"BAAAAGYGAAAAAAAAZwYAAAAAAAAAAAAAZwYAAAAAAABoBgAAAAAAAAAAAABoBgAAAAAAAGkGAAAAAAAAAAAAAGkGAAAAAAAAagYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA/BIAAAAAAAD8EgAAAAAAAAAAAAAAAPC/AQAAAAEAAABmBgAAAAAAAGYGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3632,
					1,
					"insert",
					{
						"characters": " bool,"
					},
					"BgAAAGoGAAAAAAAAawYAAAAAAAAAAAAAawYAAAAAAABsBgAAAAAAAAAAAABsBgAAAAAAAG0GAAAAAAAAAAAAAG0GAAAAAAAAbgYAAAAAAAAAAAAAbgYAAAAAAABvBgAAAAAAAAAAAABvBgAAAAAAAHAGAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAABMAAAAAAAAAEwAAAAAAAAAAAAAAAPC/AQAAAAEAAABqBgAAAAAAAGoGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3633,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHAGAAAAAAAAcQYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAABhMAAAAAAAAGEwAAAAAAAAAAAAAAAPC/AQAAAAEAAABwBgAAAAAAAHAGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3634,
					1,
					"insert",
					{
						"characters": "m44"
					},
					"AwAAAHEGAAAAAAAAcgYAAAAAAAAAAAAAcgYAAAAAAABzBgAAAAAAAAAAAABzBgAAAAAAAHQGAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAABxMAAAAAAAAHEwAAAAAAAAAAAAAAAPC/AQAAAAEAAABxBgAAAAAAAHEGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3635,
					3,
					"left_delete",
					null,
					"AwAAAHMGAAAAAAAAcwYAAAAAAAABAAAANHIGAAAAAAAAcgYAAAAAAAABAAAANHEGAAAAAAAAcQYAAAAAAAABAAAAbQ",
					"AgAAAAAAAAABAAAAChMAAAAAAAAKEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAB0BgAAAAAAAHQGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3636,
					1,
					"insert",
					{
						"characters": "M44"
					},
					"AwAAAHEGAAAAAAAAcgYAAAAAAAAAAAAAcgYAAAAAAABzBgAAAAAAAAAAAABzBgAAAAAAAHQGAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAABxMAAAAAAAAHEwAAAAAAAAAAAAAAAPC/AQAAAAEAAABxBgAAAAAAAHEGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3641,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAHUGAAAAAAAAdgYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAChMAAAAAAAAKEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAB1BgAAAAAAAHUGAAAAAAAA////////738"
				],
				[
					3645,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAGAGAAAAAAAAYQYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAACxMAAAAAAAALEwAAAAAAAAAAAAAAAPC/AQAAAAEAAABgBgAAAAAAAGAGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3646,
					1,
					"insert",
					{
						"characters": " fn"
					},
					"AwAAAGEGAAAAAAAAYgYAAAAAAAAAAAAAYgYAAAAAAABjBgAAAAAAAAAAAABjBgAAAAAAAGQGAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAADBMAAAAAAAAMEwAAAAAAAAAAAAAAAPC/AQAAAAEAAABhBgAAAAAAAGEGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3656,
					1,
					"cut",
					null,
					"AQAAAHMBAAAAAAAAcwEAAAAAAABFAAAALy8gdXNlIGdlbmdhcl9lbmdpbmU6OmVuZ2luZTo6cmVuZGVyOjpyZW5kZXJfY29tbWFuZDo6UmVuZGVyQ29tbWFuZDsK",
					"AgAAAAAAAAABAAAADxMAAAAAAAAPEwAAAAAAAAAAAAAAAPC/AQAAAAEAAABzAQAAAAAAAHMBAAAAAAAAAAAAAAAAAAA"
				],
				[
					3661,
					1,
					"insert",
					{
						"characters": "\nuse"
					},
					"BAAAABQCAAAAAAAAFQIAAAAAAAAAAAAAFQIAAAAAAAAWAgAAAAAAAAAAAAAWAgAAAAAAABcCAAAAAAAAAAAAABcCAAAAAAAAGAIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAyhIAAAAAAADKEgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAUAgAAAAAAABQCAAAAAAAA////////738"
				],
				[
					3662,
					1,
					"insert",
					{
						"characters": " gengar_engine::"
					},
					"EAAAABgCAAAAAAAAGQIAAAAAAAAAAAAAGQIAAAAAAAAaAgAAAAAAAAAAAAAaAgAAAAAAABsCAAAAAAAAAAAAABsCAAAAAAAAHAIAAAAAAAAAAAAAHAIAAAAAAAAdAgAAAAAAAAAAAAAdAgAAAAAAAB4CAAAAAAAAAAAAAB4CAAAAAAAAHwIAAAAAAAAAAAAAHwIAAAAAAAAgAgAAAAAAAAAAAAAgAgAAAAAAACECAAAAAAAAAAAAACECAAAAAAAAIgIAAAAAAAAAAAAAIgIAAAAAAAAjAgAAAAAAAAAAAAAjAgAAAAAAACQCAAAAAAAAAAAAACQCAAAAAAAAJQIAAAAAAAAAAAAAJQIAAAAAAAAmAgAAAAAAAAAAAAAmAgAAAAAAACcCAAAAAAAAAAAAACcCAAAAAAAAKAIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAzhIAAAAAAADOEgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAYAgAAAAAAABgCAAAAAAAAAAAAAAAA8L8"
				],
				[
					3663,
					1,
					"insert",
					{
						"characters": "engine::re"
					},
					"CgAAACgCAAAAAAAAKQIAAAAAAAAAAAAAKQIAAAAAAAAqAgAAAAAAAAAAAAAqAgAAAAAAACsCAAAAAAAAAAAAACsCAAAAAAAALAIAAAAAAAAAAAAALAIAAAAAAAAtAgAAAAAAAAAAAAAtAgAAAAAAAC4CAAAAAAAAAAAAAC4CAAAAAAAALwIAAAAAAAAAAAAALwIAAAAAAAAwAgAAAAAAAAAAAAAwAgAAAAAAADECAAAAAAAAAAAAADECAAAAAAAAMgIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA3hIAAAAAAADeEgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAoAgAAAAAAACgCAAAAAAAAAAAAAAAA8L8"
				],
				[
					3664,
					2,
					"left_delete",
					null,
					"AgAAADECAAAAAAAAMQIAAAAAAAABAAAAZTACAAAAAAAAMAIAAAAAAAABAAAAcg",
					"AgAAAAAAAAABAAAA6BIAAAAAAADoEgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAyAgAAAAAAADICAAAAAAAAAAAAAAAA8L8"
				],
				[
					3665,
					1,
					"insert",
					{
						"characters": "matricies::*;"
					},
					"DQAAADACAAAAAAAAMQIAAAAAAAAAAAAAMQIAAAAAAAAyAgAAAAAAAAAAAAAyAgAAAAAAADMCAAAAAAAAAAAAADMCAAAAAAAANAIAAAAAAAAAAAAANAIAAAAAAAA1AgAAAAAAAAAAAAA1AgAAAAAAADYCAAAAAAAAAAAAADYCAAAAAAAANwIAAAAAAAAAAAAANwIAAAAAAAA4AgAAAAAAAAAAAAA4AgAAAAAAADkCAAAAAAAAAAAAADkCAAAAAAAAOgIAAAAAAAAAAAAAOgIAAAAAAAA7AgAAAAAAAAAAAAA7AgAAAAAAADwCAAAAAAAAAAAAADwCAAAAAAAAPQIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA5hIAAAAAAADmEgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAwAgAAAAAAADACAAAAAAAAAAAAAAAA8L8"
				],
				[
					3666,
					2,
					"rust_fmt_format_buffer",
					null,
					"AwAAAI4BAAAAAAAAtwEAAAAAAAAAAAAADwIAAAAAAAAPAgAAAAAAAAAAAAA8AgAAAAAAADwCAAAAAAAAKQAAADsKdXNlIGdlbmdhcl9lbmdpbmU6OmVuZ2luZTo6bWF0cmljaWVzOjoq",
					"AgAAAAAAAAABAAAA8xIAAAAAAADzEgAAAAAAAAAAAAAAAPC/AQAAAAEAAAA9AgAAAAAAAD0CAAAAAAAAAAAAAAAA8L8"
				],
				[
					3670,
					1,
					"left_delete",
					null,
					"AQAAAJkBAAAAAAAAmQEAAAAAAAABAAAAKg",
					"AgAAAAAAAAABAAAA8xIAAAAAAADzEgAAAAAAAAAAAAAAAPC/AQAAAAEAAACaAQAAAAAAAJoBAAAAAAAAAAAAAAAA8L8"
				],
				[
					3671,
					1,
					"insert",
					{
						"characters": "matrix_four"
					},
					"CwAAAJkBAAAAAAAAmgEAAAAAAAAAAAAAmgEAAAAAAACbAQAAAAAAAAAAAACbAQAAAAAAAJwBAAAAAAAAAAAAAJwBAAAAAAAAnQEAAAAAAAAAAAAAnQEAAAAAAACeAQAAAAAAAAAAAACeAQAAAAAAAJ8BAAAAAAAAAAAAAJ8BAAAAAAAAoAEAAAAAAAAAAAAAoAEAAAAAAAChAQAAAAAAAAAAAAChAQAAAAAAAKIBAAAAAAAAAAAAAKIBAAAAAAAAowEAAAAAAAAAAAAAowEAAAAAAACkAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA8hIAAAAAAADyEgAAAAAAAAAAAAAAAPC/AQAAAAEAAACZAQAAAAAAAJkBAAAAAAAAAAAAAAAA8L8"
				],
				[
					3672,
					1,
					"insert",
					{
						"characters": "_four::*"
					},
					"CAAAAKQBAAAAAAAApQEAAAAAAAAAAAAApQEAAAAAAACmAQAAAAAAAAAAAACmAQAAAAAAAKcBAAAAAAAAAAAAAKcBAAAAAAAAqAEAAAAAAAAAAAAAqAEAAAAAAACpAQAAAAAAAAAAAACpAQAAAAAAAKoBAAAAAAAAAAAAAKoBAAAAAAAAqwEAAAAAAAAAAAAAqwEAAAAAAACsAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA/RIAAAAAAAD9EgAAAAAAAAAAAAAAAPC/AQAAAAEAAACkAQAAAAAAAKQBAAAAAAAAAAAAAAAA8L8"
				],
				[
					3718,
					1,
					"insert",
					{
						"characters": "\nmatch"
					},
					"BwAAAPkSAAAAAAAA+hIAAAAAAAAAAAAA+hIAAAAAAAAGEwAAAAAAAAAAAAAGEwAAAAAAAAcTAAAAAAAAAAAAAAcTAAAAAAAACBMAAAAAAAAAAAAACBMAAAAAAAAJEwAAAAAAAAAAAAAJEwAAAAAAAAoTAAAAAAAAAAAAAAoTAAAAAAAACxMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAABRMAAAAAAAAFEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAD5EgAAAAAAAPkSAAAAAAAA////////738"
				],
				[
					3719,
					1,
					"insert",
					{
						"characters": " value"
					},
					"BgAAAAsTAAAAAAAADBMAAAAAAAAAAAAADBMAAAAAAAANEwAAAAAAAAAAAAANEwAAAAAAAA4TAAAAAAAAAAAAAA4TAAAAAAAADxMAAAAAAAAAAAAADxMAAAAAAAAQEwAAAAAAAAAAAAAQEwAAAAAAABETAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAFxMAAAAAAAAXEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAALEwAAAAAAAAsTAAAAAAAAAAAAAAAA8L8"
				],
				[
					3720,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABETAAAAAAAAEhMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAHRMAAAAAAAAdEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAREwAAAAAAABETAAAAAAAAAAAAAAAA8L8"
				],
				[
					3721,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAABITAAAAAAAAFBMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAHhMAAAAAAAAeEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAASEwAAAAAAABITAAAAAAAAAAAAAAAA8L8"
				],
				[
					3722,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAABMTAAAAAAAAFBMAAAAAAAAAAAAAFBMAAAAAAAAgEwAAAAAAAAAAAAAgEwAAAAAAACETAAAAAAAAAAAAACETAAAAAAAALRMAAAAAAAAAAAAAFBMAAAAAAAAUEwAAAAAAAAwAAAAgICAgICAgICAgICAUEwAAAAAAACQTAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAIBMAAAAAAAAgEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAATEwAAAAAAABMTAAAAAAAAAAAAAAAA8L8"
				],
				[
					3723,
					2,
					"rust_fmt_format_buffer",
					null,
					"AQAAABMTAAAAAAAAExMAAAAAAAAeAAAACiAgICAgICAgICAgICAgICAKICAgICAgICAgICAg",
					"AgAAAAAAAAABAAAAPhMAAAAAAAA+EwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAkEwAAAAAAACQTAAAAAAAAAAAAAAAA8L8"
				],
				[
					3724,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAABMTAAAAAAAAFBMAAAAAAAAAAAAAFBMAAAAAAAAgEwAAAAAAAAAAAAAgEwAAAAAAACETAAAAAAAAAAAAACETAAAAAAAALRMAAAAAAAAAAAAAFBMAAAAAAAAUEwAAAAAAAAwAAAAgICAgICAgICAgICAUEwAAAAAAACQTAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAIBMAAAAAAAAgEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAATEwAAAAAAABMTAAAAAAAAAAAAAAAA8L8"
				],
				[
					3725,
					1,
					"insert",
					{
						"characters": "un"
					},
					"AgAAACQTAAAAAAAAJRMAAAAAAAAAAAAAJRMAAAAAAAAmEwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAPhMAAAAAAAA+EwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAkEwAAAAAAACQTAAAAAAAAAAAAAAAA8L8"
				],
				[
					3726,
					2,
					"left_delete",
					null,
					"AgAAACUTAAAAAAAAJRMAAAAAAAABAAAAbiQTAAAAAAAAJBMAAAAAAAABAAAAdQ",
					"AgAAAAAAAAABAAAAQBMAAAAAAABAEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAmEwAAAAAAACYTAAAAAAAAAAAAAAAA8L8"
				],
				[
					3727,
					1,
					"insert",
					{
						"characters": "UniformData::"
					},
					"DQAAACQTAAAAAAAAJRMAAAAAAAAAAAAAJRMAAAAAAAAmEwAAAAAAAAAAAAAmEwAAAAAAACcTAAAAAAAAAAAAACcTAAAAAAAAKBMAAAAAAAAAAAAAKBMAAAAAAAApEwAAAAAAAAAAAAApEwAAAAAAACoTAAAAAAAAAAAAACoTAAAAAAAAKxMAAAAAAAAAAAAAKxMAAAAAAAAsEwAAAAAAAAAAAAAsEwAAAAAAAC0TAAAAAAAAAAAAAC0TAAAAAAAALhMAAAAAAAAAAAAALhMAAAAAAAAvEwAAAAAAAAAAAAAvEwAAAAAAADATAAAAAAAAAAAAADATAAAAAAAAMRMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAPhMAAAAAAAA+EwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAkEwAAAAAAACQTAAAAAAAAAAAAAAAA8L8"
				],
				[
					3728,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAADETAAAAAAAAMxMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAASxMAAAAAAABLEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAxEwAAAAAAADETAAAAAAAAAAAAAAAA8L8"
				],
				[
					3729,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAADETAAAAAAAAMRMAAAAAAAABAAAAKDETAAAAAAAAMRMAAAAAAAABAAAAKQ",
					"AgAAAAAAAAABAAAATRMAAAAAAABNEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAyEwAAAAAAADITAAAAAAAAAAAAAAAA8L8"
				],
				[
					3730,
					1,
					"insert",
					{
						"characters": "M44"
					},
					"AwAAADETAAAAAAAAMhMAAAAAAAAAAAAAMhMAAAAAAAAzEwAAAAAAAAAAAAAzEwAAAAAAADQTAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAASxMAAAAAAABLEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAxEwAAAAAAADETAAAAAAAAAAAAAAAA8L8"
				],
				[
					3731,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAADQTAAAAAAAANhMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAThMAAAAAAABOEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAA0EwAAAAAAADQTAAAAAAAAAAAAAAAA8L8"
				],
				[
					3732,
					1,
					"insert",
					{
						"characters": "mat"
					},
					"AwAAADUTAAAAAAAANhMAAAAAAAAAAAAANhMAAAAAAAA3EwAAAAAAAAAAAAA3EwAAAAAAADgTAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAUBMAAAAAAABQEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAA1EwAAAAAAADUTAAAAAAAAAAAAAAAA8L8"
				],
				[
					3734,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADkTAAAAAAAAOhMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAUxMAAAAAAABTEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAA5EwAAAAAAADkTAAAAAAAAAAAAAAAA8L8"
				],
				[
					3735,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAADoTAAAAAAAAPBMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAVBMAAAAAAABUEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAA6EwAAAAAAADoTAAAAAAAAAAAAAAAA8L8"
				],
				[
					3736,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAADoTAAAAAAAAOhMAAAAAAAABAAAAezoTAAAAAAAAOhMAAAAAAAABAAAAfQ",
					"AgAAAAAAAAABAAAAVhMAAAAAAABWEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAA7EwAAAAAAADsTAAAAAAAAAAAAAAAA8L8"
				],
				[
					3737,
					1,
					"left_delete",
					null,
					"AQAAADkTAAAAAAAAORMAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAVBMAAAAAAABUEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAA6EwAAAAAAADoTAAAAAAAAAAAAAAAA8L8"
				],
				[
					3738,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAADkTAAAAAAAAOhMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAUxMAAAAAAABTEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAA5EwAAAAAAADkTAAAAAAAAAAAAAAAA8L8"
				],
				[
					3739,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADoTAAAAAAAAOxMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAVBMAAAAAAABUEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAA6EwAAAAAAADoTAAAAAAAAAAAAAAAA8L8"
				],
				[
					3740,
					2,
					"left_delete",
					null,
					"AgAAADoTAAAAAAAAOhMAAAAAAAABAAAAIDkTAAAAAAAAORMAAAAAAAABAAAAOg",
					"AgAAAAAAAAABAAAAVRMAAAAAAABVEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAA7EwAAAAAAADsTAAAAAAAAAAAAAAAA8L8"
				],
				[
					3741,
					1,
					"insert",
					{
						"characters": " =>"
					},
					"AwAAADkTAAAAAAAAOhMAAAAAAAAAAAAAOhMAAAAAAAA7EwAAAAAAAAAAAAA7EwAAAAAAADwTAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAUxMAAAAAAABTEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAA5EwAAAAAAADkTAAAAAAAAAAAAAAAA8L8"
				],
				[
					3742,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADwTAAAAAAAAPRMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAVhMAAAAAAABWEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAA8EwAAAAAAADwTAAAAAAAAAAAAAAAA8L8"
				],
				[
					3743,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAD0TAAAAAAAAPxMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAVxMAAAAAAABXEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAA9EwAAAAAAAD0TAAAAAAAAAAAAAAAA8L8"
				],
				[
					3744,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAD4TAAAAAAAAPxMAAAAAAAAAAAAAPxMAAAAAAABPEwAAAAAAAAAAAABPEwAAAAAAAFATAAAAAAAAAAAAAFATAAAAAAAAYBMAAAAAAAAAAAAAPxMAAAAAAAA/EwAAAAAAABAAAAAgICAgICAgICAgICAgICAgPxMAAAAAAABTEwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAWRMAAAAAAABZEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAA+EwAAAAAAAD4TAAAAAAAAAAAAAAAA8L8"
				],
				[
					3745,
					2,
					"rust_fmt_format_buffer",
					null,
					"AQAAAD4TAAAAAAAAPhMAAAAAAAAmAAAACiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA",
					"AgAAAAAAAAABAAAAfxMAAAAAAAB/EwAAAAAAAAAAAAAAAPC/AQAAAAEAAABTEwAAAAAAAFMTAAAAAAAAAAAAAAAA8L8"
				],
				[
					3749,
					1,
					"left_delete",
					null,
					"AQAAAIgSAAAAAAAAiBIAAAAAAAABAAAAXw",
					"AgAAAAAAAAABAAAAWRMAAAAAAABZEwAAAAAAAAAAAAAAAPC/AQAAAAEAAACJEgAAAAAAAIkSAAAAAAAAAAAAAAAA8L8"
				],
				[
					3764,
					1,
					"insert",
					{
						"characters": "\nuser"
					},
					"BQAAAE8CAAAAAAAAUAIAAAAAAAAAAAAAUAIAAAAAAABRAgAAAAAAAAAAAABRAgAAAAAAAFICAAAAAAAAAAAAAFICAAAAAAAAUwIAAAAAAAAAAAAAUwIAAAAAAABUAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAWBMAAAAAAABYEwAAAAAAAAAAAAAAAPC/AQAAAAEAAABPAgAAAAAAAE8CAAAAAAAA////////738"
				],
				[
					3765,
					1,
					"insert",
					{
						"characters": " geng"
					},
					"BQAAAFQCAAAAAAAAVQIAAAAAAAAAAAAAVQIAAAAAAABWAgAAAAAAAAAAAABWAgAAAAAAAFcCAAAAAAAAAAAAAFcCAAAAAAAAWAIAAAAAAAAAAAAAWAIAAAAAAABZAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAXRMAAAAAAABdEwAAAAAAAAAAAAAAAPC/AQAAAAEAAABUAgAAAAAAAFQCAAAAAAAAAAAAAAAA8L8"
				],
				[
					3766,
					6,
					"left_delete",
					null,
					"BgAAAFgCAAAAAAAAWAIAAAAAAAABAAAAZ1cCAAAAAAAAVwIAAAAAAAABAAAAblYCAAAAAAAAVgIAAAAAAAABAAAAZVUCAAAAAAAAVQIAAAAAAAABAAAAZ1QCAAAAAAAAVAIAAAAAAAABAAAAIFMCAAAAAAAAUwIAAAAAAAABAAAAcg",
					"AgAAAAAAAAABAAAAYhMAAAAAAABiEwAAAAAAAAAAAAAAAPC/AQAAAAEAAABZAgAAAAAAAFkCAAAAAAAAAAAAAAAA8L8"
				],
				[
					3767,
					1,
					"insert",
					{
						"characters": " gengar"
					},
					"BwAAAFMCAAAAAAAAVAIAAAAAAAAAAAAAVAIAAAAAAABVAgAAAAAAAAAAAABVAgAAAAAAAFYCAAAAAAAAAAAAAFYCAAAAAAAAVwIAAAAAAAAAAAAAVwIAAAAAAABYAgAAAAAAAAAAAABYAgAAAAAAAFkCAAAAAAAAAAAAAFkCAAAAAAAAWgIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAXBMAAAAAAABcEwAAAAAAAAAAAAAAAPC/AQAAAAEAAABTAgAAAAAAAFMCAAAAAAAAAAAAAAAA8L8"
				],
				[
					3768,
					1,
					"insert_completion",
					{
						"completion": "gengar_engine",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "gengar_engine"
					},
					"AgAAAFQCAAAAAAAAVAIAAAAAAAAGAAAAZ2VuZ2FyVAIAAAAAAABhAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAYxMAAAAAAABjEwAAAAAAAAAAAAAAAPC/AQAAAAEAAABaAgAAAAAAAFoCAAAAAAAAAAAAAAAA8L8"
				],
				[
					3769,
					1,
					"insert",
					{
						"characters": "::engine::rend"
					},
					"DgAAAGECAAAAAAAAYgIAAAAAAAAAAAAAYgIAAAAAAABjAgAAAAAAAAAAAABjAgAAAAAAAGQCAAAAAAAAAAAAAGQCAAAAAAAAZQIAAAAAAAAAAAAAZQIAAAAAAABmAgAAAAAAAAAAAABmAgAAAAAAAGcCAAAAAAAAAAAAAGcCAAAAAAAAaAIAAAAAAAAAAAAAaAIAAAAAAABpAgAAAAAAAAAAAABpAgAAAAAAAGoCAAAAAAAAAAAAAGoCAAAAAAAAawIAAAAAAAAAAAAAawIAAAAAAABsAgAAAAAAAAAAAABsAgAAAAAAAG0CAAAAAAAAAAAAAG0CAAAAAAAAbgIAAAAAAAAAAAAAbgIAAAAAAABvAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAahMAAAAAAABqEwAAAAAAAAAAAAAAAPC/AQAAAAEAAABhAgAAAAAAAGECAAAAAAAAAAAAAAAA8L8"
				],
				[
					3770,
					1,
					"insert",
					{
						"characters": "er::Shader"
					},
					"CgAAAG8CAAAAAAAAcAIAAAAAAAAAAAAAcAIAAAAAAABxAgAAAAAAAAAAAABxAgAAAAAAAHICAAAAAAAAAAAAAHICAAAAAAAAcwIAAAAAAAAAAAAAcwIAAAAAAAB0AgAAAAAAAAAAAAB0AgAAAAAAAHUCAAAAAAAAAAAAAHUCAAAAAAAAdgIAAAAAAAAAAAAAdgIAAAAAAAB3AgAAAAAAAAAAAAB3AgAAAAAAAHgCAAAAAAAAAAAAAHgCAAAAAAAAeQIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAeBMAAAAAAAB4EwAAAAAAAAAAAAAAAPC/AQAAAAEAAABvAgAAAAAAAG8CAAAAAAAAAAAAAAAA8L8"
				],
				[
					3771,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAHkCAAAAAAAAegIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAghMAAAAAAACCEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAB5AgAAAAAAAHkCAAAAAAAAAAAAAAAA8L8"
				],
				[
					3772,
					2,
					"rust_fmt_format_buffer",
					null,
					"AgAAAEoCAAAAAAAASgIAAAAAAAAEAAAAVHlwZXUCAAAAAAAAeQIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAgxMAAAAAAACDEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAB6AgAAAAAAAHoCAAAAAAAAAAAAAAAA8L8"
				],
				[
					3778,
					1,
					"insert",
					{
						"characters": "shader::"
					},
					"CAAAAEQCAAAAAAAARQIAAAAAAAAAAAAARQIAAAAAAABGAgAAAAAAAAAAAABGAgAAAAAAAEcCAAAAAAAAAAAAAEcCAAAAAAAASAIAAAAAAAAAAAAASAIAAAAAAABJAgAAAAAAAAAAAABJAgAAAAAAAEoCAAAAAAAAAAAAAEoCAAAAAAAASwIAAAAAAAAAAAAASwIAAAAAAABMAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAgxMAAAAAAACDEwAAAAAAAAAAAAAAAPC/AQAAAAEAAABEAgAAAAAAAEQCAAAAAAAAAAAAAACAb0A"
				],
				[
					3779,
					1,
					"rust_fmt_format_buffer",
					null,
					"AgAAANEBAAAAAAAABAIAAAAAAAAAAAAAUgIAAAAAAABSAgAAAAAAADMAAAA7CnVzZSBnZW5nYXJfZW5naW5lOjplbmdpbmU6OnJlbmRlcjo6c2hhZGVyOjpTaGFkZXI",
					"AgAAAAAAAAABAAAAixMAAAAAAACLEwAAAAAAAAAAAAAAAPC/AQAAAAEAAABMAgAAAAAAAEwCAAAAAAAAAAAAAAAA8L8"
				],
				[
					3788,
					1,
					"insert",
					{
						"characters": "Uni"
					},
					"BAAAANkBAAAAAAAA2gEAAAAAAAAAAAAA2gEAAAAAAADaAQAAAAAAAAYAAABTaGFkZXLaAQAAAAAAANsBAAAAAAAAAAAAANsBAAAAAAAA3AEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAixMAAAAAAACLEwAAAAAAAAAAAAAAAPC/AQAAAAEAAADfAQAAAAAAANkBAAAAAAAAAAAAAAAA8L8"
				],
				[
					3789,
					3,
					"left_delete",
					null,
					"AwAAANsBAAAAAAAA2wEAAAAAAAABAAAAadoBAAAAAAAA2gEAAAAAAAABAAAAbtkBAAAAAAAA2QEAAAAAAAABAAAAVQ",
					"AgAAAAAAAAABAAAAiBMAAAAAAACIEwAAAAAAAAAAAAAAAPC/AQAAAAEAAADcAQAAAAAAANwBAAAAAAAAAAAAAAAA8L8"
				],
				[
					3790,
					1,
					"insert",
					{
						"characters": "*"
					},
					"AQAAANkBAAAAAAAA2gEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAhRMAAAAAAACFEwAAAAAAAAAAAAAAAPC/AQAAAAEAAADZAQAAAAAAANkBAAAAAAAAAAAAAAAA8L8"
				],
				[
					3797,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAGsTAAAAAAAAbBMAAAAAAAAAAAAAbBMAAAAAAAB8EwAAAAAAAAAAAAB8EwAAAAAAAH0TAAAAAAAAAAAAAH0TAAAAAAAAjRMAAAAAAAAAAAAAbBMAAAAAAABsEwAAAAAAABAAAAAgICAgICAgICAgICAgICAgbBMAAAAAAACAEwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAhhMAAAAAAACGEwAAAAAAAAAAAAAAAPC/AQAAAAEAAABrEwAAAAAAAGsTAAAAAAAAAAAAAAAA8L8"
				],
				[
					3798,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAIATAAAAAAAAghMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAArBMAAAAAAACsEwAAAAAAAAAAAAAAAPC/AQAAAAEAAACAEwAAAAAAAIATAAAAAAAAAAAAAAAA8L8"
				],
				[
					3799,
					1,
					"insert",
					{
						"characters": "render_api"
					},
					"CgAAAIETAAAAAAAAghMAAAAAAAAAAAAAghMAAAAAAACDEwAAAAAAAAAAAACDEwAAAAAAAIQTAAAAAAAAAAAAAIQTAAAAAAAAhRMAAAAAAAAAAAAAhRMAAAAAAACGEwAAAAAAAAAAAACGEwAAAAAAAIcTAAAAAAAAAAAAAIcTAAAAAAAAiBMAAAAAAAAAAAAAiBMAAAAAAACJEwAAAAAAAAAAAACJEwAAAAAAAIoTAAAAAAAAAAAAAIoTAAAAAAAAixMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAArhMAAAAAAACuEwAAAAAAAAAAAAAAAPC/AQAAAAEAAACBEwAAAAAAAIETAAAAAAAAAAAAAAAA8L8"
				],
				[
					3802,
					1,
					"insert",
					{
						"characters": ".gl_"
					},
					"BAAAAIsTAAAAAAAAjBMAAAAAAAAAAAAAjBMAAAAAAACNEwAAAAAAAAAAAACNEwAAAAAAAI4TAAAAAAAAAAAAAI4TAAAAAAAAjxMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAuBMAAAAAAAC4EwAAAAAAAAAAAAAAAPC/AQAAAAEAAACLEwAAAAAAAIsTAAAAAAAAAAAAAAAA8L8"
				],
				[
					3803,
					1,
					"insert",
					{
						"characters": "uniform"
					},
					"BwAAAI8TAAAAAAAAkBMAAAAAAAAAAAAAkBMAAAAAAACREwAAAAAAAAAAAACREwAAAAAAAJITAAAAAAAAAAAAAJITAAAAAAAAkxMAAAAAAAAAAAAAkxMAAAAAAACUEwAAAAAAAAAAAACUEwAAAAAAAJUTAAAAAAAAAAAAAJUTAAAAAAAAlhMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAvBMAAAAAAAC8EwAAAAAAAAAAAAAAAPC/AQAAAAEAAACPEwAAAAAAAI8TAAAAAAAAAAAAAAAA8L8"
				],
				[
					3804,
					1,
					"insert_completion",
					{
						"completion": "gl_uniform_matrix_4fv",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "gl_uniform_matrix_4fv"
					},
					"AgAAAIwTAAAAAAAAjBMAAAAAAAAKAAAAZ2xfdW5pZm9ybYwTAAAAAAAAoRMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAwxMAAAAAAADDEwAAAAAAAAAAAAAAAPC/AQAAAAEAAACWEwAAAAAAAJYTAAAAAAAAAAAAAAAA8L8"
				],
				[
					3805,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAKETAAAAAAAAoxMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAzhMAAAAAAADOEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAChEwAAAAAAAKETAAAAAAAAAAAAAAAA8L8"
				],
				[
					3806,
					1,
					"insert",
					{
						"characters": "loc"
					},
					"AwAAAKITAAAAAAAAoxMAAAAAAAAAAAAAoxMAAAAAAACkEwAAAAAAAAAAAACkEwAAAAAAAKUTAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0BMAAAAAAADQEwAAAAAAAAAAAAAAAPC/AQAAAAEAAACiEwAAAAAAAKITAAAAAAAAAAAAAAAA8L8"
				],
				[
					3811,
					1,
					"left_delete",
					null,
					"AQAAAOQSAAAAAAAA5BIAAAAAAAABAAAAXw",
					"AgAAAAAAAAABAAAA0xMAAAAAAADTEwAAAAAAAAAAAAAAAPC/AQAAAAEAAADlEgAAAAAAAOUSAAAAAAAAAAAAAACAXkA"
				],
				[
					3815,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAKQTAAAAAAAApRMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0hMAAAAAAADSEwAAAAAAAAAAAAAAAPC/AQAAAAEAAACkEwAAAAAAAKQTAAAAAAAAAAAAAAAA8L8"
				],
				[
					3816,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKUTAAAAAAAAphMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0xMAAAAAAADTEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAClEwAAAAAAAKUTAAAAAAAAAAAAAAAA8L8"
				],
				[
					3817,
					1,
					"insert",
					{
						"characters": "1,"
					},
					"AgAAAKYTAAAAAAAApxMAAAAAAAAAAAAApxMAAAAAAACoEwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA1BMAAAAAAADUEwAAAAAAAAAAAAAAAPC/AQAAAAEAAACmEwAAAAAAAKYTAAAAAAAAAAAAAAAA8L8"
				],
				[
					3818,
					1,
					"insert",
					{
						"characters": " false,"
					},
					"BwAAAKgTAAAAAAAAqRMAAAAAAAAAAAAAqRMAAAAAAACqEwAAAAAAAAAAAACqEwAAAAAAAKsTAAAAAAAAAAAAAKsTAAAAAAAArBMAAAAAAAAAAAAArBMAAAAAAACtEwAAAAAAAAAAAACtEwAAAAAAAK4TAAAAAAAAAAAAAK4TAAAAAAAArxMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA1hMAAAAAAADWEwAAAAAAAAAAAAAAAPC/AQAAAAEAAACoEwAAAAAAAKgTAAAAAAAAAAAAAAAA8L8"
				],
				[
					3822,
					6,
					"left_delete",
					null,
					"BgAAAK4TAAAAAAAArhMAAAAAAAABAAAALK0TAAAAAAAArRMAAAAAAAABAAAAZawTAAAAAAAArBMAAAAAAAABAAAAc6sTAAAAAAAAqxMAAAAAAAABAAAAbKoTAAAAAAAAqhMAAAAAAAABAAAAYakTAAAAAAAAqRMAAAAAAAABAAAAZg",
					"AgAAAAAAAAABAAAA3RMAAAAAAADdEwAAAAAAAAAAAAAAAPC/AQAAAAEAAACvEwAAAAAAAK8TAAAAAAAAAAAAAAAA8L8"
				],
				[
					3823,
					1,
					"insert",
					{
						"characters": "GL_FA"
					},
					"BQAAAKkTAAAAAAAAqhMAAAAAAAAAAAAAqhMAAAAAAACrEwAAAAAAAAAAAACrEwAAAAAAAKwTAAAAAAAAAAAAAKwTAAAAAAAArRMAAAAAAAAAAAAArRMAAAAAAACuEwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA1xMAAAAAAADXEwAAAAAAAAAAAAAAAPC/AQAAAAEAAACpEwAAAAAAAKkTAAAAAAAAAAAAAAAA8L8"
				],
				[
					3824,
					5,
					"left_delete",
					null,
					"BQAAAK0TAAAAAAAArRMAAAAAAAABAAAAQawTAAAAAAAArBMAAAAAAAABAAAARqsTAAAAAAAAqxMAAAAAAAABAAAAX6oTAAAAAAAAqhMAAAAAAAABAAAATKkTAAAAAAAAqRMAAAAAAAABAAAARw",
					"AgAAAAAAAAABAAAA3BMAAAAAAADcEwAAAAAAAAAAAAAAAPC/AQAAAAEAAACuEwAAAAAAAK4TAAAAAAAAAAAAAAAA8L8"
				],
				[
					3825,
					1,
					"insert",
					{
						"characters": "false,"
					},
					"BgAAAKkTAAAAAAAAqhMAAAAAAAAAAAAAqhMAAAAAAACrEwAAAAAAAAAAAACrEwAAAAAAAKwTAAAAAAAAAAAAAKwTAAAAAAAArRMAAAAAAAAAAAAArRMAAAAAAACuEwAAAAAAAAAAAACuEwAAAAAAAK8TAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA1xMAAAAAAADXEwAAAAAAAAAAAAAAAPC/AQAAAAEAAACpEwAAAAAAAKkTAAAAAAAAAAAAAAAA8L8"
				],
				[
					3826,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAK8TAAAAAAAAsBMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA3RMAAAAAAADdEwAAAAAAAAAAAAAAAPC/AQAAAAEAAACvEwAAAAAAAK8TAAAAAAAAAAAAAAAA8L8"
				],
				[
					3828,
					1,
					"insert",
					{
						"characters": "value"
					},
					"BQAAALATAAAAAAAAsRMAAAAAAAAAAAAAsRMAAAAAAACyEwAAAAAAAAAAAACyEwAAAAAAALMTAAAAAAAAAAAAALMTAAAAAAAAtBMAAAAAAAAAAAAAtBMAAAAAAAC1EwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA3hMAAAAAAADeEwAAAAAAAAAAAAAAAPC/AQAAAAEAAACwEwAAAAAAALATAAAAAAAAAAAAAAAA8L8"
				],
				[
					3829,
					5,
					"left_delete",
					null,
					"BQAAALQTAAAAAAAAtBMAAAAAAAABAAAAZbMTAAAAAAAAsxMAAAAAAAABAAAAdbITAAAAAAAAshMAAAAAAAABAAAAbLETAAAAAAAAsRMAAAAAAAABAAAAYbATAAAAAAAAsBMAAAAAAAABAAAAdg",
					"AgAAAAAAAAABAAAA4xMAAAAAAADjEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAC1EwAAAAAAALUTAAAAAAAAAAAAAAAA8L8"
				],
				[
					3830,
					1,
					"insert",
					{
						"characters": "mat"
					},
					"AwAAALATAAAAAAAAsRMAAAAAAAAAAAAAsRMAAAAAAACyEwAAAAAAAAAAAACyEwAAAAAAALMTAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA3hMAAAAAAADeEwAAAAAAAAAAAAAAAPC/AQAAAAEAAACwEwAAAAAAALATAAAAAAAAAAAAAAAA8L8"
				],
				[
					3831,
					2,
					"rust_fmt_format_buffer",
					null,
					"AwAAAGkTAAAAAAAAaRMAAAAAAAAWAAAAewogICAgICAgICAgICAgICAgICAgIJ8TAAAAAAAAnxMAAAAAAAASAAAACiAgICAgICAgICAgICAgICB9nxMAAAAAAACgEwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA4RMAAAAAAADhEwAAAAAAAAAAAAAAAPC/AQAAAAEAAACzEwAAAAAAALMTAAAAAAAAAAAAAAAA8L8"
				],
				[
					3835,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAIoTAAAAAAAAixMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAuhMAAAAAAAC6EwAAAAAAAAAAAAAAAPC/AQAAAAEAAACKEwAAAAAAAIoTAAAAAAAAAAAAAAAA8L8"
				],
				[
					3838,
					1,
					"left_delete",
					null,
					"AQAAAJ8TAAAAAAAAnxMAAAAAAAABAAAAKQ",
					"AgAAAAAAAAABAAAAuxMAAAAAAAC7EwAAAAAAAAAAAAAAAPC/AQAAAAEAAACgEwAAAAAAAKATAAAAAAAAAAAAAAAA8L8"
				],
				[
					3842,
					1,
					"insert",
					{
						"characters": "&"
					},
					"AQAAAJsTAAAAAAAAnBMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAuhMAAAAAAAC6EwAAAAAAAAAAAAAAAPC/AQAAAAEAAACbEwAAAAAAAJsTAAAAAAAAAAAAAAAA8L8"
				],
				[
					3845,
					1,
					"left_delete",
					null,
					"AQAAAJsTAAAAAAAAmxMAAAAAAAABAAAAJg",
					"AgAAAAAAAAABAAAAuxMAAAAAAAC7EwAAAAAAAAAAAAAAAPC/AQAAAAEAAACcEwAAAAAAAJwTAAAAAAAAAAAAAAAA8L8"
				],
				[
					3848,
					1,
					"insert",
					{
						"characters": "*"
					},
					"AQAAAJsTAAAAAAAAnBMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAuhMAAAAAAAC6EwAAAAAAAAAAAAAAAPC/AQAAAAEAAACbEwAAAAAAAJsTAAAAAAAAAAAAAAAA8L8"
				],
				[
					3851,
					1,
					"left_delete",
					null,
					"AQAAAJsTAAAAAAAAmxMAAAAAAAABAAAAKg",
					"AgAAAAAAAAABAAAAuxMAAAAAAAC7EwAAAAAAAAAAAAAAAPC/AQAAAAEAAACcEwAAAAAAAJwTAAAAAAAAAAAAAAAA8L8"
				],
				[
					3862,
					1,
					"insert",
					{
						"characters": "&"
					},
					"AQAAAJkGAAAAAAAAmgYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAnhMAAAAAAACeEwAAAAAAAAAAAAAAAPC/AQAAAAEAAACZBgAAAAAAAJkGAAAAAAAAAAAAAAAA8L8"
				],
				[
					3875,
					1,
					"insert",
					{
						"characters": "("
					},
					"AQAAAGoTAAAAAAAAaxMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAnxMAAAAAAACfEwAAAAAAAAAAAAAAAPC/AQAAAAEAAABqEwAAAAAAAGoTAAAAAAAAAAAAAAAA8L8"
				],
				[
					3878,
					1,
					"insert",
					{
						"characters": "}"
					},
					"AQAAAKETAAAAAAAAohMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAoBMAAAAAAACgEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAChEwAAAAAAAKETAAAAAAAAAAAAAAAA8L8"
				],
				[
					3880,
					1,
					"insert",
					{
						"characters": "\nprintln!"
					},
					"DgAAAKETAAAAAAAAohMAAAAAAAAAAAAAohMAAAAAAACyEwAAAAAAAAAAAACiEwAAAAAAAKITAAAAAAAAEAAAACAgICAgICAgICAgICAgICCiEwAAAAAAAK4TAAAAAAAAAAAAAK4TAAAAAAAArxMAAAAAAAAAAAAAohMAAAAAAACiEwAAAAAAAAwAAAAgICAgICAgICAgICCiEwAAAAAAALYTAAAAAAAAAAAAALcTAAAAAAAAuBMAAAAAAAAAAAAAuBMAAAAAAAC5EwAAAAAAAAAAAAC5EwAAAAAAALoTAAAAAAAAAAAAALoTAAAAAAAAuxMAAAAAAAAAAAAAuxMAAAAAAAC8EwAAAAAAAAAAAAC8EwAAAAAAAL0TAAAAAAAAAAAAAL0TAAAAAAAAvhMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAoBMAAAAAAACgEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAChEwAAAAAAAKETAAAAAAAAAAAAAAAA8L8"
				],
				[
					3881,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAL4TAAAAAAAAwBMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAoBMAAAAAAACgEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAC+EwAAAAAAAL4TAAAAAAAAAAAAAAAA8L8"
				],
				[
					3882,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAL8TAAAAAAAAwRMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAoBMAAAAAAACgEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAC/EwAAAAAAAL8TAAAAAAAAAAAAAAAA8L8"
				],
				[
					3883,
					1,
					"insert",
					{
						"characters": "heyo!"
					},
					"BQAAAMATAAAAAAAAwRMAAAAAAAAAAAAAwRMAAAAAAADCEwAAAAAAAAAAAADCEwAAAAAAAMMTAAAAAAAAAAAAAMMTAAAAAAAAxBMAAAAAAAAAAAAAxBMAAAAAAADFEwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAoBMAAAAAAACgEwAAAAAAAAAAAAAAAPC/AQAAAAEAAADAEwAAAAAAAMATAAAAAAAAAAAAAAAA8L8"
				],
				[
					3888,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAKETAAAAAAAAohMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAoBMAAAAAAACgEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAChEwAAAAAAAKETAAAAAAAA////////738"
				],
				[
					3894,
					1,
					"left_delete",
					null,
					"AQAAAGoTAAAAAAAAahMAAAAAAAABAAAAKA",
					"AgAAAAAAAAABAAAAoBMAAAAAAACgEwAAAAAAAAAAAAAAAPC/AQAAAAEAAABrEwAAAAAAAGsTAAAAAAAAAAAAAAAA8L8"
				],
				[
					3895,
					1,
					"insert",
					{
						"characters": "{"
					},
					"AQAAAGoTAAAAAAAAaxMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAnxMAAAAAAACfEwAAAAAAAAAAAAAAAPC/AQAAAAEAAABqEwAAAAAAAGoTAAAAAAAAAAAAAAAA8L8"
				],
				[
					3896,
					2,
					"rust_fmt_format_buffer",
					null,
					"AwAAAGsTAAAAAAAAgBMAAAAAAAAAAAAA3RMAAAAAAADuEwAAAAAAAAAAAADvEwAAAAAAAO8TAAAAAAAAAQAAACw",
					"AgAAAAAAAAABAAAAoBMAAAAAAACgEwAAAAAAAAAAAAAAAPC/AQAAAAEAAABrEwAAAAAAAGsTAAAAAAAAAAAAAAAA8L8"
				],
				[
					3899,
					1,
					"cut",
					null,
					"AQAAALgTAAAAAAAAuBMAAAAAAAAmAAAAICAgICAgICAgICAgICAgICAgICBwcmludGxuISgiaGV5byEiKQo",
					"AgAAAAAAAAABAAAAtRMAAAAAAAC1EwAAAAAAAAAAAAAAAPC/AQAAAAEAAADdEwAAAAAAAN0TAAAAAAAAAAAAAAAA8L8"
				],
				[
					3904,
					1,
					"cut",
					null,
					"AQAAALgTAAAAAAAAuBMAAAAAAAASAAAAICAgICAgICAgICAgICAgIH0K",
					"AgAAAAAAAAABAAAAtRMAAAAAAAC1EwAAAAAAAAAAAAAAAPC/AQAAAAEAAAC4EwAAAAAAALgTAAAAAAAAAAAAAAAA8L8"
				],
				[
					3907,
					1,
					"left_delete",
					null,
					"AQAAAGoTAAAAAAAAahMAAAAAAAABAAAAew",
					"AgAAAAAAAAABAAAAtRMAAAAAAAC1EwAAAAAAAAAAAAAAAPC/AQAAAAEAAABrEwAAAAAAAGsTAAAAAAAA////////738"
				],
				[
					3910,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAALYTAAAAAAAAtxMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAtBMAAAAAAAC0EwAAAAAAAAAAAAAAAPC/AQAAAAEAAAC2EwAAAAAAALYTAAAAAAAA////////738"
				],
				[
					3911,
					2,
					"left_delete",
					null,
					"AgAAALYTAAAAAAAAthMAAAAAAAABAAAALLUTAAAAAAAAtRMAAAAAAAABAAAAOw",
					"AgAAAAAAAAABAAAAtBMAAAAAAAC0EwAAAAAAAAAAAAAAAPC/AQAAAAEAAAC3EwAAAAAAALcTAAAAAAAAAAAAAAAA8L8"
				],
				[
					3912,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAALUTAAAAAAAAthMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAtBMAAAAAAAC0EwAAAAAAAAAAAAAAAPC/AQAAAAEAAAC1EwAAAAAAALUTAAAAAAAAAAAAAAAA8L8"
				],
				[
					3913,
					2,
					"rust_fmt_format_buffer",
					null,
					"AQAAAGoTAAAAAAAAahMAAAAAAAAVAAAACiAgICAgICAgICAgICAgICAgICAg",
					"AgAAAAAAAAABAAAAtBMAAAAAAAC0EwAAAAAAAAAAAAAAAPC/AQAAAAEAAAC2EwAAAAAAALYTAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "gengar_engine/src/engine/render.rs",
			"settings":
			{
				"buffer_size": 589,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					45,
					1,
					"insert",
					{
						"characters": " ,En"
					},
					"BAAAAI8AAAAAAAAAkAAAAAAAAAAAAAAAkAAAAAAAAACRAAAAAAAAAAAAAACRAAAAAAAAAJIAAAAAAAAAAAAAAJIAAAAAAAAAkwAAAAAAAAAAAAAA",
					"FAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAgAAAAAAAAACAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAACPAAAAAAAAAI8AAAAAAAAAAAAAAAAA8L8"
				],
				[
					46,
					4,
					"left_delete",
					null,
					"BAAAAJIAAAAAAAAAkgAAAAAAAAABAAAAbpEAAAAAAAAAkQAAAAAAAAABAAAARZAAAAAAAAAAkAAAAAAAAAABAAAALI8AAAAAAAAAjwAAAAAAAAABAAAAIA",
					"FAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAgAAAAAAAAACAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAACTAAAAAAAAAJMAAAAAAAAAAAAAAAAA8L8"
				],
				[
					47,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAI8AAAAAAAAAkAAAAAAAAAAAAAAA",
					"FAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAgAAAAAAAAACAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAACPAAAAAAAAAI8AAAAAAAAAAAAAAAAA8L8"
				],
				[
					48,
					1,
					"insert",
					{
						"characters": " Error>"
					},
					"BwAAAJAAAAAAAAAAkQAAAAAAAAAAAAAAkQAAAAAAAACSAAAAAAAAAAAAAACSAAAAAAAAAJMAAAAAAAAAAAAAAJMAAAAAAAAAlAAAAAAAAAAAAAAAlAAAAAAAAACVAAAAAAAAAAAAAACVAAAAAAAAAJYAAAAAAAAAAAAAAJYAAAAAAAAAlwAAAAAAAAAAAAAA",
					"FAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAgAAAAAAAAACAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAACQAAAAAAAAAJAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					52,
					1,
					"insert",
					{
						"characters": "super::"
					},
					"BwAAAJEAAAAAAAAAkgAAAAAAAAAAAAAAkgAAAAAAAACTAAAAAAAAAAAAAACTAAAAAAAAAJQAAAAAAAAAAAAAAJQAAAAAAAAAlQAAAAAAAAAAAAAAlQAAAAAAAACWAAAAAAAAAAAAAACWAAAAAAAAAJcAAAAAAAAAAAAAAJcAAAAAAAAAmAAAAAAAAAAAAAAA",
					"FAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAgAAAAAAAAACAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAACRAAAAAAAAAJEAAAAAAAAAAAAAAAAA8L8"
				],
				[
					53,
					2,
					"rust_fmt_format_buffer",
					null,
					"BAAAAFUAAAAAAAAAXgAAAAAAAAAAAAAAZAAAAAAAAABsAAAAAAAAAAAAAAB/AAAAAAAAAIcAAAAAAAAAAAAAAJkAAAAAAAAAnwAAAAAAAAAAAAAA",
					"FAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAgAAAAAAAAACAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAAAAAAAAAJgAAAAAAAAAAAAAAAAA8L8"
				],
				[
					54,
					1,
					"left_delete",
					null,
					"AQAAALYAAAAAAAAAtgAAAAAAAAABAAAAOg",
					"FAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAnwAAAAAAAACfAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAC3AAAAAAAAALcAAAAAAAAAAAAAAAAA8L8"
				],
				[
					55,
					6,
					"left_delete",
					null,
					"BgAAALUAAAAAAAAAtQAAAAAAAAABAAAAOrQAAAAAAAAAtAAAAAAAAAABAAAAcrMAAAAAAAAAswAAAAAAAAABAAAAZbIAAAAAAAAAsgAAAAAAAAABAAAAcLEAAAAAAAAAsQAAAAAAAAABAAAAdbAAAAAAAAAAsAAAAAAAAAABAAAAcw",
					"FAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAnwAAAAAAAACfAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAC2AAAAAAAAALYAAAAAAAAAAAAAAAAA8L8"
				],
				[
					56,
					2,
					"rust_fmt_format_buffer",
					null,
					"BAAAAFUAAAAAAAAAVQAAAAAAAAAJAAAACiAgICAgICAgWwAAAAAAAABbAAAAAAAAAAgAAAAKICAgICAgIG4AAAAAAAAAbgAAAAAAAAAIAAAACiAgICAgICCAAAAAAAAAAIAAAAAAAAAABgAAACwKICAgIA",
					"FAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAnwAAAAAAAACfAAAAAAAAAAAAAAAAAPC/AQAAAAEAAACwAAAAAAAAALAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					61,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAACAAAAAAAAAAAAAAA",
					"FAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAgAAAAAAAAACAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
				],
				[
					63,
					1,
					"insert",
					{
						"characters": "user"
					},
					"BAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAACAAAAAAAAAAAAAAACAAAAAAAAAAMAAAAAAAAAAAAAAAMAAAAAAAAABAAAAAAAAAAAAAAA",
					"FAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAggAAAAAAAACCAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
				],
				[
					64,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAQAAAAAAAAABQAAAAAAAAAAAAAA",
					"FAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAhgAAAAAAAACGAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAEAAAAAAAAAAQAAAAAAAAAAAAAAAAA8L8"
				],
				[
					65,
					2,
					"left_delete",
					null,
					"AgAAAAQAAAAAAAAABAAAAAAAAAABAAAAIAMAAAAAAAAAAwAAAAAAAAABAAAAcg",
					"FAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAhwAAAAAAAACHAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAFAAAAAAAAAAUAAAAAAAAAAAAAAAAA8L8"
				],
				[
					66,
					1,
					"insert",
					{
						"characters": " suuper::"
					},
					"CQAAAAMAAAAAAAAABAAAAAAAAAAAAAAABAAAAAAAAAAFAAAAAAAAAAAAAAAFAAAAAAAAAAYAAAAAAAAAAAAAAAYAAAAAAAAABwAAAAAAAAAAAAAABwAAAAAAAAAIAAAAAAAAAAAAAAAIAAAAAAAAAAkAAAAAAAAAAAAAAAkAAAAAAAAACgAAAAAAAAAAAAAACgAAAAAAAAALAAAAAAAAAAAAAAALAAAAAAAAAAwAAAAAAAAAAAAAAA",
					"FAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAhQAAAAAAAACFAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAADAAAAAAAAAAMAAAAAAAAAAAAAAAAA8L8"
				],
				[
					67,
					3,
					"left_delete",
					null,
					"AwAAAAsAAAAAAAAACwAAAAAAAAABAAAAOgoAAAAAAAAACgAAAAAAAAABAAAAOgkAAAAAAAAACQAAAAAAAAABAAAAcg",
					"FAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAjgAAAAAAAACOAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAMAAAAAAAAAAwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					69,
					1,
					"insert",
					{
						"characters": "crate:;"
					},
					"CAAAAAQAAAAAAAAABQAAAAAAAAAAAAAABQAAAAAAAAAFAAAAAAAAAAUAAABzdXVwZQUAAAAAAAAABgAAAAAAAAAAAAAABgAAAAAAAAAHAAAAAAAAAAAAAAAHAAAAAAAAAAgAAAAAAAAAAAAAAAgAAAAAAAAACQAAAAAAAAAAAAAACQAAAAAAAAAKAAAAAAAAAAAAAAAKAAAAAAAAAAsAAAAAAAAAAAAAAA",
					"FAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAiwAAAAAAAACLAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAJAAAAAAAAAAQAAAAAAAAAAAAAAAAA8L8"
				],
				[
					70,
					1,
					"left_delete",
					null,
					"AQAAAAoAAAAAAAAACgAAAAAAAAABAAAAOw",
					"FAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAjQAAAAAAAACNAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAALAAAAAAAAAAsAAAAAAAAAAAAAAAAA8L8"
				],
				[
					71,
					1,
					"insert",
					{
						"characters": ":er"
					},
					"AwAAAAoAAAAAAAAACwAAAAAAAAAAAAAACwAAAAAAAAAMAAAAAAAAAAAAAAAMAAAAAAAAAA0AAAAAAAAAAAAAAA",
					"FAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAjAAAAAAAAACMAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAKAAAAAAAAAAoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					72,
					2,
					"left_delete",
					null,
					"AgAAAAwAAAAAAAAADAAAAAAAAAABAAAAcgsAAAAAAAAACwAAAAAAAAABAAAAZQ",
					"FAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAjwAAAAAAAACPAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAANAAAAAAAAAA0AAAAAAAAAAAAAAAAA8L8"
				],
				[
					74,
					1,
					"insert",
					{
						"characters": "engine::Error;"
					},
					"DgAAAAsAAAAAAAAADAAAAAAAAAAAAAAADAAAAAAAAAANAAAAAAAAAAAAAAANAAAAAAAAAA4AAAAAAAAAAAAAAA4AAAAAAAAADwAAAAAAAAAAAAAADwAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAABEAAAAAAAAAAAAAABEAAAAAAAAAEgAAAAAAAAAAAAAAEgAAAAAAAAATAAAAAAAAAAAAAAATAAAAAAAAABQAAAAAAAAAAAAAABQAAAAAAAAAFQAAAAAAAAAAAAAAFQAAAAAAAAAWAAAAAAAAAAAAAAAWAAAAAAAAABcAAAAAAAAAAAAAABcAAAAAAAAAGAAAAAAAAAAAAAAAGAAAAAAAAAAZAAAAAAAAAAAAAAA",
					"FAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAjQAAAAAAAACNAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAALAAAAAAAAAAsAAAAAAAAAAAAAAAAA8L8"
				],
				[
					79,
					1,
					"insert",
					{
						"characters": "er"
					},
					"AwAAABcAAAAAAAAAGAAAAAAAAAAAAAAAGAAAAAAAAAAYAAAAAAAAAAEAAAByGAAAAAAAAAAZAAAAAAAAAAAAAAA",
					"FAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAmwAAAAAAAACbAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAYAAAAAAAAABcAAAAAAAAAAAAAAAAA8L8"
				],
				[
					81,
					1,
					"insert",
					{
						"characters": "error::*"
					},
					"CQAAABMAAAAAAAAAFAAAAAAAAAAAAAAAFAAAAAAAAAAUAAAAAAAAAAYAAABFcnJvZXIUAAAAAAAAABUAAAAAAAAAAAAAABUAAAAAAAAAFgAAAAAAAAAAAAAAFgAAAAAAAAAXAAAAAAAAAAAAAAAXAAAAAAAAABgAAAAAAAAAAAAAABgAAAAAAAAAGQAAAAAAAAAAAAAAGQAAAAAAAAAaAAAAAAAAAAAAAAAaAAAAAAAAABsAAAAAAAAAAAAAAA",
					"FAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAnAAAAAAAAACcAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAZAAAAAAAAABMAAAAAAAAAAAAAAAAA8L8"
				],
				[
					90,
					1,
					"insert",
					{
						"characters": "\ngn"
					},
					"BAAAALYAAAAAAAAAtwAAAAAAAAAAAAAAtwAAAAAAAAC7AAAAAAAAAAAAAAC7AAAAAAAAALwAAAAAAAAAAAAAALwAAAAAAAAAvQAAAAAAAAAAAAAA",
					"FAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAngAAAAAAAACeAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAC2AAAAAAAAALYAAAAAAAAA////////738"
				],
				[
					91,
					2,
					"left_delete",
					null,
					"AgAAALwAAAAAAAAAvAAAAAAAAAABAAAAbrsAAAAAAAAAuwAAAAAAAAABAAAAZw",
					"FAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAngAAAAAAAACeAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAC9AAAAAAAAAL0AAAAAAAAAAAAAAAAA8L8"
				],
				[
					92,
					1,
					"insert",
					{
						"characters": "fn"
					},
					"AgAAALsAAAAAAAAAvAAAAAAAAAAAAAAAvAAAAAAAAAC9AAAAAAAAAAAAAAA",
					"FAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAngAAAAAAAACeAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAC7AAAAAAAAALsAAAAAAAAAAAAAAAAA8L8"
				],
				[
					93,
					1,
					"insert",
					{
						"characters": " gener"
					},
					"BgAAAL0AAAAAAAAAvgAAAAAAAAAAAAAAvgAAAAAAAAC/AAAAAAAAAAAAAAC/AAAAAAAAAMAAAAAAAAAAAAAAAMAAAAAAAAAAwQAAAAAAAAAAAAAAwQAAAAAAAADCAAAAAAAAAAAAAADCAAAAAAAAAMMAAAAAAAAAAAAAAA",
					"FAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAngAAAAAAAACeAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAC9AAAAAAAAAL0AAAAAAAAAAAAAAAAA8L8"
				],
				[
					94,
					2,
					"left_delete",
					null,
					"AgAAAMIAAAAAAAAAwgAAAAAAAAABAAAAcsEAAAAAAAAAwQAAAAAAAAABAAAAZQ",
					"FAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAngAAAAAAAACeAAAAAAAAAAAAAAAAAPC/AQAAAAEAAADDAAAAAAAAAMMAAAAAAAAAAAAAAAAA8L8"
				],
				[
					95,
					1,
					"insert",
					{
						"characters": "_vao"
					},
					"BAAAAMEAAAAAAAAAwgAAAAAAAAAAAAAAwgAAAAAAAADDAAAAAAAAAAAAAADDAAAAAAAAAMQAAAAAAAAAAAAAAMQAAAAAAAAAxQAAAAAAAAAAAAAA",
					"FAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAngAAAAAAAACeAAAAAAAAAAAAAAAAAPC/AQAAAAEAAADBAAAAAAAAAMEAAAAAAAAAAAAAAAAA8L8"
				],
				[
					99,
					1,
					"insert",
					{
						"characters": "create_vao"
					},
					"CwAAAL4AAAAAAAAAvwAAAAAAAAAAAAAAvwAAAAAAAAC/AAAAAAAAAAcAAABnZW5fdmFvvwAAAAAAAADAAAAAAAAAAAAAAADAAAAAAAAAAMEAAAAAAAAAAAAAAMEAAAAAAAAAwgAAAAAAAAAAAAAAwgAAAAAAAADDAAAAAAAAAAAAAADDAAAAAAAAAMQAAAAAAAAAAAAAAMQAAAAAAAAAxQAAAAAAAAAAAAAAxQAAAAAAAADGAAAAAAAAAAAAAADGAAAAAAAAAMcAAAAAAAAAAAAAAMcAAAAAAAAAyAAAAAAAAAAAAAAA",
					"FAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAngAAAAAAAACeAAAAAAAAAAAAAAAAAPC/AQAAAAEAAADFAAAAAAAAAL4AAAAAAAAAAAAAAAAA8L8"
				],
				[
					100,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAMgAAAAAAAAAygAAAAAAAAAAAAAA",
					"FAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAngAAAAAAAACeAAAAAAAAAAAAAAAAAPC/AQAAAAEAAADIAAAAAAAAAMgAAAAAAAAAAAAAAAAA8L8"
				],
				[
					101,
					1,
					"insert",
					{
						"characters": "&self"
					},
					"BQAAAMkAAAAAAAAAygAAAAAAAAAAAAAAygAAAAAAAADLAAAAAAAAAAAAAADLAAAAAAAAAMwAAAAAAAAAAAAAAMwAAAAAAAAAzQAAAAAAAAAAAAAAzQAAAAAAAADOAAAAAAAAAAAAAAA",
					"FAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAngAAAAAAAACeAAAAAAAAAAAAAAAAAPC/AQAAAAEAAADJAAAAAAAAAMkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					103,
					1,
					"insert",
					{
						"characters": " ->"
					},
					"AwAAAM8AAAAAAAAA0AAAAAAAAAAAAAAA0AAAAAAAAADRAAAAAAAAAAAAAADRAAAAAAAAANIAAAAAAAAAAAAAAA",
					"FAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAngAAAAAAAACeAAAAAAAAAAAAAAAAAPC/AQAAAAEAAADPAAAAAAAAAM8AAAAAAAAAAAAAAAAA8L8"
				],
				[
					104,
					1,
					"insert",
					{
						"characters": " Reuslt<"
					},
					"CAAAANIAAAAAAAAA0wAAAAAAAAAAAAAA0wAAAAAAAADUAAAAAAAAAAAAAADUAAAAAAAAANUAAAAAAAAAAAAAANUAAAAAAAAA1gAAAAAAAAAAAAAA1gAAAAAAAADXAAAAAAAAAAAAAADXAAAAAAAAANgAAAAAAAAAAAAAANgAAAAAAAAA2QAAAAAAAAAAAAAA2QAAAAAAAADaAAAAAAAAAAAAAAA",
					"FAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAngAAAAAAAACeAAAAAAAAAAAAAAAAAPC/AQAAAAEAAADSAAAAAAAAANIAAAAAAAAAAAAAAAAA8L8"
				],
				[
					107,
					1,
					"insert",
					{
						"characters": "Result"
					},
					"BwAAANMAAAAAAAAA1AAAAAAAAAAAAAAA1AAAAAAAAADUAAAAAAAAAAYAAABSZXVzbHTUAAAAAAAAANUAAAAAAAAAAAAAANUAAAAAAAAA1gAAAAAAAAAAAAAA1gAAAAAAAADXAAAAAAAAAAAAAADXAAAAAAAAANgAAAAAAAAAAAAAANgAAAAAAAAA2QAAAAAAAAAAAAAA",
					"FAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAngAAAAAAAACeAAAAAAAAAAAAAAAAAPC/AQAAAAEAAADZAAAAAAAAANMAAAAAAAAAAAAAAAAA8L8"
				],
				[
					109,
					1,
					"insert",
					{
						"characters": "\nsizo"
					},
					"BgAAANoAAAAAAAAA2wAAAAAAAAAAAAAA2wAAAAAAAADfAAAAAAAAAAAAAADfAAAAAAAAAOAAAAAAAAAAAAAAAOAAAAAAAAAA4QAAAAAAAAAAAAAA4QAAAAAAAADiAAAAAAAAAAAAAADiAAAAAAAAAOMAAAAAAAAAAAAAAA",
					"FAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAngAAAAAAAACeAAAAAAAAAAAAAAAAAPC/AQAAAAEAAADaAAAAAAAAANoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					110,
					1,
					"left_delete",
					null,
					"AQAAAOIAAAAAAAAA4gAAAAAAAAABAAAAbw",
					"FAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAngAAAAAAAACeAAAAAAAAAAAAAAAAAPC/AQAAAAEAAADjAAAAAAAAAOMAAAAAAAAAAAAAAAAA8L8"
				],
				[
					111,
					1,
					"insert",
					{
						"characters": "eof"
					},
					"AwAAAOIAAAAAAAAA4wAAAAAAAAAAAAAA4wAAAAAAAADkAAAAAAAAAAAAAADkAAAAAAAAAOUAAAAAAAAAAAAAAA",
					"FAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAngAAAAAAAACeAAAAAAAAAAAAAAAAAPC/AQAAAAEAAADiAAAAAAAAAOIAAAAAAAAAAAAAAAAA8L8"
				],
				[
					112,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAOUAAAAAAAAA5wAAAAAAAAAAAAAA",
					"FAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAngAAAAAAAACeAAAAAAAAAAAAAAAAAPC/AQAAAAEAAADlAAAAAAAAAOUAAAAAAAAAAAAAAAAA8L8"
				],
				[
					113,
					1,
					"insert",
					{
						"characters": "x"
					},
					"AQAAAOYAAAAAAAAA5wAAAAAAAAAAAAAA",
					"FAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAngAAAAAAAACeAAAAAAAAAAAAAAAAAPC/AQAAAAEAAADmAAAAAAAAAOYAAAAAAAAAAAAAAAAA8L8"
				],
				[
					117,
					1,
					"cut",
					null,
					"AQAAANsAAAAAAAAA2wAAAAAAAAAOAAAAICAgIHNpemVvZih4KQo",
					"FAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAngAAAAAAAACeAAAAAAAAAAAAAAAAAPC/AQAAAAEAAADoAAAAAAAAAOgAAAAAAAAA////////738"
				],
				[
					124,
					1,
					"insert",
					{
						"characters": "i32"
					},
					"AwAAANoAAAAAAAAA2wAAAAAAAAAAAAAA2wAAAAAAAADcAAAAAAAAAAAAAADcAAAAAAAAAN0AAAAAAAAAAAAAAA",
					"FAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAngAAAAAAAACeAAAAAAAAAAAAAAAAAPC/AQAAAAEAAADaAAAAAAAAANoAAAAAAAAA////////738"
				],
				[
					127,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAN0AAAAAAAAA3gAAAAAAAAAAAAAA",
					"FAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAngAAAAAAAACeAAAAAAAAAAAAAAAAAPC/AQAAAAEAAADdAAAAAAAAAN0AAAAAAAAAAAAAAAAA8L8"
				],
				[
					128,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAN4AAAAAAAAA3wAAAAAAAAAAAAAA",
					"FAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAngAAAAAAAACeAAAAAAAAAAAAAAAAAPC/AQAAAAEAAADeAAAAAAAAAN4AAAAAAAAAAAAAAAAA8L8"
				],
				[
					129,
					1,
					"insert",
					{
						"characters": "Errr"
					},
					"BAAAAN8AAAAAAAAA4AAAAAAAAAAAAAAA4AAAAAAAAADhAAAAAAAAAAAAAADhAAAAAAAAAOIAAAAAAAAAAAAAAOIAAAAAAAAA4wAAAAAAAAAAAAAA",
					"FAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAngAAAAAAAACeAAAAAAAAAAAAAAAAAPC/AQAAAAEAAADfAAAAAAAAAN8AAAAAAAAAAAAAAAAA8L8"
				],
				[
					130,
					1,
					"left_delete",
					null,
					"AQAAAOIAAAAAAAAA4gAAAAAAAAABAAAAcg",
					"FAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAngAAAAAAAACeAAAAAAAAAAAAAAAAAPC/AQAAAAEAAADjAAAAAAAAAOMAAAAAAAAAAAAAAAAA8L8"
				],
				[
					131,
					1,
					"insert",
					{
						"characters": "or>;"
					},
					"BAAAAOIAAAAAAAAA4wAAAAAAAAAAAAAA4wAAAAAAAADkAAAAAAAAAAAAAADkAAAAAAAAAOUAAAAAAAAAAAAAAOUAAAAAAAAA5gAAAAAAAAAAAAAA",
					"FAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAngAAAAAAAACeAAAAAAAAAAAAAAAAAPC/AQAAAAEAAADiAAAAAAAAAOIAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4,
					1,
					"insert",
					{
						"characters": "u3"
					},
					"AwAAANoAAAAAAAAA2wAAAAAAAAAAAAAA2wAAAAAAAADbAAAAAAAAAAMAAABpMzLbAAAAAAAAANwAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAngAAAAAAAACeAAAAAAAAAAAAAAAAAPC/AQAAAAEAAADdAAAAAAAAANoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					5,
					1,
					"left_delete",
					null,
					"AQAAANsAAAAAAAAA2wAAAAAAAAABAAAAMw",
					"AgAAAAAAAAABAAAAngAAAAAAAACeAAAAAAAAAAAAAAAAAPC/AQAAAAEAAADcAAAAAAAAANwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					6,
					1,
					"insert",
					{
						"characters": "32"
					},
					"AgAAANsAAAAAAAAA3AAAAAAAAAAAAAAA3AAAAAAAAADdAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAngAAAAAAAACeAAAAAAAAAAAAAAAAAPC/AQAAAAEAAADbAAAAAAAAANsAAAAAAAAAAAAAAAAA8L8"
				],
				[
					23,
					1,
					"insert",
					{
						"characters": "\n\ni"
					},
					"AwAAAB0AAAAAAAAAHgAAAAAAAAAAAAAAHgAAAAAAAAAfAAAAAAAAAAAAAAAfAAAAAAAAACAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAHQAAAAAAAAAdAAAAAAAAAAAAAAAAAAAAAQAAAAEAAAAcAQAAAAAAABwBAAAAAAAAAAAAAAAA8L8"
				],
				[
					24,
					1,
					"left_delete",
					null,
					"AQAAAB8AAAAAAAAAHwAAAAAAAAABAAAAaQ",
					"AgAAAAAAAAABAAAAIAAAAAAAAAAgAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAfAQAAAAAAAB8BAAAAAAAAAAAAAAAA8L8"
				],
				[
					26,
					1,
					"insert",
					{
						"characters": "pub"
					},
					"AwAAAB4AAAAAAAAAHwAAAAAAAAAAAAAAHwAAAAAAAAAgAAAAAAAAAAAAAAAgAAAAAAAAACEAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAHgAAAAAAAAAeAAAAAAAAAAAAAAAAAAAAAQAAAAEAAAAeAQAAAAAAAB4BAAAAAAAAAAAAAAAA8L8"
				],
				[
					27,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAACEAAAAAAAAAIwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAIQAAAAAAAAAhAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAhAQAAAAAAACEBAAAAAAAAAAAAAAAA8L8"
				],
				[
					28,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAACEAAAAAAAAAIQAAAAAAAAABAAAAJyEAAAAAAAAAIQAAAAAAAAABAAAAJw",
					"AgAAAAAAAAABAAAAIgAAAAAAAAAiAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAjAQAAAAAAACMBAAAAAAAAAAAAAAAA8L8"
				],
				[
					29,
					1,
					"insert",
					{
						"characters": " mod"
					},
					"BAAAACEAAAAAAAAAIgAAAAAAAAAAAAAAIgAAAAAAAAAjAAAAAAAAAAAAAAAjAAAAAAAAACQAAAAAAAAAAAAAACQAAAAAAAAAJQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAIQAAAAAAAAAhAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAhAQAAAAAAACEBAAAAAAAAAAAAAAAA8L8"
				],
				[
					30,
					1,
					"insert",
					{
						"characters": " vao;"
					},
					"BQAAACUAAAAAAAAAJgAAAAAAAAAAAAAAJgAAAAAAAAAnAAAAAAAAAAAAAAAnAAAAAAAAACgAAAAAAAAAAAAAACgAAAAAAAAAKQAAAAAAAAAAAAAAKQAAAAAAAAAqAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAJQAAAAAAAAAlAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAlAQAAAAAAACUBAAAAAAAAAAAAAAAA8L8"
				],
				[
					38,
					1,
					"insert",
					{
						"characters": "\nfn"
					},
					"BAAAAPQAAAAAAAAA9QAAAAAAAAAAAAAA9QAAAAAAAAD5AAAAAAAAAAAAAAD5AAAAAAAAAPoAAAAAAAAAAAAAAPoAAAAAAAAA+wAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA9AAAAAAAAAD0AAAAAAAAAP///////+9/AQAAAAEAAAAqAQAAAAAAACoBAAAAAAAAAAAAAAAA8L8"
				],
				[
					39,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAPsAAAAAAAAA/AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA+wAAAAAAAAD7AAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAxAQAAAAAAADEBAAAAAAAAAAAAAAAA8L8"
				],
				[
					58,
					1,
					"insert",
					{
						"characters": "upl"
					},
					"AwAAAPwAAAAAAAAA/QAAAAAAAAAAAAAA/QAAAAAAAAD+AAAAAAAAAAAAAAD+AAAAAAAAAP8AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA/AAAAAAAAAD8AAAAAAAAAP///////+9/AQAAAAEAAAAyAQAAAAAAADIBAAAAAAAAAAAAAAAA8L8"
				],
				[
					59,
					3,
					"left_delete",
					null,
					"AwAAAP4AAAAAAAAA/gAAAAAAAAABAAAAbP0AAAAAAAAA/QAAAAAAAAABAAAAcPwAAAAAAAAA/AAAAAAAAAABAAAAdQ",
					"AgAAAAAAAAABAAAA/wAAAAAAAAD/AAAAAAAAAAAAAAAAAPC/AQAAAAEAAAA1AQAAAAAAADUBAAAAAAAAAAAAAAAA8L8"
				],
				[
					60,
					1,
					"insert",
					{
						"characters": "uploat"
					},
					"BgAAAPwAAAAAAAAA/QAAAAAAAAAAAAAA/QAAAAAAAAD+AAAAAAAAAAAAAAD+AAAAAAAAAP8AAAAAAAAAAAAAAP8AAAAAAAAAAAEAAAAAAAAAAAAAAAEAAAAAAAABAQAAAAAAAAAAAAABAQAAAAAAAAIBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA/AAAAAAAAAD8AAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAyAQAAAAAAADIBAAAAAAAAAAAAAAAA8L8"
				],
				[
					61,
					1,
					"left_delete",
					null,
					"AQAAAAEBAAAAAAAAAQEAAAAAAAABAAAAdA",
					"AgAAAAAAAAABAAAAAgEAAAAAAAACAQAAAAAAAAAAAAAAAPC/AQAAAAEAAAA4AQAAAAAAADgBAAAAAAAAAAAAAAAA8L8"
				],
				[
					62,
					1,
					"insert",
					{
						"characters": "d"
					},
					"AQAAAAEBAAAAAAAAAgEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAQEAAAAAAAABAQAAAAAAAAAAAAAAAPC/AQAAAAEAAAA3AQAAAAAAADcBAAAAAAAAAAAAAAAA8L8"
				],
				[
					64,
					1,
					"insert",
					{
						"characters": "vao_upload_v"
					},
					"DQAAAPwAAAAAAAAA/QAAAAAAAAAAAAAA/QAAAAAAAAD9AAAAAAAAAAYAAAB1cGxvYWT9AAAAAAAAAP4AAAAAAAAAAAAAAP4AAAAAAAAA/wAAAAAAAAAAAAAA/wAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAEBAAAAAAAAAAAAAAEBAAAAAAAAAgEAAAAAAAAAAAAAAgEAAAAAAAADAQAAAAAAAAAAAAADAQAAAAAAAAQBAAAAAAAAAAAAAAQBAAAAAAAABQEAAAAAAAAAAAAABQEAAAAAAAAGAQAAAAAAAAAAAAAGAQAAAAAAAAcBAAAAAAAAAAAAAAcBAAAAAAAACAEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAgEAAAAAAAD8AAAAAAAAAAAAAAAAAPC/AQAAAAEAAAA4AQAAAAAAADgBAAAAAAAAAAAAAAAA8L8"
				],
				[
					65,
					1,
					"insert",
					{
						"characters": "3"
					},
					"AQAAAAgBAAAAAAAACQEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAACAEAAAAAAAAIAQAAAAAAAAAAAAAAAPC/AQAAAAEAAAA+AQAAAAAAAD4BAAAAAAAAAAAAAAAA8L8"
				],
				[
					66,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAAkBAAAAAAAACwEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAACQEAAAAAAAAJAQAAAAAAAAAAAAAAAPC/AQAAAAEAAAA/AQAAAAAAAD8BAAAAAAAAAAAAAAAA8L8"
				],
				[
					67,
					1,
					"insert",
					{
						"characters": "&self"
					},
					"BQAAAAoBAAAAAAAACwEAAAAAAAAAAAAACwEAAAAAAAAMAQAAAAAAAAAAAAAMAQAAAAAAAA0BAAAAAAAAAAAAAA0BAAAAAAAADgEAAAAAAAAAAAAADgEAAAAAAAAPAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAACgEAAAAAAAAKAQAAAAAAAAAAAAAAAPC/AQAAAAEAAABBAQAAAAAAAEEBAAAAAAAAAAAAAAAA8L8"
				],
				[
					69,
					1,
					"insert",
					{
						"characters": " ->"
					},
					"AwAAABABAAAAAAAAEQEAAAAAAAAAAAAAEQEAAAAAAAASAQAAAAAAAAAAAAASAQAAAAAAABMBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAEAEAAAAAAAAQAQAAAAAAAAAAAAAAAPC/AQAAAAEAAABGAQAAAAAAAEYBAAAAAAAAAAAAAAAA8L8"
				],
				[
					70,
					1,
					"insert",
					{
						"characters": " result"
					},
					"BwAAABMBAAAAAAAAFAEAAAAAAAAAAAAAFAEAAAAAAAAVAQAAAAAAAAAAAAAVAQAAAAAAABYBAAAAAAAAAAAAABYBAAAAAAAAFwEAAAAAAAAAAAAAFwEAAAAAAAAYAQAAAAAAAAAAAAAYAQAAAAAAABkBAAAAAAAAAAAAABkBAAAAAAAAGgEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAEwEAAAAAAAATAQAAAAAAAAAAAAAAAPC/AQAAAAEAAABJAQAAAAAAAEkBAAAAAAAAAAAAAAAA8L8"
				],
				[
					71,
					6,
					"left_delete",
					null,
					"BgAAABkBAAAAAAAAGQEAAAAAAAABAAAAdBgBAAAAAAAAGAEAAAAAAAABAAAAbBcBAAAAAAAAFwEAAAAAAAABAAAAdRYBAAAAAAAAFgEAAAAAAAABAAAAcxUBAAAAAAAAFQEAAAAAAAABAAAAZRQBAAAAAAAAFAEAAAAAAAABAAAAcg",
					"AgAAAAAAAAABAAAAGgEAAAAAAAAaAQAAAAAAAAAAAAAAAPC/AQAAAAEAAABQAQAAAAAAAFABAAAAAAAAAAAAAAAA8L8"
				],
				[
					72,
					1,
					"insert",
					{
						"characters": "Result"
					},
					"BgAAABQBAAAAAAAAFQEAAAAAAAAAAAAAFQEAAAAAAAAWAQAAAAAAAAAAAAAWAQAAAAAAABcBAAAAAAAAAAAAABcBAAAAAAAAGAEAAAAAAAAAAAAAGAEAAAAAAAAZAQAAAAAAAAAAAAAZAQAAAAAAABoBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAFAEAAAAAAAAUAQAAAAAAAAAAAAAAAPC/AQAAAAEAAABKAQAAAAAAAEoBAAAAAAAAAAAAAAAA8L8"
				],
				[
					73,
					1,
					"insert",
					{
						"characters": "E"
					},
					"AQAAABoBAAAAAAAAGwEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAGgEAAAAAAAAaAQAAAAAAAAAAAAAAAPC/AQAAAAEAAABQAQAAAAAAAFABAAAAAAAAAAAAAAAA8L8"
				],
				[
					74,
					1,
					"left_delete",
					null,
					"AQAAABoBAAAAAAAAGgEAAAAAAAABAAAARQ",
					"AgAAAAAAAAABAAAAGwEAAAAAAAAbAQAAAAAAAAAAAAAAAPC/AQAAAAEAAABRAQAAAAAAAFEBAAAAAAAAAAAAAAAA8L8"
				],
				[
					75,
					1,
					"insert",
					{
						"characters": "<Error>;"
					},
					"CAAAABoBAAAAAAAAGwEAAAAAAAAAAAAAGwEAAAAAAAAcAQAAAAAAAAAAAAAcAQAAAAAAAB0BAAAAAAAAAAAAAB0BAAAAAAAAHgEAAAAAAAAAAAAAHgEAAAAAAAAfAQAAAAAAAAAAAAAfAQAAAAAAACABAAAAAAAAAAAAACABAAAAAAAAIQEAAAAAAAAAAAAAIQEAAAAAAAAiAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAGgEAAAAAAAAaAQAAAAAAAAAAAAAAAPC/AQAAAAEAAABQAQAAAAAAAFABAAAAAAAAAAAAAAAA8L8"
				],
				[
					78,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAAPkAAAAAAAAA/AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAIgEAAAAAAAAiAQAAAAAAAAAAAAAAAPC/AQAAAAEAAABYAQAAAAAAAFgBAAAAAAAAAAAAAAAA8L8"
				],
				[
					84,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAAPkAAAAAAAAA+QAAAAAAAAADAAAALy8g",
					"AgAAAAAAAAABAAAAJQEAAAAAAAAlAQAAAAAAAAAAAAAAAPC/AQAAAAEAAABbAQAAAAAAAFsBAAAAAAAAAAAAAAAA8L8"
				],
				[
					86,
					17,
					"left_delete",
					null,
					"EQAAACABAAAAAAAAIAEAAAAAAAABAAAAPh8BAAAAAAAAHwEAAAAAAAABAAAAch4BAAAAAAAAHgEAAAAAAAABAAAAbx0BAAAAAAAAHQEAAAAAAAABAAAAchwBAAAAAAAAHAEAAAAAAAABAAAAchsBAAAAAAAAGwEAAAAAAAABAAAARRoBAAAAAAAAGgEAAAAAAAABAAAAPBkBAAAAAAAAGQEAAAAAAAABAAAAdBgBAAAAAAAAGAEAAAAAAAABAAAAbBcBAAAAAAAAFwEAAAAAAAABAAAAdRYBAAAAAAAAFgEAAAAAAAABAAAAcxUBAAAAAAAAFQEAAAAAAAABAAAAZRQBAAAAAAAAFAEAAAAAAAABAAAAUhMBAAAAAAAAEwEAAAAAAAABAAAAIBIBAAAAAAAAEgEAAAAAAAABAAAAPhEBAAAAAAAAEQEAAAAAAAABAAAALRABAAAAAAAAEAEAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAIQEAAAAAAAAhAQAAAAAAAAAAAAAAAPC/AQAAAAEAAABYAQAAAAAAAFgBAAAAAAAAAAAAAAAA8L8"
				],
				[
					89,
					1,
					"insert",
					{
						"characters": " ->"
					},
					"AwAAABABAAAAAAAAEQEAAAAAAAAAAAAAEQEAAAAAAAASAQAAAAAAAAAAAAASAQAAAAAAABMBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAEAEAAAAAAAAQAQAAAAAAAAAAAAAAAPC/AQAAAAEAAABHAQAAAAAAAEcBAAAAAAAAAAAAAAAA8L8"
				],
				[
					90,
					1,
					"insert",
					{
						"characters": " Result<Error>"
					},
					"DgAAABMBAAAAAAAAFAEAAAAAAAAAAAAAFAEAAAAAAAAVAQAAAAAAAAAAAAAVAQAAAAAAABYBAAAAAAAAAAAAABYBAAAAAAAAFwEAAAAAAAAAAAAAFwEAAAAAAAAYAQAAAAAAAAAAAAAYAQAAAAAAABkBAAAAAAAAAAAAABkBAAAAAAAAGgEAAAAAAAAAAAAAGgEAAAAAAAAbAQAAAAAAAAAAAAAbAQAAAAAAABwBAAAAAAAAAAAAABwBAAAAAAAAHQEAAAAAAAAAAAAAHQEAAAAAAAAeAQAAAAAAAAAAAAAeAQAAAAAAAB8BAAAAAAAAAAAAAB8BAAAAAAAAIAEAAAAAAAAAAAAAIAEAAAAAAAAhAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAEwEAAAAAAAATAQAAAAAAAAAAAAAAAPC/AQAAAAEAAABKAQAAAAAAAEoBAAAAAAAAAAAAAAAA8L8"
				],
				[
					95,
					1,
					"insert",
					{
						"characters": "(),"
					},
					"AwAAABsBAAAAAAAAHAEAAAAAAAAAAAAAHAEAAAAAAAAdAQAAAAAAAAAAAAAdAQAAAAAAAB4BAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAGwEAAAAAAAAbAQAAAAAAAAAAAAAAAPC/AQAAAAEAAABYAQAAAAAAAFgBAAAAAAAAAAAAAAAA8L8"
				],
				[
					96,
					2,
					"rust_fmt_format_buffer",
					null,
					"AQAAAB4BAAAAAAAAHwEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAHgEAAAAAAAAeAQAAAAAAAAAAAAAAAPC/AQAAAAEAAABbAQAAAAAAAFsBAAAAAAAAAAAAAAAA8L8"
				],
				[
					116,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAA8BAAAAAAAAEAEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAADwEAAAAAAAAPAQAAAAAAAAAAAAAAAPC/AQAAAAEAAABcAQAAAAAAAFwBAAAAAAAAAAAAAAAA8L8"
				],
				[
					117,
					1,
					"insert",
					{
						"characters": " vao::Vao"
					},
					"CQAAABABAAAAAAAAEQEAAAAAAAAAAAAAEQEAAAAAAAASAQAAAAAAAAAAAAASAQAAAAAAABMBAAAAAAAAAAAAABMBAAAAAAAAFAEAAAAAAAAAAAAAFAEAAAAAAAAVAQAAAAAAAAAAAAAVAQAAAAAAABYBAAAAAAAAAAAAABYBAAAAAAAAFwEAAAAAAAAAAAAAFwEAAAAAAAAYAQAAAAAAAAAAAAAYAQAAAAAAABkBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAEAEAAAAAAAAQAQAAAAAAAAAAAAAAAPC/AQAAAAEAAABdAQAAAAAAAF0BAAAAAAAAAAAAAAAA8L8"
				],
				[
					121,
					1,
					"insert",
					{
						"characters": "vao:"
					},
					"BAAAABEBAAAAAAAAEgEAAAAAAAAAAAAAEgEAAAAAAAATAQAAAAAAAAAAAAATAQAAAAAAABQBAAAAAAAAAAAAABQBAAAAAAAAFQEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAEQEAAAAAAAARAQAAAAAAAAAAAAAAAPC/AQAAAAEAAABmAQAAAAAAAGYBAAAAAAAAAAAAAAAA8L8"
				],
				[
					122,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABUBAAAAAAAAFgEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAFQEAAAAAAAAVAQAAAAAAAAAAAAAAAPC/AQAAAAEAAABqAQAAAAAAAGoBAAAAAAAAAAAAAAAA8L8"
				],
				[
					125,
					2,
					"left_delete",
					null,
					"AgAAABUBAAAAAAAAFQEAAAAAAAABAAAAIBQBAAAAAAAAFAEAAAAAAAABAAAAOg",
					"AgAAAAAAAAABAAAAFgEAAAAAAAAWAQAAAAAAAAAAAAAAAPC/AQAAAAEAAABrAQAAAAAAAGsBAAAAAAAAAAAAAAAA8L8"
				],
				[
					126,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABQBAAAAAAAAFQEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAFAEAAAAAAAAUAQAAAAAAAAAAAAAAAPC/AQAAAAEAAABpAQAAAAAAAGkBAAAAAAAAAAAAAAAA8L8"
				],
				[
					129,
					1,
					"left_delete",
					null,
					"AQAAABQBAAAAAAAAFAEAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAFQEAAAAAAAAVAQAAAAAAAAAAAAAAAPC/AQAAAAEAAABqAQAAAAAAAGoBAAAAAAAAAAAAAAAA8L8"
				],
				[
					130,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAABQBAAAAAAAAFQEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAFAEAAAAAAAAUAQAAAAAAAAAAAAAAAPC/AQAAAAEAAABpAQAAAAAAAGkBAAAAAAAAAAAAAAAA8L8"
				],
				[
					131,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABUBAAAAAAAAFgEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAFQEAAAAAAAAVAQAAAAAAAAAAAAAAAPC/AQAAAAEAAABqAQAAAAAAAGoBAAAAAAAAAAAAAAAA8L8"
				],
				[
					145,
					1,
					"insert",
					{
						"characters": "&^"
					},
					"AgAAABYBAAAAAAAAFwEAAAAAAAAAAAAAFwEAAAAAAAAYAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAFgEAAAAAAAAWAQAAAAAAAAAAAAAAAPC/AQAAAAEAAABrAQAAAAAAAGsBAAAAAAAAAAAAAAAA8L8"
				],
				[
					148,
					1,
					"left_delete",
					null,
					"AQAAABcBAAAAAAAAFwEAAAAAAAABAAAAXg",
					"AgAAAAAAAAABAAAAGAEAAAAAAAAYAQAAAAAAAAAAAAAAAPC/AQAAAAEAAABtAQAAAAAAAG0BAAAAAAAAAAAAAAAA8L8"
				],
				[
					151,
					1,
					"insert",
					{
						"characters": "mut"
					},
					"AwAAABcBAAAAAAAAGAEAAAAAAAAAAAAAGAEAAAAAAAAZAQAAAAAAAAAAAAAZAQAAAAAAABoBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAFwEAAAAAAAAXAQAAAAAAAAAAAAAAAPC/AQAAAAEAAABsAQAAAAAAAGwBAAAAAAAAAAAAAAAA8L8"
				],
				[
					154,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABoBAAAAAAAAGwEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAGgEAAAAAAAAaAQAAAAAAAAAAAAAAAPC/AQAAAAEAAABvAQAAAAAAAG8BAAAAAAAAAAAAAAAA8L8"
				],
				[
					160,
					1,
					"insert",
					{
						"characters": "mehs"
					},
					"BAAAABEBAAAAAAAAEgEAAAAAAAAAAAAAEgEAAAAAAAATAQAAAAAAAAAAAAATAQAAAAAAABQBAAAAAAAAAAAAABQBAAAAAAAAFQEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAEQEAAAAAAAARAQAAAAAAAAAAAAAAAPC/AQAAAAEAAABwAQAAAAAAAHABAAAAAAAAAAAAAAAA8L8"
				],
				[
					161,
					4,
					"left_delete",
					null,
					"BAAAABQBAAAAAAAAFAEAAAAAAAABAAAAcxMBAAAAAAAAEwEAAAAAAAABAAAAaBIBAAAAAAAAEgEAAAAAAAABAAAAZREBAAAAAAAAEQEAAAAAAAABAAAAbQ",
					"AgAAAAAAAAABAAAAFQEAAAAAAAAVAQAAAAAAAAAAAAAAAPC/AQAAAAEAAAB0AQAAAAAAAHQBAAAAAAAAAAAAAAAA8L8"
				],
				[
					162,
					1,
					"insert",
					{
						"characters": "data:"
					},
					"BQAAABEBAAAAAAAAEgEAAAAAAAAAAAAAEgEAAAAAAAATAQAAAAAAAAAAAAATAQAAAAAAABQBAAAAAAAAAAAAABQBAAAAAAAAFQEAAAAAAAAAAAAAFQEAAAAAAAAWAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAEQEAAAAAAAARAQAAAAAAAAAAAAAAAPC/AQAAAAEAAABwAQAAAAAAAHABAAAAAAAAAAAAAAAA8L8"
				],
				[
					163,
					1,
					"insert",
					{
						"characters": " v"
					},
					"AgAAABYBAAAAAAAAFwEAAAAAAAAAAAAAFwEAAAAAAAAYAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAFgEAAAAAAAAWAQAAAAAAAAAAAAAAAPC/AQAAAAEAAAB1AQAAAAAAAHUBAAAAAAAAAAAAAAAA8L8"
				],
				[
					165,
					1,
					"insert",
					{
						"characters": "\nuse"
					},
					"BAAAABwAAAAAAAAAHQAAAAAAAAAAAAAAHQAAAAAAAAAeAAAAAAAAAAAAAAAeAAAAAAAAAB8AAAAAAAAAAAAAAB8AAAAAAAAAIAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAHAAAAAAAAAAcAAAAAAAAAAAAAAAAgG9AAQAAAAEAAAB3AQAAAAAAAHcBAAAAAAAAAAAAAAAA8L8"
				],
				[
					166,
					1,
					"insert",
					{
						"characters": " crate::engine:"
					},
					"DwAAACAAAAAAAAAAIQAAAAAAAAAAAAAAIQAAAAAAAAAiAAAAAAAAAAAAAAAiAAAAAAAAACMAAAAAAAAAAAAAACMAAAAAAAAAJAAAAAAAAAAAAAAAJAAAAAAAAAAlAAAAAAAAAAAAAAAlAAAAAAAAACYAAAAAAAAAAAAAACYAAAAAAAAAJwAAAAAAAAAAAAAAJwAAAAAAAAAoAAAAAAAAAAAAAAAoAAAAAAAAACkAAAAAAAAAAAAAACkAAAAAAAAAKgAAAAAAAAAAAAAAKgAAAAAAAAArAAAAAAAAAAAAAAArAAAAAAAAACwAAAAAAAAAAAAAACwAAAAAAAAALQAAAAAAAAAAAAAALQAAAAAAAAAuAAAAAAAAAAAAAAAuAAAAAAAAAC8AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAIAAAAAAAAAAgAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAB7AQAAAAAAAHsBAAAAAAAAAAAAAAAA8L8"
				],
				[
					167,
					1,
					"insert",
					{
						"characters": ":v"
					},
					"AgAAAC8AAAAAAAAAMAAAAAAAAAAAAAAAMAAAAAAAAAAxAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAALwAAAAAAAAAvAAAAAAAAAAAAAAAAAPC/AQAAAAEAAACKAQAAAAAAAIoBAAAAAAAAAAAAAAAA8L8"
				],
				[
					168,
					1,
					"insert",
					{
						"characters": "ecotrs::"
					},
					"CAAAADEAAAAAAAAAMgAAAAAAAAAAAAAAMgAAAAAAAAAzAAAAAAAAAAAAAAAzAAAAAAAAADQAAAAAAAAAAAAAADQAAAAAAAAANQAAAAAAAAAAAAAANQAAAAAAAAA2AAAAAAAAAAAAAAA2AAAAAAAAADcAAAAAAAAAAAAAADcAAAAAAAAAOAAAAAAAAAAAAAAAOAAAAAAAAAA5AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAMQAAAAAAAAAxAAAAAAAAAAAAAAAAAPC/AQAAAAEAAACMAQAAAAAAAIwBAAAAAAAAAAAAAAAA8L8"
				],
				[
					171,
					1,
					"insert",
					{
						"characters": "vectors"
					},
					"CAAAADAAAAAAAAAAMQAAAAAAAAAAAAAAMQAAAAAAAAAxAAAAAAAAAAcAAAB2ZWNvdHJzMQAAAAAAAAAyAAAAAAAAAAAAAAAyAAAAAAAAADMAAAAAAAAAAAAAADMAAAAAAAAANAAAAAAAAAAAAAAANAAAAAAAAAA1AAAAAAAAAAAAAAA1AAAAAAAAADYAAAAAAAAAAAAAADYAAAAAAAAANwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAANwAAAAAAAAAwAAAAAAAAAAAAAAAAAPC/AQAAAAEAAACUAQAAAAAAAJQBAAAAAAAAAAAAAAAA8L8"
				],
				[
					173,
					1,
					"insert",
					{
						"characters": "*;"
					},
					"AgAAADkAAAAAAAAAOgAAAAAAAAAAAAAAOgAAAAAAAAA7AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAOQAAAAAAAAA5AAAAAAAAAP///////+9/AQAAAAEAAACUAQAAAAAAAJQBAAAAAAAAAAAAAAAA8L8"
				],
				[
					181,
					1,
					"left_delete",
					null,
					"AQAAADYBAAAAAAAANgEAAAAAAAABAAAAdg",
					"AgAAAAAAAAABAAAANwEAAAAAAAA3AQAAAAAAAAAAAAAAAPC/AQAAAAEAAACWAQAAAAAAAJYBAAAAAAAAAAAAAAAA8L8"
				],
				[
					182,
					1,
					"insert",
					{
						"characters": "Vec["
					},
					"BAAAADYBAAAAAAAANwEAAAAAAAAAAAAANwEAAAAAAAA4AQAAAAAAAAAAAAA4AQAAAAAAADkBAAAAAAAAAAAAADkBAAAAAAAAOgEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAANgEAAAAAAAA2AQAAAAAAAAAAAAAAAPC/AQAAAAEAAACVAQAAAAAAAJUBAAAAAAAAAAAAAAAA8L8"
				],
				[
					183,
					1,
					"left_delete",
					null,
					"AQAAADkBAAAAAAAAOQEAAAAAAAABAAAAWw",
					"AgAAAAAAAAABAAAAOgEAAAAAAAA6AQAAAAAAAAAAAAAAAPC/AQAAAAEAAACZAQAAAAAAAJkBAAAAAAAAAAAAAAAA8L8"
				],
				[
					184,
					1,
					"insert",
					{
						"characters": "<>,"
					},
					"AwAAADkBAAAAAAAAOgEAAAAAAAAAAAAAOgEAAAAAAAA7AQAAAAAAAAAAAAA7AQAAAAAAADwBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAOQEAAAAAAAA5AQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAQAAAAAAAJgBAAAAAAAAAAAAAAAA8L8"
				],
				[
					185,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADwBAAAAAAAAPQEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAPAEAAAAAAAA8AQAAAAAAAAAAAAAAAPC/AQAAAAEAAACbAQAAAAAAAJsBAAAAAAAAAAAAAAAA8L8"
				],
				[
					187,
					1,
					"insert",
					{
						"characters": "VectorThreeFloat"
					},
					"EAAAADoBAAAAAAAAOwEAAAAAAAAAAAAAOwEAAAAAAAA8AQAAAAAAAAAAAAA8AQAAAAAAAD0BAAAAAAAAAAAAAD0BAAAAAAAAPgEAAAAAAAAAAAAAPgEAAAAAAAA/AQAAAAAAAAAAAAA/AQAAAAAAAEABAAAAAAAAAAAAAEABAAAAAAAAQQEAAAAAAAAAAAAAQQEAAAAAAABCAQAAAAAAAAAAAABCAQAAAAAAAEMBAAAAAAAAAAAAAEMBAAAAAAAARAEAAAAAAAAAAAAARAEAAAAAAABFAQAAAAAAAAAAAABFAQAAAAAAAEYBAAAAAAAAAAAAAEYBAAAAAAAARwEAAAAAAAAAAAAARwEAAAAAAABIAQAAAAAAAAAAAABIAQAAAAAAAEkBAAAAAAAAAAAAAEkBAAAAAAAASgEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAOgEAAAAAAAA6AQAAAAAAAAAAAAAAAPC/AQAAAAEAAACcAQAAAAAAAJwBAAAAAAAAAAAAAAAA8L8"
				],
				[
					193,
					1,
					"insert",
					{
						"characters": "Vec"
					},
					"BAAAADoBAAAAAAAAOwEAAAAAAAAAAAAAOwEAAAAAAAA7AQAAAAAAAAYAAABWZWN0b3I7AQAAAAAAADwBAAAAAAAAAAAAADwBAAAAAAAAPQEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQAEAAAAAAAA6AQAAAAAAAAAAAAAAAPC/AQAAAAEAAACsAQAAAAAAAKwBAAAAAAAAAAAAAAAA8L8"
				],
				[
					198,
					1,
					"cut",
					null,
					"AQAAAEoBAAAAAAAASgEAAAAAAAASAAAAdmFvOiAmbXV0IHZhbzo6VmFv",
					"AgAAAAAAAAABAAAAXAEAAAAAAABKAQAAAAAAAAAAAAAAAPC/AQAAAAEAAACpAQAAAAAAAKkBAAAAAAAAAAAAAAAA8L8"
				],
				[
					199,
					2,
					"left_delete",
					null,
					"AgAAAEkBAAAAAAAASQEAAAAAAAABAAAAIEgBAAAAAAAASAEAAAAAAAABAAAALA",
					"AgAAAAAAAAABAAAASgEAAAAAAABKAQAAAAAAAAAAAAAAAPC/AQAAAAEAAACXAQAAAAAAAJcBAAAAAAAAAAAAAAAA8L8"
				],
				[
					201,
					1,
					"paste",
					null,
					"AQAAADABAAAAAAAAQgEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAMAEAAAAAAAAwAQAAAAAAAAAAAAAAAPC/AQAAAAEAAACVAQAAAAAAAJUBAAAAAAAAAAAAAAAA8L8"
				],
				[
					202,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAEIBAAAAAAAAQwEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQgEAAAAAAABCAQAAAAAAAAAAAAAAAPC/AQAAAAEAAACnAQAAAAAAAKcBAAAAAAAAAAAAAAAA8L8"
				],
				[
					203,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEMBAAAAAAAARAEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQwEAAAAAAABDAQAAAAAAAAAAAAAAAPC/AQAAAAEAAACoAQAAAAAAAKgBAAAAAAAAAAAAAAAA8L8"
				],
				[
					208,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAFwBAAAAAAAAXQEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAARAEAAAAAAABEAQAAAAAAAAAAAAAAAPC/AQAAAAEAAABcAQAAAAAAAFwBAAAAAAAAAAAAAAAA8L8"
				],
				[
					209,
					1,
					"insert",
					{
						"characters": " u32"
					},
					"BAAAAF0BAAAAAAAAXgEAAAAAAAAAAAAAXgEAAAAAAABfAQAAAAAAAAAAAABfAQAAAAAAAGABAAAAAAAAAAAAAGABAAAAAAAAYQEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAARAEAAAAAAABEAQAAAAAAAAAAAAAAAPC/AQAAAAEAAABdAQAAAAAAAF0BAAAAAAAAAAAAAAAA8L8"
				],
				[
					210,
					2,
					"rust_fmt_format_buffer",
					null,
					"AQAAAGIBAAAAAAAAagEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAARAEAAAAAAABEAQAAAAAAAAAAAAAAAPC/AQAAAAEAAABhAQAAAAAAAGEBAAAAAAAAAAAAAAAA8L8"
				],
				[
					216,
					1,
					"insert",
					{
						"characters": "location:"
					},
					"CQAAAF4BAAAAAAAAXwEAAAAAAAAAAAAAXwEAAAAAAABgAQAAAAAAAAAAAABgAQAAAAAAAGEBAAAAAAAAAAAAAGEBAAAAAAAAYgEAAAAAAAAAAAAAYgEAAAAAAABjAQAAAAAAAAAAAABjAQAAAAAAAGQBAAAAAAAAAAAAAGQBAAAAAAAAZQEAAAAAAAAAAAAAZQEAAAAAAABmAQAAAAAAAAAAAABmAQAAAAAAAGcBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAXgEAAAAAAABeAQAAAAAAAAAAAAAAAPC/AQAAAAEAAABhAQAAAAAAAGEBAAAAAAAAAAAAAABQgUA"
				],
				[
					217,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAGcBAAAAAAAAaAEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAZwEAAAAAAABnAQAAAAAAAAAAAAAAAPC/AQAAAAEAAABqAQAAAAAAAGoBAAAAAAAAAAAAAAAA8L8"
				],
				[
					218,
					2,
					"rust_fmt_format_buffer",
					null,
					"CAAAACkBAAAAAAAAMgEAAAAAAAAAAAAAOAEAAAAAAABAAQAAAAAAAAAAAABUAQAAAAAAAFwBAAAAAAAAAAAAAHYBAAAAAAAAfgEAAAAAAAAAAAAAjAEAAAAAAACMAQAAAAAAAAEAAAApjAEAAAAAAACNAQAAAAAAAAAAAACSAQAAAAAAAJIBAAAAAAAAAwAAACAgIJIBAAAAAAAAkwEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAaAEAAAAAAABoAQAAAAAAAAAAAAAAAPC/AQAAAAEAAABrAQAAAAAAAGsBAAAAAAAAAAAAAAAA8L8"
				],
				[
					226,
					2,
					"left_delete",
					null,
					"AgAAAI4BAAAAAAAAjgEAAAAAAAAEAAAAICAgII0BAAAAAAAAjQEAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAiQEAAAAAAACJAQAAAAAAAAAAAAAAAPC/AQAAAAEAAACSAQAAAAAAAI4BAAAAAAAAAAAAAAAAAAA"
				],
				[
					227,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAI0BAAAAAAAAjgEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAiQEAAAAAAACJAQAAAAAAAAAAAAAAAPC/AQAAAAEAAACNAQAAAAAAAI0BAAAAAAAAAAAAAAAA8L8"
				],
				[
					230,
					2,
					"left_delete",
					null,
					"AgAAAHcBAAAAAAAAdwEAAAAAAAAIAAAAICAgICAgICB2AQAAAAAAAHYBAAAAAAAAAQAAAAo",
					"AgAAAAAAAAABAAAAiQEAAAAAAACJAQAAAAAAAAAAAAAAAPC/AQAAAAEAAAB/AQAAAAAAAHcBAAAAAAAAAAAAAAAAAAA"
				],
				[
					231,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHYBAAAAAAAAdwEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAgAEAAAAAAACAAQAAAAAAAAAAAAAAAPC/AQAAAAEAAAB2AQAAAAAAAHYBAAAAAAAAAAAAAAAA8L8"
				],
				[
					234,
					2,
					"left_delete",
					null,
					"AgAAAFUBAAAAAAAAVQEAAAAAAAAIAAAAICAgICAgICBUAQAAAAAAAFQBAAAAAAAAAQAAAAo",
					"AgAAAAAAAAABAAAAgQEAAAAAAACBAQAAAAAAAAAAAAAAAPC/AQAAAAEAAABdAQAAAAAAAFUBAAAAAAAAAAAAAAAAAAA"
				],
				[
					235,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFQBAAAAAAAAVQEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAeAEAAAAAAAB4AQAAAAAAAAAAAAAAAPC/AQAAAAEAAABUAQAAAAAAAFQBAAAAAAAAAAAAAAAA8L8"
				],
				[
					238,
					2,
					"left_delete",
					null,
					"AgAAADkBAAAAAAAAOQEAAAAAAAAIAAAAICAgICAgICA4AQAAAAAAADgBAAAAAAAAAQAAAAo",
					"AgAAAAAAAAABAAAAeQEAAAAAAAB5AQAAAAAAAAAAAAAAAPC/AQAAAAEAAABBAQAAAAAAADkBAAAAAAAAAAAAAAAAAAA"
				],
				[
					239,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADgBAAAAAAAAOQEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAcAEAAAAAAABwAQAAAAAAAAAAAAAAAPC/AQAAAAEAAAA4AQAAAAAAADgBAAAAAAAAAAAAAAAA8L8"
				],
				[
					242,
					2,
					"left_delete",
					null,
					"AgAAACoBAAAAAAAAKgEAAAAAAAAIAAAAICAgICAgICApAQAAAAAAACkBAAAAAAAAAQAAAAo",
					"AgAAAAAAAAABAAAAcQEAAAAAAABxAQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAyAQAAAAAAACoBAAAAAAAAAAAAAAAAAAA"
				],
				[
					243,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACkBAAAAAAAAKgEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAaAEAAAAAAABoAQAAAAAAAAAAAAAAAPC/AQAAAAEAAAApAQAAAAAAACkBAAAAAAAAAAAAAAAA8L8"
				],
				[
					246,
					1,
					"left_delete",
					null,
					"AQAAACkBAAAAAAAAKQEAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAaQEAAAAAAABpAQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAqAQAAAAAAACoBAAAAAAAAAAAAAAAA8L8"
				],
				[
					247,
					2,
					"rust_fmt_format_buffer",
					null,
					"BQAAACkBAAAAAAAAMgEAAAAAAAAAAAAAOAEAAAAAAABAAQAAAAAAAAAAAABUAQAAAAAAAFwBAAAAAAAAAAAAAHYBAAAAAAAAfgEAAAAAAAAAAAAAjQEAAAAAAACRAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAaAEAAAAAAABoAQAAAAAAAAAAAAAAAPC/AQAAAAEAAAApAQAAAAAAACkBAAAAAAAAAAAAAAAA8L8"
				],
				[
					252,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAABMBAAAAAAAAFAEAAAAAAAAAAAAAFAEAAAAAAAAYAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAiQEAAAAAAACJAQAAAAAAAAAAAAAAAPC/AQAAAAEAAAATAQAAAAAAABMBAAAAAAAA////////738"
				],
				[
					255,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAOMAAAAAAAAA5AAAAAAAAAAAAAAA5AAAAAAAAADoAAAAAAAAAAAAAAAZAQAAAAAAABkBAAAAAAAABAAAACAgICA",
					"AgAAAAAAAAABAAAAjgEAAAAAAACOAQAAAAAAAAAAAAAAAPC/AQAAAAEAAADjAAAAAAAAAOMAAAAAAAAA////////738"
				],
				[
					256,
					2,
					"rust_fmt_format_buffer",
					null,
					"AQAAAOQAAAAAAAAA5AAAAAAAAAAEAAAAICAgIA",
					"AgAAAAAAAAABAAAAjwEAAAAAAACPAQAAAAAAAAAAAAAAAPC/AQAAAAEAAADoAAAAAAAAAOgAAAAAAAAAAAAAAAAA8L8"
				],
				[
					278,
					1,
					"insert",
					{
						"characters": "\n\nfn"
					},
					"BwAAAKsBAAAAAAAArAEAAAAAAAAAAAAArAEAAAAAAACwAQAAAAAAAAAAAACwAQAAAAAAALEBAAAAAAAAAAAAALEBAAAAAAAAtQEAAAAAAAAAAAAArAEAAAAAAACsAQAAAAAAAAQAAAAgICAgsQEAAAAAAACyAQAAAAAAAAAAAACyAQAAAAAAALMBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAiwEAAAAAAACLAQAAAAAAAAAAAAAAAPC/AQAAAAEAAACrAQAAAAAAAKsBAAAAAAAA////////738"
				],
				[
					279,
					1,
					"insert",
					{
						"characters": " render->"
					},
					"CQAAALMBAAAAAAAAtAEAAAAAAAAAAAAAtAEAAAAAAAC1AQAAAAAAAAAAAAC1AQAAAAAAALYBAAAAAAAAAAAAALYBAAAAAAAAtwEAAAAAAAAAAAAAtwEAAAAAAAC4AQAAAAAAAAAAAAC4AQAAAAAAALkBAAAAAAAAAAAAALkBAAAAAAAAugEAAAAAAAAAAAAAugEAAAAAAAC7AQAAAAAAAAAAAAC7AQAAAAAAALwBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAiwEAAAAAAACLAQAAAAAAAAAAAAAAAPC/AQAAAAEAAACzAQAAAAAAALMBAAAAAAAAAAAAAAAA8L8"
				],
				[
					280,
					2,
					"left_delete",
					null,
					"AgAAALsBAAAAAAAAuwEAAAAAAAABAAAAProBAAAAAAAAugEAAAAAAAABAAAALQ",
					"AgAAAAAAAAABAAAAiwEAAAAAAACLAQAAAAAAAAAAAAAAAPC/AQAAAAEAAAC8AQAAAAAAALwBAAAAAAAAAAAAAAAA8L8"
				],
				[
					281,
					1,
					"insert",
					{
						"characters": "&"
					},
					"AQAAALoBAAAAAAAAuwEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAiwEAAAAAAACLAQAAAAAAAAAAAAAAAPC/AQAAAAEAAAC6AQAAAAAAALoBAAAAAAAAAAAAAAAA8L8"
				],
				[
					282,
					1,
					"left_delete",
					null,
					"AQAAALoBAAAAAAAAugEAAAAAAAABAAAAJg",
					"AgAAAAAAAAABAAAAiwEAAAAAAACLAQAAAAAAAAAAAAAAAPC/AQAAAAEAAAC7AQAAAAAAALsBAAAAAAAAAAAAAAAA8L8"
				],
				[
					283,
					1,
					"insert",
					{
						"characters": "&"
					},
					"AQAAALoBAAAAAAAAuwEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAiwEAAAAAAACLAQAAAAAAAAAAAAAAAPC/AQAAAAEAAAC6AQAAAAAAALoBAAAAAAAAAAAAAAAA8L8"
				],
				[
					284,
					1,
					"left_delete",
					null,
					"AQAAALoBAAAAAAAAugEAAAAAAAABAAAAJg",
					"AgAAAAAAAAABAAAAiwEAAAAAAACLAQAAAAAAAAAAAAAAAPC/AQAAAAEAAAC7AQAAAAAAALsBAAAAAAAAAAAAAAAA8L8"
				],
				[
					285,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAALoBAAAAAAAAvAEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAiwEAAAAAAACLAQAAAAAAAAAAAAAAAPC/AQAAAAEAAAC6AQAAAAAAALoBAAAAAAAAAAAAAAAA8L8"
				],
				[
					286,
					1,
					"insert",
					{
						"characters": "sel"
					},
					"AwAAALsBAAAAAAAAvAEAAAAAAAAAAAAAvAEAAAAAAAC9AQAAAAAAAAAAAAC9AQAAAAAAAL4BAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAiwEAAAAAAACLAQAAAAAAAAAAAAAAAPC/AQAAAAEAAAC7AQAAAAAAALsBAAAAAAAAAAAAAAAA8L8"
				],
				[
					287,
					2,
					"left_delete",
					null,
					"AgAAAL0BAAAAAAAAvQEAAAAAAAABAAAAbLwBAAAAAAAAvAEAAAAAAAABAAAAZQ",
					"AgAAAAAAAAABAAAAiwEAAAAAAACLAQAAAAAAAAAAAAAAAPC/AQAAAAEAAAC+AQAAAAAAAL4BAAAAAAAAAAAAAAAA8L8"
				],
				[
					288,
					1,
					"insert",
					{
						"characters": "elf"
					},
					"AwAAALwBAAAAAAAAvQEAAAAAAAAAAAAAvQEAAAAAAAC+AQAAAAAAAAAAAAC+AQAAAAAAAL8BAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAiwEAAAAAAACLAQAAAAAAAAAAAAAAAPC/AQAAAAEAAAC8AQAAAAAAALwBAAAAAAAAAAAAAAAA8L8"
				],
				[
					290,
					1,
					"insert",
					{
						"characters": "&"
					},
					"AQAAALsBAAAAAAAAvAEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAiwEAAAAAAACLAQAAAAAAAAAAAAAAAPC/AQAAAAEAAAC7AQAAAAAAALsBAAAAAAAAAAAAAAAA8L8"
				],
				[
					294,
					1,
					"insert",
					{
						"characters": " ->"
					},
					"AwAAAMEBAAAAAAAAwgEAAAAAAAAAAAAAwgEAAAAAAADDAQAAAAAAAAAAAADDAQAAAAAAAMQBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAiwEAAAAAAACLAQAAAAAAAAAAAAAAAPC/AQAAAAEAAADBAQAAAAAAAMEBAAAAAAAA////////738"
				],
				[
					295,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMQBAAAAAAAAxQEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAiwEAAAAAAACLAQAAAAAAAAAAAAAAAPC/AQAAAAEAAADEAQAAAAAAAMQBAAAAAAAAAAAAAAAA8L8"
				],
				[
					296,
					4,
					"left_delete",
					null,
					"BAAAAMQBAAAAAAAAxAEAAAAAAAABAAAAIMMBAAAAAAAAwwEAAAAAAAABAAAAPsIBAAAAAAAAwgEAAAAAAAABAAAALcEBAAAAAAAAwQEAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAiwEAAAAAAACLAQAAAAAAAAAAAAAAAPC/AQAAAAEAAADFAQAAAAAAAMUBAAAAAAAAAAAAAAAA8L8"
				],
				[
					297,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAMEBAAAAAAAAwgEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAiwEAAAAAAACLAQAAAAAAAAAAAAAAAPC/AQAAAAEAAADBAQAAAAAAAMEBAAAAAAAAAAAAAAAA8L8"
				],
				[
					316,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAMABAAAAAAAAwQEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAiwEAAAAAAACLAQAAAAAAAAAAAAAAAPC/AQAAAAEAAADAAQAAAAAAAMABAAAAAAAAAAAAAAAA8L8"
				],
				[
					317,
					1,
					"insert",
					{
						"characters": " prog_"
					},
					"BgAAAMEBAAAAAAAAwgEAAAAAAAAAAAAAwgEAAAAAAADDAQAAAAAAAAAAAADDAQAAAAAAAMQBAAAAAAAAAAAAAMQBAAAAAAAAxQEAAAAAAAAAAAAAxQEAAAAAAADGAQAAAAAAAAAAAADGAQAAAAAAAMcBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAiwEAAAAAAACLAQAAAAAAAAAAAAAAAPC/AQAAAAEAAADBAQAAAAAAAMEBAAAAAAAAAAAAAAAA8L8"
				],
				[
					318,
					1,
					"insert",
					{
						"characters": "id"
					},
					"AgAAAMcBAAAAAAAAyAEAAAAAAAAAAAAAyAEAAAAAAADJAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAiwEAAAAAAACLAQAAAAAAAAAAAAAAAPC/AQAAAAEAAADHAQAAAAAAAMcBAAAAAAAAAAAAAAAA8L8"
				],
				[
					319,
					7,
					"left_delete",
					null,
					"BwAAAMgBAAAAAAAAyAEAAAAAAAABAAAAZMcBAAAAAAAAxwEAAAAAAAABAAAAacYBAAAAAAAAxgEAAAAAAAABAAAAX8UBAAAAAAAAxQEAAAAAAAABAAAAZ8QBAAAAAAAAxAEAAAAAAAABAAAAb8MBAAAAAAAAwwEAAAAAAAABAAAAcsIBAAAAAAAAwgEAAAAAAAABAAAAcA",
					"AgAAAAAAAAABAAAAiwEAAAAAAACLAQAAAAAAAAAAAAAAAPC/AQAAAAEAAADJAQAAAAAAAMkBAAAAAAAAAAAAAAAA8L8"
				],
				[
					320,
					1,
					"insert",
					{
						"characters": "u32"
					},
					"AwAAAMIBAAAAAAAAwwEAAAAAAAAAAAAAwwEAAAAAAADEAQAAAAAAAAAAAADEAQAAAAAAAMUBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAiwEAAAAAAACLAQAAAAAAAAAAAAAAAPC/AQAAAAEAAADCAQAAAAAAAMIBAAAAAAAAAAAAAAAA8L8"
				],
				[
					322,
					1,
					"insert",
					{
						"characters": "prog_id:"
					},
					"CAAAAMIBAAAAAAAAwwEAAAAAAAAAAAAAwwEAAAAAAADEAQAAAAAAAAAAAADEAQAAAAAAAMUBAAAAAAAAAAAAAMUBAAAAAAAAxgEAAAAAAAAAAAAAxgEAAAAAAADHAQAAAAAAAAAAAADHAQAAAAAAAMgBAAAAAAAAAAAAAMgBAAAAAAAAyQEAAAAAAAAAAAAAyQEAAAAAAADKAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAiwEAAAAAAACLAQAAAAAAAAAAAAAAAPC/AQAAAAEAAADCAQAAAAAAAMIBAAAAAAAAAAAAAAAA8L8"
				],
				[
					323,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMoBAAAAAAAAywEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAiwEAAAAAAACLAQAAAAAAAAAAAAAAAPC/AQAAAAEAAADKAQAAAAAAAMoBAAAAAAAAAAAAAAAA8L8"
				],
				[
					329,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAM4BAAAAAAAAzwEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAiwEAAAAAAACLAQAAAAAAAAAAAAAAAPC/AQAAAAEAAADOAQAAAAAAAM4BAAAAAAAAAAAAAAAA8L8"
				],
				[
					330,
					1,
					"insert",
					{
						"characters": " vo:"
					},
					"BAAAAM8BAAAAAAAA0AEAAAAAAAAAAAAA0AEAAAAAAADRAQAAAAAAAAAAAADRAQAAAAAAANIBAAAAAAAAAAAAANIBAAAAAAAA0wEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAiwEAAAAAAACLAQAAAAAAAAAAAAAAAPC/AQAAAAEAAADPAQAAAAAAAM8BAAAAAAAAAAAAAAAA8L8"
				],
				[
					331,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANMBAAAAAAAA1AEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAiwEAAAAAAACLAQAAAAAAAAAAAAAAAPC/AQAAAAEAAADTAQAAAAAAANMBAAAAAAAAAAAAAAAA8L8"
				],
				[
					332,
					2,
					"left_delete",
					null,
					"AgAAANMBAAAAAAAA0wEAAAAAAAABAAAAINIBAAAAAAAA0gEAAAAAAAABAAAAOg",
					"AgAAAAAAAAABAAAAiwEAAAAAAACLAQAAAAAAAAAAAAAAAPC/AQAAAAEAAADUAQAAAAAAANQBAAAAAAAAAAAAAAAA8L8"
				],
				[
					333,
					1,
					"insert",
					{
						"characters": "o"
					},
					"AQAAANIBAAAAAAAA0wEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAiwEAAAAAAACLAQAAAAAAAAAAAAAAAPC/AQAAAAEAAADSAQAAAAAAANIBAAAAAAAAAAAAAAAA8L8"
				],
				[
					334,
					2,
					"left_delete",
					null,
					"AgAAANIBAAAAAAAA0gEAAAAAAAABAAAAb9EBAAAAAAAA0QEAAAAAAAABAAAAbw",
					"AgAAAAAAAAABAAAAiwEAAAAAAACLAQAAAAAAAAAAAAAAAPC/AQAAAAEAAADTAQAAAAAAANMBAAAAAAAAAAAAAAAA8L8"
				],
				[
					335,
					1,
					"insert",
					{
						"characters": "ao:"
					},
					"AwAAANEBAAAAAAAA0gEAAAAAAAAAAAAA0gEAAAAAAADTAQAAAAAAAAAAAADTAQAAAAAAANQBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAiwEAAAAAAACLAQAAAAAAAAAAAAAAAPC/AQAAAAEAAADRAQAAAAAAANEBAAAAAAAAAAAAAAAA8L8"
				],
				[
					336,
					1,
					"insert",
					{
						"characters": " &Vao"
					},
					"BQAAANQBAAAAAAAA1QEAAAAAAAAAAAAA1QEAAAAAAADWAQAAAAAAAAAAAADWAQAAAAAAANcBAAAAAAAAAAAAANcBAAAAAAAA2AEAAAAAAAAAAAAA2AEAAAAAAADZAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAiwEAAAAAAACLAQAAAAAAAAAAAAAAAPC/AQAAAAEAAADUAQAAAAAAANQBAAAAAAAAAAAAAAAA8L8"
				],
				[
					341,
					1,
					"insert",
					{
						"characters": "vao::"
					},
					"BQAAANYBAAAAAAAA1wEAAAAAAAAAAAAA1wEAAAAAAADYAQAAAAAAAAAAAADYAQAAAAAAANkBAAAAAAAAAAAAANkBAAAAAAAA2gEAAAAAAAAAAAAA2gEAAAAAAADbAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA2QEAAAAAAADZAQAAAAAAAAAAAAAAAPC/AQAAAAEAAADWAQAAAAAAANYBAAAAAAAAAAAAAAAA8L8"
				],
				[
					349,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAN4BAAAAAAAA3wEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA3gEAAAAAAADeAQAAAAAAAAAAAAAAAPC/AQAAAAEAAADeAQAAAAAAAN4BAAAAAAAAAAAAAAAA8L8"
				],
				[
					350,
					1,
					"insert",
					{
						"characters": " indecies:"
					},
					"CgAAAN8BAAAAAAAA4AEAAAAAAAAAAAAA4AEAAAAAAADhAQAAAAAAAAAAAADhAQAAAAAAAOIBAAAAAAAAAAAAAOIBAAAAAAAA4wEAAAAAAAAAAAAA4wEAAAAAAADkAQAAAAAAAAAAAADkAQAAAAAAAOUBAAAAAAAAAAAAAOUBAAAAAAAA5gEAAAAAAAAAAAAA5gEAAAAAAADnAQAAAAAAAAAAAADnAQAAAAAAAOgBAAAAAAAAAAAAAOgBAAAAAAAA6QEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA3wEAAAAAAADfAQAAAAAAAAAAAAAAAPC/AQAAAAEAAADfAQAAAAAAAN8BAAAAAAAAAAAAAAAA8L8"
				],
				[
					351,
					1,
					"insert",
					{
						"characters": " vec<"
					},
					"BQAAAOkBAAAAAAAA6gEAAAAAAAAAAAAA6gEAAAAAAADrAQAAAAAAAAAAAADrAQAAAAAAAOwBAAAAAAAAAAAAAOwBAAAAAAAA7QEAAAAAAAAAAAAA7QEAAAAAAADuAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA6QEAAAAAAADpAQAAAAAAAAAAAAAAAPC/AQAAAAEAAADpAQAAAAAAAOkBAAAAAAAAAAAAAAAA8L8"
				],
				[
					352,
					1,
					"insert",
					{
						"characters": "u32>"
					},
					"BAAAAO4BAAAAAAAA7wEAAAAAAAAAAAAA7wEAAAAAAADwAQAAAAAAAAAAAADwAQAAAAAAAPEBAAAAAAAAAAAAAPEBAAAAAAAA8gEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA7gEAAAAAAADuAQAAAAAAAAAAAAAAAPC/AQAAAAEAAADuAQAAAAAAAO4BAAAAAAAAAAAAAAAA8L8"
				],
				[
					358,
					1,
					"left_delete",
					null,
					"AQAAAOoBAAAAAAAA6gEAAAAAAAABAAAAdg",
					"AgAAAAAAAAABAAAA6wEAAAAAAADrAQAAAAAAAAAAAAAAAPC/AQAAAAEAAADyAQAAAAAAAPIBAAAAAAAAAAAAAAAA8L8"
				],
				[
					359,
					1,
					"insert",
					{
						"characters": "V"
					},
					"AQAAAOoBAAAAAAAA6wEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA6gEAAAAAAADqAQAAAAAAAAAAAAAAAPC/AQAAAAEAAADxAQAAAAAAAPEBAAAAAAAAAAAAAAAA8L8"
				],
				[
					367,
					1,
					"insert",
					{
						"characters": "&mut"
					},
					"BAAAAOoBAAAAAAAA6wEAAAAAAAAAAAAA6wEAAAAAAADsAQAAAAAAAAAAAADsAQAAAAAAAO0BAAAAAAAAAAAAAO0BAAAAAAAA7gEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA6wEAAAAAAADrAQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqAQAAAAAAAOoBAAAAAAAAAAAAAAAA8L8"
				],
				[
					368,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAO4BAAAAAAAA7wEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA7wEAAAAAAADvAQAAAAAAAAAAAAAAAPC/AQAAAAEAAADuAQAAAAAAAO4BAAAAAAAAAAAAAAAA8L8"
				],
				[
					372,
					1,
					"left_delete",
					null,
					"AQAAAOsBAAAAAAAA6wEAAAAAAAAEAAAAbXV0IA",
					"AgAAAAAAAAABAAAA8AEAAAAAAADwAQAAAAAAAAAAAAAAAPC/AQAAAAEAAADvAQAAAAAAAOsBAAAAAAAAAAAAAAAA8L8"
				],
				[
					382,
					1,
					"left_delete",
					null,
					"AQAAANcAAAAAAAAA1wAAAAAAAAABAAAAaQ",
					"AgAAAAAAAAABAAAA7AEAAAAAAADsAQAAAAAAAAAAAAAAAPC/AQAAAAEAAADYAAAAAAAAANgAAAAAAAAAAAAAAAAA8L8"
				],
				[
					383,
					1,
					"insert",
					{
						"characters": "u"
					},
					"AQAAANcAAAAAAAAA2AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA6wEAAAAAAADrAQAAAAAAAAAAAAAAAPC/AQAAAAEAAADXAAAAAAAAANcAAAAAAAAAAAAAAAAA8L8"
				],
				[
					390,
					1,
					"insert",
					{
						"characters": "u32"
					},
					"BAAAANYBAAAAAAAA1wEAAAAAAAAAAAAA1wEAAAAAAADXAQAAAAAAAAgAAAB2YW86OlZhb9cBAAAAAAAA2AEAAAAAAAAAAAAA2AEAAAAAAADZAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA7AEAAAAAAADsAQAAAAAAAAAAAAAAAPC/AQAAAAEAAADeAQAAAAAAANYBAAAAAAAAAAAAAAAA8L8"
				],
				[
					392,
					1,
					"left_delete",
					null,
					"AQAAANUBAAAAAAAA1QEAAAAAAAABAAAAJg",
					"AgAAAAAAAAABAAAA5wEAAAAAAADnAQAAAAAAAAAAAAAAAPC/AQAAAAEAAADWAQAAAAAAANYBAAAAAAAAAAAAAAAA8L8"
				],
				[
					394,
					1,
					"insert",
					{
						"characters": "_id"
					},
					"AwAAANMBAAAAAAAA1AEAAAAAAAAAAAAA1AEAAAAAAADVAQAAAAAAAAAAAADVAQAAAAAAANYBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA5gEAAAAAAADmAQAAAAAAAAAAAAAAAPC/AQAAAAEAAADTAQAAAAAAANMBAAAAAAAAAAAAAAAA8L8"
				],
				[
					402,
					1,
					"insert",
					{
						"characters": "\npub"
					},
					"BAAAAEkAAAAAAAAASgAAAAAAAAAAAAAASgAAAAAAAABLAAAAAAAAAAAAAABLAAAAAAAAAEwAAAAAAAAAAAAAAEwAAAAAAAAATQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAASQAAAAAAAABJAAAAAAAAAP///////+9/AQAAAAEAAADWAQAAAAAAANYBAAAAAAAAAAAAAAAA8L8"
				],
				[
					403,
					1,
					"insert",
					{
						"characters": " mod"
					},
					"BAAAAE0AAAAAAAAATgAAAAAAAAAAAAAATgAAAAAAAABPAAAAAAAAAAAAAABPAAAAAAAAAFAAAAAAAAAAAAAAAFAAAAAAAAAAUQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAATQAAAAAAAABNAAAAAAAAAAAAAAAAAPC/AQAAAAEAAADaAQAAAAAAANoBAAAAAAAAAAAAAAAA8L8"
				],
				[
					404,
					1,
					"insert",
					{
						"characters": " render"
					},
					"BwAAAFEAAAAAAAAAUgAAAAAAAAAAAAAAUgAAAAAAAABTAAAAAAAAAAAAAABTAAAAAAAAAFQAAAAAAAAAAAAAAFQAAAAAAAAAVQAAAAAAAAAAAAAAVQAAAAAAAABWAAAAAAAAAAAAAABWAAAAAAAAAFcAAAAAAAAAAAAAAFcAAAAAAAAAWAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAUQAAAAAAAABRAAAAAAAAAAAAAAAAAPC/AQAAAAEAAADeAQAAAAAAAN4BAAAAAAAAAAAAAAAA8L8"
				],
				[
					405,
					1,
					"left_delete",
					null,
					"AQAAAFcAAAAAAAAAVwAAAAAAAAABAAAAcg",
					"AgAAAAAAAAABAAAAWAAAAAAAAABYAAAAAAAAAAAAAAAAAPC/AQAAAAEAAADlAQAAAAAAAOUBAAAAAAAAAAAAAAAA8L8"
				],
				[
					406,
					1,
					"insert",
					{
						"characters": "r_command:"
					},
					"CgAAAFcAAAAAAAAAWAAAAAAAAAAAAAAAWAAAAAAAAABZAAAAAAAAAAAAAABZAAAAAAAAAFoAAAAAAAAAAAAAAFoAAAAAAAAAWwAAAAAAAAAAAAAAWwAAAAAAAABcAAAAAAAAAAAAAABcAAAAAAAAAF0AAAAAAAAAAAAAAF0AAAAAAAAAXgAAAAAAAAAAAAAAXgAAAAAAAABfAAAAAAAAAAAAAABfAAAAAAAAAGAAAAAAAAAAAAAAAGAAAAAAAAAAYQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAVwAAAAAAAABXAAAAAAAAAAAAAAAAAPC/AQAAAAEAAADkAQAAAAAAAOQBAAAAAAAAAAAAAAAA8L8"
				],
				[
					409,
					1,
					"left_delete",
					null,
					"AQAAAGAAAAAAAAAAYAAAAAAAAAABAAAAOg",
					"AgAAAAAAAAABAAAAYQAAAAAAAABhAAAAAAAAAAAAAAAAAPC/AQAAAAEAAADuAQAAAAAAAO4BAAAAAAAAAAAAAAAA8L8"
				],
				[
					410,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAGAAAAAAAAAAYQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAYAAAAAAAAABgAAAAAAAAAAAAAAAAAPC/AQAAAAEAAADtAQAAAAAAAO0BAAAAAAAAAAAAAAAA8L8"
				],
				[
					411,
					2,
					"rust_fmt_format_buffer",
					null,
					"AgAAAEUAAAAAAAAARQAAAAAAAAANAAAAdmFvOwpwdWIgbW9kIFMAAAAAAAAAYAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAYQAAAAAAAABhAAAAAAAAAAAAAAAAAPC/AQAAAAEAAADuAQAAAAAAAO4BAAAAAAAAAAAAAAAA8L8"
				],
				[
					414,
					1,
					"insert",
					{
						"characters": "\npub"
					},
					"BAAAAEACAAAAAAAAQQIAAAAAAAAAAAAAQQIAAAAAAABCAgAAAAAAAAAAAABCAgAAAAAAAEMCAAAAAAAAAAAAAEMCAAAAAAAARAIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQAIAAAAAAABAAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADuAQAAAAAAAO4BAAAAAAAAAAAAAAAA8L8"
				],
				[
					415,
					1,
					"insert",
					{
						"characters": " fn"
					},
					"AwAAAEQCAAAAAAAARQIAAAAAAAAAAAAARQIAAAAAAABGAgAAAAAAAAAAAABGAgAAAAAAAEcCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAARAIAAAAAAABEAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADuAQAAAAAAAO4BAAAAAAAAAAAAAAAA8L8"
				],
				[
					416,
					1,
					"insert",
					{
						"characters": " Render"
					},
					"BwAAAEcCAAAAAAAASAIAAAAAAAAAAAAASAIAAAAAAABJAgAAAAAAAAAAAABJAgAAAAAAAEoCAAAAAAAAAAAAAEoCAAAAAAAASwIAAAAAAAAAAAAASwIAAAAAAABMAgAAAAAAAAAAAABMAgAAAAAAAE0CAAAAAAAAAAAAAE0CAAAAAAAATgIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAARwIAAAAAAABHAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADuAQAAAAAAAO4BAAAAAAAAAAAAAAAA8L8"
				],
				[
					417,
					6,
					"left_delete",
					null,
					"BgAAAE0CAAAAAAAATQIAAAAAAAABAAAAckwCAAAAAAAATAIAAAAAAAABAAAAZUsCAAAAAAAASwIAAAAAAAABAAAAZEoCAAAAAAAASgIAAAAAAAABAAAAbkkCAAAAAAAASQIAAAAAAAABAAAAZUgCAAAAAAAASAIAAAAAAAABAAAAUg",
					"AgAAAAAAAAABAAAATgIAAAAAAABOAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADuAQAAAAAAAO4BAAAAAAAAAAAAAAAA8L8"
				],
				[
					418,
					1,
					"insert",
					{
						"characters": "Queue"
					},
					"BQAAAEgCAAAAAAAASQIAAAAAAAAAAAAASQIAAAAAAABKAgAAAAAAAAAAAABKAgAAAAAAAEsCAAAAAAAAAAAAAEsCAAAAAAAATAIAAAAAAAAAAAAATAIAAAAAAABNAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAASAIAAAAAAABIAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADuAQAAAAAAAO4BAAAAAAAAAAAAAAAA8L8"
				],
				[
					419,
					5,
					"left_delete",
					null,
					"BQAAAEwCAAAAAAAATAIAAAAAAAABAAAAZUsCAAAAAAAASwIAAAAAAAABAAAAdUoCAAAAAAAASgIAAAAAAAABAAAAZUkCAAAAAAAASQIAAAAAAAABAAAAdUgCAAAAAAAASAIAAAAAAAABAAAAUQ",
					"AgAAAAAAAAABAAAATQIAAAAAAABNAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADuAQAAAAAAAO4BAAAAAAAAAAAAAAAA8L8"
				],
				[
					420,
					1,
					"insert",
					{
						"characters": "COmm"
					},
					"BAAAAEgCAAAAAAAASQIAAAAAAAAAAAAASQIAAAAAAABKAgAAAAAAAAAAAABKAgAAAAAAAEsCAAAAAAAAAAAAAEsCAAAAAAAATAIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAASAIAAAAAAABIAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADuAQAAAAAAAO4BAAAAAAAAAAAAAAAA8L8"
				],
				[
					421,
					3,
					"left_delete",
					null,
					"AwAAAEsCAAAAAAAASwIAAAAAAAABAAAAbUoCAAAAAAAASgIAAAAAAAABAAAAbUkCAAAAAAAASQIAAAAAAAABAAAATw",
					"AgAAAAAAAAABAAAATAIAAAAAAABMAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADuAQAAAAAAAO4BAAAAAAAAAAAAAAAA8L8"
				],
				[
					422,
					1,
					"insert",
					{
						"characters": "ommand"
					},
					"BgAAAEkCAAAAAAAASgIAAAAAAAAAAAAASgIAAAAAAABLAgAAAAAAAAAAAABLAgAAAAAAAEwCAAAAAAAAAAAAAEwCAAAAAAAATQIAAAAAAAAAAAAATQIAAAAAAABOAgAAAAAAAAAAAABOAgAAAAAAAE8CAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAASQIAAAAAAABJAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADuAQAAAAAAAO4BAAAAAAAAAAAAAAAA8L8"
				],
				[
					423,
					2,
					"left_delete",
					null,
					"AgAAAE4CAAAAAAAATgIAAAAAAAABAAAAZE0CAAAAAAAATQIAAAAAAAABAAAAbg",
					"AgAAAAAAAAABAAAATwIAAAAAAABPAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADuAQAAAAAAAO4BAAAAAAAAAAAAAAAA8L8"
				],
				[
					425,
					1,
					"insert",
					{
						"characters": "Set"
					},
					"BAAAAEgCAAAAAAAASQIAAAAAAAAAAAAASQIAAAAAAABJAgAAAAAAAAUAAABDb21tYUkCAAAAAAAASgIAAAAAAAAAAAAASgIAAAAAAABLAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAATQIAAAAAAABIAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADuAQAAAAAAAO4BAAAAAAAAAAAAAAAA8L8"
				],
				[
					426,
					3,
					"left_delete",
					null,
					"AwAAAEoCAAAAAAAASgIAAAAAAAABAAAAdEkCAAAAAAAASQIAAAAAAAABAAAAZUgCAAAAAAAASAIAAAAAAAABAAAAUw",
					"AgAAAAAAAAABAAAASwIAAAAAAABLAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADuAQAAAAAAAO4BAAAAAAAAAAAAAAAA8L8"
				],
				[
					427,
					1,
					"insert",
					{
						"characters": "Rend"
					},
					"BAAAAEgCAAAAAAAASQIAAAAAAAAAAAAASQIAAAAAAABKAgAAAAAAAAAAAABKAgAAAAAAAEsCAAAAAAAAAAAAAEsCAAAAAAAATAIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAASAIAAAAAAABIAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADuAQAAAAAAAO4BAAAAAAAAAAAAAAAA8L8"
				],
				[
					428,
					4,
					"left_delete",
					null,
					"BAAAAEsCAAAAAAAASwIAAAAAAAABAAAAZEoCAAAAAAAASgIAAAAAAAABAAAAbkkCAAAAAAAASQIAAAAAAAABAAAAZUgCAAAAAAAASAIAAAAAAAABAAAAUg",
					"AgAAAAAAAAABAAAATAIAAAAAAABMAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADuAQAAAAAAAO4BAAAAAAAAAAAAAAAA8L8"
				],
				[
					429,
					1,
					"insert",
					{
						"characters": "Render"
					},
					"BgAAAEgCAAAAAAAASQIAAAAAAAAAAAAASQIAAAAAAABKAgAAAAAAAAAAAABKAgAAAAAAAEsCAAAAAAAAAAAAAEsCAAAAAAAATAIAAAAAAAAAAAAATAIAAAAAAABNAgAAAAAAAAAAAABNAgAAAAAAAE4CAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAASAIAAAAAAABIAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADuAQAAAAAAAO4BAAAAAAAAAAAAAAAA8L8"
				],
				[
					430,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAE4CAAAAAAAAUAIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAATgIAAAAAAABOAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADuAQAAAAAAAO4BAAAAAAAAAAAAAAAA8L8"
				],
				[
					432,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFACAAAAAAAAUQIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAUAIAAAAAAABQAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADuAQAAAAAAAO4BAAAAAAAAAAAAAAAA8L8"
				],
				[
					433,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAFECAAAAAAAAUwIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAUQIAAAAAAABRAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADuAQAAAAAAAO4BAAAAAAAAAAAAAAAA8L8"
				],
				[
					434,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAAFICAAAAAAAAUwIAAAAAAAAAAAAAUwIAAAAAAABUAgAAAAAAAAAAAABTAgAAAAAAAFcCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAUgIAAAAAAABSAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADuAQAAAAAAAO4BAAAAAAAAAAAAAAAA8L8"
				],
				[
					438,
					1,
					"insert",
					{
						"characters": "Model"
					},
					"BgAAAE4CAAAAAAAATwIAAAAAAAAAAAAAVAIAAAAAAABUAgAAAAAAAAQAAAAgICAgTwIAAAAAAABQAgAAAAAAAAAAAABQAgAAAAAAAFECAAAAAAAAAAAAAFECAAAAAAAAUgIAAAAAAAAAAAAAUgIAAAAAAABTAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAATgIAAAAAAABOAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADuAQAAAAAAAO4BAAAAAAAAAAAAAAAA8L8"
				],
				[
					440,
					1,
					"left_delete",
					null,
					"AQAAAE4CAAAAAAAATgIAAAAAAAAFAAAATW9kZWw",
					"AgAAAAAAAAABAAAAUwIAAAAAAABOAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADuAQAAAAAAAO4BAAAAAAAAAAAAAAAA8L8"
				],
				[
					441,
					2,
					"rust_fmt_format_buffer",
					null,
					"AgAAAFICAAAAAAAAUgIAAAAAAAADAAAACgp9UgIAAAAAAABUAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAATgIAAAAAAABOAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADuAQAAAAAAAO4BAAAAAAAAAAAAAAAA8L8"
				],
				[
					446,
					1,
					"insert",
					{
						"characters": " ->"
					},
					"AwAAAFACAAAAAAAAUQIAAAAAAAAAAAAAUQIAAAAAAABSAgAAAAAAAAAAAABSAgAAAAAAAFMCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAUAIAAAAAAABQAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADuAQAAAAAAAO4BAAAAAAAAAAAAAAAA8L8"
				],
				[
					447,
					1,
					"insert",
					{
						"characters": " RenderCOmmand"
					},
					"DgAAAFMCAAAAAAAAVAIAAAAAAAAAAAAAVAIAAAAAAABVAgAAAAAAAAAAAABVAgAAAAAAAFYCAAAAAAAAAAAAAFYCAAAAAAAAVwIAAAAAAAAAAAAAVwIAAAAAAABYAgAAAAAAAAAAAABYAgAAAAAAAFkCAAAAAAAAAAAAAFkCAAAAAAAAWgIAAAAAAAAAAAAAWgIAAAAAAABbAgAAAAAAAAAAAABbAgAAAAAAAFwCAAAAAAAAAAAAAFwCAAAAAAAAXQIAAAAAAAAAAAAAXQIAAAAAAABeAgAAAAAAAAAAAABeAgAAAAAAAF8CAAAAAAAAAAAAAF8CAAAAAAAAYAIAAAAAAAAAAAAAYAIAAAAAAABhAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAUwIAAAAAAABTAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADuAQAAAAAAAO4BAAAAAAAAAAAAAAAA8L8"
				],
				[
					448,
					5,
					"left_delete",
					null,
					"BQAAAGACAAAAAAAAYAIAAAAAAAABAAAAZF8CAAAAAAAAXwIAAAAAAAABAAAAbl4CAAAAAAAAXgIAAAAAAAABAAAAYV0CAAAAAAAAXQIAAAAAAAABAAAAbVwCAAAAAAAAXAIAAAAAAAABAAAAbQ",
					"AgAAAAAAAAABAAAAYQIAAAAAAABhAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADuAQAAAAAAAO4BAAAAAAAAAAAAAAAA8L8"
				],
				[
					450,
					5,
					"left_delete",
					null,
					"BQAAAFQCAAAAAAAAVAIAAAAAAAAIAAAAUmVuZGVyQ09TAgAAAAAAAFMCAAAAAAAAAQAAACBSAgAAAAAAAFICAAAAAAAAAQAAAD5RAgAAAAAAAFECAAAAAAAAAQAAAC1QAgAAAAAAAFACAAAAAAAAAQAAACA",
					"AgAAAAAAAAABAAAAXAIAAAAAAABUAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADuAQAAAAAAAO4BAAAAAAAAAAAAAAAA8L8"
				],
				[
					454,
					1,
					"insert",
					{
						"characters": "en"
					},
					"AgAAAE8CAAAAAAAAUAIAAAAAAAAAAAAAUAIAAAAAAABRAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAATwIAAAAAAABPAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADuAQAAAAAAAO4BAAAAAAAAAAAAAAAA8L8"
				],
				[
					455,
					2,
					"left_delete",
					null,
					"AgAAAFACAAAAAAAAUAIAAAAAAAABAAAAbk8CAAAAAAAATwIAAAAAAAABAAAAZQ",
					"AgAAAAAAAAABAAAAUQIAAAAAAABRAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADuAQAAAAAAAO4BAAAAAAAAAAAAAAAA8L8"
				],
				[
					456,
					1,
					"insert",
					{
						"characters": "&mut"
					},
					"BAAAAE8CAAAAAAAAUAIAAAAAAAAAAAAAUAIAAAAAAABRAgAAAAAAAAAAAABRAgAAAAAAAFICAAAAAAAAAAAAAFICAAAAAAAAUwIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAATwIAAAAAAABPAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADuAQAAAAAAAO4BAAAAAAAAAAAAAAAA8L8"
				],
				[
					457,
					1,
					"insert",
					{
						"characters": " engine"
					},
					"BwAAAFMCAAAAAAAAVAIAAAAAAAAAAAAAVAIAAAAAAABVAgAAAAAAAAAAAABVAgAAAAAAAFYCAAAAAAAAAAAAAFYCAAAAAAAAVwIAAAAAAAAAAAAAVwIAAAAAAABYAgAAAAAAAAAAAABYAgAAAAAAAFkCAAAAAAAAAAAAAFkCAAAAAAAAWgIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAUwIAAAAAAABTAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADuAQAAAAAAAO4BAAAAAAAAAAAAAAAA8L8"
				],
				[
					459,
					2,
					"left_delete",
					null,
					"AgAAAFACAAAAAAAAUAIAAAAAAAAKAAAAbXV0IGVuZ2luZU8CAAAAAAAATwIAAAAAAAABAAAAJg",
					"AgAAAAAAAAABAAAAWgIAAAAAAABQAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADuAQAAAAAAAO4BAAAAAAAAAAAAAAAA8L8"
				],
				[
					462,
					1,
					"insert",
					{
						"characters": "cr"
					},
					"AgAAAE8CAAAAAAAAUAIAAAAAAAAAAAAAUAIAAAAAAABRAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAATwIAAAAAAABPAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADuAQAAAAAAAO4BAAAAAAAAAAAAAAAA8L8"
				],
				[
					463,
					2,
					"left_delete",
					null,
					"AgAAAFACAAAAAAAAUAIAAAAAAAABAAAAck8CAAAAAAAATwIAAAAAAAABAAAAYw",
					"AgAAAAAAAAABAAAAUQIAAAAAAABRAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADuAQAAAAAAAO4BAAAAAAAAAAAAAAAA8L8"
				],
				[
					469,
					1,
					"insert",
					{
						"characters": "\nuse"
					},
					"BAAAADsAAAAAAAAAPAAAAAAAAAAAAAAAPAAAAAAAAAA9AAAAAAAAAAAAAAA9AAAAAAAAAD4AAAAAAAAAAAAAAD4AAAAAAAAAPwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAOwAAAAAAAAA7AAAAAAAAAP///////+9/AQAAAAEAAADuAQAAAAAAAO4BAAAAAAAAAAAAAAAA8L8"
				],
				[
					470,
					1,
					"insert",
					{
						"characters": " rc"
					},
					"AwAAAD8AAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAABBAAAAAAAAAAAAAABBAAAAAAAAAEIAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAPwAAAAAAAAA/AAAAAAAAAAAAAAAAAPC/AQAAAAEAAADyAQAAAAAAAPIBAAAAAAAAAAAAAAAA8L8"
				],
				[
					471,
					2,
					"left_delete",
					null,
					"AgAAAEEAAAAAAAAAQQAAAAAAAAABAAAAY0AAAAAAAAAAQAAAAAAAAAABAAAAcg",
					"AgAAAAAAAAABAAAAQgAAAAAAAABCAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAD1AQAAAAAAAPUBAAAAAAAAAAAAAAAA8L8"
				],
				[
					472,
					1,
					"insert",
					{
						"characters": "crate:;eng"
					},
					"CgAAAEAAAAAAAAAAQQAAAAAAAAAAAAAAQQAAAAAAAABCAAAAAAAAAAAAAABCAAAAAAAAAEMAAAAAAAAAAAAAAEMAAAAAAAAARAAAAAAAAAAAAAAARAAAAAAAAABFAAAAAAAAAAAAAABFAAAAAAAAAEYAAAAAAAAAAAAAAEYAAAAAAAAARwAAAAAAAAAAAAAARwAAAAAAAABIAAAAAAAAAAAAAABIAAAAAAAAAEkAAAAAAAAAAAAAAEkAAAAAAAAASgAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQAAAAAAAAABAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAADzAQAAAAAAAPMBAAAAAAAAAAAAAAAA8L8"
				],
				[
					473,
					4,
					"left_delete",
					null,
					"BAAAAEkAAAAAAAAASQAAAAAAAAABAAAAZ0gAAAAAAAAASAAAAAAAAAABAAAAbkcAAAAAAAAARwAAAAAAAAABAAAAZUYAAAAAAAAARgAAAAAAAAABAAAAOw",
					"AgAAAAAAAAABAAAASgAAAAAAAABKAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAD9AQAAAAAAAP0BAAAAAAAAAAAAAAAA8L8"
				],
				[
					474,
					1,
					"insert",
					{
						"characters": ":engine::satte::*"
					},
					"EQAAAEYAAAAAAAAARwAAAAAAAAAAAAAARwAAAAAAAABIAAAAAAAAAAAAAABIAAAAAAAAAEkAAAAAAAAAAAAAAEkAAAAAAAAASgAAAAAAAAAAAAAASgAAAAAAAABLAAAAAAAAAAAAAABLAAAAAAAAAEwAAAAAAAAAAAAAAEwAAAAAAAAATQAAAAAAAAAAAAAATQAAAAAAAABOAAAAAAAAAAAAAABOAAAAAAAAAE8AAAAAAAAAAAAAAE8AAAAAAAAAUAAAAAAAAAAAAAAAUAAAAAAAAABRAAAAAAAAAAAAAABRAAAAAAAAAFIAAAAAAAAAAAAAAFIAAAAAAAAAUwAAAAAAAAAAAAAAUwAAAAAAAABUAAAAAAAAAAAAAABUAAAAAAAAAFUAAAAAAAAAAAAAAFUAAAAAAAAAVgAAAAAAAAAAAAAAVgAAAAAAAABXAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAARgAAAAAAAABGAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAD5AQAAAAAAAPkBAAAAAAAAAAAAAAAA8L8"
				],
				[
					475,
					7,
					"left_delete",
					null,
					"BwAAAFYAAAAAAAAAVgAAAAAAAAABAAAAKlUAAAAAAAAAVQAAAAAAAAABAAAAOlQAAAAAAAAAVAAAAAAAAAABAAAAOlMAAAAAAAAAUwAAAAAAAAABAAAAZVIAAAAAAAAAUgAAAAAAAAABAAAAdFEAAAAAAAAAUQAAAAAAAAABAAAAdFAAAAAAAAAAUAAAAAAAAAABAAAAYQ",
					"AgAAAAAAAAABAAAAVwAAAAAAAABXAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAKAgAAAAAAAAoCAAAAAAAAAAAAAAAA8L8"
				],
				[
					476,
					1,
					"insert",
					{
						"characters": "tate::*"
					},
					"BwAAAFAAAAAAAAAAUQAAAAAAAAAAAAAAUQAAAAAAAABSAAAAAAAAAAAAAABSAAAAAAAAAFMAAAAAAAAAAAAAAFMAAAAAAAAAVAAAAAAAAAAAAAAAVAAAAAAAAABVAAAAAAAAAAAAAABVAAAAAAAAAFYAAAAAAAAAAAAAAFYAAAAAAAAAVwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAUAAAAAAAAABQAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAADAgAAAAAAAAMCAAAAAAAAAAAAAAAA8L8"
				],
				[
					477,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAFcAAAAAAAAAWQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAVwAAAAAAAABXAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAKAgAAAAAAAAoCAAAAAAAAAAAAAAAA8L8"
				],
				[
					478,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAFgAAAAAAAAAWQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAWAAAAAAAAABYAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAMAgAAAAAAAAwCAAAAAAAAAAAAAAAA8L8"
				],
				[
					479,
					1,
					"left_delete",
					null,
					"AQAAAFgAAAAAAAAAWAAAAAAAAAABAAAAOw",
					"AgAAAAAAAAABAAAAWQAAAAAAAABZAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAANAgAAAAAAAA0CAAAAAAAAAAAAAAAA8L8"
				],
				[
					480,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAFcAAAAAAAAAVwAAAAAAAAABAAAAKFcAAAAAAAAAVwAAAAAAAAABAAAAKQ",
					"AgAAAAAAAAABAAAAWAAAAAAAAABYAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAMAgAAAAAAAAwCAAAAAAAAAAAAAAAA8L8"
				],
				[
					481,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAFcAAAAAAAAAWAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAVwAAAAAAAABXAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAKAgAAAAAAAAoCAAAAAAAAAAAAAAAA8L8"
				],
				[
					482,
					2,
					"rust_fmt_format_buffer",
					null,
					"BAAAADAAAAAAAAAAMAAAAAAAAAAGAAAAdmVjdG9yMQAAAAAAAAA1AAAAAAAAAAAAAABNAAAAAAAAAE0AAAAAAAAABQAAAHN0YXRlTQAAAAAAAABUAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAWAAAAAAAAABYAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAALAgAAAAAAAAsCAAAAAAAAAAAAAAAA8L8"
				],
				[
					485,
					1,
					"insert",
					{
						"characters": "render"
					},
					"BwAAAGUCAAAAAAAAZgIAAAAAAAAAAAAAZgIAAAAAAABmAgAAAAAAAAYAAABSZW5kZXJmAgAAAAAAAGcCAAAAAAAAAAAAAGcCAAAAAAAAaAIAAAAAAAAAAAAAaAIAAAAAAABpAgAAAAAAAAAAAABpAgAAAAAAAGoCAAAAAAAAAAAAAGoCAAAAAAAAawIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAawIAAAAAAABlAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAALAgAAAAAAAAsCAAAAAAAAAAAAAAAA8L8"
				],
				[
					488,
					1,
					"insert",
					{
						"characters": "_model"
					},
					"BgAAAGsCAAAAAAAAbAIAAAAAAAAAAAAAbAIAAAAAAABtAgAAAAAAAAAAAABtAgAAAAAAAG4CAAAAAAAAAAAAAG4CAAAAAAAAbwIAAAAAAAAAAAAAbwIAAAAAAABwAgAAAAAAAAAAAABwAgAAAAAAAHECAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAawIAAAAAAABrAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAALAgAAAAAAAAsCAAAAAAAAAAAAAAAA8L8"
				],
				[
					491,
					2,
					"left_delete",
					null,
					"AgAAAHACAAAAAAAAcAIAAAAAAAABAAAAbG8CAAAAAAAAbwIAAAAAAAABAAAAZQ",
					"AgAAAAAAAAABAAAAcQIAAAAAAABxAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAALAgAAAAAAAAsCAAAAAAAAAAAAAAAA8L8"
				],
				[
					492,
					3,
					"left_delete",
					null,
					"AwAAAG4CAAAAAAAAbgIAAAAAAAABAAAAZG0CAAAAAAAAbQIAAAAAAAABAAAAb2wCAAAAAAAAbAIAAAAAAAABAAAAbQ",
					"AgAAAAAAAAABAAAAbwIAAAAAAABvAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAALAgAAAAAAAAsCAAAAAAAAAAAAAAAA8L8"
				],
				[
					493,
					1,
					"insert",
					{
						"characters": "vao"
					},
					"AwAAAGwCAAAAAAAAbQIAAAAAAAAAAAAAbQIAAAAAAABuAgAAAAAAAAAAAABuAgAAAAAAAG8CAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAbAIAAAAAAABsAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAALAgAAAAAAAAsCAAAAAAAAAAAAAAAA8L8"
				],
				[
					494,
					3,
					"left_delete",
					null,
					"AwAAAG4CAAAAAAAAbgIAAAAAAAABAAAAb20CAAAAAAAAbQIAAAAAAAABAAAAYWwCAAAAAAAAbAIAAAAAAAABAAAAdg",
					"AgAAAAAAAAABAAAAbwIAAAAAAABvAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAALAgAAAAAAAAsCAAAAAAAAAAAAAAAA8L8"
				],
				[
					495,
					1,
					"insert",
					{
						"characters": "model"
					},
					"BQAAAGwCAAAAAAAAbQIAAAAAAAAAAAAAbQIAAAAAAABuAgAAAAAAAAAAAABuAgAAAAAAAG8CAAAAAAAAAAAAAG8CAAAAAAAAcAIAAAAAAAAAAAAAcAIAAAAAAABxAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAbAIAAAAAAABsAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAALAgAAAAAAAAsCAAAAAAAAAAAAAAAA8L8"
				],
				[
					501,
					1,
					"insert",
					{
						"characters": " ->"
					},
					"AwAAAHMCAAAAAAAAdAIAAAAAAAAAAAAAdAIAAAAAAAB1AgAAAAAAAAAAAAB1AgAAAAAAAHYCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAcwIAAAAAAABzAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAALAgAAAAAAAAsCAAAAAAAAAAAAAAAA8L8"
				],
				[
					502,
					1,
					"insert",
					{
						"characters": " R"
					},
					"AgAAAHYCAAAAAAAAdwIAAAAAAAAAAAAAdwIAAAAAAAB4AgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAdgIAAAAAAAB2AgAAAAAAAAAAAAAAAPC/AQAAAAEAAAALAgAAAAAAAAsCAAAAAAAAAAAAAAAA8L8"
				],
				[
					503,
					1,
					"insert",
					{
						"characters": "enderCommand"
					},
					"DAAAAHgCAAAAAAAAeQIAAAAAAAAAAAAAeQIAAAAAAAB6AgAAAAAAAAAAAAB6AgAAAAAAAHsCAAAAAAAAAAAAAHsCAAAAAAAAfAIAAAAAAAAAAAAAfAIAAAAAAAB9AgAAAAAAAAAAAAB9AgAAAAAAAH4CAAAAAAAAAAAAAH4CAAAAAAAAfwIAAAAAAAAAAAAAfwIAAAAAAACAAgAAAAAAAAAAAACAAgAAAAAAAIECAAAAAAAAAAAAAIECAAAAAAAAggIAAAAAAAAAAAAAggIAAAAAAACDAgAAAAAAAAAAAACDAgAAAAAAAIQCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAeAIAAAAAAAB4AgAAAAAAAAAAAAAAAPC/AQAAAAEAAAALAgAAAAAAAAsCAAAAAAAAAAAAAAAA8L8"
				],
				[
					508,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAH8AAAAAAAAAgAAAAAAAAAAAAAAAgAAAAAAAAACBAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAfwAAAAAAAAB/AAAAAAAAAAAAAAAAAPC/AQAAAAEAAAALAgAAAAAAAAsCAAAAAAAAAAAAAAAA8L8"
				],
				[
					510,
					1,
					"insert",
					{
						"characters": "use"
					},
					"AwAAAIAAAAAAAAAAgQAAAAAAAAAAAAAAgQAAAAAAAACCAAAAAAAAAAAAAACCAAAAAAAAAIMAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAgAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAQAAAAEAAAANAgAAAAAAAA0CAAAAAAAAAAAAAAAA8L8"
				],
				[
					511,
					1,
					"insert",
					{
						"characters": " render_c"
					},
					"CQAAAIMAAAAAAAAAhAAAAAAAAAAAAAAAhAAAAAAAAACFAAAAAAAAAAAAAACFAAAAAAAAAIYAAAAAAAAAAAAAAIYAAAAAAAAAhwAAAAAAAAAAAAAAhwAAAAAAAACIAAAAAAAAAAAAAACIAAAAAAAAAIkAAAAAAAAAAAAAAIkAAAAAAAAAigAAAAAAAAAAAAAAigAAAAAAAACLAAAAAAAAAAAAAACLAAAAAAAAAIwAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAgwAAAAAAAACDAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAQAgAAAAAAABACAAAAAAAAAAAAAAAA8L8"
				],
				[
					512,
					1,
					"insert",
					{
						"characters": "ommand::*;"
					},
					"CgAAAIwAAAAAAAAAjQAAAAAAAAAAAAAAjQAAAAAAAACOAAAAAAAAAAAAAACOAAAAAAAAAI8AAAAAAAAAAAAAAI8AAAAAAAAAkAAAAAAAAAAAAAAAkAAAAAAAAACRAAAAAAAAAAAAAACRAAAAAAAAAJIAAAAAAAAAAAAAAJIAAAAAAAAAkwAAAAAAAAAAAAAAkwAAAAAAAACUAAAAAAAAAAAAAACUAAAAAAAAAJUAAAAAAAAAAAAAAJUAAAAAAAAAlgAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAjAAAAAAAAACMAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAZAgAAAAAAABkCAAAAAAAAAAAAAAAA8L8"
				],
				[
					523,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAAJ4CAAAAAAAAnwIAAAAAAAAAAAAAnwIAAAAAAACgAgAAAAAAAAAAAACfAgAAAAAAAKMCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAngIAAAAAAACeAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAjAgAAAAAAACMCAAAAAAAAAAAAAAAA8L8"
				],
				[
					524,
					1,
					"insert",
					{
						"characters": "Rend"
					},
					"BAAAAKMCAAAAAAAApAIAAAAAAAAAAAAApAIAAAAAAAClAgAAAAAAAAAAAAClAgAAAAAAAKYCAAAAAAAAAAAAAKYCAAAAAAAApwIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAowIAAAAAAACjAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAjAgAAAAAAACMCAAAAAAAAAAAAAAAA8L8"
				],
				[
					525,
					1,
					"insert_completion",
					{
						"completion": "render_command",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "render_command"
					},
					"AgAAAKMCAAAAAAAAowIAAAAAAAAEAAAAUmVuZKMCAAAAAAAAsQIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAApwIAAAAAAACnAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAjAgAAAAAAACMCAAAAAAAAAAAAAAAA8L8"
				],
				[
					526,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALECAAAAAAAAsgIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAsQIAAAAAAACxAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAjAgAAAAAAACMCAAAAAAAAAAAAAAAA8L8"
				],
				[
					527,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAALICAAAAAAAAtAIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAsgIAAAAAAACyAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAjAgAAAAAAACMCAAAAAAAAAAAAAAAA8L8"
				],
				[
					528,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAALMCAAAAAAAAtAIAAAAAAAAAAAAAtAIAAAAAAAC4AgAAAAAAAAAAAAC4AgAAAAAAALkCAAAAAAAAAAAAALkCAAAAAAAAvQIAAAAAAAAAAAAAtAIAAAAAAAC0AgAAAAAAAAQAAAAgICAgtAIAAAAAAAC8AgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAswIAAAAAAACzAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAjAgAAAAAAACMCAAAAAAAAAAAAAAAA8L8"
				],
				[
					529,
					1,
					"insert",
					{
						"characters": "vao_id:"
					},
					"BwAAALwCAAAAAAAAvQIAAAAAAAAAAAAAvQIAAAAAAAC+AgAAAAAAAAAAAAC+AgAAAAAAAL8CAAAAAAAAAAAAAL8CAAAAAAAAwAIAAAAAAAAAAAAAwAIAAAAAAADBAgAAAAAAAAAAAADBAgAAAAAAAMICAAAAAAAAAAAAAMICAAAAAAAAwwIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAvAIAAAAAAAC8AgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAjAgAAAAAAACMCAAAAAAAAAAAAAAAA8L8"
				],
				[
					530,
					1,
					"insert",
					{
						"characters": " 0,"
					},
					"AwAAAMMCAAAAAAAAxAIAAAAAAAAAAAAAxAIAAAAAAADFAgAAAAAAAAAAAADFAgAAAAAAAMYCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAwwIAAAAAAADDAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAjAgAAAAAAACMCAAAAAAAAAAAAAAAA8L8"
				],
				[
					531,
					1,
					"insert",
					{
						"characters": "\nshader_id:"
					},
					"DAAAAMYCAAAAAAAAxwIAAAAAAAAAAAAAxwIAAAAAAADPAgAAAAAAAAAAAADPAgAAAAAAANACAAAAAAAAAAAAANACAAAAAAAA0QIAAAAAAAAAAAAA0QIAAAAAAADSAgAAAAAAAAAAAADSAgAAAAAAANMCAAAAAAAAAAAAANMCAAAAAAAA1AIAAAAAAAAAAAAA1AIAAAAAAADVAgAAAAAAAAAAAADVAgAAAAAAANYCAAAAAAAAAAAAANYCAAAAAAAA1wIAAAAAAAAAAAAA1wIAAAAAAADYAgAAAAAAAAAAAADYAgAAAAAAANkCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAxgIAAAAAAADGAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAjAgAAAAAAACMCAAAAAAAAAAAAAAAA8L8"
				],
				[
					532,
					1,
					"insert",
					{
						"characters": " 0,"
					},
					"AwAAANkCAAAAAAAA2gIAAAAAAAAAAAAA2gIAAAAAAADbAgAAAAAAAAAAAADbAgAAAAAAANwCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA2QIAAAAAAADZAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAjAgAAAAAAACMCAAAAAAAAAAAAAAAA8L8"
				],
				[
					537,
					1,
					"insert",
					{
						"characters": "ERnder"
					},
					"BwAAAKMCAAAAAAAApAIAAAAAAAAAAAAApAIAAAAAAACkAgAAAAAAAA4AAAByZW5kZXJfY29tbWFuZKQCAAAAAAAApQIAAAAAAAAAAAAApQIAAAAAAACmAgAAAAAAAAAAAACmAgAAAAAAAKcCAAAAAAAAAAAAAKcCAAAAAAAAqAIAAAAAAAAAAAAAqAIAAAAAAACpAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAsQIAAAAAAACjAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAjAgAAAAAAACMCAAAAAAAAAAAAAAAA8L8"
				],
				[
					539,
					1,
					"insert",
					{
						"characters": "RenerComm"
					},
					"CgAAAKMCAAAAAAAApAIAAAAAAAAAAAAApAIAAAAAAACkAgAAAAAAAAYAAABFUm5kZXKkAgAAAAAAAKUCAAAAAAAAAAAAAKUCAAAAAAAApgIAAAAAAAAAAAAApgIAAAAAAACnAgAAAAAAAAAAAACnAgAAAAAAAKgCAAAAAAAAAAAAAKgCAAAAAAAAqQIAAAAAAAAAAAAAqQIAAAAAAACqAgAAAAAAAAAAAACqAgAAAAAAAKsCAAAAAAAAAAAAAKsCAAAAAAAArAIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAqQIAAAAAAACjAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAjAgAAAAAAACMCAAAAAAAAAAAAAAAA8L8"
				],
				[
					540,
					6,
					"left_delete",
					null,
					"BgAAAKsCAAAAAAAAqwIAAAAAAAABAAAAbaoCAAAAAAAAqgIAAAAAAAABAAAAbakCAAAAAAAAqQIAAAAAAAABAAAAb6gCAAAAAAAAqAIAAAAAAAABAAAAQ6cCAAAAAAAApwIAAAAAAAABAAAAcqYCAAAAAAAApgIAAAAAAAABAAAAZQ",
					"AgAAAAAAAAABAAAArAIAAAAAAACsAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAjAgAAAAAAACMCAAAAAAAAAAAAAAAA8L8"
				],
				[
					541,
					1,
					"insert",
					{
						"characters": "derCOmman"
					},
					"CQAAAKYCAAAAAAAApwIAAAAAAAAAAAAApwIAAAAAAACoAgAAAAAAAAAAAACoAgAAAAAAAKkCAAAAAAAAAAAAAKkCAAAAAAAAqgIAAAAAAAAAAAAAqgIAAAAAAACrAgAAAAAAAAAAAACrAgAAAAAAAKwCAAAAAAAAAAAAAKwCAAAAAAAArQIAAAAAAAAAAAAArQIAAAAAAACuAgAAAAAAAAAAAACuAgAAAAAAAK8CAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAApgIAAAAAAACmAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAjAgAAAAAAACMCAAAAAAAAAAAAAAAA8L8"
				],
				[
					542,
					5,
					"left_delete",
					null,
					"BQAAAK4CAAAAAAAArgIAAAAAAAABAAAAbq0CAAAAAAAArQIAAAAAAAABAAAAYawCAAAAAAAArAIAAAAAAAABAAAAbasCAAAAAAAAqwIAAAAAAAABAAAAbaoCAAAAAAAAqgIAAAAAAAABAAAATw",
					"AgAAAAAAAAABAAAArwIAAAAAAACvAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAjAgAAAAAAACMCAAAAAAAAAAAAAAAA8L8"
				],
				[
					543,
					1,
					"insert",
					{
						"characters": "ommand"
					},
					"BgAAAKoCAAAAAAAAqwIAAAAAAAAAAAAAqwIAAAAAAACsAgAAAAAAAAAAAACsAgAAAAAAAK0CAAAAAAAAAAAAAK0CAAAAAAAArgIAAAAAAAAAAAAArgIAAAAAAACvAgAAAAAAAAAAAACvAgAAAAAAALACAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAqgIAAAAAAACqAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAjAgAAAAAAACMCAAAAAAAAAAAAAAAA8L8"
				],
				[
					548,
					1,
					"insert",
					{
						"characters": "\n/*"
					},
					"AwAAAHUCAAAAAAAAdgIAAAAAAAAAAAAAdgIAAAAAAAB3AgAAAAAAAAAAAAB3AgAAAAAAAHgCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAdQIAAAAAAAB1AgAAAAAAAAAAAAAAgF5AAQAAAAEAAAAjAgAAAAAAACMCAAAAAAAAAAAAAAAA8L8"
				],
				[
					552,
					1,
					"insert",
					{
						"characters": "\n*/"
					},
					"AwAAAOYCAAAAAAAA5wIAAAAAAAAAAAAA5wIAAAAAAADoAgAAAAAAAAAAAADoAgAAAAAAAOkCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA5gIAAAAAAADmAgAAAAAAAP///////+9/AQAAAAEAAAAjAgAAAAAAACMCAAAAAAAAAAAAAAAA8L8"
				],
				[
					564,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAHUCAAAAAAAAdgIAAAAAAAAAAAAAdgIAAAAAAAB3AgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQgIAAAAAAABCAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAB1AgAAAAAAAHUCAAAAAAAAAAAAAAAA8L8"
				],
				[
					566,
					1,
					"reindent",
					null,
					"AQAAAHYCAAAAAAAAegIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQgIAAAAAAABCAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAB2AgAAAAAAAHYCAAAAAAAAAAAAAAAAAAA"
				],
				[
					567,
					1,
					"insert",
					{
						"characters": "pub"
					},
					"AwAAAHoCAAAAAAAAewIAAAAAAAAAAAAAewIAAAAAAAB8AgAAAAAAAAAAAAB8AgAAAAAAAH0CAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQgIAAAAAAABCAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAB6AgAAAAAAAHoCAAAAAAAAAAAAAAAA8L8"
				],
				[
					568,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAH0CAAAAAAAAfgIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQgIAAAAAAABCAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAB9AgAAAAAAAH0CAAAAAAAAAAAAAAAA8L8"
				],
				[
					569,
					5,
					"left_delete",
					null,
					"BQAAAH0CAAAAAAAAfQIAAAAAAAABAAAAIHwCAAAAAAAAfAIAAAAAAAABAAAAYnsCAAAAAAAAewIAAAAAAAABAAAAdXoCAAAAAAAAegIAAAAAAAABAAAAcHYCAAAAAAAAdgIAAAAAAAAEAAAAICAgIA",
					"AgAAAAAAAAABAAAAQgIAAAAAAABCAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAB+AgAAAAAAAH4CAAAAAAAAAAAAAAAA8L8"
				],
				[
					570,
					1,
					"insert",
					{
						"characters": "puf"
					},
					"AwAAAHYCAAAAAAAAdwIAAAAAAAAAAAAAdwIAAAAAAAB4AgAAAAAAAAAAAAB4AgAAAAAAAHkCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQgIAAAAAAABCAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAB2AgAAAAAAAHYCAAAAAAAAAAAAAAAA8L8"
				],
				[
					571,
					1,
					"left_delete",
					null,
					"AQAAAHgCAAAAAAAAeAIAAAAAAAABAAAAZg",
					"AgAAAAAAAAABAAAAQgIAAAAAAABCAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAB5AgAAAAAAAHkCAAAAAAAAAAAAAAAA8L8"
				],
				[
					572,
					1,
					"insert",
					{
						"characters": "b"
					},
					"AQAAAHgCAAAAAAAAeQIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQgIAAAAAAABCAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAB4AgAAAAAAAHgCAAAAAAAAAAAAAAAA8L8"
				],
				[
					573,
					1,
					"insert",
					{
						"characters": " fnf"
					},
					"BAAAAHkCAAAAAAAAegIAAAAAAAAAAAAAegIAAAAAAAB7AgAAAAAAAAAAAAB7AgAAAAAAAHwCAAAAAAAAAAAAAHwCAAAAAAAAfQIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQgIAAAAAAABCAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAB5AgAAAAAAAHkCAAAAAAAAAAAAAAAA8L8"
				],
				[
					574,
					2,
					"left_delete",
					null,
					"AgAAAHwCAAAAAAAAfAIAAAAAAAABAAAAZnsCAAAAAAAAewIAAAAAAAABAAAAbg",
					"AgAAAAAAAAABAAAAQgIAAAAAAABCAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAB9AgAAAAAAAH0CAAAAAAAAAAAAAAAA8L8"
				],
				[
					575,
					1,
					"insert",
					{
						"characters": "n"
					},
					"AQAAAHsCAAAAAAAAfAIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQgIAAAAAAABCAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAB7AgAAAAAAAHsCAAAAAAAAAAAAAAAA8L8"
				],
				[
					576,
					1,
					"insert",
					{
						"characters": " render"
					},
					"BwAAAHwCAAAAAAAAfQIAAAAAAAAAAAAAfQIAAAAAAAB+AgAAAAAAAAAAAAB+AgAAAAAAAH8CAAAAAAAAAAAAAH8CAAAAAAAAgAIAAAAAAAAAAAAAgAIAAAAAAACBAgAAAAAAAAAAAACBAgAAAAAAAIICAAAAAAAAAAAAAIICAAAAAAAAgwIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQgIAAAAAAABCAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAB8AgAAAAAAAHwCAAAAAAAAAAAAAAAA8L8"
				],
				[
					577,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAIMCAAAAAAAAhQIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQgIAAAAAAABCAgAAAAAAAAAAAAAAAPC/AQAAAAEAAACDAgAAAAAAAIMCAAAAAAAAAAAAAAAA8L8"
				],
				[
					579,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIUCAAAAAAAAhgIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQgIAAAAAAABCAgAAAAAAAAAAAAAAAPC/AQAAAAEAAACFAgAAAAAAAIUCAAAAAAAAAAAAAAAA8L8"
				],
				[
					580,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAIYCAAAAAAAAiAIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQgIAAAAAAABCAgAAAAAAAAAAAAAAAPC/AQAAAAEAAACGAgAAAAAAAIYCAAAAAAAAAAAAAAAA8L8"
				],
				[
					581,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAAIcCAAAAAAAAiAIAAAAAAAAAAAAAiAIAAAAAAACJAgAAAAAAAAAAAACIAgAAAAAAAIwCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQgIAAAAAAABCAgAAAAAAAAAAAAAAAPC/AQAAAAEAAACHAgAAAAAAAIcCAAAAAAAAAAAAAAAA8L8"
				],
				[
					585,
					1,
					"insert",
					{
						"characters": "render_api:"
					},
					"DAAAAIQCAAAAAAAAhQIAAAAAAAAAAAAAiQIAAAAAAACJAgAAAAAAAAQAAAAgICAghQIAAAAAAACGAgAAAAAAAAAAAACGAgAAAAAAAIcCAAAAAAAAAAAAAIcCAAAAAAAAiAIAAAAAAAAAAAAAiAIAAAAAAACJAgAAAAAAAAAAAACJAgAAAAAAAIoCAAAAAAAAAAAAAIoCAAAAAAAAiwIAAAAAAAAAAAAAiwIAAAAAAACMAgAAAAAAAAAAAACMAgAAAAAAAI0CAAAAAAAAAAAAAI0CAAAAAAAAjgIAAAAAAAAAAAAAjgIAAAAAAACPAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQgIAAAAAAABCAgAAAAAAAAAAAAAAAPC/AQAAAAEAAACEAgAAAAAAAIQCAAAAAAAAAAAAAAAA8L8"
				],
				[
					586,
					1,
					"insert",
					{
						"characters": " &impl"
					},
					"BgAAAI8CAAAAAAAAkAIAAAAAAAAAAAAAkAIAAAAAAACRAgAAAAAAAAAAAACRAgAAAAAAAJICAAAAAAAAAAAAAJICAAAAAAAAkwIAAAAAAAAAAAAAkwIAAAAAAACUAgAAAAAAAAAAAACUAgAAAAAAAJUCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQgIAAAAAAABCAgAAAAAAAAAAAAAAAPC/AQAAAAEAAACPAgAAAAAAAI8CAAAAAAAAAAAAAAAA8L8"
				],
				[
					587,
					1,
					"insert",
					{
						"characters": " render"
					},
					"BwAAAJUCAAAAAAAAlgIAAAAAAAAAAAAAlgIAAAAAAACXAgAAAAAAAAAAAACXAgAAAAAAAJgCAAAAAAAAAAAAAJgCAAAAAAAAmQIAAAAAAAAAAAAAmQIAAAAAAACaAgAAAAAAAAAAAACaAgAAAAAAAJsCAAAAAAAAAAAAAJsCAAAAAAAAnAIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQgIAAAAAAABCAgAAAAAAAAAAAAAAAPC/AQAAAAEAAACVAgAAAAAAAJUCAAAAAAAAAAAAAAAA8L8"
				],
				[
					588,
					6,
					"left_delete",
					null,
					"BgAAAJsCAAAAAAAAmwIAAAAAAAABAAAAcpoCAAAAAAAAmgIAAAAAAAABAAAAZZkCAAAAAAAAmQIAAAAAAAABAAAAZJgCAAAAAAAAmAIAAAAAAAABAAAAbpcCAAAAAAAAlwIAAAAAAAABAAAAZZYCAAAAAAAAlgIAAAAAAAABAAAAcg",
					"AgAAAAAAAAABAAAAQgIAAAAAAABCAgAAAAAAAAAAAAAAAPC/AQAAAAEAAACcAgAAAAAAAJwCAAAAAAAAAAAAAAAA8L8"
				],
				[
					589,
					1,
					"insert",
					{
						"characters": "Renderpis"
					},
					"CQAAAJYCAAAAAAAAlwIAAAAAAAAAAAAAlwIAAAAAAACYAgAAAAAAAAAAAACYAgAAAAAAAJkCAAAAAAAAAAAAAJkCAAAAAAAAmgIAAAAAAAAAAAAAmgIAAAAAAACbAgAAAAAAAAAAAACbAgAAAAAAAJwCAAAAAAAAAAAAAJwCAAAAAAAAnQIAAAAAAAAAAAAAnQIAAAAAAACeAgAAAAAAAAAAAACeAgAAAAAAAJ8CAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQgIAAAAAAABCAgAAAAAAAAAAAAAAAPC/AQAAAAEAAACWAgAAAAAAAJYCAAAAAAAAAAAAAAAA8L8"
				],
				[
					590,
					3,
					"left_delete",
					null,
					"AwAAAJ4CAAAAAAAAngIAAAAAAAABAAAAc50CAAAAAAAAnQIAAAAAAAABAAAAaZwCAAAAAAAAnAIAAAAAAAABAAAAcA",
					"AgAAAAAAAAABAAAAQgIAAAAAAABCAgAAAAAAAAAAAAAAAPC/AQAAAAEAAACfAgAAAAAAAJ8CAAAAAAAAAAAAAAAA8L8"
				],
				[
					591,
					1,
					"insert",
					{
						"characters": "Api"
					},
					"AwAAAJwCAAAAAAAAnQIAAAAAAAAAAAAAnQIAAAAAAACeAgAAAAAAAAAAAACeAgAAAAAAAJ8CAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQgIAAAAAAABCAgAAAAAAAAAAAAAAAPC/AQAAAAEAAACcAgAAAAAAAJwCAAAAAAAAAAAAAAAA8L8"
				],
				[
					592,
					2,
					"rust_fmt_format_buffer",
					null,
					"AQAAAKICAAAAAAAAogIAAAAAAAACAAAACgo",
					"AgAAAAAAAAABAAAAQgIAAAAAAABCAgAAAAAAAAAAAAAAAPC/AQAAAAEAAACfAgAAAAAAAJ8CAAAAAAAAAAAAAAAA8L8"
				],
				[
					600,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAAKICAAAAAAAAowIAAAAAAAAAAAAAowIAAAAAAACkAgAAAAAAAAAAAACjAgAAAAAAAKcCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQgIAAAAAAABCAgAAAAAAAAAAAAAAAPC/AQAAAAEAAACiAgAAAAAAAKICAAAAAAAAAAAAAAAA8L8"
				],
				[
					601,
					1,
					"insert",
					{
						"characters": "for"
					},
					"AwAAAKcCAAAAAAAAqAIAAAAAAAAAAAAAqAIAAAAAAACpAgAAAAAAAAAAAACpAgAAAAAAAKoCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQgIAAAAAAABCAgAAAAAAAAAAAAAAAPC/AQAAAAEAAACnAgAAAAAAAKcCAAAAAAAAAAAAAAAA8L8"
				],
				[
					602,
					1,
					"insert",
					{
						"characters": " x"
					},
					"AgAAAKoCAAAAAAAAqwIAAAAAAAAAAAAAqwIAAAAAAACsAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQgIAAAAAAABCAgAAAAAAAAAAAAAAAPC/AQAAAAEAAACqAgAAAAAAAKoCAAAAAAAAAAAAAAAA8L8"
				],
				[
					603,
					1,
					"insert",
					{
						"characters": " in"
					},
					"AwAAAKwCAAAAAAAArQIAAAAAAAAAAAAArQIAAAAAAACuAgAAAAAAAAAAAACuAgAAAAAAAK8CAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQgIAAAAAAABCAgAAAAAAAAAAAAAAAPC/AQAAAAEAAACsAgAAAAAAAKwCAAAAAAAAAAAAAAAA8L8"
				],
				[
					604,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAK8CAAAAAAAAsAIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQgIAAAAAAABCAgAAAAAAAAAAAAAAAPC/AQAAAAEAAACvAgAAAAAAAK8CAAAAAAAAAAAAAAAA8L8"
				],
				[
					612,
					1,
					"cut",
					null,
					"AQAAAKMCAAAAAAAAowIAAAAAAAAOAAAAICAgIGZvciB4IGluIAo",
					"AgAAAAAAAAABAAAAQgIAAAAAAABCAgAAAAAAAAAAAAAAAPC/AQAAAAEAAACwAgAAAAAAALACAAAAAAAAAAAAAABAWUA"
				],
				[
					613,
					2,
					"rust_fmt_format_buffer",
					null,
					"AQAAAKICAAAAAAAAogIAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAQgIAAAAAAABCAgAAAAAAAAAAAAAAAPC/AQAAAAEAAACjAgAAAAAAAKMCAAAAAAAAAAAAAAAA8L8"
				],
				[
					619,
					1,
					"insert",
					{
						"characters": "_"
					},
					"AQAAAIQCAAAAAAAAhQIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQgIAAAAAAABCAgAAAAAAAAAAAAAAAPC/AQAAAAEAAACEAgAAAAAAAIQCAAAAAAAAAAAAAAAA8L8"
				],
				[
					626,
					1,
					"insert",
					{
						"characters": "t"
					},
					"AQAAAEkAAAAAAAAASgAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQgIAAAAAAABCAgAAAAAAAAAAAAAAAPC/AQAAAAEAAABJAAAAAAAAAEkAAAAAAAAAAAAAAAAAW0A"
				],
				[
					639,
					1,
					"insert",
					{
						"characters": "engines"
					},
					"BwAAAIUCAAAAAAAAhgIAAAAAAAAAAAAAhgIAAAAAAACHAgAAAAAAAAAAAACHAgAAAAAAAIgCAAAAAAAAAAAAAIgCAAAAAAAAiQIAAAAAAAAAAAAAiQIAAAAAAACKAgAAAAAAAAAAAACKAgAAAAAAAIsCAAAAAAAAAAAAAIsCAAAAAAAAjAIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQwIAAAAAAABDAgAAAAAAAAAAAAAAAPC/AQAAAAEAAACFAgAAAAAAAIUCAAAAAAAAAAAAAAAA8L8"
				],
				[
					640,
					1,
					"left_delete",
					null,
					"AQAAAIsCAAAAAAAAiwIAAAAAAAABAAAAcw",
					"AgAAAAAAAAABAAAAQwIAAAAAAABDAgAAAAAAAAAAAAAAAPC/AQAAAAEAAACMAgAAAAAAAIwCAAAAAAAAAAAAAAAA8L8"
				],
				[
					641,
					1,
					"insert",
					{
						"characters": "_state"
					},
					"BgAAAIsCAAAAAAAAjAIAAAAAAAAAAAAAjAIAAAAAAACNAgAAAAAAAAAAAACNAgAAAAAAAI4CAAAAAAAAAAAAAI4CAAAAAAAAjwIAAAAAAAAAAAAAjwIAAAAAAACQAgAAAAAAAAAAAACQAgAAAAAAAJECAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQwIAAAAAAABDAgAAAAAAAAAAAAAAAPC/AQAAAAEAAACLAgAAAAAAAIsCAAAAAAAAAAAAAAAA8L8"
				],
				[
					643,
					1,
					"left_delete",
					null,
					"AQAAAIUCAAAAAAAAhQIAAAAAAAAMAAAAZW5naW5lX3N0YXRl",
					"AgAAAAAAAAABAAAAQwIAAAAAAABDAgAAAAAAAAAAAAAAAPC/AQAAAAEAAACRAgAAAAAAAIUCAAAAAAAAAAAAAAAA8L8"
				],
				[
					658,
					1,
					"insert",
					{
						"characters": "engine_state:"
					},
					"DQAAAIUCAAAAAAAAhgIAAAAAAAAAAAAAhgIAAAAAAACHAgAAAAAAAAAAAACHAgAAAAAAAIgCAAAAAAAAAAAAAIgCAAAAAAAAiQIAAAAAAAAAAAAAiQIAAAAAAACKAgAAAAAAAAAAAACKAgAAAAAAAIsCAAAAAAAAAAAAAIsCAAAAAAAAjAIAAAAAAAAAAAAAjAIAAAAAAACNAgAAAAAAAAAAAACNAgAAAAAAAI4CAAAAAAAAAAAAAI4CAAAAAAAAjwIAAAAAAAAAAAAAjwIAAAAAAACQAgAAAAAAAAAAAACQAgAAAAAAAJECAAAAAAAAAAAAAJECAAAAAAAAkgIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQwIAAAAAAABDAgAAAAAAAAAAAAAAAPC/AQAAAAEAAACFAgAAAAAAAIUCAAAAAAAAAAAAAAAA8L8"
				],
				[
					659,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJICAAAAAAAAkwIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQwIAAAAAAABDAgAAAAAAAAAAAAAAAPC/AQAAAAEAAACSAgAAAAAAAJICAAAAAAAAAAAAAAAA8L8"
				],
				[
					660,
					1,
					"insert",
					{
						"characters": "en"
					},
					"AgAAAJMCAAAAAAAAlAIAAAAAAAAAAAAAlAIAAAAAAACVAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQwIAAAAAAABDAgAAAAAAAAAAAAAAAPC/AQAAAAEAAACTAgAAAAAAAJMCAAAAAAAAAAAAAAAA8L8"
				],
				[
					661,
					2,
					"left_delete",
					null,
					"AgAAAJQCAAAAAAAAlAIAAAAAAAABAAAAbpMCAAAAAAAAkwIAAAAAAAABAAAAZQ",
					"AgAAAAAAAAABAAAAQwIAAAAAAABDAgAAAAAAAAAAAAAAAPC/AQAAAAEAAACVAgAAAAAAAJUCAAAAAAAAAAAAAAAA8L8"
				],
				[
					662,
					1,
					"insert",
					{
						"characters": "EnigneSxtate"
					},
					"DAAAAJMCAAAAAAAAlAIAAAAAAAAAAAAAlAIAAAAAAACVAgAAAAAAAAAAAACVAgAAAAAAAJYCAAAAAAAAAAAAAJYCAAAAAAAAlwIAAAAAAAAAAAAAlwIAAAAAAACYAgAAAAAAAAAAAACYAgAAAAAAAJkCAAAAAAAAAAAAAJkCAAAAAAAAmgIAAAAAAAAAAAAAmgIAAAAAAACbAgAAAAAAAAAAAACbAgAAAAAAAJwCAAAAAAAAAAAAAJwCAAAAAAAAnQIAAAAAAAAAAAAAnQIAAAAAAACeAgAAAAAAAAAAAACeAgAAAAAAAJ8CAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQwIAAAAAAABDAgAAAAAAAAAAAAAAAPC/AQAAAAEAAACTAgAAAAAAAJMCAAAAAAAAAAAAAAAA8L8"
				],
				[
					663,
					5,
					"left_delete",
					null,
					"BQAAAJ4CAAAAAAAAngIAAAAAAAABAAAAZZ0CAAAAAAAAnQIAAAAAAAABAAAAdJwCAAAAAAAAnAIAAAAAAAABAAAAYZsCAAAAAAAAmwIAAAAAAAABAAAAdJoCAAAAAAAAmgIAAAAAAAABAAAAeA",
					"AgAAAAAAAAABAAAAQwIAAAAAAABDAgAAAAAAAAAAAAAAAPC/AQAAAAEAAACfAgAAAAAAAJ8CAAAAAAAAAAAAAAAA8L8"
				],
				[
					665,
					1,
					"insert",
					{
						"characters": "State,"
					},
					"BwAAAJMCAAAAAAAAlAIAAAAAAAAAAAAAlAIAAAAAAACUAgAAAAAAAAcAAABFbmlnbmVTlAIAAAAAAACVAgAAAAAAAAAAAACVAgAAAAAAAJYCAAAAAAAAAAAAAJYCAAAAAAAAlwIAAAAAAAAAAAAAlwIAAAAAAACYAgAAAAAAAAAAAACYAgAAAAAAAJkCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQwIAAAAAAABDAgAAAAAAAAAAAAAAAPC/AQAAAAEAAACaAgAAAAAAAJMCAAAAAAAAAAAAAAAA8L8"
				],
				[
					666,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJkCAAAAAAAAmgIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQwIAAAAAAABDAgAAAAAAAAAAAAAAAPC/AQAAAAEAAACZAgAAAAAAAJkCAAAAAAAAAAAAAAAA8L8"
				],
				[
					670,
					1,
					"insert",
					{
						"characters": "&"
					},
					"AQAAAJMCAAAAAAAAlAIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQwIAAAAAAABDAgAAAAAAAAAAAAAAAPC/AQAAAAEAAACTAgAAAAAAAJMCAAAAAAAAAAAAAAAA8L8"
				],
				[
					675,
					1,
					"insert",
					{
						"characters": "engine"
					},
					"BwAAAEUAAAAAAAAARgAAAAAAAAAAAAAARgAAAAAAAABGAAAAAAAAAAcAAABlbmdpdG5lRgAAAAAAAABHAAAAAAAAAAAAAABHAAAAAAAAAEgAAAAAAAAAAAAAAEgAAAAAAAAASQAAAAAAAAAAAAAASQAAAAAAAABKAAAAAAAAAAAAAABKAAAAAAAAAEsAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQwIAAAAAAABDAgAAAAAAAAAAAAAAAPC/AQAAAAEAAABMAAAAAAAAAEUAAAAAAAAAAAAAAAAA8L8"
				],
				[
					682,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAALkCAAAAAAAAugIAAAAAAAAAAAAAugIAAAAAAAC7AgAAAAAAAAAAAAC6AgAAAAAAAL4CAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQgIAAAAAAABCAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAC5AgAAAAAAALkCAAAAAAAAAAAAAAAA8L8"
				],
				[
					683,
					1,
					"insert",
					{
						"characters": "for"
					},
					"AwAAAL4CAAAAAAAAvwIAAAAAAAAAAAAAvwIAAAAAAADAAgAAAAAAAAAAAADAAgAAAAAAAMECAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQgIAAAAAAABCAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAC+AgAAAAAAAL4CAAAAAAAAAAAAAAAA8L8"
				],
				[
					684,
					1,
					"insert",
					{
						"characters": " rc"
					},
					"AwAAAMECAAAAAAAAwgIAAAAAAAAAAAAAwgIAAAAAAADDAgAAAAAAAAAAAADDAgAAAAAAAMQCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQgIAAAAAAABCAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADBAgAAAAAAAMECAAAAAAAAAAAAAAAA8L8"
				],
				[
					685,
					1,
					"insert",
					{
						"characters": " in"
					},
					"AwAAAMQCAAAAAAAAxQIAAAAAAAAAAAAAxQIAAAAAAADGAgAAAAAAAAAAAADGAgAAAAAAAMcCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQgIAAAAAAABCAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADEAgAAAAAAAMQCAAAAAAAAAAAAAAAA8L8"
				],
				[
					686,
					1,
					"insert",
					{
						"characters": " state"
					},
					"BgAAAMcCAAAAAAAAyAIAAAAAAAAAAAAAyAIAAAAAAADJAgAAAAAAAAAAAADJAgAAAAAAAMoCAAAAAAAAAAAAAMoCAAAAAAAAywIAAAAAAAAAAAAAywIAAAAAAADMAgAAAAAAAAAAAADMAgAAAAAAAM0CAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQgIAAAAAAABCAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADHAgAAAAAAAMcCAAAAAAAAAAAAAAAA8L8"
				],
				[
					687,
					5,
					"left_delete",
					null,
					"BQAAAMwCAAAAAAAAzAIAAAAAAAABAAAAZcsCAAAAAAAAywIAAAAAAAABAAAAdMoCAAAAAAAAygIAAAAAAAABAAAAYckCAAAAAAAAyQIAAAAAAAABAAAAdMgCAAAAAAAAyAIAAAAAAAABAAAAcw",
					"AgAAAAAAAAABAAAAQgIAAAAAAABCAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADNAgAAAAAAAM0CAAAAAAAAAAAAAAAA8L8"
				],
				[
					688,
					1,
					"insert",
					{
						"characters": "engine"
					},
					"BgAAAMgCAAAAAAAAyQIAAAAAAAAAAAAAyQIAAAAAAADKAgAAAAAAAAAAAADKAgAAAAAAAMsCAAAAAAAAAAAAAMsCAAAAAAAAzAIAAAAAAAAAAAAAzAIAAAAAAADNAgAAAAAAAAAAAADNAgAAAAAAAM4CAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQgIAAAAAAABCAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADIAgAAAAAAAMgCAAAAAAAAAAAAAAAA8L8"
				],
				[
					692,
					1,
					"insert",
					{
						"characters": "state"
					},
					"BgAAAIQCAAAAAAAAhQIAAAAAAAAAAAAAhQIAAAAAAACFAgAAAAAAAAwAAABlbmdpbmVfc3RhdGWFAgAAAAAAAIYCAAAAAAAAAAAAAIYCAAAAAAAAhwIAAAAAAAAAAAAAhwIAAAAAAACIAgAAAAAAAAAAAACIAgAAAAAAAIkCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQgIAAAAAAABCAgAAAAAAAAAAAAAAAPC/AQAAAAEAAACQAgAAAAAAAIQCAAAAAAAAAAAAAAAA8L8"
				],
				[
					696,
					1,
					"insert",
					{
						"characters": "state."
					},
					"BwAAAMECAAAAAAAAwgIAAAAAAAAAAAAAwgIAAAAAAADCAgAAAAAAAAYAAABlbmdpbmXCAgAAAAAAAMMCAAAAAAAAAAAAAMMCAAAAAAAAxAIAAAAAAAAAAAAAxAIAAAAAAADFAgAAAAAAAAAAAADFAgAAAAAAAMYCAAAAAAAAAAAAAMYCAAAAAAAAxwIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQgIAAAAAAABCAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADHAgAAAAAAAMECAAAAAAAAAAAAAAAA8L8"
				],
				[
					737,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAL0CAAAAAAAAvgIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQgIAAAAAAABCAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAC9AgAAAAAAAL0CAAAAAAAAAAAAAAAA8L8"
				],
				[
					738,
					1,
					"insert",
					{
						"characters": " RenderCOmmand"
					},
					"DgAAAL4CAAAAAAAAvwIAAAAAAAAAAAAAvwIAAAAAAADAAgAAAAAAAAAAAADAAgAAAAAAAMECAAAAAAAAAAAAAMECAAAAAAAAwgIAAAAAAAAAAAAAwgIAAAAAAADDAgAAAAAAAAAAAADDAgAAAAAAAMQCAAAAAAAAAAAAAMQCAAAAAAAAxQIAAAAAAAAAAAAAxQIAAAAAAADGAgAAAAAAAAAAAADGAgAAAAAAAMcCAAAAAAAAAAAAAMcCAAAAAAAAyAIAAAAAAAAAAAAAyAIAAAAAAADJAgAAAAAAAAAAAADJAgAAAAAAAMoCAAAAAAAAAAAAAMoCAAAAAAAAywIAAAAAAAAAAAAAywIAAAAAAADMAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQgIAAAAAAABCAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAC+AgAAAAAAAL4CAAAAAAAAAAAAAAAA8L8"
				],
				[
					740,
					4,
					"left_delete",
					null,
					"BAAAAL8CAAAAAAAAvwIAAAAAAAANAAAAUmVuZGVyQ09tbWFuZL4CAAAAAAAAvgIAAAAAAAABAAAAIL0CAAAAAAAAvQIAAAAAAAABAAAAOrwCAAAAAAAAvAIAAAAAAAABAAAAYw",
					"AgAAAAAAAAABAAAAQgIAAAAAAABCAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADMAgAAAAAAAL8CAAAAAAAAAAAAAAAA8L8"
				],
				[
					741,
					1,
					"insert",
					{
						"characters": "end_o"
					},
					"BQAAALwCAAAAAAAAvQIAAAAAAAAAAAAAvQIAAAAAAAC+AgAAAAAAAAAAAAC+AgAAAAAAAL8CAAAAAAAAAAAAAL8CAAAAAAAAwAIAAAAAAAAAAAAAwAIAAAAAAADBAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQgIAAAAAAABCAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAC8AgAAAAAAALwCAAAAAAAAAAAAAAAA8L8"
				],
				[
					742,
					1,
					"left_delete",
					null,
					"AQAAAMACAAAAAAAAwAIAAAAAAAABAAAAbw",
					"AgAAAAAAAAABAAAAQgIAAAAAAABCAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADBAgAAAAAAAMECAAAAAAAAAAAAAAAA8L8"
				],
				[
					743,
					1,
					"insert",
					{
						"characters": "command"
					},
					"BwAAAMACAAAAAAAAwQIAAAAAAAAAAAAAwQIAAAAAAADCAgAAAAAAAAAAAADCAgAAAAAAAMMCAAAAAAAAAAAAAMMCAAAAAAAAxAIAAAAAAAAAAAAAxAIAAAAAAADFAgAAAAAAAAAAAADFAgAAAAAAAMYCAAAAAAAAAAAAAMYCAAAAAAAAxwIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQgIAAAAAAABCAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADAAgAAAAAAAMACAAAAAAAAAAAAAAAA8L8"
				],
				[
					745,
					1,
					"insert",
					{
						"characters": "render_command"
					},
					"DgAAANECAAAAAAAA0gIAAAAAAAAAAAAA0gIAAAAAAADTAgAAAAAAAAAAAADTAgAAAAAAANQCAAAAAAAAAAAAANQCAAAAAAAA1QIAAAAAAAAAAAAA1QIAAAAAAADWAgAAAAAAAAAAAADWAgAAAAAAANcCAAAAAAAAAAAAANcCAAAAAAAA2AIAAAAAAAAAAAAA2AIAAAAAAADZAgAAAAAAAAAAAADZAgAAAAAAANoCAAAAAAAAAAAAANoCAAAAAAAA2wIAAAAAAAAAAAAA2wIAAAAAAADcAgAAAAAAAAAAAADcAgAAAAAAAN0CAAAAAAAAAAAAAN0CAAAAAAAA3gIAAAAAAAAAAAAA3gIAAAAAAADfAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQgIAAAAAAABCAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADRAgAAAAAAANECAAAAAAAA////////738"
				],
				[
					746,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAN8CAAAAAAAA4QIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQgIAAAAAAABCAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADfAgAAAAAAAN8CAAAAAAAAAAAAAAAA8L8"
				],
				[
					747,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOACAAAAAAAA4QIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQgIAAAAAAABCAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADgAgAAAAAAAOACAAAAAAAAAAAAAAAA8L8"
				],
				[
					748,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAOECAAAAAAAA4wIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQgIAAAAAAABCAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADhAgAAAAAAAOECAAAAAAAAAAAAAAAA8L8"
				],
				[
					749,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAOECAAAAAAAA4QIAAAAAAAABAAAAe+ECAAAAAAAA4QIAAAAAAAABAAAAfQ",
					"AgAAAAAAAAABAAAAQgIAAAAAAABCAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADiAgAAAAAAAOICAAAAAAAAAAAAAAAA8L8"
				],
				[
					750,
					1,
					"left_delete",
					null,
					"AQAAAOACAAAAAAAA4AIAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAQgIAAAAAAABCAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADhAgAAAAAAAOECAAAAAAAAAAAAAAAA8L8"
				],
				[
					751,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAN8CAAAAAAAA3wIAAAAAAAABAAAAW98CAAAAAAAA3wIAAAAAAAABAAAAXQ",
					"AgAAAAAAAAABAAAAQgIAAAAAAABCAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADgAgAAAAAAAOACAAAAAAAAAAAAAAAA8L8"
				],
				[
					752,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAAN8CAAAAAAAA4AIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQgIAAAAAAABCAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADfAgAAAAAAAN8CAAAAAAAAAAAAAAAA8L8"
				],
				[
					753,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOACAAAAAAAA4QIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQgIAAAAAAABCAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADgAgAAAAAAAOACAAAAAAAAAAAAAAAA8L8"
				],
				[
					754,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAOECAAAAAAAA4wIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQgIAAAAAAABCAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADhAgAAAAAAAOECAAAAAAAAAAAAAAAA8L8"
				],
				[
					755,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAOICAAAAAAAA4wIAAAAAAAAAAAAA4wIAAAAAAADnAgAAAAAAAAAAAADnAgAAAAAAAOgCAAAAAAAAAAAAAOgCAAAAAAAA7AIAAAAAAAAAAAAA4wIAAAAAAADjAgAAAAAAAAQAAAAgICAg4wIAAAAAAADrAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQgIAAAAAAABCAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADiAgAAAAAAAOICAAAAAAAAAAAAAAAA8L8"
				],
				[
					756,
					2,
					"rust_fmt_format_buffer",
					null,
					"AQAAAOICAAAAAAAA4gIAAAAAAAAOAAAACiAgICAgICAgCiAgICA",
					"AgAAAAAAAAABAAAAQgIAAAAAAABCAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADrAgAAAAAAAOsCAAAAAAAAAAAAAAAA8L8"
				],
				[
					761,
					1,
					"insert",
					{
						"characters": "&"
					},
					"AQAAALsCAAAAAAAAvAIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQgIAAAAAAABCAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAC7AgAAAAAAALsCAAAAAAAAAAAAAAAA8L8"
				],
				[
					764,
					1,
					"left_delete",
					null,
					"AQAAALsCAAAAAAAAuwIAAAAAAAABAAAAJg",
					"AgAAAAAAAAABAAAAQgIAAAAAAABCAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAC8AgAAAAAAALwCAAAAAAAAAAAAAAAA8L8"
				],
				[
					767,
					1,
					"insert",
					{
						"characters": "&"
					},
					"AQAAAMsCAAAAAAAAzAIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQgIAAAAAAABCAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADLAgAAAAAAAMsCAAAAAAAAAAAAAAAA8L8"
				],
				[
					778,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAOMCAAAAAAAA5AIAAAAAAAAAAAAA5AIAAAAAAADoAgAAAAAAAAAAAADoAgAAAAAAAOkCAAAAAAAAAAAAAOkCAAAAAAAA7QIAAAAAAAAAAAAA5AIAAAAAAADkAgAAAAAAAAQAAAAgICAg5AIAAAAAAADsAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQgIAAAAAAABCAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADjAgAAAAAAAOMCAAAAAAAAAAAAAAAA8L8"
				],
				[
					779,
					1,
					"insert",
					{
						"characters": "render_api"
					},
					"CgAAAOwCAAAAAAAA7QIAAAAAAAAAAAAA7QIAAAAAAADuAgAAAAAAAAAAAADuAgAAAAAAAO8CAAAAAAAAAAAAAO8CAAAAAAAA8AIAAAAAAAAAAAAA8AIAAAAAAADxAgAAAAAAAAAAAADxAgAAAAAAAPICAAAAAAAAAAAAAPICAAAAAAAA8wIAAAAAAAAAAAAA8wIAAAAAAAD0AgAAAAAAAAAAAAD0AgAAAAAAAPUCAAAAAAAAAAAAAPUCAAAAAAAA9gIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQgIAAAAAAABCAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADsAgAAAAAAAOwCAAAAAAAAAAAAAAAA8L8"
				],
				[
					780,
					1,
					"insert",
					{
						"characters": ".render"
					},
					"BwAAAPYCAAAAAAAA9wIAAAAAAAAAAAAA9wIAAAAAAAD4AgAAAAAAAAAAAAD4AgAAAAAAAPkCAAAAAAAAAAAAAPkCAAAAAAAA+gIAAAAAAAAAAAAA+gIAAAAAAAD7AgAAAAAAAAAAAAD7AgAAAAAAAPwCAAAAAAAAAAAAAPwCAAAAAAAA/QIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQgIAAAAAAABCAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAD2AgAAAAAAAPYCAAAAAAAAAAAAAAAA8L8"
				],
				[
					782,
					1,
					"left_delete",
					null,
					"AQAAAOwCAAAAAAAA7AIAAAAAAAARAAAAcmVuZGVyX2FwaS5yZW5kZXI",
					"AgAAAAAAAAABAAAAQgIAAAAAAABCAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAD9AgAAAAAAAOwCAAAAAAAAAAAAAAAATUA"
				],
				[
					783,
					1,
					"paste",
					null,
					"AQAAAOQCAAAAAAAAJAMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQgIAAAAAAABCAgAAAAAAAAAAAAAAAPC/AQAAAAEAAADsAgAAAAAAAOwCAAAAAAAAAAAAAAAA8L8"
				],
				[
					784,
					2,
					"rust_fmt_format_buffer",
					null,
					"AgAAAOgCAAAAAAAA7AIAAAAAAAAAAAAAJwMAAAAAAAAnAwAAAAAAAAkAAAAKICAgICAgICA",
					"AgAAAAAAAAABAAAAQgIAAAAAAABCAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAsAwAAAAAAACwDAAAAAAAAAAAAAAAA8L8"
				],
				[
					789,
					1,
					"insert",
					{
						"characters": "command"
					},
					"CAAAAP4CAAAAAAAA/wIAAAAAAAAAAAAA/wIAAAAAAAD/AgAAAAAAAAUAAABzdGF0Zf8CAAAAAAAAAAMAAAAAAAAAAAAAAAMAAAAAAAABAwAAAAAAAAAAAAABAwAAAAAAAAIDAAAAAAAAAAAAAAIDAAAAAAAAAwMAAAAAAAAAAAAAAwMAAAAAAAAEAwAAAAAAAAAAAAAEAwAAAAAAAAUDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQgIAAAAAAABCAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAADAwAAAAAAAP4CAAAAAAAAAAAAAAAA8L8"
				],
				[
					797,
					1,
					"insert",
					{
						"characters": "command"
					},
					"CAAAAA8DAAAAAAAAEAMAAAAAAAAAAAAAEAMAAAAAAAAQAwAAAAAAAAUAAABzdGF0ZRADAAAAAAAAEQMAAAAAAAAAAAAAEQMAAAAAAAASAwAAAAAAAAAAAAASAwAAAAAAABMDAAAAAAAAAAAAABMDAAAAAAAAFAMAAAAAAAAAAAAAFAMAAAAAAAAVAwAAAAAAAAAAAAAVAwAAAAAAABYDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQgIAAAAAAABCAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAUAwAAAAAAAA8DAAAAAAAAAAAAAAAA8L8"
				],
				[
					801,
					1,
					"left_delete",
					null,
					"AQAAAJMCAAAAAAAAkwIAAAAAAAABAAAAXw",
					"AgAAAAAAAAABAAAAQgIAAAAAAABCAgAAAAAAAAAAAAAAAPC/AQAAAAEAAACUAgAAAAAAAJQCAAAAAAAAAAAAAAAA8L8"
				],
				[
					816,
					1,
					"insert",
					{
						"characters": "rec"
					},
					"BAAAAP0CAAAAAAAA/gIAAAAAAAAAAAAA/gIAAAAAAAD+AgAAAAAAAAcAAABjb21tYW5k/gIAAAAAAAD/AgAAAAAAAAAAAAD/AgAAAAAAAAADAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAABAMAAAAAAAD9AgAAAAAAAAAAAAAAAPC/AQAAAAEAAADrAgAAAAAAAOsCAAAAAAAAAAAAAAAATUA"
				],
				[
					821,
					1,
					"insert",
					{
						"characters": "command"
					},
					"CAAAALoCAAAAAAAAuwIAAAAAAAAAAAAAuwIAAAAAAAC7AgAAAAAAAAwAAAByZW5kX2NvbW1hbmS7AgAAAAAAALwCAAAAAAAAAAAAALwCAAAAAAAAvQIAAAAAAAAAAAAAvQIAAAAAAAC+AgAAAAAAAAAAAAC+AgAAAAAAAL8CAAAAAAAAAAAAAL8CAAAAAAAAwAIAAAAAAAAAAAAAwAIAAAAAAADBAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAxgIAAAAAAAC6AgAAAAAAAAAAAAAAAPC/AQAAAAEAAADrAgAAAAAAAOsCAAAAAAAAAAAAAAAA8L8"
				],
				[
					830,
					1,
					"insert",
					{
						"characters": "command"
					},
					"CAAAAPgCAAAAAAAA+QIAAAAAAAAAAAAA+QIAAAAAAAD5AgAAAAAAAAMAAAByZWP5AgAAAAAAAPoCAAAAAAAAAAAAAPoCAAAAAAAA+wIAAAAAAAAAAAAA+wIAAAAAAAD8AgAAAAAAAAAAAAD8AgAAAAAAAP0CAAAAAAAAAAAAAP0CAAAAAAAA/gIAAAAAAAAAAAAA/gIAAAAAAAD/AgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAwMAAAAAAAADAwAAAAAAAAAAAAAAAPC/AQAAAAEAAAD7AgAAAAAAAPgCAAAAAAAAAAAAAAAA8L8"
				],
				[
					833,
					1,
					"insert",
					{
						"characters": "command"
					},
					"CAAAAAkDAAAAAAAACgMAAAAAAAAAAAAACgMAAAAAAAAKAwAAAAAAAAcAAABjb21tYW5kCgMAAAAAAAALAwAAAAAAAAAAAAALAwAAAAAAAAwDAAAAAAAAAAAAAAwDAAAAAAAADQMAAAAAAAAAAAAADQMAAAAAAAAOAwAAAAAAAAAAAAAOAwAAAAAAAA8DAAAAAAAAAAAAAA8DAAAAAAAAEAMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAABwMAAAAAAAAHAwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAQAwAAAAAAAAkDAAAAAAAAAAAAAAAA8L8"
				],
				[
					837,
					1,
					"left_delete",
					null,
					"AQAAABoDAAAAAAAAGgMAAAAAAAABAAAAJg",
					"AgAAAAAAAAABAAAABwMAAAAAAAAHAwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAbAwAAAAAAABsDAAAAAAAAAAAAAAAA8L8"
				],
				[
					838,
					1,
					"insert",
					{
						"characters": "command."
					},
					"CAAAABoDAAAAAAAAGwMAAAAAAAAAAAAAGwMAAAAAAAAcAwAAAAAAAAAAAAAcAwAAAAAAAB0DAAAAAAAAAAAAAB0DAAAAAAAAHgMAAAAAAAAAAAAAHgMAAAAAAAAfAwAAAAAAAAAAAAAfAwAAAAAAACADAAAAAAAAAAAAACADAAAAAAAAIQMAAAAAAAAAAAAAIQMAAAAAAAAiAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAABwMAAAAAAAAHAwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAaAwAAAAAAABoDAAAAAAAAAAAAAAAA8L8"
				],
				[
					849,
					1,
					"insert",
					{
						"characters": "vao_id"
					},
					"BwAAABEDAAAAAAAAEgMAAAAAAAAAAAAAEgMAAAAAAAASAwAAAAAAAAcAAABjdWJlX2lkEgMAAAAAAAATAwAAAAAAAAAAAAATAwAAAAAAABQDAAAAAAAAAAAAABQDAAAAAAAAFQMAAAAAAAAAAAAAFQMAAAAAAAAWAwAAAAAAAAAAAAAWAwAAAAAAABcDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAABwMAAAAAAAAHAwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAYAwAAAAAAABEDAAAAAAAAAAAAAAAA8L8"
				],
				[
					854,
					1,
					"insert",
					{
						"characters": "&"
					},
					"AQAAABkDAAAAAAAAGgMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAABwMAAAAAAAAHAwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAZAwAAAAAAABkDAAAAAAAAAAAAAAAA8L8"
				],
				[
					864,
					1,
					"cut",
					null,
					"BwAAADYDAAAAAAAANgMAAAAAAAADAAAALyoKNgMAAAAAAAA2AwAAAAAAACkAAABwdWIgZm4gcmVuZGVyX21vZGVsKCkgLT4gUmVuZGVyQ29tbWFuZCB7CjYDAAAAAAAANgMAAAAAAAAUAAAAICAgIFJlbmRlckNvbW1hbmQgewo2AwAAAAAAADYDAAAAAAAAEwAAACAgICAgICAgdmFvX2lkOiAwLAo2AwAAAAAAADYDAAAAAAAAFgAAACAgICAgICAgc2hhZGVyX2lkOiAwLAo2AwAAAAAAADYDAAAAAAAABgAAACAgICB9CjYDAAAAAAAANgMAAAAAAAACAAAAfQo",
					"AgAAAAAAAAABAAAABwMAAAAAAAAHAwAAAAAAAAAAAAAAAPC/AQAAAAEAAAA4AwAAAAAAADgDAAAAAAAAAAAAAAAAckA"
				],
				[
					865,
					1,
					"insert",
					{
						"characters": "x"
					},
					"AQAAADYDAAAAAAAANwMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAABwMAAAAAAAAHAwAAAAAAAAAAAAAAAPC/AQAAAAEAAAA2AwAAAAAAADYDAAAAAAAAAAAAAAAA8L8"
				],
				[
					866,
					1,
					"left_delete",
					null,
					"AQAAADYDAAAAAAAANgMAAAAAAAABAAAAeA",
					"AgAAAAAAAAABAAAABwMAAAAAAAAHAwAAAAAAAAAAAAAAAPC/AQAAAAEAAAA3AwAAAAAAADcDAAAAAAAAAAAAAAAA8L8"
				],
				[
					869,
					1,
					"cut",
					null,
					"AQAAADYDAAAAAAAANgMAAAAAAAADAAAAKi8K",
					"AgAAAAAAAAABAAAABwMAAAAAAAAHAwAAAAAAAAAAAAAAAPC/AQAAAAEAAAA2AwAAAAAAADYDAAAAAAAAAAAAAAAA8L8"
				],
				[
					870,
					1,
					"left_delete",
					null,
					"AQAAADUDAAAAAAAANQMAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAABwMAAAAAAAAHAwAAAAAAAAAAAAAAAPC/AQAAAAEAAAA2AwAAAAAAADYDAAAAAAAAAAAAAAAA8L8"
				],
				[
					880,
					1,
					"cut",
					null,
					"AQAAAPoBAAAAAAAA+gEAAAAAAABGAAAAICAgIGZuIHJlbmRlcigmc2VsZiwgcHJvZ19pZDogdTMyLCB2YW9faWQ6IHUzMiwgaW5kZWNpZXM6ICZWZWM8dTMyPik7Cg",
					"AgAAAAAAAAABAAAABwMAAAAAAAAHAwAAAAAAAAAAAAAAAPC/AQAAAAEAAAD6AQAAAAAAAPoBAAAAAAAAAAAAAAAAAAA"
				],
				[
					881,
					1,
					"left_delete",
					null,
					"AQAAAPkBAAAAAAAA+QEAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAwQIAAAAAAADBAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAD6AQAAAAAAAPoBAAAAAAAAAAAAAAAA8L8"
				],
				[
					886,
					1,
					"cut",
					null,
					"BQAAAC8CAAAAAAAALwIAAAAAAAA8AAAAcHViIGZuIHJlbmRlcihzdGF0ZTogJlN0YXRlLCByZW5kZXJfYXBpOiAmaW1wbCBSZW5kZXJBcGkpIHsKLwIAAAAAAAAvAgAAAAAAACwAAAAgICAgZm9yIGNvbW1hbmQgaW4gJnN0YXRlLnJlbmRlcl9jb21tYW5kcyB7Ci8CAAAAAAAALwIAAAAAAABPAAAAICAgICAgICByZW5kZXJfYXBpLnJlbmRlcihjb21tYW5kLnByb2dfaWQsIGNvbW1hbmQudmFvX2lkLCAmY29tbWFuZC5pbmRlY2llcyk7Ci8CAAAAAAAALwIAAAAAAAAGAAAAICAgIH0KLwIAAAAAAAAvAgAAAAAAAAIAAAB9Cg",
					"AgAAAAAAAAABAAAAwAIAAAAAAADAAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAvAgAAAAAAAC8CAAAAAAAAAAAAAAAAAAA"
				],
				[
					887,
					1,
					"left_delete",
					null,
					"AgAAAC4CAAAAAAAALgIAAAAAAAABAAAACi0CAAAAAAAALQIAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAALwIAAAAAAAAvAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAvAgAAAAAAAC8CAAAAAAAAAAAAAAAA8L8"
				],
				[
					888,
					1,
					"rust_fmt_format_buffer",
					null,
					"AQAAAC0CAAAAAAAALgIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAALQIAAAAAAAAtAgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAtAgAAAAAAAC0CAAAAAAAAAAAAAAAA8L8"
				],
				[
					904,
					1,
					"insert",
					{
						"characters": "\npub"
					},
					"BAAAAH4AAAAAAAAAfwAAAAAAAAAAAAAAfwAAAAAAAACAAAAAAAAAAAAAAACAAAAAAAAAAIEAAAAAAAAAAAAAAIEAAAAAAAAAggAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAfgAAAAAAAAB+AAAAAAAAAP///////+9/AQAAAAEAAAD6AQAAAAAAAPoBAAAAAAAAAAAAAAAA8L8"
				],
				[
					905,
					1,
					"insert",
					{
						"characters": " mod"
					},
					"BAAAAIIAAAAAAAAAgwAAAAAAAAAAAAAAgwAAAAAAAACEAAAAAAAAAAAAAACEAAAAAAAAAIUAAAAAAAAAAAAAAIUAAAAAAAAAhgAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAggAAAAAAAACCAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAD+AQAAAAAAAP4BAAAAAAAAAAAAAAAA8L8"
				],
				[
					906,
					1,
					"insert",
					{
						"characters": " Sh"
					},
					"AwAAAIYAAAAAAAAAhwAAAAAAAAAAAAAAhwAAAAAAAACIAAAAAAAAAAAAAACIAAAAAAAAAIkAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAhgAAAAAAAACGAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAACAgAAAAAAAAICAAAAAAAAAAAAAAAA8L8"
				],
				[
					907,
					1,
					"left_delete",
					null,
					"AgAAAIgAAAAAAAAAiAAAAAAAAAABAAAAaIcAAAAAAAAAhwAAAAAAAAABAAAAUw",
					"AgAAAAAAAAABAAAAiQAAAAAAAACJAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAFAgAAAAAAAAUCAAAAAAAAAAAAAAAA8L8"
				],
				[
					908,
					1,
					"insert",
					{
						"characters": "shaddr"
					},
					"BgAAAIcAAAAAAAAAiAAAAAAAAAAAAAAAiAAAAAAAAACJAAAAAAAAAAAAAACJAAAAAAAAAIoAAAAAAAAAAAAAAIoAAAAAAAAAiwAAAAAAAAAAAAAAiwAAAAAAAACMAAAAAAAAAAAAAACMAAAAAAAAAI0AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAhwAAAAAAAACHAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAADAgAAAAAAAAMCAAAAAAAAAAAAAAAA8L8"
				],
				[
					909,
					1,
					"left_delete",
					null,
					"AgAAAIwAAAAAAAAAjAAAAAAAAAABAAAAcosAAAAAAAAAiwAAAAAAAAABAAAAZA",
					"AgAAAAAAAAABAAAAjQAAAAAAAACNAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAJAgAAAAAAAAkCAAAAAAAAAAAAAAAA8L8"
				],
				[
					910,
					1,
					"insert",
					{
						"characters": "er;"
					},
					"AwAAAIsAAAAAAAAAjAAAAAAAAAAAAAAAjAAAAAAAAACNAAAAAAAAAAAAAACNAAAAAAAAAI4AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAiwAAAAAAAACLAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAHAgAAAAAAAAcCAAAAAAAAAAAAAAAA8L8"
				],
				[
					911,
					1,
					"rust_fmt_format_buffer",
					null,
					"BAAAAHoAAAAAAAAAegAAAAAAAAADAAAAdmFvegAAAAAAAACAAAAAAAAAAAAAAACKAAAAAAAAAIoAAAAAAAAABgAAAHNoYWRlcooAAAAAAAAAjQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAjgAAAAAAAACOAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAKAgAAAAAAAAoCAAAAAAAAAAAAAAAA8L8"
				],
				[
					936,
					1,
					"insert",
					{
						"characters": "\nuse"
					},
					"BAAAAKYAAAAAAAAApwAAAAAAAAAAAAAApwAAAAAAAACoAAAAAAAAAAAAAACoAAAAAAAAAKkAAAAAAAAAAAAAAKkAAAAAAAAAqgAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAApgAAAAAAAACmAAAAAAAAAP///////+9/AQAAAAEAAAAKAgAAAAAAAAoCAAAAAAAAAAAAAAAA8L8"
				],
				[
					937,
					1,
					"insert",
					{
						"characters": " shader::*"
					},
					"CgAAAKoAAAAAAAAAqwAAAAAAAAAAAAAAqwAAAAAAAACsAAAAAAAAAAAAAACsAAAAAAAAAK0AAAAAAAAAAAAAAK0AAAAAAAAArgAAAAAAAAAAAAAArgAAAAAAAACvAAAAAAAAAAAAAACvAAAAAAAAALAAAAAAAAAAAAAAALAAAAAAAAAAsQAAAAAAAAAAAAAAsQAAAAAAAACyAAAAAAAAAAAAAACyAAAAAAAAALMAAAAAAAAAAAAAALMAAAAAAAAAtAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAqgAAAAAAAACqAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAOAgAAAAAAAA4CAAAAAAAAAAAAAAAA8L8"
				],
				[
					938,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAALQAAAAAAAAAtQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAtAAAAAAAAAC0AAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAYAgAAAAAAABgCAAAAAAAAAAAAAAAA8L8"
				],
				[
					947,
					1,
					"insert",
					{
						"characters": "Shader"
					},
					"BwAAAEgBAAAAAAAASQEAAAAAAAAAAAAASQEAAAAAAABJAQAAAAAAAAUAAABFcnJvckkBAAAAAAAASgEAAAAAAAAAAAAASgEAAAAAAABLAQAAAAAAAAAAAABLAQAAAAAAAEwBAAAAAAAAAAAAAEwBAAAAAAAATQEAAAAAAAAAAAAATQEAAAAAAABOAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAATQEAAAAAAABIAQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAZAgAAAAAAABkCAAAAAAAAAAAAAAAA8L8"
				],
				[
					981,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABOAgAAdXNlIGNyYXRlOjplbmdpbmU6OmVycm9yOjoqOwp1c2UgY3JhdGU6OmVuZ2luZTo6c3RhdGU6Oio7CnVzZSBjcmF0ZTo6ZW5naW5lOjp2ZWN0b3JzOjoqOwoKcHViIG1vZCByZW5kZXJfY29tbWFuZDsKcHViIG1vZCBzaGFkZXI7CnB1YiBtb2QgdmFvOwoKdXNlIHJlbmRlcl9jb21tYW5kOjoqOwp1c2Ugc2hhZGVyOjoqOwoKLy8gUmVuZGVyIGJhY2tlbmQgaW5kZXBlbmRlbnQgY2FsbHMKcHViIHRyYWl0IFJlbmRlckFwaSB7CiAgICBmbiBtYWtlX3NoYWRlcl9wcm9ncmFtKCZzZWxmLCB2ZXJ0X3NoYWRlcjogJnN0ciwgZnJhZ19zaGFkZXI6ICZzdHIpIC0+IFJlc3VsdDx1MzIsIFNoYWRlcj47CgogICAgZm4gY3JlYXRlX3Zhbygmc2VsZikgLT4gUmVzdWx0PHUzMiwgRXJyb3I+OwoKICAgIGZuIHZhb191cGxvYWRfdjMoCiAgICAgICAgJnNlbGYsCiAgICAgICAgdmFvOiAmbXV0IHZhbzo6VmFvLAogICAgICAgIGRhdGE6IFZlYzxWZWNUaHJlZUZsb2F0PiwKICAgICAgICBsb2NhdGlvbjogdTMyLAogICAgKSAtPiBSZXN1bHQ8KCksIEVycm9yPjsKfQoKcHViIGVudW0gU2hhZGVyVHlwZSB7CiAgICBWZXJ0ZXgsCiAgICBGcmFnbWVudCwKfQoAAAAAAAAAAE0CAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAATgEAAAAAAABOAQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAaAgAAAAAAABoCAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "gengar_engine/src/engine/color.rs",
			"settings":
			{
				"buffer_size": 69,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "ghostly_game_windows/Cargo.toml",
			"redo_stack":
			[
				[
					82,
					1,
					"left_delete",
					null,
					"AQAAAEMBAAAAAAAARAEAAAAAAAAAAAAA",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABDAQAAAAAAAEMBAAAAAAAAAAAAAAAA8L8BAAAAAQAAAEMBAAAAAAAAQwEAAAAAAAAAAAAAAADwvw"
				],
				[
					81,
					1,
					"cut",
					null,
					"AgAAAEQBAAAAAAAAVAEAAAAAAAAAAAAARAEAAAAAAABbAQAAAAAAAAAAAAA",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABEAQAAAAAAAEQBAAAAAAAAAAAAAAAA8L8BAAAAAQAAAEQBAAAAAAAARAEAAAAAAAAAAAAAAADwvw"
				]
			],
			"settings":
			{
				"buffer_size": 363,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					21,
					1,
					"insert",
					{
						"characters": "opengl"
					},
					"BgAAALsAAAAAAAAAvAAAAAAAAAAAAAAAvAAAAAAAAAC9AAAAAAAAAAAAAAC9AAAAAAAAAL4AAAAAAAAAAAAAAL4AAAAAAAAAvwAAAAAAAAAAAAAAvwAAAAAAAADAAAAAAAAAAAAAAADAAAAAAAAAAMEAAAAAAAAAAAAAAA",
					"KQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC7AAAAAAAAALsAAAAAAAAAAAAAAAAA8L8"
				],
				[
					37,
					1,
					"paste",
					null,
					"AQAAAMUAAAAAAAAACgEAAAAAAAAAAAAA",
					"KQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADFAAAAAAAAAMUAAAAAAAAAAAAAAAAA8L8"
				],
				[
					48,
					1,
					"cut",
					null,
					"AQAAAMUAAAAAAAAAxQAAAAAAAABFAAAAQzpcRGlnaXRhbCBBcmNoaXZlXEdhbWUgRGV2ZWxvcG1lbnRcQWN0aXZlXGdob3N0bHlcZ2VuZ2FyX3JlbmRlcl9vcGVu",
					"KQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAKAQAAAAAAAAoBAAAAAAAAAAAAAAAA8L8"
				],
				[
					53,
					1,
					"paste",
					null,
					"AgAAAK0AAAAAAAAAwQAAAAAAAAAAAAAAwQAAAAAAAADBAAAAAAAAABQAAABnZW5nYXJfcmVuZGVyX29wZW5nbA",
					"KQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACtAAAAAAAAAMEAAAAAAAAAAAAAAAAA8L8"
				],
				[
					58,
					1,
					"paste",
					null,
					"AgAAAIkAAAAAAAAAnQAAAAAAAAAAAAAAnQAAAAAAAACdAAAAAAAAABQAAABnZW5nYXJfcmVuZGVyX29wZW5nbA",
					"KQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACJAAAAAAAAAJ0AAAAAAAAAAAAAAAAA8L8"
				],
				[
					65,
					1,
					"insert",
					{
						"characters": "\nghostly"
					},
					"CAAAAFoAAAAAAAAAWwAAAAAAAAAAAAAAWwAAAAAAAABcAAAAAAAAAAAAAABcAAAAAAAAAF0AAAAAAAAAAAAAAF0AAAAAAAAAXgAAAAAAAAAAAAAAXgAAAAAAAABfAAAAAAAAAAAAAABfAAAAAAAAAGAAAAAAAAAAAAAAAGAAAAAAAAAAYQAAAAAAAAAAAAAAYQAAAAAAAABiAAAAAAAAAAAAAAA",
					"KQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABaAAAAAAAAAFoAAAAAAAAA////////738"
				],
				[
					66,
					2,
					"swap_line_down",
					null,
					"BAAAAJEAAAAAAAAAmQAAAAAAAAAAAAAAWwAAAAAAAABbAAAAAAAAAAgAAABnaG9zdGx5Cs0AAAAAAAAA1QAAAAAAAAAAAAAAiQAAAAAAAACJAAAAAAAAAAgAAABnaG9zdGx5Cg",
					"KQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABiAAAAAAAAAGIAAAAAAAAAAAAAAAAA8L8"
				],
				[
					67,
					1,
					"insert",
					{
						"characters": "_"
					},
					"AQAAAMwAAAAAAAAAzQAAAAAAAAAAAAAA",
					"KQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADMAAAAAAAAAMwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					79,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAMQAAAAAAAAAxQAAAAAAAAAAAAAA",
					"KQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADEAAAAAAAAAMQAAAAAAAAA////////738"
				],
				[
					82,
					1,
					"insert",
					{
						"characters": "game"
					},
					"BAAAAM4AAAAAAAAAzwAAAAAAAAAAAAAAzwAAAAAAAADQAAAAAAAAAAAAAADQAAAAAAAAANEAAAAAAAAAAAAAANEAAAAAAAAA0gAAAAAAAAAAAAAA",
					"KQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADOAAAAAAAAAM4AAAAAAAAA////////738"
				],
				[
					85,
					1,
					"paste",
					null,
					"AQAAAFsAAAAAAAAAiQAAAAAAAAAAAAAA",
					"KQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABnAAAAAAAAAGcAAAAAAAAAAAAAAACAVUA"
				],
				[
					86,
					2,
					"swap_line_down",
					null,
					"BAAAAPMAAAAAAAAAIQEAAAAAAAAAAAAAiQAAAAAAAACJAAAAAAAAAC4AAABnZW5nYXJfZW5naW5lID0geyBwYXRoID0gIi4uL2dlbmdhcl9lbmdpbmUiIH0K9AAAAAAAAAAiAQAAAAAAAAAAAADFAAAAAAAAAMUAAAAAAAAALgAAAGdlbmdhcl9lbmdpbmUgPSB7IHBhdGggPSAiLi4vZ2VuZ2FyX2VuZ2luZSIgfQo",
					"KQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACVAAAAAAAAAJUAAAAAAAAAAAAAAAAA8L8"
				],
				[
					88,
					1,
					"cut",
					null,
					"AQAAAPQAAAAAAAAA9AAAAAAAAAANAAAAZ2hvc3RseV9nYW1lCg",
					"KQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAQAAAAAAAAABAAAAAAAAAAAAAACAVUA"
				],
				[
					92,
					1,
					"insert",
					{
						"characters": "ghostly_gae"
					},
					"DAAAAMYAAAAAAAAAxwAAAAAAAAAAAAAAxwAAAAAAAADHAAAAAAAAAA0AAABnZW5nYXJfZW5naW5lxwAAAAAAAADIAAAAAAAAAAAAAADIAAAAAAAAAMkAAAAAAAAAAAAAAMkAAAAAAAAAygAAAAAAAAAAAAAAygAAAAAAAADLAAAAAAAAAAAAAADLAAAAAAAAAMwAAAAAAAAAAAAAAMwAAAAAAAAAzQAAAAAAAAAAAAAAzQAAAAAAAADOAAAAAAAAAAAAAADOAAAAAAAAAM8AAAAAAAAAAAAAAM8AAAAAAAAA0AAAAAAAAAAAAAAA0AAAAAAAAADRAAAAAAAAAAAAAAA",
					"KQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADTAAAAAAAAAMYAAAAAAAAAAAAAAAAA8L8"
				],
				[
					93,
					1,
					"left_delete",
					null,
					"AQAAANAAAAAAAAAA0AAAAAAAAAABAAAAZQ",
					"KQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADRAAAAAAAAANEAAAAAAAAAAAAAAAAA8L8"
				],
				[
					94,
					1,
					"insert",
					{
						"characters": "me"
					},
					"AgAAANAAAAAAAAAA0QAAAAAAAAAAAAAA0QAAAAAAAADSAAAAAAAAAAAAAAA",
					"KQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADQAAAAAAAAANAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					99,
					1,
					"insert",
					{
						"characters": "ghostly_game"
					},
					"DQAAAOIAAAAAAAAA4wAAAAAAAAAAAAAA4wAAAAAAAADjAAAAAAAAAA0AAABnZW5nYXJfZW5naW5l4wAAAAAAAADkAAAAAAAAAAAAAADkAAAAAAAAAOUAAAAAAAAAAAAAAOUAAAAAAAAA5gAAAAAAAAAAAAAA5gAAAAAAAADnAAAAAAAAAAAAAADnAAAAAAAAAOgAAAAAAAAAAAAAAOgAAAAAAAAA6QAAAAAAAAAAAAAA6QAAAAAAAADqAAAAAAAAAAAAAADqAAAAAAAAAOsAAAAAAAAAAAAAAOsAAAAAAAAA7AAAAAAAAAAAAAAA7AAAAAAAAADtAAAAAAAAAAAAAADtAAAAAAAAAO4AAAAAAAAAAAAAAA",
					"KQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADvAAAAAAAAAOIAAAAAAAAAAAAAAAAA8L8"
				],
				[
					105,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAPEAAAAAAAAA8gAAAAAAAAAAAAAA8gAAAAAAAADzAAAAAAAAAAAAAAA",
					"KQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADxAAAAAAAAAPEAAAAAAAAAAAAAAAAA8L8"
				],
				[
					106,
					1,
					"paste",
					null,
					"AQAAAPMAAAAAAAAArQEAAAAAAAAAAAAA",
					"KQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADzAAAAAAAAAPMAAAAAAAAAAAAAAAAA8L8"
				],
				[
					111,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAK0BAAAAAAAArgEAAAAAAAAAAAAArgEAAAAAAACvAQAAAAAAAAAAAAA",
					"KQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACtAQAAAAAAAK0BAAAAAAAAAAAAAAAA8L8"
				],
				[
					112,
					1,
					"paste",
					null,
					"AQAAAK8BAAAAAAAAHQIAAAAAAAAAAAAA",
					"KQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACvAQAAAAAAAK8BAAAAAAAAAAAAAAAA8L8"
				],
				[
					114,
					8,
					"cut",
					null,
					"CAAAACgBAAAAAAAAKAEAAAAAAAAUAAAAICAgICJEYXRhX1htbF9Eb20iLAooAQAAAAAAACgBAAAAAAAAGAAAACAgICAiV2luMzJfRm91bmRhdGlvbiIsCigBAAAAAAAAKAEAAAAAAAAWAAAAICAgICJXaW4zMl9TZWN1cml0eSIsCigBAAAAAAAAKAEAAAAAAAAeAAAAICAgICJXaW4zMl9TeXN0ZW1fVGhyZWFkaW5nIiwKKAEAAAAAAAAoAQAAAAAAACQAAAAgICAgIldpbjMyX1VJX1dpbmRvd3NBbmRNZXNzYWdpbmciLAooAQAAAAAAACgBAAAAAAAAAgAAAF0KKAEAAAAAAAAoAQAAAAAAAAEAAAAKKAEAAAAAAAAoAQAAAAAAAA0AAABmZWF0dXJlcyA9IFsK",
					"KQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAApAQAAAAAAACkBAAAAAAAAAAAAAAAAHEA"
				],
				[
					121,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAIcBAAAAAAAAiAEAAAAAAAAAAAAAiAEAAAAAAACMAQAAAAAAAAAAAAA",
					"KQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACHAQAAAAAAAIcBAAAAAAAA////////738"
				],
				[
					122,
					1,
					"paste",
					null,
					"AQAAAIwBAAAAAAAADwIAAAAAAAAAAAAA",
					"KQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACMAQAAAAAAAIwBAAAAAAAAAAAAAAAA8L8"
				],
				[
					126,
					1,
					"left_delete",
					null,
					"AQAAAIgBAAAAAAAAiAEAAAAAAAAIAAAAICAgICAgICA",
					"KQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACQAQAAAAAAAIgBAAAAAAAAAAAAAAAAAAA"
				],
				[
					127,
					1,
					"insert",
					{
						"characters": "\t\t"
					},
					"AgAAAIgBAAAAAAAAiQEAAAAAAAAAAAAAiQEAAAAAAACKAQAAAAAAAAAAAAA",
					"KQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACIAQAAAAAAAIgBAAAAAAAAAAAAAAAA8L8"
				],
				[
					128,
					1,
					"left_delete",
					null,
					"AQAAAIkBAAAAAAAAiQEAAAAAAAABAAAACQ",
					"KQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACKAQAAAAAAAIoBAAAAAAAAAAAAAAAA8L8"
				],
				[
					129,
					1,
					"cut",
					null,
					"AQAAAIgBAAAAAAAAiAEAAAAAAAARAAAACSJEYXRhX1htbF9Eb20iLAo",
					"KQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACJAQAAAAAAAIkBAAAAAAAAAAAAAAAA8L8"
				],
				[
					131,
					1,
					"cut",
					null,
					"AQAAAKABAAAAAAAAoAEAAAAAAAAWAAAAICAgICJXaW4zMl9TZWN1cml0eSIsCg",
					"KQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACgAQAAAAAAAKABAAAAAAAAAAAAAAAAAAA"
				],
				[
					132,
					1,
					"cut",
					null,
					"AQAAAKABAAAAAAAAoAEAAAAAAAAeAAAAICAgICJXaW4zMl9TeXN0ZW1fVGhyZWFkaW5nIiwK",
					"KQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACgAQAAAAAAAKABAAAAAAAAAAAAAAAA8L8"
				],
				[
					141,
					1,
					"cut",
					null,
					"AQAAAKABAAAAAAAAoAEAAAAAAAAkAAAAICAgICJXaW4zMl9VSV9XaW5kb3dzQW5kTWVzc2FnaW5nIiwK",
					"KQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACkAQAAAAAAAKQBAAAAAAAAAAAAAAAAPUA"
				],
				[
					149,
					1,
					"left_delete",
					null,
					"AQAAAMQAAAAAAAAAxAAAAAAAAAABAAAACg",
					"KQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADFAAAAAAAAAMUAAAAAAAAAAAAAAAAAYkA"
				],
				[
					155,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAJ4BAAAAAAAAnwEAAAAAAAAAAAAAnwEAAAAAAACjAQAAAAAAAAAAAAA",
					"KgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACIAAAAAAAAAIgAAAAAAAAAAAAAAACQekABAAAAAQAAAJ4BAAAAAAAAngEAAAAAAAAAAAAAAADwvw"
				],
				[
					156,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAKMBAAAAAAAApQEAAAAAAAAAAAAA",
					"KgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACIAAAAAAAAAIgAAAAAAAAAAAAAAACQekABAAAAAQAAAKMBAAAAAAAAowEAAAAAAAAAAAAAAADwvw"
				],
				[
					157,
					1,
					"insert",
					{
						"characters": "Win32"
					},
					"BQAAAKQBAAAAAAAApQEAAAAAAAAAAAAApQEAAAAAAACmAQAAAAAAAAAAAACmAQAAAAAAAKcBAAAAAAAAAAAAAKcBAAAAAAAAqAEAAAAAAAAAAAAAqAEAAAAAAACpAQAAAAAAAAAAAAA",
					"KgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACIAAAAAAAAAIgAAAAAAAAAAAAAAACQekABAAAAAQAAAKQBAAAAAAAApAEAAAAAAAAAAAAAAADwvw"
				],
				[
					158,
					1,
					"insert",
					{
						"characters": "_Graphics_Open"
					},
					"DgAAAKkBAAAAAAAAqgEAAAAAAAAAAAAAqgEAAAAAAACrAQAAAAAAAAAAAACrAQAAAAAAAKwBAAAAAAAAAAAAAKwBAAAAAAAArQEAAAAAAAAAAAAArQEAAAAAAACuAQAAAAAAAAAAAACuAQAAAAAAAK8BAAAAAAAAAAAAAK8BAAAAAAAAsAEAAAAAAAAAAAAAsAEAAAAAAACxAQAAAAAAAAAAAACxAQAAAAAAALIBAAAAAAAAAAAAALIBAAAAAAAAswEAAAAAAAAAAAAAswEAAAAAAAC0AQAAAAAAAAAAAAC0AQAAAAAAALUBAAAAAAAAAAAAALUBAAAAAAAAtgEAAAAAAAAAAAAAtgEAAAAAAAC3AQAAAAAAAAAAAAA",
					"KgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACIAAAAAAAAAIgAAAAAAAAAAAAAAACQekABAAAAAQAAAKkBAAAAAAAAqQEAAAAAAAAAAAAAAADwvw"
				],
				[
					159,
					1,
					"insert",
					{
						"characters": "gl"
					},
					"AgAAALcBAAAAAAAAuAEAAAAAAAAAAAAAuAEAAAAAAAC5AQAAAAAAAAAAAAA",
					"KgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACIAAAAAAAAAIgAAAAAAAAAAAAAAACQekABAAAAAQAAALcBAAAAAAAAtwEAAAAAAAAAAAAAAADwvw"
				],
				[
					162,
					1,
					"cut",
					null,
					"AQAAAJ8BAAAAAAAAnwEAAAAAAAAcAAAAICAgICJXaW4zMl9HcmFwaGljc19PcGVuZ2wiCg",
					"KgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACIAAAAAAAAAIgAAAAAAAAAAAAAAACQekABAAAAAQAAALoBAAAAAAAAugEAAAAAAAAAAAAAAADwvw"
				],
				[
					175,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAAJ4BAAAAAAAAnwEAAAAAAAAAAAAAnwEAAAAAAACjAQAAAAAAAAAAAACjAQAAAAAAAKQBAAAAAAAAAAAAAKQBAAAAAAAAqAEAAAAAAAAAAAAAnwEAAAAAAACfAQAAAAAAAAQAAAAgICAg",
					"KgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACIAAAAAAAAAIgAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAJ4BAAAAAAAAngEAAAAAAAD////////vfw"
				],
				[
					176,
					1,
					"paste",
					null,
					"AQAAAKABAAAAAAAAuAEAAAAAAAAAAAAA",
					"KgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACIAAAAAAAAAIgAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAKQBAAAAAAAApAEAAAAAAAAAAAAAAADwvw"
				],
				[
					177,
					1,
					"cut",
					null,
					"AQAAALgBAAAAAAAAuAEAAAAAAAAFAAAAICAgIAo",
					"KgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACIAAAAAAAAAIgAAAAAAAAAAAAAAAAA8L8BAAAAAQAAALwBAAAAAAAAvAEAAAAAAAAAAAAAAADwvw"
				],
				[
					180,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAALcBAAAAAAAAuAEAAAAAAAAAAAAAuAEAAAAAAAC8AQAAAAAAAAAAAAC8AQAAAAAAAL0BAAAAAAAAAAAAAL0BAAAAAAAAwQEAAAAAAAAAAAAAuAEAAAAAAAC4AQAAAAAAAAQAAAAgICAg",
					"KgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACIAAAAAAAAAIgAAAAAAAAAAAAAAAAA8L8BAAAAAQAAALcBAAAAAAAAtwEAAAAAAAD////////vfw"
				],
				[
					181,
					1,
					"paste",
					null,
					"AQAAAL0BAAAAAAAA6QEAAAAAAAAAAAAA",
					"KgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACIAAAAAAAAAIgAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAL0BAAAAAAAAvQEAAAAAAAAAAAAAAADwvw"
				],
				[
					183,
					1,
					"cut",
					null,
					"AQAAALkBAAAAAAAAuQEAAAAAAAAaAAAAICAgICJXaW4zMl9HcmFwaGljc19HZGkiLAo",
					"KgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACIAAAAAAAAAIgAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAM8BAAAAAAAAzwEAAAAAAAAAAAAAAMBjQA"
				],
				[
					185,
					1,
					"cut",
					null,
					"AQAAALgBAAAAAAAAuAEAAAAAAAABAAAACg",
					"KgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACIAAAAAAAAAIgAAAAAAAAAAAAAAAAA8L8BAAAAAQAAALgBAAAAAAAAuAEAAAAAAAAAAAAAAAAAAA"
				],
				[
					186,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAALgBAAAAAAAAuQEAAAAAAAAAAAAA",
					"KgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACIAAAAAAAAAIgAAAAAAAAAAAAAAAAA8L8BAAAAAQAAALgBAAAAAAAAuAEAAAAAAAAAAAAAAADwvw"
				],
				[
					189,
					1,
					"cut",
					null,
					"AQAAAKABAAAAAAAAoAEAAAAAAAAYAAAAICAgICJXaW4zMl9Gb3VuZGF0aW9uIiwK",
					"KgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACIAAAAAAAAAIgAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAKQBAAAAAAAApAEAAAAAAAAAAAAAAAA9QA"
				],
				[
					191,
					1,
					"cut",
					null,
					"AQAAAJ8BAAAAAAAAnwEAAAAAAAABAAAACg",
					"KgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACIAAAAAAAAAIgAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAJ8BAAAAAAAAnwEAAAAAAAAAAAAAAAAAAA"
				],
				[
					193,
					1,
					"insert",
					{
						"characters": "\","
					},
					"AgAAALYBAAAAAAAAtwEAAAAAAAAAAAAAtwEAAAAAAAC4AQAAAAAAAAAAAAA",
					"KgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACIAAAAAAAAAIgAAAAAAAAAAAAAAAAA8L8BAAAAAQAAALYBAAAAAAAAtgEAAAAAAAD////////vfw"
				],
				[
					5,
					1,
					"insert",
					{
						"characters": "_cin"
					},
					"BAAAAJ0AAAAAAAAAngAAAAAAAAAAAAAAngAAAAAAAACfAAAAAAAAAAAAAACfAAAAAAAAAKAAAAAAAAAAAAAAAKAAAAAAAAAAoQAAAAAAAAAAAAAA",
					"JgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAnQAAAAAAAACdAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAC4AQAAAAAAALgBAAAAAAAAAAAAAAAA8L8"
				],
				[
					6,
					3,
					"left_delete",
					null,
					"AwAAAKAAAAAAAAAAoAAAAAAAAAABAAAAbp8AAAAAAAAAnwAAAAAAAAABAAAAaZ4AAAAAAAAAngAAAAAAAAABAAAAYw",
					"JgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAoQAAAAAAAAChAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAC8AQAAAAAAALwBAAAAAAAAAAAAAAAA8L8"
				],
				[
					7,
					1,
					"insert",
					{
						"characters": "windows"
					},
					"BwAAAJ4AAAAAAAAAnwAAAAAAAAAAAAAAnwAAAAAAAACgAAAAAAAAAAAAAACgAAAAAAAAAKEAAAAAAAAAAAAAAKEAAAAAAAAAogAAAAAAAAAAAAAAogAAAAAAAACjAAAAAAAAAAAAAACjAAAAAAAAAKQAAAAAAAAAAAAAAKQAAAAAAAAApQAAAAAAAAAAAAAA",
					"JgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAngAAAAAAAACeAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAC5AQAAAAAAALkBAAAAAAAAAAAAAAAA8L8"
				],
				[
					11,
					1,
					"insert",
					{
						"characters": "_d"
					},
					"AgAAAMkAAAAAAAAAygAAAAAAAAAAAAAAygAAAAAAAADLAAAAAAAAAAAAAAA",
					"JgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAyQAAAAAAAADJAAAAAAAAAAAAAAAAAPC/AQAAAAEAAADAAQAAAAAAAMABAAAAAAAAAAAAAAAA8L8"
				],
				[
					12,
					1,
					"left_delete",
					null,
					"AQAAAMoAAAAAAAAAygAAAAAAAAABAAAAZA",
					"JgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAywAAAAAAAADLAAAAAAAAAAAAAAAAAPC/AQAAAAEAAADCAQAAAAAAAMIBAAAAAAAAAAAAAAAA8L8"
				],
				[
					13,
					1,
					"insert",
					{
						"characters": "windows"
					},
					"BwAAAMoAAAAAAAAAywAAAAAAAAAAAAAAywAAAAAAAADMAAAAAAAAAAAAAADMAAAAAAAAAM0AAAAAAAAAAAAAAM0AAAAAAAAAzgAAAAAAAAAAAAAAzgAAAAAAAADPAAAAAAAAAAAAAADPAAAAAAAAANAAAAAAAAAAAAAAANAAAAAAAAAA0QAAAAAAAAAAAAAA",
					"JgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAygAAAAAAAADKAAAAAAAAAAAAAAAAAPC/AQAAAAEAAADBAQAAAAAAAMEBAAAAAAAAAAAAAAAA8L8"
				],
				[
					3,
					1,
					"insert",
					{
						"characters": "api"
					},
					"AwAAAJYAAAAAAAAAlwAAAAAAAAAAAAAAlwAAAAAAAACYAAAAAAAAAAAAAACYAAAAAAAAAJkAAAAAAAAAAAAAAA",
					"JAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACWAAAAAAAAAJYAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAMgBAAAAAAAAyAEAAAAAAAAAAAAAAADwvw"
				],
				[
					8,
					1,
					"insert",
					{
						"characters": "api"
					},
					"AwAAAMUAAAAAAAAAxgAAAAAAAAAAAAAAxgAAAAAAAADHAAAAAAAAAAAAAADHAAAAAAAAAMgAAAAAAAAAAAAAAA",
					"JAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADFAAAAAAAAAMUAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAMsBAAAAAAAAywEAAAAAAAAAAAAAAADwvw"
				],
				[
					3,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAAJwBAAAAAAAAnQEAAAAAAAAAAAAA",
					"IgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJwBAAAAAAAAnAEAAAAAAAAAAAAAAADwvwEAAAABAAAAzgEAAAAAAADOAQAAAAAAAAAAAAAAAPC/"
				],
				[
					4,
					1,
					"left_delete",
					null,
					"AQAAAJwBAAAAAAAAnAEAAAAAAAABAAAAcw",
					"IgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJ0BAAAAAAAAnQEAAAAAAAAAAAAAAADwvwEAAAABAAAAzwEAAAAAAADPAQAAAAAAAAAAAAAAAPC/"
				],
				[
					5,
					1,
					"insert",
					{
						"characters": "\ngengar"
					},
					"BwAAANoAAAAAAAAA2wAAAAAAAAAAAAAA2wAAAAAAAADcAAAAAAAAAAAAAADcAAAAAAAAAN0AAAAAAAAAAAAAAN0AAAAAAAAA3gAAAAAAAAAAAAAA3gAAAAAAAADfAAAAAAAAAAAAAADfAAAAAAAAAOAAAAAAAAAAAAAAAOAAAAAAAAAA4QAAAAAAAAAAAAAA",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADaAAAAAAAAANoAAAAAAAAA////////738BAAAAAQAAAM4BAAAAAAAAzgEAAAAAAAAAAAAAAADwvw"
				],
				[
					6,
					1,
					"insert",
					{
						"characters": "_"
					},
					"AQAAAOEAAAAAAAAA4gAAAAAAAAAAAAAA",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADhAAAAAAAAAOEAAAAAAAAAAAAAAAAA8L8BAAAAAQAAANUBAAAAAAAA1QEAAAAAAAAAAAAAAADwvw"
				],
				[
					9,
					1,
					"paste",
					null,
					"AQAAAIkAAAAAAAAA2wAAAAAAAAAAAAAA",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACQAAAAAAAAAJAAAAAAAAAAAAAAAAAASUABAAAAAQAAANYBAAAAAAAA1gEAAAAAAAAAAAAAAADwvw"
				],
				[
					11,
					1,
					"cut",
					null,
					"AQAAAC0BAAAAAAAALQEAAAAAAAAIAAAAZ2VuZ2FyXwo",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA0AQAAAAAAADQBAAAAAAAAAAAAAAAASUABAAAAAQAAACgCAAAAAAAAKAIAAAAAAAAAAAAAAADwvw"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": "render_opengl"
					},
					"DgAAAOIAAAAAAAAA4wAAAAAAAAAAAAAA4wAAAAAAAADjAAAAAAAAABgAAAByZW5kZXJhcGlfb3BlbmdsX3dpbmRvd3PjAAAAAAAAAOQAAAAAAAAAAAAAAOQAAAAAAAAA5QAAAAAAAAAAAAAA5QAAAAAAAADmAAAAAAAAAAAAAADmAAAAAAAAAOcAAAAAAAAAAAAAAOcAAAAAAAAA6AAAAAAAAAAAAAAA6AAAAAAAAADpAAAAAAAAAAAAAADpAAAAAAAAAOoAAAAAAAAAAAAAAOoAAAAAAAAA6wAAAAAAAAAAAAAA6wAAAAAAAADsAAAAAAAAAAAAAADsAAAAAAAAAO0AAAAAAAAAAAAAAO0AAAAAAAAA7gAAAAAAAAAAAAAA7gAAAAAAAADvAAAAAAAAAAAAAAA",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADiAAAAAAAAAPoAAAAAAAAAAAAAAAAA8L8BAAAAAQAAACACAAAAAAAAIAIAAAAAAAAAAAAAAADwvw"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": "gengar_render_open"
					},
					"EwAAAP8AAAAAAAAAAAEAAAAAAAAAAAAAAAEAAAAAAAAAAQAAAAAAAB8AAABnZW5nYXJfcmVuZGVyYXBpX29wZW5nbF93aW5kb3dzAAEAAAAAAAABAQAAAAAAAAAAAAABAQAAAAAAAAIBAAAAAAAAAAAAAAIBAAAAAAAAAwEAAAAAAAAAAAAAAwEAAAAAAAAEAQAAAAAAAAAAAAAEAQAAAAAAAAUBAAAAAAAAAAAAAAUBAAAAAAAABgEAAAAAAAAAAAAABgEAAAAAAAAHAQAAAAAAAAAAAAAHAQAAAAAAAAgBAAAAAAAAAAAAAAgBAAAAAAAACQEAAAAAAAAAAAAACQEAAAAAAAAKAQAAAAAAAAAAAAAKAQAAAAAAAAsBAAAAAAAAAAAAAAsBAAAAAAAADAEAAAAAAAAAAAAADAEAAAAAAAANAQAAAAAAAAAAAAANAQAAAAAAAA4BAAAAAAAAAAAAAA4BAAAAAAAADwEAAAAAAAAAAAAADwEAAAAAAAAQAQAAAAAAAAAAAAAQAQAAAAAAABEBAAAAAAAAAAAAAA",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAeAQAAAAAAAP8AAAAAAAAAAAAAAAAA8L8BAAAAAQAAABUCAAAAAAAAFQIAAAAAAAAAAAAAAADwvw"
				],
				[
					20,
					1,
					"insert",
					{
						"characters": "gl"
					},
					"AgAAABEBAAAAAAAAEgEAAAAAAAAAAAAAEgEAAAAAAAATAQAAAAAAAAAAAAA",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAARAQAAAAAAABEBAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAgCAAAAAAAACAIAAAAAAAAAAAAAAADwvw"
				],
				[
					70,
					1,
					"cut",
					null,
					"AQAAAHkBAAAAAAAAeQEAAAAAAAAaAAAAICAgICJXaW4zMl9HcmFwaGljc19HZGkiLAo",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB5AQAAAAAAAHkBAAAAAAAAAAAAAAAAAAABAAAAAQAAAAoCAAAAAAAACgIAAAAAAAAAAAAAAADwvw"
				],
				[
					71,
					1,
					"cut",
					null,
					"AQAAAHkBAAAAAAAAeQEAAAAAAAAiAAAAICAgICJXaW4zMl9TeXN0ZW1fTGlicmFyeUxvYWRlciIsCg",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB5AQAAAAAAAHkBAAAAAAAAAAAAAAAA8L8BAAAAAQAAAPABAAAAAAAA8AEAAAAAAAAAAAAAAADwvw"
				],
				[
					72,
					3,
					"cut",
					null,
					"AwAAAHkBAAAAAAAAeQEAAAAAAAAkAAAAICAgICJXaW4zMl9VSV9XaW5kb3dzQW5kTWVzc2FnaW5nIiwKeQEAAAAAAAB5AQAAAAAAABgAAAAgICAgIldpbjMyX0ZvdW5kYXRpb24iLAp5AQAAAAAAAHkBAAAAAAAAGgAAAAkiV2luMzJfR3JhcGhpY3NfT3BlbkdMIiwK",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB5AQAAAAAAAHkBAAAAAAAAAAAAAAAA8L8BAAAAAQAAAM4BAAAAAAAAzgEAAAAAAAAAAAAAAADwvw"
				],
				[
					77,
					1,
					"left_delete",
					null,
					"AQAAAHgBAAAAAAAAeAEAAAAAAAABAAAACg",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB5AQAAAAAAAHkBAAAAAAAAAAAAAAAAAAABAAAAAQAAAHkBAAAAAAAAeQEAAAAAAAAAAAAAAADwvw"
				],
				[
					78,
					1,
					"cut",
					null,
					"AQAAAGwBAAAAAAAAbAEAAAAAAAAOAAAAZmVhdHVyZXMgPSBbXQo",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB4AQAAAAAAAHgBAAAAAAAAAAAAAAAA8L8BAAAAAQAAAHgBAAAAAAAAeAEAAAAAAAAAAAAAAADwvw"
				],
				[
					79,
					1,
					"left_delete",
					null,
					"AQAAAGsBAAAAAAAAawEAAAAAAAABAAAACg",
					"HgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8BAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABsAQAAAAAAAGwBAAAAAAAAAAAAAAAA8L8BAAAAAQAAAGwBAAAAAAAAbAEAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "ghostly_game/src/lib.rs",
			"settings":
			{
				"buffer_size": 14,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					4,
					14,
					"cut",
					null,
					"DgAAAAAAAAAAAAAAAAAAAAAAAAAxAAAAcHViIGZuIGFkZChsZWZ0OiB1c2l6ZSwgcmlnaHQ6IHVzaXplKSAtPiB1c2l6ZSB7CgAAAAAAAAAAAAAAAAAAAAARAAAAICAgIGxlZnQgKyByaWdodAoAAAAAAAAAAAAAAAAAAAAAAgAAAH0KAAAAAAAAAAAAAAAAAAAAAAEAAAAKAAAAAAAAAAAAAAAAAAAAAA0AAAAjW2NmZyh0ZXN0KV0KAAAAAAAAAAAAAAAAAAAAAAwAAABtb2QgdGVzdHMgewoAAAAAAAAAAAAAAAAAAAAAEgAAACAgICB1c2Ugc3VwZXI6Oio7CgAAAAAAAAAAAAAAAAAAAAABAAAACgAAAAAAAAAAAAAAAAAAAAAMAAAAICAgICNbdGVzdF0KAAAAAAAAAAAAAAAAAAAAABQAAAAgICAgZm4gaXRfd29ya3MoKSB7CgAAAAAAAAAAAAAAAAAAAAAgAAAAICAgICAgICBsZXQgcmVzdWx0ID0gYWRkKDIsIDIpOwoAAAAAAAAAAAAAAAAAAAAAHwAAACAgICAgICAgYXNzZXJ0X2VxIShyZXN1bHQsIDQpOwoAAAAAAAAAAAAAAAAAAAAABgAAACAgICB9CgAAAAAAAAAAAAAAAAAAAAACAAAAfQo",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABMAAAAAAAAAEwAAAAAAAAAAAAAAACBhQA"
				],
				[
					5,
					1,
					"insert",
					{
						"characters": "mod"
					},
					"AwAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAACAAAAAAAAAAAAAAACAAAAAAAAAAMAAAAAAAAAAAAAAA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				],
				[
					6,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAMAAAAAAAAABAAAAAAAAAAAAAAA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAMAAAAAAAAAAwAAAAAAAAAAAAAAAADwvw"
				],
				[
					7,
					4,
					"left_delete",
					null,
					"BAAAAAMAAAAAAAAAAwAAAAAAAAABAAAAIAIAAAAAAAAAAgAAAAAAAAABAAAAZAEAAAAAAAAAAQAAAAAAAAABAAAAbwAAAAAAAAAAAAAAAAAAAAABAAAAbQ",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAQAAAAAAAAABAAAAAAAAAAAAAAAAADwvw"
				],
				[
					8,
					1,
					"insert",
					{
						"characters": "pub"
					},
					"AwAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAACAAAAAAAAAAAAAAACAAAAAAAAAAMAAAAAAAAAAAAAAA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				],
				[
					9,
					1,
					"insert",
					{
						"characters": " mob"
					},
					"BAAAAAMAAAAAAAAABAAAAAAAAAAAAAAABAAAAAAAAAAFAAAAAAAAAAAAAAAFAAAAAAAAAAYAAAAAAAAAAAAAAAYAAAAAAAAABwAAAAAAAAAAAAAA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAMAAAAAAAAAAwAAAAAAAAAAAAAAAADwvw"
				],
				[
					10,
					1,
					"left_delete",
					null,
					"AQAAAAYAAAAAAAAABgAAAAAAAAABAAAAYg",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAcAAAAAAAAABwAAAAAAAAAAAAAAAADwvw"
				],
				[
					11,
					1,
					"insert",
					{
						"characters": "d"
					},
					"AQAAAAYAAAAAAAAABwAAAAAAAAAAAAAA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAYAAAAAAAAABgAAAAAAAAAAAAAAAADwvw"
				],
				[
					12,
					1,
					"insert",
					{
						"characters": " game"
					},
					"BQAAAAcAAAAAAAAACAAAAAAAAAAAAAAACAAAAAAAAAAJAAAAAAAAAAAAAAAJAAAAAAAAAAoAAAAAAAAAAAAAAAoAAAAAAAAACwAAAAAAAAAAAAAACwAAAAAAAAAMAAAAAAAAAAAAAAA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAcAAAAAAAAABwAAAAAAAAAAAAAAAADwvw"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAAwAAAAAAAAADQAAAAAAAAAAAAAA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAwAAAAAAAAADAAAAAAAAAAAAAAAAADwvw"
				],
				[
					15,
					1,
					"rust_fmt_format_buffer",
					null,
					"AQAAAA0AAAAAAAAADwAAAAAAAAAAAAAA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA0AAAAAAAAADQAAAAAAAAAAAAAAAADwvw"
				],
				[
					20,
					1,
					"left_delete",
					null,
					"AQAAAA0AAAAAAAAADQAAAAAAAAABAAAADQ",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA4AAAAAAAAADgAAAAAAAAD////////vfw"
				],
				[
					24,
					1,
					"left_delete",
					null,
					"AQAAAA0AAAAAAAAADQAAAAAAAAABAAAACg",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA4AAAAAAAAADgAAAAAAAAAAAAAAAIBXQA"
				],
				[
					25,
					1,
					"rust_fmt_format_buffer",
					null,
					"AQAAAA0AAAAAAAAADwAAAAAAAAAAAAAA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA0AAAAAAAAADQAAAAAAAAAAAAAAAADwvw"
				],
				[
					28,
					3,
					"left_delete",
					null,
					"AwAAAA0AAAAAAAAADQAAAAAAAAABAAAADQwAAAAAAAAADAAAAAAAAAABAAAAOwsAAAAAAAAACwAAAAAAAAABAAAAZQ",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA4AAAAAAAAADgAAAAAAAAD////////vfw"
				],
				[
					29,
					1,
					"insert",
					{
						"characters": "me;"
					},
					"AwAAAAsAAAAAAAAADAAAAAAAAAAAAAAADAAAAAAAAAANAAAAAAAAAAAAAAANAAAAAAAAAA4AAAAAAAAAAAAAAA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAsAAAAAAAAACwAAAAAAAAAAAAAAAADwvw"
				],
				[
					31,
					3,
					"left_delete",
					null,
					"AwAAAA0AAAAAAAAADQAAAAAAAAABAAAAOwwAAAAAAAAADAAAAAAAAAABAAAAZQsAAAAAAAAACwAAAAAAAAABAAAAbQ",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA4AAAAAAAAADgAAAAAAAAAAAAAAAADwvw"
				],
				[
					32,
					1,
					"insert",
					{
						"characters": "e;"
					},
					"AgAAAAsAAAAAAAAADAAAAAAAAAAAAAAADAAAAAAAAAANAAAAAAAAAAAAAAA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAsAAAAAAAAACwAAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "ghostly_game/src/game.rs",
			"settings":
			{
				"buffer_size": 22,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"insert",
					{
						"characters": "pub"
					},
					"AwAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAACAAAAAAAAAAAAAAACAAAAAAAAAAMAAAAAAAAAAAAAAA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				],
				[
					2,
					1,
					"insert",
					{
						"characters": " fn"
					},
					"AwAAAAMAAAAAAAAABAAAAAAAAAAAAAAABAAAAAAAAAAFAAAAAAAAAAAAAAAFAAAAAAAAAAYAAAAAAAAAAAAAAA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAMAAAAAAAAAAwAAAAAAAAAAAAAAAADwvw"
				],
				[
					3,
					1,
					"insert",
					{
						"characters": " game_loop"
					},
					"CgAAAAYAAAAAAAAABwAAAAAAAAAAAAAABwAAAAAAAAAIAAAAAAAAAAAAAAAIAAAAAAAAAAkAAAAAAAAAAAAAAAkAAAAAAAAACgAAAAAAAAAAAAAACgAAAAAAAAALAAAAAAAAAAAAAAALAAAAAAAAAAwAAAAAAAAAAAAAAAwAAAAAAAAADQAAAAAAAAAAAAAADQAAAAAAAAAOAAAAAAAAAAAAAAAOAAAAAAAAAA8AAAAAAAAAAAAAAA8AAAAAAAAAEAAAAAAAAAAAAAAA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAYAAAAAAAAABgAAAAAAAAAAAAAAAADwvw"
				],
				[
					4,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAABAAAAAAAAAAEgAAAAAAAAAAAAAA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABAAAAAAAAAAEAAAAAAAAAAAAAAAAADwvw"
				],
				[
					6,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABIAAAAAAAAAEwAAAAAAAAAAAAAA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABIAAAAAAAAAEgAAAAAAAAAAAAAAAADwvw"
				],
				[
					7,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAABMAAAAAAAAAFQAAAAAAAAAAAAAA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABMAAAAAAAAAEwAAAAAAAAAAAAAAAADwvw"
				],
				[
					8,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAABQAAAAAAAAAFQAAAAAAAAAAAAAAFQAAAAAAAAAWAAAAAAAAAAAAAAAVAAAAAAAAABYAAAAAAAAAAAAAAA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABQAAAAAAAAAFAAAAAAAAAAAAAAAAADwvw"
				],
				[
					9,
					1,
					"rust_fmt_format_buffer",
					null,
					"AgAAABQAAAAAAAAAFAAAAAAAAAADAAAACgkKFQAAAAAAAAAWAAAAAAAAAAAAAAA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABYAAAAAAAAAFgAAAAAAAAAAAAAAAADwvw"
				],
				[
					10,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAABQAAAAAAAAAFQAAAAAAAAAAAAAAFQAAAAAAAAAWAAAAAAAAAAAAAAAVAAAAAAAAABYAAAAAAAAAAAAAAA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABQAAAAAAAAAFAAAAAAAAAAAAAAAAADwvw"
				],
				[
					11,
					1,
					"insert",
					{
						"characters": "asf"
					},
					"AwAAABYAAAAAAAAAFwAAAAAAAAAAAAAAFwAAAAAAAAAYAAAAAAAAAAAAAAAYAAAAAAAAABkAAAAAAAAAAAAAAA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABYAAAAAAAAAFgAAAAAAAAAAAAAAAADwvw"
				],
				[
					12,
					1,
					"rust_fmt_format_buffer",
					null,
					"AgAAABUAAAAAAAAAFQAAAAAAAAABAAAACRUAAAAAAAAAGQAAAAAAAAAAAAAA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABkAAAAAAAAAGQAAAAAAAAAAAAAAAADwvw"
				],
				[
					14,
					1,
					"cut",
					null,
					"AQAAABUAAAAAAAAAFQAAAAAAAAAIAAAAICAgIGFzZgo",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABwAAAAAAAAAHAAAAAAAAAAAAAAAAADwvw"
				],
				[
					15,
					1,
					"rust_fmt_format_buffer",
					null,
					"AQAAABQAAAAAAAAAFAAAAAAAAAABAAAACg",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABUAAAAAAAAAFQAAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "gengar_engine/src/engine/matricies.rs",
			"redo_stack":
			[
				[
					59,
					1,
					"insert",
					{
						"characters": "m44"
					},
					"BAAAAAoAAAAAAAAACgAAAAAAAAABAAAANAkAAAAAAAAACQAAAAAAAAABAAAANAkAAAAAAAAAGQAAAAAAAAAAAAAACAAAAAAAAAAIAAAAAAAAAAEAAABt",
					"AQAAAAAAAAABAAAACwAAAAAAAAALAAAAAAAAAAAAAAAAAPC/"
				]
			],
			"settings":
			{
				"buffer_size": 26,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					4,
					1,
					"cut",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAZAQAAc3RydWN0IE1hdHJpeEZvdXJGb3VyIHsKICAgIHB1YiBlbGVtZW50czogW2Y2NDsgMTZdLAp9CgppbXBsIE1hdHJpeEZvdXJGb3VyIHsKICAgIGZuIHNldCgmbXV0IHNlbGYsIHg6IHVzaXplLCB5OiB1c2l6ZSwgdmFsOiBmNjQpIHsKICAgICAgICBsZXQgaTogdXNpemUgPSAoNCAqIHkpICsgeDsKICAgICAgICBzZWxmLmVsZW1lbnRzW2ldID0gdmFsOwogICAgfQoKICAgIC8qCiAgICBmbiBpZGVudGl0eSgpIC0+IE1hdHJpeEZvdXJGb3VyIHsKCiAgICB9CiAgICAqLwp9Cgptb2QgdGVzdCB7fQo",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAZAQAAAAAAAAAAAAAAAAAA"
				],
				[
					5,
					1,
					"insert",
					{
						"characters": "pub"
					},
					"AwAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAACAAAAAAAAAAAAAAACAAAAAAAAAAMAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					1,
					"insert",
					{
						"characters": " mod"
					},
					"BAAAAAMAAAAAAAAABAAAAAAAAAAAAAAABAAAAAAAAAAFAAAAAAAAAAAAAAAFAAAAAAAAAAYAAAAAAAAAAAAAAAYAAAAAAAAABwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAwAAAAAAAAADAAAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAcAAAAAAAAACAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABwAAAAAAAAAHAAAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					4,
					"left_delete",
					null,
					"BAAAAAcAAAAAAAAABwAAAAAAAAABAAAAIAYAAAAAAAAABgAAAAAAAAABAAAAZAUAAAAAAAAABQAAAAAAAAABAAAAbwQAAAAAAAAABAAAAAAAAAABAAAAbQ",
					"AQAAAAAAAAABAAAACAAAAAAAAAAIAAAAAAAAAAAAAAAAAPC/"
				],
				[
					9,
					1,
					"insert",
					{
						"characters": "mod"
					},
					"AwAAAAQAAAAAAAAABQAAAAAAAAAAAAAABQAAAAAAAAAGAAAAAAAAAAAAAAAGAAAAAAAAAAcAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABAAAAAAAAAAEAAAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"insert",
					{
						"characters": " mmatr"
					},
					"BgAAAAcAAAAAAAAACAAAAAAAAAAAAAAACAAAAAAAAAAJAAAAAAAAAAAAAAAJAAAAAAAAAAoAAAAAAAAAAAAAAAoAAAAAAAAACwAAAAAAAAAAAAAACwAAAAAAAAAMAAAAAAAAAAAAAAAMAAAAAAAAAA0AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABwAAAAAAAAAHAAAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					4,
					"left_delete",
					null,
					"BAAAAAwAAAAAAAAADAAAAAAAAAABAAAAcgsAAAAAAAAACwAAAAAAAAABAAAAdAoAAAAAAAAACgAAAAAAAAABAAAAYQkAAAAAAAAACQAAAAAAAAABAAAAbQ",
					"AQAAAAAAAAABAAAADQAAAAAAAAANAAAAAAAAAAAAAAAAAPC/"
				],
				[
					12,
					1,
					"insert",
					{
						"characters": "atric_four"
					},
					"CgAAAAkAAAAAAAAACgAAAAAAAAAAAAAACgAAAAAAAAALAAAAAAAAAAAAAAALAAAAAAAAAAwAAAAAAAAAAAAAAAwAAAAAAAAADQAAAAAAAAAAAAAADQAAAAAAAAAOAAAAAAAAAAAAAAAOAAAAAAAAAA8AAAAAAAAAAAAAAA8AAAAAAAAAEAAAAAAAAAAAAAAAEAAAAAAAAAARAAAAAAAAAAAAAAARAAAAAAAAABIAAAAAAAAAAAAAABIAAAAAAAAAEwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACQAAAAAAAAAJAAAAAAAAAAAAAAAAAPC/"
				],
				[
					13,
					6,
					"left_delete",
					null,
					"BgAAABIAAAAAAAAAEgAAAAAAAAABAAAAchEAAAAAAAAAEQAAAAAAAAABAAAAdRAAAAAAAAAAEAAAAAAAAAABAAAAbw8AAAAAAAAADwAAAAAAAAABAAAAZg4AAAAAAAAADgAAAAAAAAABAAAAXw0AAAAAAAAADQAAAAAAAAABAAAAYw",
					"AQAAAAAAAAABAAAAEwAAAAAAAAATAAAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": "x]our"
					},
					"BQAAAA0AAAAAAAAADgAAAAAAAAAAAAAADgAAAAAAAAAPAAAAAAAAAAAAAAAPAAAAAAAAABAAAAAAAAAAAAAAABAAAAAAAAAAEQAAAAAAAAAAAAAAEQAAAAAAAAASAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADQAAAAAAAAANAAAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					4,
					"left_delete",
					null,
					"BAAAABEAAAAAAAAAEQAAAAAAAAABAAAAchAAAAAAAAAAEAAAAAAAAAABAAAAdQ8AAAAAAAAADwAAAAAAAAABAAAAbw4AAAAAAAAADgAAAAAAAAABAAAAXQ",
					"AQAAAAAAAAABAAAAEgAAAAAAAAASAAAAAAAAAAAAAAAAAPC/"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": "_four_four"
					},
					"CgAAAA4AAAAAAAAADwAAAAAAAAAAAAAADwAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAABEAAAAAAAAAAAAAABEAAAAAAAAAEgAAAAAAAAAAAAAAEgAAAAAAAAATAAAAAAAAAAAAAAATAAAAAAAAABQAAAAAAAAAAAAAABQAAAAAAAAAFQAAAAAAAAAAAAAAFQAAAAAAAAAWAAAAAAAAAAAAAAAWAAAAAAAAABcAAAAAAAAAAAAAABcAAAAAAAAAGAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADgAAAAAAAAAOAAAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAABgAAAAAAAAAGQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGAAAAAAAAAAYAAAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"rust_fmt_format_buffer",
					null,
					"AQAAABkAAAAAAAAAGwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGQAAAAAAAAAZAAAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					3,
					"left_delete",
					null,
					"AwAAABkAAAAAAAAAGQAAAAAAAAABAAAADRgAAAAAAAAAGAAAAAAAAAABAAAAOxcAAAAAAAAAFwAAAAAAAAABAAAAcg",
					"AQAAAAAAAAABAAAAGgAAAAAAAAAaAAAAAAAAAP///////+9/"
				],
				[
					23,
					1,
					"insert",
					{
						"characters": "r;"
					},
					"AgAAABcAAAAAAAAAGAAAAAAAAAAAAAAAGAAAAAAAAAAZAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFwAAAAAAAAAXAAAAAAAAAAAAAAAAAPC/"
				],
				[
					26,
					1,
					"left_delete",
					null,
					"AQAAABkAAAAAAAAAGQAAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAGgAAAAAAAAAaAAAAAAAAAAAAAAAAgGZA"
				],
				[
					27,
					1,
					"rust_fmt_format_buffer",
					null,
					"AQAAABkAAAAAAAAAGwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGQAAAAAAAAAZAAAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					2,
					"left_delete",
					null,
					"AgAAABoAAAAAAAAAGgAAAAAAAAABAAAAChkAAAAAAAAAGQAAAAAAAAABAAAADQ",
					"AQAAAAAAAAABAAAAGwAAAAAAAAAbAAAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					1,
					"rust_fmt_format_buffer",
					null,
					"AQAAABkAAAAAAAAAGwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGQAAAAAAAAAZAAAAAAAAAAAAAAAAAPC/"
				],
				[
					32,
					3,
					"left_delete",
					null,
					"AwAAABkAAAAAAAAAGQAAAAAAAAABAAAADRgAAAAAAAAAGAAAAAAAAAABAAAAOxcAAAAAAAAAFwAAAAAAAAABAAAAcg",
					"AQAAAAAAAAABAAAAGgAAAAAAAAAaAAAAAAAAAP///////+9/"
				],
				[
					33,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAABcAAAAAAAAAGAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFwAAAAAAAAAXAAAAAAAAAAAAAAAAAPC/"
				],
				[
					35,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAABcAAAAAAAAAGAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFwAAAAAAAAAXAAAAAAAAAAAAAAAAAPC/"
				],
				[
					41,
					1,
					"left_delete",
					null,
					"AQAAABcAAAAAAAAAFwAAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAGAAAAAAAAAAYAAAAAAAAAAAAAAAAoGVA"
				],
				[
					42,
					1,
					"insert",
					{
						"characters": "r"
					},
					"AQAAABcAAAAAAAAAGAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFwAAAAAAAAAXAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "gengar_render_opengl/generated_gl_functions_and_types.rs",
			"settings":
			{
				"buffer_size": 589406,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "gengar_engine/engine_resources/shaders/basic.fs",
			"redo_stack":
			[
				[
					11,
					1,
					"insert",
					{
						"characters": "pw"
					},
					"AgAAAFwAAAAAAAAAXAAAAAAAAAABAAAAd1sAAAAAAAAAWwAAAAAAAAABAAAAcA",
					"AQAAAAAAAAABAAAAXQAAAAAAAABdAAAAAAAAAAAAAAAAAPC/"
				]
			],
			"settings":
			{
				"buffer_size": 91,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"insert",
					{
						"characters": "p"
					},
					"AQAAAAAAAAAAAAAAAQAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					4,
					1,
					"left_delete",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAcA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAQAAAAAAAAABAAAAAAAAAAAAAAAAAPC/"
				],
				[
					5,
					1,
					"paste",
					null,
					"AQAAAAAAAAAAAAAAtQAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					13,
					1,
					"insert",
					{
						"characters": "vec4"
					},
					"BQAAAKYAAAAAAAAApwAAAAAAAAAAAAAApwAAAAAAAACnAAAAAAAAAAsAAAB2ZXJ0ZXhDb2xvcqcAAAAAAAAAqAAAAAAAAAAAAAAAqAAAAAAAAACpAAAAAAAAAAAAAACpAAAAAAAAAKoAAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAsQAAAAAAAACmAAAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAKoAAAAAAAAArAAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAqgAAAAAAAACqAAAAAAAAAAAAAAAAAPC/"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": "0,1"
					},
					"AwAAAKsAAAAAAAAArAAAAAAAAAAAAAAArAAAAAAAAACtAAAAAAAAAAAAAACtAAAAAAAAAK4AAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAqwAAAAAAAACrAAAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": ",0,1"
					},
					"BAAAAK4AAAAAAAAArwAAAAAAAAAAAAAArwAAAAAAAACwAAAAAAAAAAAAAACwAAAAAAAAALEAAAAAAAAAAAAAALEAAAAAAAAAsgAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAArgAAAAAAAACuAAAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALEAAAAAAAAAsgAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAsQAAAAAAAACxAAAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAK0AAAAAAAAArgAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAArQAAAAAAAACtAAAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALAAAAAAAAAAsQAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAsAAAAAAAAACwAAAAAAAAAAAAAAAAAPC/"
				],
				[
					3,
					1,
					"cut",
					null,
					"AQAAACkAAAAAAAAAKQAAAAAAAABeAAAAaW4gdmVjNCB2ZXJ0ZXhDb2xvcjsgLy8gdGhlIGlucHV0IHZhcmlhYmxlIGZyb20gdGhlIHZlcnRleCBzaGFkZXIgKHNhbWUgbmFtZSBhbmQgc2FtZSB0eXBlKSAgCg",
					"AQAAAAAAAAABAAAAKwAAAAAAAAArAAAAAAAAAAAAAAAAACxA"
				],
				[
					4,
					1,
					"left_delete",
					null,
					"AQAAACgAAAAAAAAAKAAAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAKQAAAAAAAAApAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "gengar_engine/engine_resources/shaders/basic.vs",
			"settings":
			{
				"buffer_size": 315,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"paste",
					null,
					"AQAAAAAAAAAAAAAAegEAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					4,
					1,
					"left_delete",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAAABAAAACg",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAQAAAAAAAAABAAAAAAAAAAAAAAAAAAAA"
				],
				[
					16,
					1,
					"cut",
					null,
					"AQAAAB0BAAAAAAAAHQEAAAAAAABbAAAAICAgIHZlcnRleENvbG9yID0gdmVjNCgwLjUsIDAuMCwgMC4wLCAxLjApOyAvLyBzZXQgdGhlIG91dHB1dCB2YXJpYWJsZSB0byBhIGRhcmstcmVkIGNvbG9yCg",
					"AQAAAAAAAAABAAAAPQEAAAAAAAA9AQAAAAAAAAAAAAAAwGxA"
				],
				[
					39,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAALIAAAAAAAAAswAAAAAAAAAAAAAAswAAAAAAAAC0AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsgAAAAAAAACyAAAAAAAAAAAAAAAAAAAA"
				],
				[
					40,
					1,
					"paste",
					null,
					"AQAAALQAAAAAAAAAyAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtAAAAAAAAAC0AAAAAAAAAAAAAAAAAPC/"
				],
				[
					42,
					1,
					"cut",
					null,
					"AQAAALMAAAAAAAAAswAAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAswAAAAAAAACzAAAAAAAAAAAAAAAAAAAA"
				],
				[
					46,
					1,
					"insert",
					{
						"characters": "vertexPos"
					},
					"CgAAADAAAAAAAAAAMQAAAAAAAAAAAAAAMQAAAAAAAAAxAAAAAAAAAAQAAABhUG9zMQAAAAAAAAAyAAAAAAAAAAAAAAAyAAAAAAAAADMAAAAAAAAAAAAAADMAAAAAAAAANAAAAAAAAAAAAAAANAAAAAAAAAA1AAAAAAAAAAAAAAA1AAAAAAAAADYAAAAAAAAAAAAAADYAAAAAAAAANwAAAAAAAAAAAAAANwAAAAAAAAA4AAAAAAAAAAAAAAA4AAAAAAAAADkAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANAAAAAAAAAAwAAAAAAAAAAAAAAAAAPC/"
				],
				[
					53,
					1,
					"paste",
					null,
					"AgAAAPIAAAAAAAAA+wAAAAAAAAAAAAAA+wAAAAAAAAD7AAAAAAAAAAQAAABhUG9z",
					"AQAAAAAAAAABAAAA8gAAAAAAAAD2AAAAAAAAAAAAAAAAAPC/"
				],
				[
					61,
					1,
					"insert",
					{
						"characters": "model"
					},
					"BQAAAO0AAAAAAAAA7gAAAAAAAAAAAAAA7gAAAAAAAADvAAAAAAAAAAAAAADvAAAAAAAAAPAAAAAAAAAAAAAAAPAAAAAAAAAA8QAAAAAAAAAAAAAA8QAAAAAAAADyAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7QAAAAAAAADtAAAAAAAAAAAAAAAAAPC/"
				],
				[
					62,
					1,
					"insert",
					{
						"characters": " *"
					},
					"AgAAAPIAAAAAAAAA8wAAAAAAAAAAAAAA8wAAAAAAAAD0AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8gAAAAAAAADyAAAAAAAAAAAAAAAAAPC/"
				],
				[
					63,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAPQAAAAAAAAA9QAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9AAAAAAAAAD0AAAAAAAAAAAAAAAAAPC/"
				],
				[
					79,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABFAQAAI3ZlcnNpb24gMzMwIGNvcmUKbGF5b3V0IChsb2NhdGlvbiA9IDApIGluIHZlYzMgdmVydGV4UG9zOyAvLyB0aGUgcG9zaXRpb24gdmFyaWFibGUgaGFzIGF0dHJpYnV0ZSBwb3NpdGlvbiAwCiAgCm91dCB2ZWM0IHZlcnRleENvbG9yOyAvLyBzcGVjaWZ5IGEgY29sb3Igb3V0cHV0IHRvIHRoZSBmcmFnbWVudCBzaGFkZXIKCnVuaWZvcm0gbWF0NCBtb2RlbDsKCnZvaWQgbWFpbigpCnsKICAgIGdsX1Bvc2l0aW9uID0gbW9kZWwgKiB2ZWM0KHZlcnRleFBvcywgMS4wKTsgLy8gc2VlIGhvdyB3ZSBkaXJlY3RseSBnaXZlIGEgdmVjMyB0byB2ZWM0J3MgY29uc3RydWN0b3IKfQAAAAAAAAAAHgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARQEAAAAAAABFAQAAAAAAAAAAAAAAAPC/"
				],
				[
					84,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAALIAAAAAAAAAswAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsgAAAAAAAACyAAAAAAAAAAAAAAAAAPC/"
				],
				[
					85,
					1,
					"paste",
					null,
					"AQAAALMAAAAAAAAAxwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAswAAAAAAAACzAAAAAAAAAAAAAAAAAPC/"
				],
				[
					86,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line.sublime-macro"
					},
					"AQAAAMcAAAAAAAAAyAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxwAAAAAAAADHAAAAAAAAAAAAAAAAAPC/"
				],
				[
					88,
					1,
					"left_delete",
					null,
					"AQAAAMYAAAAAAAAAxgAAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAxwAAAAAAAADHAAAAAAAAAAAAAAAAAAAA"
				],
				[
					116,
					1,
					"insert",
					{
						"characters": "moe"
					},
					"AwAAAOgAAAAAAAAA6QAAAAAAAAAAAAAA6QAAAAAAAADqAAAAAAAAAAAAAADqAAAAAAAAAOsAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6AAAAAAAAADoAAAAAAAAAAAAAAAAAPC/"
				],
				[
					117,
					1,
					"left_delete",
					null,
					"AQAAAOoAAAAAAAAA6gAAAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAA6wAAAAAAAADrAAAAAAAAAAAAAAAAAPC/"
				],
				[
					118,
					1,
					"insert",
					{
						"characters": "del"
					},
					"AwAAAOoAAAAAAAAA6wAAAAAAAAAAAAAA6wAAAAAAAADsAAAAAAAAAAAAAADsAAAAAAAAAO0AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6gAAAAAAAADqAAAAAAAAAAAAAAAAAPC/"
				],
				[
					119,
					1,
					"insert",
					{
						"characters": " *"
					},
					"AgAAAO0AAAAAAAAA7gAAAAAAAAAAAAAA7gAAAAAAAADvAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7QAAAAAAAADtAAAAAAAAAAAAAAAAAPC/"
				],
				[
					120,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAO8AAAAAAAAA8AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7wAAAAAAAADvAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "gengar_engine/src/engine/render/render_command.rs",
			"settings":
			{
				"buffer_size": 543,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"insert",
					{
						"characters": "struct"
					},
					"BgAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAACAAAAAAAAAAAAAAACAAAAAAAAAAMAAAAAAAAAAAAAAAMAAAAAAAAABAAAAAAAAAAAAAAABAAAAAAAAAAFAAAAAAAAAAAAAAAFAAAAAAAAAAYAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					2,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAYAAAAAAAAABwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABgAAAAAAAAAGAAAAAAAAAAAAAAAAAPC/"
				],
				[
					4,
					1,
					"insert",
					{
						"characters": "RenderCommand"
					},
					"DQAAAAcAAAAAAAAACAAAAAAAAAAAAAAACAAAAAAAAAAJAAAAAAAAAAAAAAAJAAAAAAAAAAoAAAAAAAAAAAAAAAoAAAAAAAAACwAAAAAAAAAAAAAACwAAAAAAAAAMAAAAAAAAAAAAAAAMAAAAAAAAAA0AAAAAAAAAAAAAAA0AAAAAAAAADgAAAAAAAAAAAAAADgAAAAAAAAAPAAAAAAAAAAAAAAAPAAAAAAAAABAAAAAAAAAAAAAAABAAAAAAAAAAEQAAAAAAAAAAAAAAEQAAAAAAAAASAAAAAAAAAAAAAAASAAAAAAAAABMAAAAAAAAAAAAAABMAAAAAAAAAFAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABwAAAAAAAAAHAAAAAAAAAAAAAAAAAPC/"
				],
				[
					5,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABQAAAAAAAAAFQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFAAAAAAAAAAUAAAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAABUAAAAAAAAAFwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFQAAAAAAAAAVAAAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAABYAAAAAAAAAFwAAAAAAAAAAAAAAFwAAAAAAAAAYAAAAAAAAAAAAAAAXAAAAAAAAABgAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFgAAAAAAAAAWAAAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					1,
					"rust_fmt_format_buffer",
					null,
					"AgAAABYAAAAAAAAAFgAAAAAAAAADAAAACgkKFwAAAAAAAAAYAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGAAAAAAAAAAYAAAAAAAAAAAAAAAAAPC/"
				],
				[
					9,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAABYAAAAAAAAAFwAAAAAAAAAAAAAAFwAAAAAAAAAYAAAAAAAAAAAAAAAXAAAAAAAAABgAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFgAAAAAAAAAWAAAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"insert",
					{
						"characters": "u32"
					},
					"AwAAABgAAAAAAAAAGQAAAAAAAAAAAAAAGQAAAAAAAAAaAAAAAAAAAAAAAAAaAAAAAAAAABsAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGAAAAAAAAAAYAAAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABsAAAAAAAAAHAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGwAAAAAAAAAbAAAAAAAAAAAAAAAAAPC/"
				],
				[
					12,
					4,
					"left_delete",
					null,
					"BAAAABsAAAAAAAAAGwAAAAAAAAABAAAAIBoAAAAAAAAAGgAAAAAAAAABAAAAMhkAAAAAAAAAGQAAAAAAAAABAAAAMxgAAAAAAAAAGAAAAAAAAAABAAAAdQ",
					"AQAAAAAAAAABAAAAHAAAAAAAAAAcAAAAAAAAAAAAAAAAAPC/"
				],
				[
					13,
					1,
					"insert",
					{
						"characters": "vao:"
					},
					"BAAAABgAAAAAAAAAGQAAAAAAAAAAAAAAGQAAAAAAAAAaAAAAAAAAAAAAAAAaAAAAAAAAABsAAAAAAAAAAAAAABsAAAAAAAAAHAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGAAAAAAAAAAYAAAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABwAAAAAAAAAHQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHAAAAAAAAAAcAAAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					2,
					"left_delete",
					null,
					"AgAAABwAAAAAAAAAHAAAAAAAAAABAAAAIBsAAAAAAAAAGwAAAAAAAAABAAAAOg",
					"AQAAAAAAAAABAAAAHQAAAAAAAAAdAAAAAAAAAAAAAAAAAPC/"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": "_id:"
					},
					"BAAAABsAAAAAAAAAHAAAAAAAAAAAAAAAHAAAAAAAAAAdAAAAAAAAAAAAAAAdAAAAAAAAAB4AAAAAAAAAAAAAAB4AAAAAAAAAHwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGwAAAAAAAAAbAAAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": " 74"
					},
					"AwAAAB8AAAAAAAAAIAAAAAAAAAAAAAAAIAAAAAAAAAAhAAAAAAAAAAAAAAAhAAAAAAAAACIAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHwAAAAAAAAAfAAAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					2,
					"left_delete",
					null,
					"AgAAACEAAAAAAAAAIQAAAAAAAAABAAAANCAAAAAAAAAAIAAAAAAAAAABAAAANw",
					"AQAAAAAAAAABAAAAIgAAAAAAAAAiAAAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": "u32,"
					},
					"BAAAACAAAAAAAAAAIQAAAAAAAAAAAAAAIQAAAAAAAAAiAAAAAAAAAAAAAAAiAAAAAAAAACMAAAAAAAAAAAAAACMAAAAAAAAAJAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIAAAAAAAAAAgAAAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					1,
					"rust_fmt_format_buffer",
					null,
					"AgAAABcAAAAAAAAAFwAAAAAAAAABAAAACRcAAAAAAAAAGwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJAAAAAAAAAAkAAAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": "\nshader_id:"
					},
					"DAAAACcAAAAAAAAAKAAAAAAAAAAAAAAAKAAAAAAAAAAsAAAAAAAAAAAAAAAsAAAAAAAAAC0AAAAAAAAAAAAAAC0AAAAAAAAALgAAAAAAAAAAAAAALgAAAAAAAAAvAAAAAAAAAAAAAAAvAAAAAAAAADAAAAAAAAAAAAAAADAAAAAAAAAAMQAAAAAAAAAAAAAAMQAAAAAAAAAyAAAAAAAAAAAAAAAyAAAAAAAAADMAAAAAAAAAAAAAADMAAAAAAAAANAAAAAAAAAAAAAAANAAAAAAAAAA1AAAAAAAAAAAAAAA1AAAAAAAAADYAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJwAAAAAAAAAnAAAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"insert",
					{
						"characters": " u32,"
					},
					"BQAAADYAAAAAAAAANwAAAAAAAAAAAAAANwAAAAAAAAA4AAAAAAAAAAAAAAA4AAAAAAAAADkAAAAAAAAAAAAAADkAAAAAAAAAOgAAAAAAAAAAAAAAOgAAAAAAAAA7AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANgAAAAAAAAA2AAAAAAAAAAAAAAAAAPC/"
				],
				[
					46,
					1,
					"insert",
					{
						"characters": "pub"
					},
					"AwAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAACAAAAAAAAAAAAAAACAAAAAAAAAAMAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
				],
				[
					48,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAMAAAAAAAAABAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAwAAAAAAAAADAAAAAAAAAAAAAAAAAPC/"
				],
				[
					51,
					1,
					"insert",
					{
						"characters": "pub"
					},
					"AwAAAB8AAAAAAAAAIAAAAAAAAAAAAAAAIAAAAAAAAAAhAAAAAAAAAAAAAAAhAAAAAAAAACIAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHwAAAAAAAAAfAAAAAAAAAAAAAAAAAD1A"
				],
				[
					52,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACIAAAAAAAAAIwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIgAAAAAAAAAiAAAAAAAAAAAAAAAAAPC/"
				],
				[
					55,
					1,
					"insert",
					{
						"characters": "pub"
					},
					"AwAAADQAAAAAAAAANQAAAAAAAAAAAAAANQAAAAAAAAA2AAAAAAAAAAAAAAA2AAAAAAAAADcAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANAAAAAAAAAA0AAAAAAAAAAAAAAAAAD1A"
				],
				[
					56,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADcAAAAAAAAAOAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANwAAAAAAAAA3AAAAAAAAAAAAAAAAAPC/"
				],
				[
					59,
					1,
					"insert",
					{
						"characters": "\n\npub"
					},
					"BQAAAEkAAAAAAAAASgAAAAAAAAAAAAAASgAAAAAAAABLAAAAAAAAAAAAAABLAAAAAAAAAEwAAAAAAAAAAAAAAEwAAAAAAAAATQAAAAAAAAAAAAAATQAAAAAAAABOAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASQAAAAAAAABJAAAAAAAAAAAAAAAAAE1A"
				],
				[
					60,
					1,
					"insert",
					{
						"characters": " fn"
					},
					"AwAAAE4AAAAAAAAATwAAAAAAAAAAAAAATwAAAAAAAABQAAAAAAAAAAAAAABQAAAAAAAAAFEAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATgAAAAAAAABOAAAAAAAAAAAAAAAAAPC/"
				],
				[
					62,
					6,
					"left_delete",
					null,
					"BgAAAFAAAAAAAAAAUAAAAAAAAAABAAAAbk8AAAAAAAAATwAAAAAAAAABAAAAZk4AAAAAAAAATgAAAAAAAAABAAAAIE0AAAAAAAAATQAAAAAAAAABAAAAYkwAAAAAAAAATAAAAAAAAAABAAAAdUsAAAAAAAAASwAAAAAAAAABAAAAcA",
					"AQAAAAAAAAABAAAAUQAAAAAAAABRAAAAAAAAAAAAAAAAAPC/"
				],
				[
					63,
					1,
					"insert",
					{
						"characters": "impl"
					},
					"BAAAAEsAAAAAAAAATAAAAAAAAAAAAAAATAAAAAAAAABNAAAAAAAAAAAAAABNAAAAAAAAAE4AAAAAAAAAAAAAAE4AAAAAAAAATwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASwAAAAAAAABLAAAAAAAAAAAAAAAAAPC/"
				],
				[
					64,
					1,
					"insert",
					{
						"characters": " RenderCommand"
					},
					"DgAAAE8AAAAAAAAAUAAAAAAAAAAAAAAAUAAAAAAAAABRAAAAAAAAAAAAAABRAAAAAAAAAFIAAAAAAAAAAAAAAFIAAAAAAAAAUwAAAAAAAAAAAAAAUwAAAAAAAABUAAAAAAAAAAAAAABUAAAAAAAAAFUAAAAAAAAAAAAAAFUAAAAAAAAAVgAAAAAAAAAAAAAAVgAAAAAAAABXAAAAAAAAAAAAAABXAAAAAAAAAFgAAAAAAAAAAAAAAFgAAAAAAAAAWQAAAAAAAAAAAAAAWQAAAAAAAABaAAAAAAAAAAAAAABaAAAAAAAAAFsAAAAAAAAAAAAAAFsAAAAAAAAAXAAAAAAAAAAAAAAAXAAAAAAAAABdAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATwAAAAAAAABPAAAAAAAAAAAAAAAAAPC/"
				],
				[
					65,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAF0AAAAAAAAAXgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXQAAAAAAAABdAAAAAAAAAAAAAAAAAPC/"
				],
				[
					66,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAF4AAAAAAAAAYAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXgAAAAAAAABeAAAAAAAAAAAAAAAAAPC/"
				],
				[
					67,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAAF8AAAAAAAAAYAAAAAAAAAAAAAAAYAAAAAAAAABhAAAAAAAAAAAAAABgAAAAAAAAAGEAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXwAAAAAAAABfAAAAAAAAAAAAAAAAAPC/"
				],
				[
					68,
					1,
					"insert",
					{
						"characters": "pub"
					},
					"AwAAAGEAAAAAAAAAYgAAAAAAAAAAAAAAYgAAAAAAAABjAAAAAAAAAAAAAABjAAAAAAAAAGQAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYQAAAAAAAABhAAAAAAAAAAAAAAAAAPC/"
				],
				[
					69,
					1,
					"insert",
					{
						"characters": " fn"
					},
					"AwAAAGQAAAAAAAAAZQAAAAAAAAAAAAAAZQAAAAAAAABmAAAAAAAAAAAAAABmAAAAAAAAAGcAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZAAAAAAAAABkAAAAAAAAAAAAAAAAAPC/"
				],
				[
					70,
					1,
					"insert",
					{
						"characters": " new_model"
					},
					"CgAAAGcAAAAAAAAAaAAAAAAAAAAAAAAAaAAAAAAAAABpAAAAAAAAAAAAAABpAAAAAAAAAGoAAAAAAAAAAAAAAGoAAAAAAAAAawAAAAAAAAAAAAAAawAAAAAAAABsAAAAAAAAAAAAAABsAAAAAAAAAG0AAAAAAAAAAAAAAG0AAAAAAAAAbgAAAAAAAAAAAAAAbgAAAAAAAABvAAAAAAAAAAAAAABvAAAAAAAAAHAAAAAAAAAAAAAAAHAAAAAAAAAAcQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZwAAAAAAAABnAAAAAAAAAAAAAAAAAPC/"
				],
				[
					71,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAHEAAAAAAAAAcwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcQAAAAAAAABxAAAAAAAAAAAAAAAAAPC/"
				],
				[
					73,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHMAAAAAAAAAdAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcwAAAAAAAABzAAAAAAAAAAAAAAAAAPC/"
				],
				[
					74,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAHQAAAAAAAAAdgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdAAAAAAAAAB0AAAAAAAAAAAAAAAAAPC/"
				],
				[
					75,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAHUAAAAAAAAAdgAAAAAAAAAAAAAAdgAAAAAAAAB3AAAAAAAAAAAAAAB3AAAAAAAAAHgAAAAAAAAAAAAAAHgAAAAAAAAAeQAAAAAAAAAAAAAAdgAAAAAAAAB2AAAAAAAAAAEAAAAJdgAAAAAAAAB4AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdQAAAAAAAAB1AAAAAAAAAAAAAAAAAPC/"
				],
				[
					81,
					1,
					"insert",
					{
						"characters": "model"
					},
					"BwAAAGgAAAAAAAAAaQAAAAAAAAAAAAAAaQAAAAAAAABpAAAAAAAAAAkAAABuZXdfbW9kZWxuAAAAAAAAAG4AAAAAAAAAAgAAAAkJaQAAAAAAAABqAAAAAAAAAAAAAABqAAAAAAAAAGsAAAAAAAAAAAAAAGsAAAAAAAAAbAAAAAAAAAAAAAAAbAAAAAAAAABtAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcQAAAAAAAABoAAAAAAAAAAAAAAAAAPC/"
				],
				[
					82,
					1,
					"rust_fmt_format_buffer",
					null,
					"AwAAAGAAAAAAAAAAYAAAAAAAAAABAAAACWAAAAAAAAAAZAAAAAAAAAAAAAAAdAAAAAAAAAB0AAAAAAAAAAMAAAAKCgk",
					"AQAAAAAAAAABAAAAbQAAAAAAAABtAAAAAAAAAAAAAAAAAPC/"
				],
				[
					84,
					1,
					"insert",
					{
						"characters": "new_o"
					},
					"BgAAAGsAAAAAAAAAbAAAAAAAAAAAAAAAbAAAAAAAAABsAAAAAAAAAAUAAABtb2RlbGwAAAAAAAAAbQAAAAAAAAAAAAAAbQAAAAAAAABuAAAAAAAAAAAAAABuAAAAAAAAAG8AAAAAAAAAAAAAAG8AAAAAAAAAcAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcAAAAAAAAABrAAAAAAAAAAAAAAAAAPC/"
				],
				[
					85,
					1,
					"left_delete",
					null,
					"AQAAAG8AAAAAAAAAbwAAAAAAAAABAAAAbw",
					"AQAAAAAAAAABAAAAcAAAAAAAAABwAAAAAAAAAAAAAAAAAPC/"
				],
				[
					86,
					1,
					"insert",
					{
						"characters": "model"
					},
					"BQAAAG8AAAAAAAAAcAAAAAAAAAAAAAAAcAAAAAAAAABxAAAAAAAAAAAAAABxAAAAAAAAAHIAAAAAAAAAAAAAAHIAAAAAAAAAcwAAAAAAAAAAAAAAcwAAAAAAAAB0AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbwAAAAAAAABvAAAAAAAAAAAAAAAAAPC/"
				],
				[
					90,
					1,
					"insert",
					{
						"characters": "render"
					},
					"BwAAAGsAAAAAAAAAbAAAAAAAAAAAAAAAbAAAAAAAAABsAAAAAAAAAAkAAABuZXdfbW9kZWxsAAAAAAAAAG0AAAAAAAAAAAAAAG0AAAAAAAAAbgAAAAAAAAAAAAAAbgAAAAAAAABvAAAAAAAAAAAAAABvAAAAAAAAAHAAAAAAAAAAAAAAAHAAAAAAAAAAcQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdAAAAAAAAABrAAAAAAAAAAAAAAAAAPC/"
				],
				[
					92,
					1,
					"insert",
					{
						"characters": "new_model"
					},
					"CgAAAGsAAAAAAAAAbAAAAAAAAAAAAAAAbAAAAAAAAABsAAAAAAAAAAYAAAByZW5kZXJsAAAAAAAAAG0AAAAAAAAAAAAAAG0AAAAAAAAAbgAAAAAAAAAAAAAAbgAAAAAAAABvAAAAAAAAAAAAAABvAAAAAAAAAHAAAAAAAAAAAAAAAHAAAAAAAAAAcQAAAAAAAAAAAAAAcQAAAAAAAAByAAAAAAAAAAAAAAByAAAAAAAAAHMAAAAAAAAAAAAAAHMAAAAAAAAAdAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcQAAAAAAAABrAAAAAAAAAAAAAAAAAPC/"
				],
				[
					94,
					1,
					"insert",
					{
						"characters": " ->"
					},
					"AwAAAHYAAAAAAAAAdwAAAAAAAAAAAAAAdwAAAAAAAAB4AAAAAAAAAAAAAAB4AAAAAAAAAHkAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdgAAAAAAAAB2AAAAAAAAAAAAAAAAAPC/"
				],
				[
					95,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHkAAAAAAAAAegAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeQAAAAAAAAB5AAAAAAAAAAAAAAAAAPC/"
				],
				[
					96,
					1,
					"insert",
					{
						"characters": "Rnd"
					},
					"AwAAAHoAAAAAAAAAewAAAAAAAAAAAAAAewAAAAAAAAB8AAAAAAAAAAAAAAB8AAAAAAAAAH0AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAegAAAAAAAAB6AAAAAAAAAAAAAAAAAPC/"
				],
				[
					97,
					1,
					"insert_completion",
					{
						"completion": "RenderCommand",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "RenderCommand"
					},
					"AgAAAHoAAAAAAAAAegAAAAAAAAADAAAAUm5kegAAAAAAAACHAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfQAAAAAAAAB9AAAAAAAAAAAAAAAAAPC/"
				],
				[
					99,
					1,
					"insert",
					{
						"characters": "Self"
					},
					"BQAAAHoAAAAAAAAAewAAAAAAAAAAAAAAewAAAAAAAAB7AAAAAAAAAA0AAABSZW5kZXJDb21tYW5kewAAAAAAAAB8AAAAAAAAAAAAAAB8AAAAAAAAAH0AAAAAAAAAAAAAAH0AAAAAAAAAfgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhwAAAAAAAAB6AAAAAAAAAAAAAAAAAPC/"
				],
				[
					103,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAIAAAAAAAAAAgQAAAAAAAAAAAAAAgQAAAAAAAACFAAAAAAAAAAAAAACFAAAAAAAAAIYAAAAAAAAAAAAAAIYAAAAAAAAAigAAAAAAAAAAAAAAgQAAAAAAAACBAAAAAAAAAAQAAAAgICAggQAAAAAAAACGAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgAAAAAAAAACAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					104,
					1,
					"insert",
					{
						"characters": "Ren"
					},
					"AwAAAIYAAAAAAAAAhwAAAAAAAAAAAAAAhwAAAAAAAACIAAAAAAAAAAAAAACIAAAAAAAAAIkAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhgAAAAAAAACGAAAAAAAAAAAAAAAAAPC/"
				],
				[
					105,
					1,
					"insert_completion",
					{
						"completion": "RenderCommand",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "RenderCommand"
					},
					"AgAAAIYAAAAAAAAAhgAAAAAAAAADAAAAUmVuhgAAAAAAAACTAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiQAAAAAAAACJAAAAAAAAAAAAAAAAAPC/"
				],
				[
					106,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAJMAAAAAAAAAlQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkwAAAAAAAACTAAAAAAAAAAAAAAAAAPC/"
				],
				[
					107,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAJQAAAAAAAAAlQAAAAAAAAAAAAAAlQAAAAAAAACaAAAAAAAAAAAAAACaAAAAAAAAAJsAAAAAAAAAAAAAAJsAAAAAAAAAoAAAAAAAAAAAAAAAlQAAAAAAAACVAAAAAAAAAAUAAAAgICAgCZUAAAAAAAAAmwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlAAAAAAAAACUAAAAAAAAAAAAAAAAAPC/"
				],
				[
					108,
					1,
					"insert",
					{
						"characters": "vao"
					},
					"AwAAAJsAAAAAAAAAnAAAAAAAAAAAAAAAnAAAAAAAAACdAAAAAAAAAAAAAACdAAAAAAAAAJ4AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmwAAAAAAAACbAAAAAAAAAAAAAAAAAPC/"
				],
				[
					109,
					1,
					"insert_completion",
					{
						"completion": "vao_id",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "vao_id"
					},
					"AgAAAJsAAAAAAAAAmwAAAAAAAAADAAAAdmFvmwAAAAAAAAChAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAngAAAAAAAACeAAAAAAAAAAAAAAAAAPC/"
				],
				[
					110,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAKEAAAAAAAAAogAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoQAAAAAAAAChAAAAAAAAAAAAAAAAAPC/"
				],
				[
					111,
					1,
					"insert",
					{
						"characters": " 0,"
					},
					"AwAAAKIAAAAAAAAAowAAAAAAAAAAAAAAowAAAAAAAACkAAAAAAAAAAAAAACkAAAAAAAAAKUAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAogAAAAAAAACiAAAAAAAAAAAAAAAAAPC/"
				],
				[
					112,
					1,
					"insert",
					{
						"characters": "\nshader"
					},
					"CAAAAKUAAAAAAAAApgAAAAAAAAAAAAAApgAAAAAAAACsAAAAAAAAAAAAAACsAAAAAAAAAK0AAAAAAAAAAAAAAK0AAAAAAAAArgAAAAAAAAAAAAAArgAAAAAAAACvAAAAAAAAAAAAAACvAAAAAAAAALAAAAAAAAAAAAAAALAAAAAAAAAAsQAAAAAAAAAAAAAAsQAAAAAAAACyAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApQAAAAAAAAClAAAAAAAAAAAAAAAAAPC/"
				],
				[
					113,
					1,
					"insert_completion",
					{
						"completion": "shader_id",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "shader_id"
					},
					"AgAAAKwAAAAAAAAArAAAAAAAAAAGAAAAc2hhZGVyrAAAAAAAAAC1AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsgAAAAAAAACyAAAAAAAAAAAAAAAAAPC/"
				],
				[
					114,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAALUAAAAAAAAAtgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtQAAAAAAAAC1AAAAAAAAAAAAAAAAAPC/"
				],
				[
					115,
					1,
					"insert",
					{
						"characters": " 0,"
					},
					"AwAAALYAAAAAAAAAtwAAAAAAAAAAAAAAtwAAAAAAAAC4AAAAAAAAAAAAAAC4AAAAAAAAALkAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtgAAAAAAAAC2AAAAAAAAAAAAAAAAAPC/"
				],
				[
					116,
					4,
					"left_delete",
					null,
					"BAAAALgAAAAAAAAAuAAAAAAAAAABAAAALLcAAAAAAAAAtwAAAAAAAAABAAAAMLYAAAAAAAAAtgAAAAAAAAABAAAAILUAAAAAAAAAtQAAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAAuQAAAAAAAAC5AAAAAAAAAAAAAAAAAPC/"
				],
				[
					117,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAALUAAAAAAAAAtgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtQAAAAAAAAC1AAAAAAAAAAAAAAAAAPC/"
				],
				[
					118,
					1,
					"insert",
					{
						"characters": " 0,"
					},
					"AwAAALYAAAAAAAAAtwAAAAAAAAAAAAAAtwAAAAAAAAC4AAAAAAAAAAAAAAC4AAAAAAAAALkAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtgAAAAAAAAC2AAAAAAAAAAAAAAAAAPC/"
				],
				[
					119,
					1,
					"rust_fmt_format_buffer",
					null,
					"CgAAAIUAAAAAAAAAhQAAAAAAAAABAAAACYUAAAAAAAAAiQAAAAAAAAAAAAAAlgAAAAAAAACXAAAAAAAAAAAAAACdAAAAAAAAAJ0AAAAAAAAAAgAAAAkJnQAAAAAAAAClAAAAAAAAAAAAAAC0AAAAAAAAALQAAAAAAAAAAgAAAAkJtAAAAAAAAAC8AAAAAAAAAAAAAADKAAAAAAAAAMwAAAAAAAAAAAAAANAAAAAAAAAA0AAAAAAAAAABAAAACdAAAAAAAAAA0gAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuQAAAAAAAAC5AAAAAAAAAAAAAAAAAPC/"
				],
				[
					131,
					1,
					"insert",
					{
						"characters": "voa"
					},
					"AwAAAHUAAAAAAAAAdgAAAAAAAAAAAAAAdgAAAAAAAAB3AAAAAAAAAAAAAAB3AAAAAAAAAHgAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdQAAAAAAAAB1AAAAAAAAAAAAAAAAAPC/"
				],
				[
					132,
					2,
					"left_delete",
					null,
					"AgAAAHcAAAAAAAAAdwAAAAAAAAABAAAAYXYAAAAAAAAAdgAAAAAAAAABAAAAbw",
					"AQAAAAAAAAABAAAAeAAAAAAAAAB4AAAAAAAAAAAAAAAAAPC/"
				],
				[
					133,
					1,
					"insert",
					{
						"characters": "ao:"
					},
					"AwAAAHYAAAAAAAAAdwAAAAAAAAAAAAAAdwAAAAAAAAB4AAAAAAAAAAAAAAB4AAAAAAAAAHkAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdgAAAAAAAAB2AAAAAAAAAAAAAAAAAPC/"
				],
				[
					134,
					1,
					"insert",
					{
						"characters": " u32"
					},
					"BAAAAHkAAAAAAAAAegAAAAAAAAAAAAAAegAAAAAAAAB7AAAAAAAAAAAAAAB7AAAAAAAAAHwAAAAAAAAAAAAAAHwAAAAAAAAAfQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeQAAAAAAAAB5AAAAAAAAAAAAAAAAAPC/"
				],
				[
					135,
					2,
					"left_delete",
					null,
					"AgAAAHwAAAAAAAAAfAAAAAAAAAABAAAAMnsAAAAAAAAAewAAAAAAAAABAAAAMw",
					"AQAAAAAAAAABAAAAfQAAAAAAAAB9AAAAAAAAAAAAAAAAAPC/"
				],
				[
					136,
					1,
					"insert",
					{
						"characters": "64"
					},
					"AgAAAHsAAAAAAAAAfAAAAAAAAAAAAAAAfAAAAAAAAAB9AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAewAAAAAAAAB7AAAAAAAAAAAAAAAAAPC/"
				],
				[
					138,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAH0AAAAAAAAAfgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfQAAAAAAAAB9AAAAAAAAAAAAAAAAAPC/"
				],
				[
					139,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAH4AAAAAAAAAfwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfgAAAAAAAAB+AAAAAAAAAAAAAAAAAPC/"
				],
				[
					140,
					1,
					"rust_fmt_format_buffer",
					null,
					"AQAAAH0AAAAAAAAAfQAAAAAAAAACAAAALCA",
					"AQAAAAAAAAABAAAAfwAAAAAAAAB/AAAAAAAAAAAAAAAAAPC/"
				],
				[
					141,
					1,
					"insert",
					{
						"characters": "ah"
					},
					"AgAAAH0AAAAAAAAAfgAAAAAAAAAAAAAAfgAAAAAAAAB/AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfQAAAAAAAAB9AAAAAAAAAAAAAAAAAPC/"
				],
				[
					142,
					2,
					"left_delete",
					null,
					"AgAAAH4AAAAAAAAAfgAAAAAAAAABAAAAaH0AAAAAAAAAfQAAAAAAAAABAAAAYQ",
					"AQAAAAAAAAABAAAAfwAAAAAAAAB/AAAAAAAAAAAAAAAAAPC/"
				],
				[
					143,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAH0AAAAAAAAAfgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfQAAAAAAAAB9AAAAAAAAAAAAAAAAAPC/"
				],
				[
					144,
					1,
					"insert",
					{
						"characters": " shader_id:"
					},
					"CwAAAH4AAAAAAAAAfwAAAAAAAAAAAAAAfwAAAAAAAACAAAAAAAAAAAAAAACAAAAAAAAAAIEAAAAAAAAAAAAAAIEAAAAAAAAAggAAAAAAAAAAAAAAggAAAAAAAACDAAAAAAAAAAAAAACDAAAAAAAAAIQAAAAAAAAAAAAAAIQAAAAAAAAAhQAAAAAAAAAAAAAAhQAAAAAAAACGAAAAAAAAAAAAAACGAAAAAAAAAIcAAAAAAAAAAAAAAIcAAAAAAAAAiAAAAAAAAAAAAAAAiAAAAAAAAACJAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfgAAAAAAAAB+AAAAAAAAAAAAAAAAAPC/"
				],
				[
					145,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIkAAAAAAAAAigAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiQAAAAAAAACJAAAAAAAAAAAAAAAAAPC/"
				],
				[
					148,
					1,
					"left_delete",
					null,
					"AQAAAMIAAAAAAAAAwgAAAAAAAAABAAAAMA",
					"AQAAAAAAAAABAAAAwwAAAAAAAADDAAAAAAAAAAAAAAAAAPC/"
				],
				[
					149,
					1,
					"insert",
					{
						"characters": "vao_id"
					},
					"BgAAAMIAAAAAAAAAwwAAAAAAAAAAAAAAwwAAAAAAAADEAAAAAAAAAAAAAADEAAAAAAAAAMUAAAAAAAAAAAAAAMUAAAAAAAAAxgAAAAAAAAAAAAAAxgAAAAAAAADHAAAAAAAAAAAAAADHAAAAAAAAAMgAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwgAAAAAAAADCAAAAAAAAAAAAAAAAAPC/"
				],
				[
					151,
					2,
					"left_delete",
					null,
					"AgAAAOIAAAAAAAAA4gAAAAAAAAABAAAALOEAAAAAAAAA4QAAAAAAAAABAAAAMA",
					"AQAAAAAAAAABAAAA4wAAAAAAAADjAAAAAAAAAAAAAAAAYGdA"
				],
				[
					152,
					1,
					"insert",
					{
						"characters": "shader_id,"
					},
					"CgAAAOEAAAAAAAAA4gAAAAAAAAAAAAAA4gAAAAAAAADjAAAAAAAAAAAAAADjAAAAAAAAAOQAAAAAAAAAAAAAAOQAAAAAAAAA5QAAAAAAAAAAAAAA5QAAAAAAAADmAAAAAAAAAAAAAADmAAAAAAAAAOcAAAAAAAAAAAAAAOcAAAAAAAAA6AAAAAAAAAAAAAAA6AAAAAAAAADpAAAAAAAAAAAAAADpAAAAAAAAAOoAAAAAAAAAAAAAAOoAAAAAAAAA6wAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4QAAAAAAAADhAAAAAAAAAAAAAAAAAPC/"
				],
				[
					157,
					1,
					"insert",
					{
						"characters": " u4"
					},
					"AwAAAIoAAAAAAAAAiwAAAAAAAAAAAAAAiwAAAAAAAACMAAAAAAAAAAAAAACMAAAAAAAAAI0AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAigAAAAAAAACKAAAAAAAAAAAAAAAAAPC/"
				],
				[
					158,
					3,
					"left_delete",
					null,
					"AwAAAIwAAAAAAAAAjAAAAAAAAAABAAAANIsAAAAAAAAAiwAAAAAAAAABAAAAdYoAAAAAAAAAigAAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAjQAAAAAAAACNAAAAAAAAAAAAAAAAAPC/"
				],
				[
					159,
					1,
					"insert",
					{
						"characters": "u64"
					},
					"AwAAAIoAAAAAAAAAiwAAAAAAAAAAAAAAiwAAAAAAAACMAAAAAAAAAAAAAACMAAAAAAAAAI0AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAigAAAAAAAACKAAAAAAAAAAAAAAAAAPC/"
				],
				[
					169,
					1,
					"insert",
					{
						"characters": "_id"
					},
					"AwAAAHgAAAAAAAAAeQAAAAAAAAAAAAAAeQAAAAAAAAB6AAAAAAAAAAAAAAB6AAAAAAAAAHsAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeAAAAAAAAAB4AAAAAAAAAAAAAAAAAPC/"
				],
				[
					173,
					2,
					"left_delete",
					null,
					"AgAAAH8AAAAAAAAAfwAAAAAAAAABAAAANH4AAAAAAAAAfgAAAAAAAAABAAAANg",
					"AQAAAAAAAAABAAAAgAAAAAAAAACAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					174,
					1,
					"insert",
					{
						"characters": "32"
					},
					"AgAAAH4AAAAAAAAAfwAAAAAAAAAAAAAAfwAAAAAAAACAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfgAAAAAAAAB+AAAAAAAAAAAAAAAAAPC/"
				],
				[
					176,
					2,
					"left_delete",
					null,
					"AgAAAI8AAAAAAAAAjwAAAAAAAAABAAAANI4AAAAAAAAAjgAAAAAAAAABAAAANg",
					"AQAAAAAAAAABAAAAkAAAAAAAAACQAAAAAAAAAAAAAAAAAPC/"
				],
				[
					177,
					1,
					"insert",
					{
						"characters": "32"
					},
					"AgAAAI4AAAAAAAAAjwAAAAAAAAAAAAAAjwAAAAAAAACQAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjgAAAAAAAACOAAAAAAAAAAAAAAAAAPC/"
				],
				[
					187,
					1,
					"insert",
					{
						"characters": "p"
					},
					"AQAAAAQBAAAAAAAABQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABAEAAAAAAAAEAQAAAAAAAAAAAAAAAPC/"
				],
				[
					188,
					1,
					"left_delete",
					null,
					"AQAAAAQBAAAAAAAABAEAAAAAAAABAAAAcA",
					"AQAAAAAAAAABAAAABQEAAAAAAAAFAQAAAAAAAAAAAAAAAPC/"
				],
				[
					193,
					1,
					"insert",
					{
						"characters": "\npub"
					},
					"BQAAAEcAAAAAAAAASAAAAAAAAAAAAAAASAAAAAAAAABMAAAAAAAAAAAAAABMAAAAAAAAAE0AAAAAAAAAAAAAAE0AAAAAAAAATgAAAAAAAAAAAAAATgAAAAAAAABPAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARwAAAAAAAABHAAAAAAAAAP///////+9/"
				],
				[
					194,
					1,
					"insert",
					{
						"characters": " indecies:"
					},
					"CgAAAE8AAAAAAAAAUAAAAAAAAAAAAAAAUAAAAAAAAABRAAAAAAAAAAAAAABRAAAAAAAAAFIAAAAAAAAAAAAAAFIAAAAAAAAAUwAAAAAAAAAAAAAAUwAAAAAAAABUAAAAAAAAAAAAAABUAAAAAAAAAFUAAAAAAAAAAAAAAFUAAAAAAAAAVgAAAAAAAAAAAAAAVgAAAAAAAABXAAAAAAAAAAAAAABXAAAAAAAAAFgAAAAAAAAAAAAAAFgAAAAAAAAAWQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATwAAAAAAAABPAAAAAAAAAAAAAAAAAPC/"
				],
				[
					195,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFkAAAAAAAAAWgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWQAAAAAAAABZAAAAAAAAAAAAAAAAAPC/"
				],
				[
					196,
					2,
					"left_delete",
					null,
					"AgAAAFkAAAAAAAAAWQAAAAAAAAABAAAAIFgAAAAAAAAAWAAAAAAAAAABAAAAOg",
					"AQAAAAAAAAABAAAAWgAAAAAAAABaAAAAAAAAAAAAAAAAAPC/"
				],
				[
					197,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAFgAAAAAAAAAWQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWAAAAAAAAABYAAAAAAAAAAAAAAAAAPC/"
				],
				[
					198,
					1,
					"insert",
					{
						"characters": " Vec<"
					},
					"BQAAAFkAAAAAAAAAWgAAAAAAAAAAAAAAWgAAAAAAAABbAAAAAAAAAAAAAABbAAAAAAAAAFwAAAAAAAAAAAAAAFwAAAAAAAAAXQAAAAAAAAAAAAAAXQAAAAAAAABeAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWQAAAAAAAABZAAAAAAAAAAAAAAAAAPC/"
				],
				[
					199,
					1,
					"insert",
					{
						"characters": "u32>,"
					},
					"BQAAAF4AAAAAAAAAXwAAAAAAAAAAAAAAXwAAAAAAAABgAAAAAAAAAAAAAABgAAAAAAAAAGEAAAAAAAAAAAAAAGEAAAAAAAAAYgAAAAAAAAAAAAAAYgAAAAAAAABjAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXgAAAAAAAABeAAAAAAAAAAAAAAAAAPC/"
				],
				[
					203,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAKwAAAAAAAAArQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArAAAAAAAAACsAAAAAAAAAAAAAAAAAPC/"
				],
				[
					204,
					1,
					"insert",
					{
						"characters": " indecies"
					},
					"CQAAAK0AAAAAAAAArgAAAAAAAAAAAAAArgAAAAAAAACvAAAAAAAAAAAAAACvAAAAAAAAALAAAAAAAAAAAAAAALAAAAAAAAAAsQAAAAAAAAAAAAAAsQAAAAAAAACyAAAAAAAAAAAAAACyAAAAAAAAALMAAAAAAAAAAAAAALMAAAAAAAAAtAAAAAAAAAAAAAAAtAAAAAAAAAC1AAAAAAAAAAAAAAC1AAAAAAAAALYAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArQAAAAAAAACtAAAAAAAAAAAAAAAAAPC/"
				],
				[
					205,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAALYAAAAAAAAAtwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtgAAAAAAAAC2AAAAAAAAAAAAAAAAAPC/"
				],
				[
					206,
					1,
					"insert",
					{
						"characters": " Vec<"
					},
					"BQAAALcAAAAAAAAAuAAAAAAAAAAAAAAAuAAAAAAAAAC5AAAAAAAAAAAAAAC5AAAAAAAAALoAAAAAAAAAAAAAALoAAAAAAAAAuwAAAAAAAAAAAAAAuwAAAAAAAAC8AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtwAAAAAAAAC3AAAAAAAAAAAAAAAAAPC/"
				],
				[
					207,
					4,
					"left_delete",
					null,
					"BAAAALsAAAAAAAAAuwAAAAAAAAABAAAAPLoAAAAAAAAAugAAAAAAAAABAAAAY7kAAAAAAAAAuQAAAAAAAAABAAAAZbgAAAAAAAAAuAAAAAAAAAABAAAAVg",
					"AQAAAAAAAAABAAAAvAAAAAAAAAC8AAAAAAAAAAAAAAAAAPC/"
				],
				[
					208,
					1,
					"insert",
					{
						"characters": "ve"
					},
					"AgAAALgAAAAAAAAAuQAAAAAAAAAAAAAAuQAAAAAAAAC6AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuAAAAAAAAAC4AAAAAAAAAAAAAAAAAPC/"
				],
				[
					209,
					2,
					"left_delete",
					null,
					"AgAAALkAAAAAAAAAuQAAAAAAAAABAAAAZbgAAAAAAAAAuAAAAAAAAAABAAAAdg",
					"AQAAAAAAAAABAAAAugAAAAAAAAC6AAAAAAAAAAAAAAAAAPC/"
				],
				[
					210,
					1,
					"insert",
					{
						"characters": "Vec<u32>"
					},
					"CAAAALgAAAAAAAAAuQAAAAAAAAAAAAAAuQAAAAAAAAC6AAAAAAAAAAAAAAC6AAAAAAAAALsAAAAAAAAAAAAAALsAAAAAAAAAvAAAAAAAAAAAAAAAvAAAAAAAAAC9AAAAAAAAAAAAAAC9AAAAAAAAAL4AAAAAAAAAAAAAAL4AAAAAAAAAvwAAAAAAAAAAAAAAvwAAAAAAAADAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuAAAAAAAAAC4AAAAAAAAAAAAAAAAAPC/"
				],
				[
					214,
					1,
					"insert",
					{
						"characters": "\nindecies:"
					},
					"CwAAACEBAAAAAAAAIgEAAAAAAAAAAAAAIgEAAAAAAAAuAQAAAAAAAAAAAAAuAQAAAAAAAC8BAAAAAAAAAAAAAC8BAAAAAAAAMAEAAAAAAAAAAAAAMAEAAAAAAAAxAQAAAAAAAAAAAAAxAQAAAAAAADIBAAAAAAAAAAAAADIBAAAAAAAAMwEAAAAAAAAAAAAAMwEAAAAAAAA0AQAAAAAAAAAAAAA0AQAAAAAAADUBAAAAAAAAAAAAADUBAAAAAAAANgEAAAAAAAAAAAAANgEAAAAAAAA3AQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIQEAAAAAAAAhAQAAAAAAAP///////+9/"
				],
				[
					215,
					1,
					"insert",
					{
						"characters": " indecies,"
					},
					"CgAAADcBAAAAAAAAOAEAAAAAAAAAAAAAOAEAAAAAAAA5AQAAAAAAAAAAAAA5AQAAAAAAADoBAAAAAAAAAAAAADoBAAAAAAAAOwEAAAAAAAAAAAAAOwEAAAAAAAA8AQAAAAAAAAAAAAA8AQAAAAAAAD0BAAAAAAAAAAAAAD0BAAAAAAAAPgEAAAAAAAAAAAAAPgEAAAAAAAA/AQAAAAAAAAAAAAA/AQAAAAAAAEABAAAAAAAAAAAAAEABAAAAAAAAQQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANwEAAAAAAAA3AQAAAAAAAAAAAAAAAPC/"
				],
				[
					223,
					1,
					"insert",
					{
						"characters": "_prog"
					},
					"BQAAAD4AAAAAAAAAPwAAAAAAAAAAAAAAPwAAAAAAAABAAAAAAAAAAAAAAABAAAAAAAAAAEEAAAAAAAAAAAAAAEEAAAAAAAAAQgAAAAAAAAAAAAAAQgAAAAAAAABDAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPgAAAAAAAAA+AAAAAAAAAAAAAAAAAPC/"
				],
				[
					226,
					1,
					"insert",
					{
						"characters": "progra"
					},
					"BwAAADgAAAAAAAAAOQAAAAAAAAAAAAAAOQAAAAAAAAA5AAAAAAAAAAsAAABzaGFkZXJfcHJvZzkAAAAAAAAAOgAAAAAAAAAAAAAAOgAAAAAAAAA7AAAAAAAAAAAAAAA7AAAAAAAAADwAAAAAAAAAAAAAADwAAAAAAAAAPQAAAAAAAAAAAAAAPQAAAAAAAAA+AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQwAAAAAAAAA4AAAAAAAAAAAAAAAAAPC/"
				],
				[
					227,
					3,
					"left_delete",
					null,
					"AwAAAD0AAAAAAAAAPQAAAAAAAAABAAAAYTwAAAAAAAAAPAAAAAAAAAABAAAAcjsAAAAAAAAAOwAAAAAAAAABAAAAZw",
					"AQAAAAAAAAABAAAAPgAAAAAAAAA+AAAAAAAAAAAAAAAAAPC/"
				],
				[
					228,
					1,
					"insert",
					{
						"characters": "g"
					},
					"AQAAADsAAAAAAAAAPAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOwAAAAAAAAA7AAAAAAAAAAAAAAAAAPC/"
				],
				[
					237,
					1,
					"insert",
					{
						"characters": "prog"
					},
					"BQAAAJwAAAAAAAAAnQAAAAAAAAAAAAAAnQAAAAAAAACdAAAAAAAAAAYAAABzaGFkZXKdAAAAAAAAAJ4AAAAAAAAAAAAAAJ4AAAAAAAAAnwAAAAAAAAAAAAAAnwAAAAAAAACgAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAogAAAAAAAACcAAAAAAAAAAAAAAAAAPC/"
				],
				[
					242,
					1,
					"insert",
					{
						"characters": "prog"
					},
					"BQAAAAgBAAAAAAAACQEAAAAAAAAAAAAACQEAAAAAAAAJAQAAAAAAAAYAAABzaGFkZXIJAQAAAAAAAAoBAAAAAAAAAAAAAAoBAAAAAAAACwEAAAAAAAAAAAAACwEAAAAAAAAMAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADgEAAAAAAAAIAQAAAAAAAAAAAAAAAPC/"
				],
				[
					248,
					1,
					"insert",
					{
						"characters": "prog"
					},
					"BQAAABEBAAAAAAAAEgEAAAAAAAAAAAAAEgEAAAAAAAASAQAAAAAAAAYAAABzaGFkZXISAQAAAAAAABMBAAAAAAAAAAAAABMBAAAAAAAAFAEAAAAAAAAAAAAAFAEAAAAAAAAVAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFwEAAAAAAAARAQAAAAAAAAAAAAAAAPC/"
				],
				[
					257,
					3,
					"left_delete",
					null,
					"AwAAAJQAAAAAAAAAlAAAAAAAAAABAAAAZJMAAAAAAAAAkwAAAAAAAAABAAAAaZIAAAAAAAAAkgAAAAAAAAABAAAAXw",
					"AQAAAAAAAAABAAAAlQAAAAAAAACVAAAAAAAAAAAAAAAAAPC/"
				],
				[
					260,
					3,
					"left_delete",
					null,
					"AwAAAJYAAAAAAAAAlgAAAAAAAAABAAAAMpUAAAAAAAAAlQAAAAAAAAABAAAAM5QAAAAAAAAAlAAAAAAAAAABAAAAdQ",
					"AQAAAAAAAAABAAAAlwAAAAAAAACXAAAAAAAAAAAAAAAAAPC/"
				],
				[
					261,
					1,
					"insert",
					{
						"characters": "Vao"
					},
					"AwAAAJQAAAAAAAAAlQAAAAAAAAAAAAAAlQAAAAAAAACWAAAAAAAAAAAAAACWAAAAAAAAAJcAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlAAAAAAAAACUAAAAAAAAAAAAAAAAAPC/"
				],
				[
					264,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAACAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					266,
					1,
					"rust_fmt_format_buffer",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAAACAAAACgo",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
				],
				[
					267,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAACAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					269,
					1,
					"insert",
					{
						"characters": "use"
					},
					"AwAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAACAAAAAAAAAAAAAAACAAAAAAAAAAMAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
				],
				[
					270,
					1,
					"insert",
					{
						"characters": " crate:;engine"
					},
					"DgAAAAMAAAAAAAAABAAAAAAAAAAAAAAABAAAAAAAAAAFAAAAAAAAAAAAAAAFAAAAAAAAAAYAAAAAAAAAAAAAAAYAAAAAAAAABwAAAAAAAAAAAAAABwAAAAAAAAAIAAAAAAAAAAAAAAAIAAAAAAAAAAkAAAAAAAAAAAAAAAkAAAAAAAAACgAAAAAAAAAAAAAACgAAAAAAAAALAAAAAAAAAAAAAAALAAAAAAAAAAwAAAAAAAAAAAAAAAwAAAAAAAAADQAAAAAAAAAAAAAADQAAAAAAAAAOAAAAAAAAAAAAAAAOAAAAAAAAAA8AAAAAAAAAAAAAAA8AAAAAAAAAEAAAAAAAAAAAAAAAEAAAAAAAAAARAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAwAAAAAAAAADAAAAAAAAAAAAAAAAAPC/"
				],
				[
					271,
					7,
					"left_delete",
					null,
					"BwAAABAAAAAAAAAAEAAAAAAAAAABAAAAZQ8AAAAAAAAADwAAAAAAAAABAAAAbg4AAAAAAAAADgAAAAAAAAABAAAAaQ0AAAAAAAAADQAAAAAAAAABAAAAZwwAAAAAAAAADAAAAAAAAAABAAAAbgsAAAAAAAAACwAAAAAAAAABAAAAZQoAAAAAAAAACgAAAAAAAAABAAAAOw",
					"AQAAAAAAAAABAAAAEQAAAAAAAAARAAAAAAAAAAAAAAAAAPC/"
				],
				[
					272,
					1,
					"insert",
					{
						"characters": ":eg"
					},
					"AwAAAAoAAAAAAAAACwAAAAAAAAAAAAAACwAAAAAAAAAMAAAAAAAAAAAAAAAMAAAAAAAAAA0AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACgAAAAAAAAAKAAAAAAAAAAAAAAAAAPC/"
				],
				[
					273,
					1,
					"left_delete",
					null,
					"AQAAAAwAAAAAAAAADAAAAAAAAAABAAAAZw",
					"AQAAAAAAAAABAAAADQAAAAAAAAANAAAAAAAAAAAAAAAAAPC/"
				],
				[
					274,
					1,
					"insert",
					{
						"characters": "ngine::"
					},
					"BwAAAAwAAAAAAAAADQAAAAAAAAAAAAAADQAAAAAAAAAOAAAAAAAAAAAAAAAOAAAAAAAAAA8AAAAAAAAAAAAAAA8AAAAAAAAAEAAAAAAAAAAAAAAAEAAAAAAAAAARAAAAAAAAAAAAAAARAAAAAAAAABIAAAAAAAAAAAAAABIAAAAAAAAAEwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADAAAAAAAAAAMAAAAAAAAAAAAAAAAAPC/"
				],
				[
					275,
					1,
					"insert",
					{
						"characters": "render::vao::V"
					},
					"DgAAABMAAAAAAAAAFAAAAAAAAAAAAAAAFAAAAAAAAAAVAAAAAAAAAAAAAAAVAAAAAAAAABYAAAAAAAAAAAAAABYAAAAAAAAAFwAAAAAAAAAAAAAAFwAAAAAAAAAYAAAAAAAAAAAAAAAYAAAAAAAAABkAAAAAAAAAAAAAABkAAAAAAAAAGgAAAAAAAAAAAAAAGgAAAAAAAAAbAAAAAAAAAAAAAAAbAAAAAAAAABwAAAAAAAAAAAAAABwAAAAAAAAAHQAAAAAAAAAAAAAAHQAAAAAAAAAeAAAAAAAAAAAAAAAeAAAAAAAAAB8AAAAAAAAAAAAAAB8AAAAAAAAAIAAAAAAAAAAAAAAAIAAAAAAAAAAhAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEwAAAAAAAAATAAAAAAAAAAAAAAAAAPC/"
				],
				[
					276,
					1,
					"insert",
					{
						"characters": "AO;"
					},
					"AwAAACEAAAAAAAAAIgAAAAAAAAAAAAAAIgAAAAAAAAAjAAAAAAAAAAAAAAAjAAAAAAAAACQAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIQAAAAAAAAAhAAAAAAAAAAAAAAAAAPC/"
				],
				[
					279,
					2,
					"left_delete",
					null,
					"AgAAACIAAAAAAAAAIgAAAAAAAAABAAAATyEAAAAAAAAAIQAAAAAAAAABAAAAQQ",
					"AQAAAAAAAAABAAAAIwAAAAAAAAAjAAAAAAAAAAAAAAAAAPC/"
				],
				[
					280,
					1,
					"insert",
					{
						"characters": "ao"
					},
					"AgAAACEAAAAAAAAAIgAAAAAAAAAAAAAAIgAAAAAAAAAjAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIQAAAAAAAAAhAAAAAAAAAAAAAAAAAPC/"
				],
				[
					288,
					1,
					"insert",
					{
						"characters": "&"
					},
					"AQAAALoAAAAAAAAAuwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAugAAAAAAAAC6AAAAAAAAAAAAAAAAAPC/"
				],
				[
					295,
					1,
					"insert",
					{
						"characters": "vao.id"
					},
					"BwAAABgBAAAAAAAAGQEAAAAAAAAAAAAAGQEAAAAAAAAZAQAAAAAAAAYAAAB2YW9faWQZAQAAAAAAABoBAAAAAAAAAAAAABoBAAAAAAAAGwEAAAAAAAAAAAAAGwEAAAAAAAAcAQAAAAAAAAAAAAAcAQAAAAAAAB0BAAAAAAAAAAAAAB0BAAAAAAAAHgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHgEAAAAAAAAYAQAAAAAAAAAAAAAAAPC/"
				],
				[
					310,
					1,
					"insert",
					{
						"characters": "shader"
					},
					"BwAAAMAAAAAAAAAAwQAAAAAAAAAAAAAAwQAAAAAAAADBAAAAAAAAAAcAAABwcm9nX2lkwQAAAAAAAADCAAAAAAAAAAAAAADCAAAAAAAAAMMAAAAAAAAAAAAAAMMAAAAAAAAAxAAAAAAAAAAAAAAAxAAAAAAAAADFAAAAAAAAAAAAAADFAAAAAAAAAMYAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxwAAAAAAAADAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					314,
					1,
					"paste",
					null,
					"AQAAAAAAAAAAAAAAJQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYHNA"
				],
				[
					322,
					1,
					"insert",
					{
						"characters": "Shad"
					},
					"BQAAAEAAAAAAAAAAQQAAAAAAAAAAAAAAQQAAAAAAAABBAAAAAAAAAAMAAAB2YW9BAAAAAAAAAEIAAAAAAAAAAAAAAEIAAAAAAAAAQwAAAAAAAAAAAAAAQwAAAAAAAABEAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQwAAAAAAAABAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					323,
					4,
					"left_delete",
					null,
					"BAAAAEMAAAAAAAAAQwAAAAAAAAABAAAAZEIAAAAAAAAAQgAAAAAAAAABAAAAYUEAAAAAAAAAQQAAAAAAAAABAAAAaEAAAAAAAAAAQAAAAAAAAAABAAAAUw",
					"AQAAAAAAAAABAAAARAAAAAAAAABEAAAAAAAAAAAAAAAAAPC/"
				],
				[
					324,
					1,
					"insert",
					{
						"characters": "shader"
					},
					"BgAAAEAAAAAAAAAAQQAAAAAAAAAAAAAAQQAAAAAAAABCAAAAAAAAAAAAAABCAAAAAAAAAEMAAAAAAAAAAAAAAEMAAAAAAAAARAAAAAAAAAAAAAAARAAAAAAAAABFAAAAAAAAAAAAAABFAAAAAAAAAEYAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQAAAAAAAAABAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					328,
					1,
					"insert",
					{
						"characters": "Shader"
					},
					"BwAAAEgAAAAAAAAASQAAAAAAAAAAAAAASQAAAAAAAABJAAAAAAAAAAMAAABWYW9JAAAAAAAAAEoAAAAAAAAAAAAAAEoAAAAAAAAASwAAAAAAAAAAAAAASwAAAAAAAABMAAAAAAAAAAAAAABMAAAAAAAAAE0AAAAAAAAAAAAAAE0AAAAAAAAATgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASwAAAAAAAABIAAAAAAAAAAAAAAAAAPC/"
				],
				[
					331,
					3,
					"left_delete",
					null,
					"AwAAAPUAAAAAAAAA9QAAAAAAAAABAAAAMvQAAAAAAAAA9AAAAAAAAAABAAAAM/MAAAAAAAAA8wAAAAAAAAABAAAAdQ",
					"AQAAAAAAAAABAAAA9gAAAAAAAAD2AAAAAAAAAAAAAAAAAPC/"
				],
				[
					332,
					1,
					"insert",
					{
						"characters": "Shader"
					},
					"BgAAAPMAAAAAAAAA9AAAAAAAAAAAAAAA9AAAAAAAAAD1AAAAAAAAAAAAAAD1AAAAAAAAAPYAAAAAAAAAAAAAAPYAAAAAAAAA9wAAAAAAAAAAAAAA9wAAAAAAAAD4AAAAAAAAAAAAAAD4AAAAAAAAAPkAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8wAAAAAAAADzAAAAAAAAAAAAAAAAAPC/"
				],
				[
					334,
					1,
					"insert",
					{
						"characters": "&"
					},
					"AQAAAPMAAAAAAAAA9AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8wAAAAAAAADzAAAAAAAAAAAAAAAAAPC/"
				],
				[
					335,
					1,
					"rust_fmt_format_buffer",
					null,
					"BAAAABsAAAAAAAAAGwAAAAAAAAAIAAAAdmFvOjpWYW8bAAAAAAAAACkAAAAAAAAAAAAAAEYAAAAAAAAARgAAAAAAAAAOAAAAc2hhZGVyOjpTaGFkZXJGAAAAAAAAAE4AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9AAAAAAAAAD0AAAAAAAAAAAAAAAAAPC/"
				],
				[
					354,
					1,
					"insert",
					{
						"characters": "ha"
					},
					"AwAAAGMBAAAAAAAAZAEAAAAAAAAAAAAAZAEAAAAAAABkAQAAAAAAAAcAAABwcm9nX2lkZAEAAAAAAABlAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAagEAAAAAAABjAQAAAAAAAAAAAAAAAPC/"
				],
				[
					355,
					2,
					"left_delete",
					null,
					"AgAAAGQBAAAAAAAAZAEAAAAAAAABAAAAYWMBAAAAAAAAYwEAAAAAAAABAAAAaA",
					"AQAAAAAAAAABAAAAZQEAAAAAAABlAQAAAAAAAAAAAAAAAPC/"
				],
				[
					356,
					1,
					"insert",
					{
						"characters": "shader.prog"
					},
					"CwAAAGMBAAAAAAAAZAEAAAAAAAAAAAAAZAEAAAAAAABlAQAAAAAAAAAAAABlAQAAAAAAAGYBAAAAAAAAAAAAAGYBAAAAAAAAZwEAAAAAAAAAAAAAZwEAAAAAAABoAQAAAAAAAAAAAABoAQAAAAAAAGkBAAAAAAAAAAAAAGkBAAAAAAAAagEAAAAAAAAAAAAAagEAAAAAAABrAQAAAAAAAAAAAABrAQAAAAAAAGwBAAAAAAAAAAAAAGwBAAAAAAAAbQEAAAAAAAAAAAAAbQEAAAAAAABuAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYwEAAAAAAABjAQAAAAAAAAAAAAAAAPC/"
				],
				[
					357,
					1,
					"insert",
					{
						"characters": "_id"
					},
					"AwAAAG4BAAAAAAAAbwEAAAAAAAAAAAAAbwEAAAAAAABwAQAAAAAAAAAAAABwAQAAAAAAAHEBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbgEAAAAAAABuAQAAAAAAAAAAAAAAAPC/"
				],
				[
					376,
					1,
					"insert",
					{
						"characters": "\npub"
					},
					"BQAAALIAAAAAAAAAswAAAAAAAAAAAAAAswAAAAAAAAC3AAAAAAAAAAAAAAC3AAAAAAAAALgAAAAAAAAAAAAAALgAAAAAAAAAuQAAAAAAAAAAAAAAuQAAAAAAAAC6AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsgAAAAAAAACyAAAAAAAAAP///////+9/"
				],
				[
					377,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALoAAAAAAAAAuwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAugAAAAAAAAC6AAAAAAAAAAAAAAAAAPC/"
				],
				[
					378,
					1,
					"insert",
					{
						"characters": "uniforms"
					},
					"CAAAALsAAAAAAAAAvAAAAAAAAAAAAAAAvAAAAAAAAAC9AAAAAAAAAAAAAAC9AAAAAAAAAL4AAAAAAAAAAAAAAL4AAAAAAAAAvwAAAAAAAAAAAAAAvwAAAAAAAADAAAAAAAAAAAAAAADAAAAAAAAAAMEAAAAAAAAAAAAAAMEAAAAAAAAAwgAAAAAAAAAAAAAAwgAAAAAAAADDAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuwAAAAAAAAC7AAAAAAAAAAAAAAAAAPC/"
				],
				[
					380,
					1,
					"insert",
					{
						"characters": "uniforms:"
					},
					"CgAAALsAAAAAAAAAvAAAAAAAAAAAAAAAvAAAAAAAAAC8AAAAAAAAAAgAAAB1bmlmb3Jtc7wAAAAAAAAAvQAAAAAAAAAAAAAAvQAAAAAAAAC+AAAAAAAAAAAAAAC+AAAAAAAAAL8AAAAAAAAAAAAAAL8AAAAAAAAAwAAAAAAAAAAAAAAAwAAAAAAAAADBAAAAAAAAAAAAAADBAAAAAAAAAMIAAAAAAAAAAAAAAMIAAAAAAAAAwwAAAAAAAAAAAAAAwwAAAAAAAADEAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwwAAAAAAAAC7AAAAAAAAAAAAAAAAAPC/"
				],
				[
					381,
					1,
					"insert",
					{
						"characters": " HashMa"
					},
					"BwAAAMQAAAAAAAAAxQAAAAAAAAAAAAAAxQAAAAAAAADGAAAAAAAAAAAAAADGAAAAAAAAAMcAAAAAAAAAAAAAAMcAAAAAAAAAyAAAAAAAAAAAAAAAyAAAAAAAAADJAAAAAAAAAAAAAADJAAAAAAAAAMoAAAAAAAAAAAAAAMoAAAAAAAAAywAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxAAAAAAAAADEAAAAAAAAAAAAAAAAAPC/"
				],
				[
					383,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAACAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoGVA"
				],
				[
					385,
					1,
					"insert",
					{
						"characters": "use"
					},
					"AwAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAACAAAAAAAAAAAAAAACAAAAAAAAAAMAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
				],
				[
					386,
					1,
					"insert",
					{
						"characters": " std::collections"
					},
					"EQAAAAMAAAAAAAAABAAAAAAAAAAAAAAABAAAAAAAAAAFAAAAAAAAAAAAAAAFAAAAAAAAAAYAAAAAAAAAAAAAAAYAAAAAAAAABwAAAAAAAAAAAAAABwAAAAAAAAAIAAAAAAAAAAAAAAAIAAAAAAAAAAkAAAAAAAAAAAAAAAkAAAAAAAAACgAAAAAAAAAAAAAACgAAAAAAAAALAAAAAAAAAAAAAAALAAAAAAAAAAwAAAAAAAAAAAAAAAwAAAAAAAAADQAAAAAAAAAAAAAADQAAAAAAAAAOAAAAAAAAAAAAAAAOAAAAAAAAAA8AAAAAAAAAAAAAAA8AAAAAAAAAEAAAAAAAAAAAAAAAEAAAAAAAAAARAAAAAAAAAAAAAAARAAAAAAAAABIAAAAAAAAAAAAAABIAAAAAAAAAEwAAAAAAAAAAAAAAEwAAAAAAAAAUAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAwAAAAAAAAADAAAAAAAAAAAAAAAAAPC/"
				],
				[
					387,
					1,
					"insert",
					{
						"characters": "::HahsMap"
					},
					"CQAAABQAAAAAAAAAFQAAAAAAAAAAAAAAFQAAAAAAAAAWAAAAAAAAAAAAAAAWAAAAAAAAABcAAAAAAAAAAAAAABcAAAAAAAAAGAAAAAAAAAAAAAAAGAAAAAAAAAAZAAAAAAAAAAAAAAAZAAAAAAAAABoAAAAAAAAAAAAAABoAAAAAAAAAGwAAAAAAAAAAAAAAGwAAAAAAAAAcAAAAAAAAAAAAAAAcAAAAAAAAAB0AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFAAAAAAAAAAUAAAAAAAAAAAAAAAAAPC/"
				],
				[
					388,
					5,
					"left_delete",
					null,
					"BQAAABwAAAAAAAAAHAAAAAAAAAABAAAAcBsAAAAAAAAAGwAAAAAAAAABAAAAYRoAAAAAAAAAGgAAAAAAAAABAAAATRkAAAAAAAAAGQAAAAAAAAABAAAAcxgAAAAAAAAAGAAAAAAAAAABAAAAaA",
					"AQAAAAAAAAABAAAAHQAAAAAAAAAdAAAAAAAAAAAAAAAAAPC/"
				],
				[
					389,
					1,
					"insert",
					{
						"characters": "shMap;"
					},
					"BgAAABgAAAAAAAAAGQAAAAAAAAAAAAAAGQAAAAAAAAAaAAAAAAAAAAAAAAAaAAAAAAAAABsAAAAAAAAAAAAAABsAAAAAAAAAHAAAAAAAAAAAAAAAHAAAAAAAAAAdAAAAAAAAAAAAAAAdAAAAAAAAAB4AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGAAAAAAAAAAYAAAAAAAAAAAAAAAAAPC/"
				],
				[
					390,
					1,
					"rust_fmt_format_buffer",
					null,
					"AQAAAOsAAAAAAAAA7AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHgAAAAAAAAAeAAAAAAAAAAAAAAAAAPC/"
				],
				[
					396,
					1,
					"insert",
					{
						"characters": "p<String,"
					},
					"CQAAAOsAAAAAAAAA7AAAAAAAAAAAAAAA7AAAAAAAAADtAAAAAAAAAAAAAADtAAAAAAAAAO4AAAAAAAAAAAAAAO4AAAAAAAAA7wAAAAAAAAAAAAAA7wAAAAAAAADwAAAAAAAAAAAAAADwAAAAAAAAAPEAAAAAAAAAAAAAAPEAAAAAAAAA8gAAAAAAAAAAAAAA8gAAAAAAAADzAAAAAAAAAAAAAADzAAAAAAAAAPQAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6wAAAAAAAADrAAAAAAAAAAAAAAAAAPC/"
				],
				[
					397,
					1,
					"insert",
					{
						"characters": " Shader"
					},
					"BwAAAPQAAAAAAAAA9QAAAAAAAAAAAAAA9QAAAAAAAAD2AAAAAAAAAAAAAAD2AAAAAAAAAPcAAAAAAAAAAAAAAPcAAAAAAAAA+AAAAAAAAAAAAAAA+AAAAAAAAAD5AAAAAAAAAAAAAAD5AAAAAAAAAPoAAAAAAAAAAAAAAPoAAAAAAAAA+wAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9AAAAAAAAAD0AAAAAAAAAAAAAAAAAPC/"
				],
				[
					398,
					1,
					"paste",
					null,
					"AQAAANMAAAAAAAAAAwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+wAAAAAAAAD7AAAAAAAAAAAAAAAAAPC/"
				],
				[
					400,
					1,
					"insert",
					{
						"characters": "x"
					},
					"AQAAAPsAAAAAAAAA/AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+wAAAAAAAAD7AAAAAAAAAAAAAAAAAHJA"
				],
				[
					401,
					1,
					"left_delete",
					null,
					"AQAAAPsAAAAAAAAA+wAAAAAAAAABAAAAeA",
					"AQAAAAAAAAABAAAA/AAAAAAAAAD8AAAAAAAAAAAAAAAAAPC/"
				],
				[
					403,
					1,
					"cut",
					null,
					"AQAAAAMBAAAAAAAAAwEAAAAAAAAqAAAAICAgIHB1YiB1bmlmb3JtczogSGFzaE1hcDxTdHJpbmcsIFNoYWRlciwK",
					"AQAAAAAAAAABAAAAKwEAAAAAAAArAQAAAAAAAAAAAAAAAHJA"
				],
				[
					410,
					1,
					"insert",
					{
						"characters": "\nuse"
					},
					"BAAAAG8AAAAAAAAAcAAAAAAAAAAAAAAAcAAAAAAAAABxAAAAAAAAAAAAAABxAAAAAAAAAHIAAAAAAAAAAAAAAHIAAAAAAAAAcwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbwAAAAAAAABvAAAAAAAAAP///////+9/"
				],
				[
					411,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHMAAAAAAAAAdAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcwAAAAAAAABzAAAAAAAAAAAAAAAAAPC/"
				],
				[
					412,
					1,
					"swap_line_up",
					null,
					"AgAAAHAAAAAAAAAAcAAAAAAAAAAFAAAAdXNlIApLAAAAAAAAAFAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdAAAAAAAAAB0AAAAAAAAAAAAAAAAAPC/"
				],
				[
					413,
					1,
					"insert",
					{
						"characters": "crate::engine::r"
					},
					"EAAAAE8AAAAAAAAAUAAAAAAAAAAAAAAAUAAAAAAAAABRAAAAAAAAAAAAAABRAAAAAAAAAFIAAAAAAAAAAAAAAFIAAAAAAAAAUwAAAAAAAAAAAAAAUwAAAAAAAABUAAAAAAAAAAAAAABUAAAAAAAAAFUAAAAAAAAAAAAAAFUAAAAAAAAAVgAAAAAAAAAAAAAAVgAAAAAAAABXAAAAAAAAAAAAAABXAAAAAAAAAFgAAAAAAAAAAAAAAFgAAAAAAAAAWQAAAAAAAAAAAAAAWQAAAAAAAABaAAAAAAAAAAAAAABaAAAAAAAAAFsAAAAAAAAAAAAAAFsAAAAAAAAAXAAAAAAAAAAAAAAAXAAAAAAAAABdAAAAAAAAAAAAAABdAAAAAAAAAF4AAAAAAAAAAAAAAF4AAAAAAAAAXwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATwAAAAAAAABPAAAAAAAAAAAAAAAAAPC/"
				],
				[
					414,
					1,
					"insert",
					{
						"characters": "ender::"
					},
					"BwAAAF8AAAAAAAAAYAAAAAAAAAAAAAAAYAAAAAAAAABhAAAAAAAAAAAAAABhAAAAAAAAAGIAAAAAAAAAAAAAAGIAAAAAAAAAYwAAAAAAAAAAAAAAYwAAAAAAAABkAAAAAAAAAAAAAABkAAAAAAAAAGUAAAAAAAAAAAAAAGUAAAAAAAAAZgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXwAAAAAAAABfAAAAAAAAAAAAAAAAAPC/"
				],
				[
					415,
					1,
					"insert",
					{
						"characters": "shader"
					},
					"BgAAAGYAAAAAAAAAZwAAAAAAAAAAAAAAZwAAAAAAAABoAAAAAAAAAAAAAABoAAAAAAAAAGkAAAAAAAAAAAAAAGkAAAAAAAAAagAAAAAAAAAAAAAAagAAAAAAAABrAAAAAAAAAAAAAABrAAAAAAAAAGwAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZgAAAAAAAABmAAAAAAAAAAAAAAAAAPC/"
				],
				[
					416,
					1,
					"cut",
					null,
					"AQAAAEsAAAAAAAAASwAAAAAAAAAiAAAAdXNlIGNyYXRlOjplbmdpbmU6OnJlbmRlcjo6c2hhZGVyCg",
					"AQAAAAAAAAABAAAAbAAAAAAAAABsAAAAAAAAAAAAAAAAAPC/"
				],
				[
					423,
					1,
					"left_delete",
					null,
					"AQAAAEMAAAAAAAAAQwAAAAAAAAAGAAAAU2hhZGVy",
					"AQAAAAAAAAABAAAASQAAAAAAAABDAAAAAAAAAAAAAAAAAPC/"
				],
				[
					424,
					1,
					"insert",
					{
						"characters": "*"
					},
					"AQAAAEMAAAAAAAAARAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQwAAAAAAAABDAAAAAAAAAAAAAAAAAPC/"
				],
				[
					429,
					1,
					"insert",
					{
						"characters": "\nuniforms"
					},
					"CgAAAN0BAAAAAAAA3gEAAAAAAAAAAAAA3gEAAAAAAADqAQAAAAAAAAAAAADqAQAAAAAAAOsBAAAAAAAAAAAAAOsBAAAAAAAA7AEAAAAAAAAAAAAA7AEAAAAAAADtAQAAAAAAAAAAAADtAQAAAAAAAO4BAAAAAAAAAAAAAO4BAAAAAAAA7wEAAAAAAAAAAAAA7wEAAAAAAADwAQAAAAAAAAAAAADwAQAAAAAAAPEBAAAAAAAAAAAAAPEBAAAAAAAA8gEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3QEAAAAAAADdAQAAAAAAAP///////+9/"
				],
				[
					430,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAPIBAAAAAAAA8wEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8gEAAAAAAADyAQAAAAAAAAAAAAAAAPC/"
				],
				[
					431,
					1,
					"insert",
					{
						"characters": " HashMap::new"
					},
					"DQAAAPMBAAAAAAAA9AEAAAAAAAAAAAAA9AEAAAAAAAD1AQAAAAAAAAAAAAD1AQAAAAAAAPYBAAAAAAAAAAAAAPYBAAAAAAAA9wEAAAAAAAAAAAAA9wEAAAAAAAD4AQAAAAAAAAAAAAD4AQAAAAAAAPkBAAAAAAAAAAAAAPkBAAAAAAAA+gEAAAAAAAAAAAAA+gEAAAAAAAD7AQAAAAAAAAAAAAD7AQAAAAAAAPwBAAAAAAAAAAAAAPwBAAAAAAAA/QEAAAAAAAAAAAAA/QEAAAAAAAD+AQAAAAAAAAAAAAD+AQAAAAAAAP8BAAAAAAAAAAAAAP8BAAAAAAAAAAIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8wEAAAAAAADzAQAAAAAAAAAAAAAAAPC/"
				],
				[
					432,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAAACAAAAAAAAAgIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAIAAAAAAAAAAgAAAAAAAAAAAAAAAPC/"
				],
				[
					434,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAAICAAAAAAAAAwIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAgIAAAAAAAACAgAAAAAAAAAAAAAAAPC/"
				],
				[
					441,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAFkBAAAAAAAAWgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWQEAAAAAAABZAQAAAAAAAAAAAAAAAPC/"
				],
				[
					442,
					1,
					"insert",
					{
						"characters": " uniforms:"
					},
					"CgAAAFoBAAAAAAAAWwEAAAAAAAAAAAAAWwEAAAAAAABcAQAAAAAAAAAAAABcAQAAAAAAAF0BAAAAAAAAAAAAAF0BAAAAAAAAXgEAAAAAAAAAAAAAXgEAAAAAAABfAQAAAAAAAAAAAABfAQAAAAAAAGABAAAAAAAAAAAAAGABAAAAAAAAYQEAAAAAAAAAAAAAYQEAAAAAAABiAQAAAAAAAAAAAABiAQAAAAAAAGMBAAAAAAAAAAAAAGMBAAAAAAAAZAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWgEAAAAAAABaAQAAAAAAAAAAAAAAAPC/"
				],
				[
					443,
					1,
					"insert",
					{
						"characters": " HashMap<S"
					},
					"CgAAAGQBAAAAAAAAZQEAAAAAAAAAAAAAZQEAAAAAAABmAQAAAAAAAAAAAABmAQAAAAAAAGcBAAAAAAAAAAAAAGcBAAAAAAAAaAEAAAAAAAAAAAAAaAEAAAAAAABpAQAAAAAAAAAAAABpAQAAAAAAAGoBAAAAAAAAAAAAAGoBAAAAAAAAawEAAAAAAAAAAAAAawEAAAAAAABsAQAAAAAAAAAAAABsAQAAAAAAAG0BAAAAAAAAAAAAAG0BAAAAAAAAbgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZAEAAAAAAABkAQAAAAAAAAAAAAAAAPC/"
				],
				[
					444,
					1,
					"insert",
					{
						"characters": "tring,"
					},
					"BgAAAG4BAAAAAAAAbwEAAAAAAAAAAAAAbwEAAAAAAABwAQAAAAAAAAAAAABwAQAAAAAAAHEBAAAAAAAAAAAAAHEBAAAAAAAAcgEAAAAAAAAAAAAAcgEAAAAAAABzAQAAAAAAAAAAAABzAQAAAAAAAHQBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbgEAAAAAAABuAQAAAAAAAAAAAAAAAPC/"
				],
				[
					450,
					1,
					"insert",
					{
						"characters": "&"
					},
					"AQAAAOAAAAAAAAAA4QAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4AAAAAAAAADgAAAAAAAAAAAAAAAAAPC/"
				],
				[
					456,
					1,
					"insert",
					{
						"characters": "&"
					},
					"AQAAAGYBAAAAAAAAZwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZgEAAAAAAABmAQAAAAAAAAAAAAAAAPC/"
				],
				[
					458,
					1,
					"insert",
					{
						"characters": " Unifo"
					},
					"BgAAAHYBAAAAAAAAdwEAAAAAAAAAAAAAdwEAAAAAAAB4AQAAAAAAAAAAAAB4AQAAAAAAAHkBAAAAAAAAAAAAAHkBAAAAAAAAegEAAAAAAAAAAAAAegEAAAAAAAB7AQAAAAAAAAAAAAB7AQAAAAAAAHwBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdgEAAAAAAAB2AQAAAAAAAAAAAAAAAPC/"
				],
				[
					459,
					1,
					"insert_completion",
					{
						"completion": "UniformData",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "UniformData"
					},
					"AgAAAHcBAAAAAAAAdwEAAAAAAAAFAAAAVW5pZm93AQAAAAAAAIIBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfAEAAAAAAAB8AQAAAAAAAAAAAAAAAPC/"
				],
				[
					460,
					1,
					"insert",
					{
						"characters": ">"
					},
					"AQAAAIIBAAAAAAAAgwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAggEAAAAAAACCAQAAAAAAAAAAAAAAAPC/"
				],
				[
					461,
					1,
					"rust_fmt_format_buffer",
					null,
					"BQAAACwBAAAAAAAANQEAAAAAAAAAAAAAPwEAAAAAAABHAQAAAAAAAAAAAABYAQAAAAAAAGABAAAAAAAAAAAAAHQBAAAAAAAAfAEAAAAAAAAAAAAApAEAAAAAAACqAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgwEAAAAAAACDAQAAAAAAAAAAAAAAAPC/"
				],
				[
					466,
					1,
					"insert",
					{
						"characters": "uniforms"
					},
					"CQAAAEUCAAAAAAAARgIAAAAAAAAAAAAARgIAAAAAAABGAgAAAAAAAA4AAABIYXNoTWFwOjpuZXcoKUYCAAAAAAAARwIAAAAAAAAAAAAARwIAAAAAAABIAgAAAAAAAAAAAABIAgAAAAAAAEkCAAAAAAAAAAAAAEkCAAAAAAAASgIAAAAAAAAAAAAASgIAAAAAAABLAgAAAAAAAAAAAABLAgAAAAAAAEwCAAAAAAAAAAAAAEwCAAAAAAAATQIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUwIAAAAAAABFAgAAAAAAAAAAAAAAAPC/"
				],
				[
					470,
					1,
					"cut",
					null,
					"AQAAAHUBAAAAAAAAdQEAAAAAAAAxAAAAICAgICAgICB1bmlmb3JtczogJkhhc2hNYXA8U3RyaW5nLCBVbmlmb3JtRGF0YT4sCg",
					"AQAAAAAAAAABAAAAkwEAAAAAAACTAQAAAAAAAAAAAAAAAGtA"
				],
				[
					475,
					1,
					"left_delete",
					null,
					"AQAAABQCAAAAAAAAFAIAAAAAAAAIAAAAdW5pZm9ybXM",
					"AQAAAAAAAAABAAAAHAIAAAAAAAAUAgAAAAAAAAAAAAAAAPC/"
				],
				[
					476,
					1,
					"insert",
					{
						"characters": "&shder."
					},
					"BwAAABQCAAAAAAAAFQIAAAAAAAAAAAAAFQIAAAAAAAAWAgAAAAAAAAAAAAAWAgAAAAAAABcCAAAAAAAAAAAAABcCAAAAAAAAGAIAAAAAAAAAAAAAGAIAAAAAAAAZAgAAAAAAAAAAAAAZAgAAAAAAABoCAAAAAAAAAAAAABoCAAAAAAAAGwIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFAIAAAAAAAAUAgAAAAAAAAAAAAAAAPC/"
				],
				[
					479,
					1,
					"insert",
					{
						"characters": "shader"
					},
					"BwAAABUCAAAAAAAAFgIAAAAAAAAAAAAAFgIAAAAAAAAWAgAAAAAAAAUAAABzaGRlchYCAAAAAAAAFwIAAAAAAAAAAAAAFwIAAAAAAAAYAgAAAAAAAAAAAAAYAgAAAAAAABkCAAAAAAAAAAAAABkCAAAAAAAAGgIAAAAAAAAAAAAAGgIAAAAAAAAbAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGgIAAAAAAAAVAgAAAAAAAAAAAAAAAPC/"
				],
				[
					481,
					1,
					"insert",
					{
						"characters": "uniforms"
					},
					"CAAAABwCAAAAAAAAHQIAAAAAAAAAAAAAHQIAAAAAAAAeAgAAAAAAAAAAAAAeAgAAAAAAAB8CAAAAAAAAAAAAAB8CAAAAAAAAIAIAAAAAAAAAAAAAIAIAAAAAAAAhAgAAAAAAAAAAAAAhAgAAAAAAACICAAAAAAAAAAAAACICAAAAAAAAIwIAAAAAAAAAAAAAIwIAAAAAAAAkAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHAIAAAAAAAAcAgAAAAAAAAAAAAAAAPC/"
				],
				[
					482,
					1,
					"rust_fmt_format_buffer",
					null,
					"BAAAACwBAAAAAAAALAEAAAAAAAAJAAAACiAgICAgICAgNgEAAAAAAAA2AQAAAAAAAAgAAAAKICAgICAgIEcBAAAAAAAARwEAAAAAAAAIAAAACiAgICAgICBaAQAAAAAAAFoBAAAAAAAABgAAACwKICAgIA",
					"AQAAAAAAAAABAAAAJAIAAAAAAAAkAgAAAAAAAAAAAAAAAPC/"
				],
				[
					486,
					1,
					"insert",
					{
						"characters": "<"
					},
					"AQAAAIQAAAAAAAAAhQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhAAAAAAAAACEAAAAAAAAAAAAAAAAAPC/"
				],
				[
					487,
					1,
					"insert_snippet",
					{
						"contents": "'"
					},
					"AQAAAIUAAAAAAAAAhgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhQAAAAAAAACFAAAAAAAAAAAAAAAAAPC/"
				],
				[
					488,
					1,
					"insert",
					{
						"characters": "a>"
					},
					"AgAAAIYAAAAAAAAAhwAAAAAAAAAAAAAAhwAAAAAAAACIAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhgAAAAAAAACGAAAAAAAAAAAAAAAAAPC/"
				],
				[
					492,
					1,
					"insert_snippet",
					{
						"contents": "'"
					},
					"AQAAAOUAAAAAAAAA5gAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5QAAAAAAAADlAAAAAAAAAAAAAAAAAPC/"
				],
				[
					493,
					1,
					"insert",
					{
						"characters": "{"
					},
					"AQAAAOYAAAAAAAAA5wAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5gAAAAAAAADmAAAAAAAAAAAAAAAAAPC/"
				],
				[
					494,
					1,
					"left_delete",
					null,
					"AQAAAOYAAAAAAAAA5gAAAAAAAAABAAAAew",
					"AQAAAAAAAAABAAAA5wAAAAAAAADnAAAAAAAAAAAAAAAAAPC/"
				],
				[
					495,
					1,
					"insert",
					{
						"characters": "a"
					},
					"AQAAAOYAAAAAAAAA5wAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5gAAAAAAAADmAAAAAAAAAAAAAAAAAPC/"
				],
				[
					496,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOcAAAAAAAAA6AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5wAAAAAAAADnAAAAAAAAAAAAAAAAAPC/"
				],
				[
					505,
					4,
					"left_delete",
					null,
					"BAAAAIcAAAAAAAAAhwAAAAAAAAABAAAAPoYAAAAAAAAAhgAAAAAAAAABAAAAYYUAAAAAAAAAhQAAAAAAAAABAAAAJ4QAAAAAAAAAhAAAAAAAAAABAAAAPA",
					"AQAAAAAAAAABAAAAiAAAAAAAAACIAAAAAAAAAAAAAAAAAPC/"
				],
				[
					509,
					4,
					"left_delete",
					null,
					"BAAAAOMAAAAAAAAA4wAAAAAAAAABAAAAIOIAAAAAAAAA4gAAAAAAAAABAAAAYeEAAAAAAAAA4QAAAAAAAAABAAAAJ+AAAAAAAAAA4AAAAAAAAAABAAAAJg",
					"AQAAAAAAAAABAAAA5AAAAAAAAADkAAAAAAAAAAAAAAAAAPC/"
				],
				[
					516,
					1,
					"left_delete",
					null,
					"AQAAAPQBAAAAAAAA9AEAAAAAAAABAAAAJg",
					"AQAAAAAAAAABAAAA9QEAAAAAAAD1AQAAAAAAAAAAAAAAAPC/"
				],
				[
					519,
					1,
					"insert",
					{
						"characters": ".clone()"
					},
					"CAAAAAMCAAAAAAAABAIAAAAAAAAAAAAABAIAAAAAAAAFAgAAAAAAAAAAAAAFAgAAAAAAAAYCAAAAAAAAAAAAAAYCAAAAAAAABwIAAAAAAAAAAAAABwIAAAAAAAAIAgAAAAAAAAAAAAAIAgAAAAAAAAkCAAAAAAAAAAAAAAkCAAAAAAAACgIAAAAAAAAAAAAACgIAAAAAAAALAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAwIAAAAAAAADAgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "gengar_engine/src/engine/error.rs",
			"settings":
			{
				"buffer_size": 452,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAAEIAAAAAAAAAQwAAAAAAAAAAAAAAQwAAAAAAAABHAAAAAAAAAAAAAABHAAAAAAAAAEgAAAAAAAAAAAAAAEgAAAAAAAAATAAAAAAAAAAAAAAAQwAAAAAAAABDAAAAAAAAAAQAAAAgICAg",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAQgAAAAAAAABCAAAAAAAAAP///////+9/"
				],
				[
					4,
					1,
					"insert",
					{
						"characters": "C"
					},
					"AQAAAEgAAAAAAAAASQAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAASAAAAAAAAABIAAAAAAAAAAAAAAAAAPC/"
				],
				[
					5,
					1,
					"left_delete",
					null,
					"AQAAAEgAAAAAAAAASAAAAAAAAAABAAAAQw",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAASQAAAAAAAABJAAAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					1,
					"insert",
					{
						"characters": "CompileShader"
					},
					"DQAAAEgAAAAAAAAASQAAAAAAAAAAAAAASQAAAAAAAABKAAAAAAAAAAAAAABKAAAAAAAAAEsAAAAAAAAAAAAAAEsAAAAAAAAATAAAAAAAAAAAAAAATAAAAAAAAABNAAAAAAAAAAAAAABNAAAAAAAAAE4AAAAAAAAAAAAAAE4AAAAAAAAATwAAAAAAAAAAAAAATwAAAAAAAABQAAAAAAAAAAAAAABQAAAAAAAAAFEAAAAAAAAAAAAAAFEAAAAAAAAAUgAAAAAAAAAAAAAAUgAAAAAAAABTAAAAAAAAAAAAAABTAAAAAAAAAFQAAAAAAAAAAAAAAFQAAAAAAAAAVQAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAASAAAAAAAAABIAAAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAFUAAAAAAAAAVwAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAVQAAAAAAAABVAAAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					1,
					"insert",
					{
						"characters": "String"
					},
					"BgAAAFYAAAAAAAAAVwAAAAAAAAAAAAAAVwAAAAAAAABYAAAAAAAAAAAAAABYAAAAAAAAAFkAAAAAAAAAAAAAAFkAAAAAAAAAWgAAAAAAAAAAAAAAWgAAAAAAAABbAAAAAAAAAAAAAABbAAAAAAAAAFwAAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAVgAAAAAAAABWAAAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					1,
					"insert",
					{
						"characters": "Ver"
					},
					"BAAAAFQAAAAAAAAAVQAAAAAAAAAAAAAAVQAAAAAAAABVAAAAAAAAAAEAAAByVQAAAAAAAABWAAAAAAAAAAAAAABWAAAAAAAAAFcAAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAVQAAAAAAAABUAAAAAAAAAAAAAAAAAPC/"
				],
				[
					13,
					1,
					"insert",
					{
						"characters": "Vert"
					},
					"BQAAAEgAAAAAAAAASQAAAAAAAAAAAAAASQAAAAAAAABJAAAAAAAAAA8AAABDb21waWxlU2hhZGVWZXJJAAAAAAAAAEoAAAAAAAAAAAAAAEoAAAAAAAAASwAAAAAAAAAAAAAASwAAAAAAAABMAAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAVwAAAAAAAABIAAAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					1,
					"insert",
					{
						"characters": "Shader"
					},
					"BwAAAEgAAAAAAAAASQAAAAAAAAAAAAAASQAAAAAAAABJAAAAAAAAAAQAAABWZXJ0SQAAAAAAAABKAAAAAAAAAAAAAABKAAAAAAAAAEsAAAAAAAAAAAAAAEsAAAAAAAAATAAAAAAAAAAAAAAATAAAAAAAAABNAAAAAAAAAAAAAABNAAAAAAAAAE4AAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAATAAAAAAAAABIAAAAAAAAAAAAAAAAAPC/"
				],
				[
					16,
					6,
					"left_delete",
					null,
					"BgAAAE0AAAAAAAAATQAAAAAAAAABAAAAckwAAAAAAAAATAAAAAAAAAABAAAAZUsAAAAAAAAASwAAAAAAAAABAAAAZEoAAAAAAAAASgAAAAAAAAABAAAAYUkAAAAAAAAASQAAAAAAAAABAAAAaEgAAAAAAAAASAAAAAAAAAABAAAAUw",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAATgAAAAAAAABOAAAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": "Compilehader"
					},
					"DAAAAEgAAAAAAAAASQAAAAAAAAAAAAAASQAAAAAAAABKAAAAAAAAAAAAAABKAAAAAAAAAEsAAAAAAAAAAAAAAEsAAAAAAAAATAAAAAAAAAAAAAAATAAAAAAAAABNAAAAAAAAAAAAAABNAAAAAAAAAE4AAAAAAAAAAAAAAE4AAAAAAAAATwAAAAAAAAAAAAAATwAAAAAAAABQAAAAAAAAAAAAAABQAAAAAAAAAFEAAAAAAAAAAAAAAFEAAAAAAAAAUgAAAAAAAAAAAAAAUgAAAAAAAABTAAAAAAAAAAAAAABTAAAAAAAAAFQAAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAASAAAAAAAAABIAAAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": "Shder"
					},
					"BgAAAEgAAAAAAAAASQAAAAAAAAAAAAAASQAAAAAAAABJAAAAAAAAAAwAAABDb21waWxlaGFkZXJJAAAAAAAAAEoAAAAAAAAAAAAAAEoAAAAAAAAASwAAAAAAAAAAAAAASwAAAAAAAABMAAAAAAAAAAAAAABMAAAAAAAAAE0AAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAVAAAAAAAAABIAAAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					3,
					"left_delete",
					null,
					"AwAAAEwAAAAAAAAATAAAAAAAAAABAAAAcksAAAAAAAAASwAAAAAAAAABAAAAZUoAAAAAAAAASgAAAAAAAAABAAAAZA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAATQAAAAAAAABNAAAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": "aderCompilation"
					},
					"DwAAAEoAAAAAAAAASwAAAAAAAAAAAAAASwAAAAAAAABMAAAAAAAAAAAAAABMAAAAAAAAAE0AAAAAAAAAAAAAAE0AAAAAAAAATgAAAAAAAAAAAAAATgAAAAAAAABPAAAAAAAAAAAAAABPAAAAAAAAAFAAAAAAAAAAAAAAAFAAAAAAAAAAUQAAAAAAAAAAAAAAUQAAAAAAAABSAAAAAAAAAAAAAABSAAAAAAAAAFMAAAAAAAAAAAAAAFMAAAAAAAAAVAAAAAAAAAAAAAAAVAAAAAAAAABVAAAAAAAAAAAAAABVAAAAAAAAAFYAAAAAAAAAAAAAAFYAAAAAAAAAVwAAAAAAAAAAAAAAVwAAAAAAAABYAAAAAAAAAAAAAABYAAAAAAAAAFkAAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAASgAAAAAAAABKAAAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					1,
					"rust_fmt_format_buffer",
					null,
					"AQAAAGEAAAAAAAAAYgAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAWQAAAAAAAABZAAAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAEMAAAAAAAAARAAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAQwAAAAAAAABDAAAAAAAAAP///////+9/"
				],
				[
					30,
					1,
					"cut",
					null,
					"AQAAAEQAAAAAAAAARAAAAAAAAAABAAAACg",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAARAAAAAAAAABEAAAAAAAAAAAAAAAAAPC/"
				],
				[
					38,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAEMAAAAAAAAARAAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAQwAAAAAAAABDAAAAAAAAAAAAAAAAAAAA"
				],
				[
					39,
					1,
					"reindent",
					null,
					"AQAAAEQAAAAAAAAASAAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAARAAAAAAAAABEAAAAAAAAAAAAAAAAAPC/"
				],
				[
					40,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAEgAAAAAAAAASQAAAAAAAAAAAAAASQAAAAAAAABKAAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAASAAAAAAAAABIAAAAAAAAAAAAAAAAAPC/"
				],
				[
					43,
					1,
					"insert",
					{
						"characters": " testing"
					},
					"CAAAAEoAAAAAAAAASwAAAAAAAAAAAAAASwAAAAAAAABMAAAAAAAAAAAAAABMAAAAAAAAAE0AAAAAAAAAAAAAAE0AAAAAAAAATgAAAAAAAAAAAAAATgAAAAAAAABPAAAAAAAAAAAAAABPAAAAAAAAAFAAAAAAAAAAAAAAAFAAAAAAAAAAUQAAAAAAAAAAAAAAUQAAAAAAAABSAAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAASgAAAAAAAABKAAAAAAAAAAAAAAAAgEVA"
				],
				[
					45,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAEMAAAAAAAAARAAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAQwAAAAAAAABDAAAAAAAAAAAAAAAAQFlA"
				],
				[
					46,
					1,
					"rust_fmt_format_buffer",
					null,
					"AQAAAEQAAAAAAAAARAAAAAAAAAABAAAACg",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAARAAAAAAAAABEAAAAAAAAAAAAAAAAAPC/"
				],
				[
					50,
					1,
					"insert",
					{
						"characters": "String"
					},
					"BwAAAEsAAAAAAAAATAAAAAAAAAAAAAAATAAAAAAAAABMAAAAAAAAAAcAAAB0ZXN0aW5nTAAAAAAAAABNAAAAAAAAAAAAAABNAAAAAAAAAE4AAAAAAAAAAAAAAE4AAAAAAAAATwAAAAAAAAAAAAAATwAAAAAAAABQAAAAAAAAAAAAAABQAAAAAAAAAFEAAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAUgAAAAAAAABLAAAAAAAAAAAAAAAAAPC/"
				],
				[
					51,
					1,
					"insert",
					{
						"characters": " error"
					},
					"BgAAAFEAAAAAAAAAUgAAAAAAAAAAAAAAUgAAAAAAAABTAAAAAAAAAAAAAABTAAAAAAAAAFQAAAAAAAAAAAAAAFQAAAAAAAAAVQAAAAAAAAAAAAAAVQAAAAAAAABWAAAAAAAAAAAAAABWAAAAAAAAAFcAAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAUQAAAAAAAABRAAAAAAAAAAAAAAAAAPC/"
				],
				[
					57,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAAAAAAAAAAAAAQAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
				],
				[
					59,
					1,
					"insert",
					{
						"characters": "#"
					},
					"AQAAAAAAAAAAAAAAAQAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
				],
				[
					60,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAAEAAAAAAAAAAwAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAQAAAAAAAAABAAAAAAAAAAAAAAAAAPC/"
				],
				[
					61,
					1,
					"insert",
					{
						"characters": "derivew\"e"
					},
					"CQAAAAIAAAAAAAAAAwAAAAAAAAAAAAAAAwAAAAAAAAAEAAAAAAAAAAAAAAAEAAAAAAAAAAUAAAAAAAAAAAAAAAUAAAAAAAAABgAAAAAAAAAAAAAABgAAAAAAAAAHAAAAAAAAAAAAAAAHAAAAAAAAAAgAAAAAAAAAAAAAAAgAAAAAAAAACQAAAAAAAAAAAAAACQAAAAAAAAAKAAAAAAAAAAAAAAAKAAAAAAAAAAsAAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAgAAAAAAAAACAAAAAAAAAAAAAAAAAPC/"
				],
				[
					62,
					3,
					"left_delete",
					null,
					"AwAAAAoAAAAAAAAACgAAAAAAAAABAAAAZQkAAAAAAAAACQAAAAAAAAABAAAAIggAAAAAAAAACAAAAAAAAAABAAAAdw",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAACwAAAAAAAAALAAAAAAAAAAAAAAAAAPC/"
				],
				[
					63,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAAgAAAAAAAAACgAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAACAAAAAAAAAAIAAAAAAAAAAAAAAAAAPC/"
				],
				[
					64,
					1,
					"insert",
					{
						"characters": "debug"
					},
					"BQAAAAkAAAAAAAAACgAAAAAAAAAAAAAACgAAAAAAAAALAAAAAAAAAAAAAAALAAAAAAAAAAwAAAAAAAAAAAAAAAwAAAAAAAAADQAAAAAAAAAAAAAADQAAAAAAAAAOAAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAACQAAAAAAAAAJAAAAAAAAAAAAAAAAAPC/"
				],
				[
					68,
					1,
					"insert",
					{
						"characters": "Debug"
					},
					"BgAAAAkAAAAAAAAACgAAAAAAAAAAAAAACgAAAAAAAAAKAAAAAAAAAAUAAABkZWJ1ZwoAAAAAAAAACwAAAAAAAAAAAAAACwAAAAAAAAAMAAAAAAAAAAAAAAAMAAAAAAAAAA0AAAAAAAAAAAAAAA0AAAAAAAAADgAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAADgAAAAAAAAAJAAAAAAAAAAAAAAAAAPC/"
				],
				[
					73,
					1,
					"paste",
					null,
					"AgAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAjW2Rlcml2ZShEZWJ1Zyld",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
				],
				[
					77,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAIoAAAAAAAAAiwAAAAAAAAAAAAAAiwAAAAAAAACMAAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAigAAAAAAAACKAAAAAAAAAAAAAAAAAPC/"
				],
				[
					78,
					1,
					"left_delete",
					null,
					"AQAAAIsAAAAAAAAAiwAAAAAAAAABAAAACg",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAjAAAAAAAAACMAAAAAAAAAAAAAAAAAPC/"
				],
				[
					79,
					1,
					"insert",
					{
						"characters": "impl"
					},
					"BAAAAIsAAAAAAAAAjAAAAAAAAAAAAAAAjAAAAAAAAACNAAAAAAAAAAAAAACNAAAAAAAAAI4AAAAAAAAAAAAAAI4AAAAAAAAAjwAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAiwAAAAAAAACLAAAAAAAAAAAAAAAAAPC/"
				],
				[
					82,
					1,
					"insert",
					{
						"characters": " From<Er"
					},
					"CAAAAI8AAAAAAAAAkAAAAAAAAAAAAAAAkAAAAAAAAACRAAAAAAAAAAAAAACRAAAAAAAAAJIAAAAAAAAAAAAAAJIAAAAAAAAAkwAAAAAAAAAAAAAAkwAAAAAAAACUAAAAAAAAAAAAAACUAAAAAAAAAJUAAAAAAAAAAAAAAJUAAAAAAAAAlgAAAAAAAAAAAAAAlgAAAAAAAACXAAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAjwAAAAAAAACPAAAAAAAAAAAAAAAAAPC/"
				],
				[
					83,
					2,
					"left_delete",
					null,
					"AgAAAJYAAAAAAAAAlgAAAAAAAAABAAAAcpUAAAAAAAAAlQAAAAAAAAABAAAARQ",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAlwAAAAAAAACXAAAAAAAAAAAAAAAAAPC/"
				],
				[
					84,
					1,
					"insert",
					{
						"characters": ">"
					},
					"AQAAAJUAAAAAAAAAlgAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAlQAAAAAAAACVAAAAAAAAAAAAAAAAAPC/"
				],
				[
					85,
					1,
					"insert",
					{
						"characters": " fo"
					},
					"AwAAAJYAAAAAAAAAlwAAAAAAAAAAAAAAlwAAAAAAAACYAAAAAAAAAAAAAACYAAAAAAAAAJkAAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAlgAAAAAAAACWAAAAAAAAAAAAAAAAAPC/"
				],
				[
					86,
					1,
					"insert",
					{
						"characters": " Err"
					},
					"BAAAAJkAAAAAAAAAmgAAAAAAAAAAAAAAmgAAAAAAAACbAAAAAAAAAAAAAACbAAAAAAAAAJwAAAAAAAAAAAAAAJwAAAAAAAAAnQAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAmQAAAAAAAACZAAAAAAAAAAAAAAAAAPC/"
				],
				[
					87,
					4,
					"left_delete",
					null,
					"BAAAAJwAAAAAAAAAnAAAAAAAAAABAAAAcpsAAAAAAAAAmwAAAAAAAAABAAAAcpoAAAAAAAAAmgAAAAAAAAABAAAARZkAAAAAAAAAmQAAAAAAAAABAAAAIA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAnQAAAAAAAACdAAAAAAAAAAAAAAAAAPC/"
				],
				[
					88,
					1,
					"insert",
					{
						"characters": "r"
					},
					"AQAAAJkAAAAAAAAAmgAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAmQAAAAAAAACZAAAAAAAAAAAAAAAAAPC/"
				],
				[
					89,
					1,
					"insert",
					{
						"characters": " Error"
					},
					"BgAAAJoAAAAAAAAAmwAAAAAAAAAAAAAAmwAAAAAAAACcAAAAAAAAAAAAAACcAAAAAAAAAJ0AAAAAAAAAAAAAAJ0AAAAAAAAAngAAAAAAAAAAAAAAngAAAAAAAACfAAAAAAAAAAAAAACfAAAAAAAAAKAAAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAmgAAAAAAAACaAAAAAAAAAAAAAAAAAPC/"
				],
				[
					90,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKAAAAAAAAAAoQAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAoAAAAAAAAACgAAAAAAAAAAAAAAAAAPC/"
				],
				[
					91,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAKEAAAAAAAAAowAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAoQAAAAAAAAChAAAAAAAAAAAAAAAAAPC/"
				],
				[
					92,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAAKIAAAAAAAAAowAAAAAAAAAAAAAAowAAAAAAAACkAAAAAAAAAAAAAACjAAAAAAAAAKcAAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAogAAAAAAAACiAAAAAAAAAAAAAAAAAPC/"
				],
				[
					97,
					1,
					"insert",
					{
						"characters": "\n/*"
					},
					"BAAAAIoAAAAAAAAAiwAAAAAAAAAAAAAApAAAAAAAAACkAAAAAAAAAAQAAAAgICAgiwAAAAAAAACMAAAAAAAAAAAAAACMAAAAAAAAAI0AAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAigAAAAAAAACKAAAAAAAAAAAAAAAAAFJA"
				],
				[
					101,
					1,
					"insert",
					{
						"characters": "\n*/"
					},
					"AwAAAKgAAAAAAAAAqQAAAAAAAAAAAAAAqQAAAAAAAACqAAAAAAAAAAAAAACqAAAAAAAAAKsAAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAqAAAAAAAAACoAAAAAAAAAP///////+9/"
				],
				[
					102,
					1,
					"rust_fmt_format_buffer",
					null,
					"AQAAAKsAAAAAAAAArAAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAqwAAAAAAAACrAAAAAAAAAAAAAAAAAPC/"
				],
				[
					105,
					1,
					"insert",
					{
						"characters": "FromBytesUntil"
					},
					"DgAAAJgAAAAAAAAAmQAAAAAAAAAAAAAAmQAAAAAAAACaAAAAAAAAAAAAAACaAAAAAAAAAJsAAAAAAAAAAAAAAJsAAAAAAAAAnAAAAAAAAAAAAAAAnAAAAAAAAACdAAAAAAAAAAAAAACdAAAAAAAAAJ4AAAAAAAAAAAAAAJ4AAAAAAAAAnwAAAAAAAAAAAAAAnwAAAAAAAACgAAAAAAAAAAAAAACgAAAAAAAAAKEAAAAAAAAAAAAAAKEAAAAAAAAAogAAAAAAAAAAAAAAogAAAAAAAACjAAAAAAAAAAAAAACjAAAAAAAAAKQAAAAAAAAAAAAAAKQAAAAAAAAApQAAAAAAAAAAAAAApQAAAAAAAACmAAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAmAAAAAAAAACYAAAAAAAAAAAAAAAAAPC/"
				],
				[
					106,
					1,
					"insert",
					{
						"characters": "Nullerror"
					},
					"CQAAAKYAAAAAAAAApwAAAAAAAAAAAAAApwAAAAAAAACoAAAAAAAAAAAAAACoAAAAAAAAAKkAAAAAAAAAAAAAAKkAAAAAAAAAqgAAAAAAAAAAAAAAqgAAAAAAAACrAAAAAAAAAAAAAACrAAAAAAAAAKwAAAAAAAAAAAAAAKwAAAAAAAAArQAAAAAAAAAAAAAArQAAAAAAAACuAAAAAAAAAAAAAACuAAAAAAAAAK8AAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAApgAAAAAAAACmAAAAAAAAAAAAAAAAAPC/"
				],
				[
					109,
					5,
					"left_delete",
					null,
					"BQAAAK4AAAAAAAAArgAAAAAAAAABAAAAcq0AAAAAAAAArQAAAAAAAAABAAAAb6wAAAAAAAAArAAAAAAAAAABAAAAcqsAAAAAAAAAqwAAAAAAAAABAAAAcqoAAAAAAAAAqgAAAAAAAAABAAAAZQ",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAArwAAAAAAAACvAAAAAAAAAAAAAAAAwG1A"
				],
				[
					110,
					1,
					"insert",
					{
						"characters": "Error"
					},
					"BQAAAKoAAAAAAAAAqwAAAAAAAAAAAAAAqwAAAAAAAACsAAAAAAAAAAAAAACsAAAAAAAAAK0AAAAAAAAAAAAAAK0AAAAAAAAArgAAAAAAAAAAAAAArgAAAAAAAACvAAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAqgAAAAAAAACqAAAAAAAAAAAAAAAAAPC/"
				],
				[
					112,
					1,
					"cut",
					null,
					"AQAAAIsAAAAAAAAAiwAAAAAAAAADAAAALyoK",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAjQAAAAAAAACNAAAAAAAAAAAAAAAAwG1A"
				],
				[
					114,
					1,
					"cut",
					null,
					"AQAAAL0AAAAAAAAAvQAAAAAAAAADAAAAKi8K",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAvQAAAAAAAAC9AAAAAAAAAAAAAAAAAAAA"
				],
				[
					115,
					1,
					"rust_fmt_format_buffer",
					null,
					"AQAAALkAAAAAAAAAuQAAAAAAAAACAAAACgo",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAvQAAAAAAAAC9AAAAAAAAAAAAAAAAAPC/"
				],
				[
					118,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAAIcAAAAAAAAAiAAAAAAAAAAAAAAAiAAAAAAAAACMAAAAAAAAAAAAAACMAAAAAAAAAI0AAAAAAAAAAAAAAI0AAAAAAAAAkQAAAAAAAAAAAAAAiAAAAAAAAACIAAAAAAAAAAQAAAAgICAg",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAhwAAAAAAAACHAAAAAAAAAP///////+9/"
				],
				[
					119,
					1,
					"rust_fmt_format_buffer",
					null,
					"AQAAAIgAAAAAAAAAiAAAAAAAAAAGAAAACiAgICAK",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAjQAAAAAAAACNAAAAAAAAAAAAAAAAAPC/"
				],
				[
					123,
					1,
					"cut",
					null,
					"AQAAAFUAAAAAAAAAVQAAAAAAAAAUAAAAICAgIC8vIFN0cmluZyBlcnJvcgo",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAaAAAAAAAAABoAAAAAAAAAP///////+9/"
				],
				[
					126,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAHMAAAAAAAAAdAAAAAAAAAAAAAAAdAAAAAAAAAB4AAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAcwAAAAAAAABzAAAAAAAAAP///////+9/"
				],
				[
					128,
					1,
					"cut",
					null,
					"AQAAACIAAAAAAAAAIgAAAAAAAAAZAAAAICAgIC8vIFN0cmluZyBmaWxlIHBhdGhzCg",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAJgAAAAAAAAAmAAAAAAAAAAAAAAAAAD1A"
				],
				[
					130,
					1,
					"insert",
					{
						"characters": " //"
					},
					"BAAAADoAAAAAAAAAOwAAAAAAAAAAAAAAXAAAAAAAAABcAAAAAAAAAAQAAAAgICAgOwAAAAAAAAA8AAAAAAAAAAAAAAA8AAAAAAAAAD0AAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAOgAAAAAAAAA6AAAAAAAAAP///////+9/"
				],
				[
					131,
					1,
					"insert",
					{
						"characters": " Strin"
					},
					"BgAAAD0AAAAAAAAAPgAAAAAAAAAAAAAAPgAAAAAAAAA/AAAAAAAAAAAAAAA/AAAAAAAAAEAAAAAAAAAAAAAAAEAAAAAAAAAAQQAAAAAAAAAAAAAAQQAAAAAAAABCAAAAAAAAAAAAAABCAAAAAAAAAEMAAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAPQAAAAAAAAA9AAAAAAAAAAAAAAAAAPC/"
				],
				[
					132,
					1,
					"insert",
					{
						"characters": " gfile"
					},
					"BgAAAEMAAAAAAAAARAAAAAAAAAAAAAAARAAAAAAAAABFAAAAAAAAAAAAAABFAAAAAAAAAEYAAAAAAAAAAAAAAEYAAAAAAAAARwAAAAAAAAAAAAAARwAAAAAAAABIAAAAAAAAAAAAAABIAAAAAAAAAEkAAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAQwAAAAAAAABDAAAAAAAAAAAAAAAAAPC/"
				],
				[
					133,
					1,
					"insert",
					{
						"characters": " path"
					},
					"BQAAAEkAAAAAAAAASgAAAAAAAAAAAAAASgAAAAAAAABLAAAAAAAAAAAAAABLAAAAAAAAAEwAAAAAAAAAAAAAAEwAAAAAAAAATQAAAAAAAAAAAAAATQAAAAAAAABOAAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAASQAAAAAAAABJAAAAAAAAAAAAAAAAAPC/"
				],
				[
					134,
					11,
					"left_delete",
					null,
					"CwAAAE0AAAAAAAAATQAAAAAAAAABAAAAaEwAAAAAAAAATAAAAAAAAAABAAAAdEsAAAAAAAAASwAAAAAAAAABAAAAYUoAAAAAAAAASgAAAAAAAAABAAAAcEkAAAAAAAAASQAAAAAAAAABAAAAIEgAAAAAAAAASAAAAAAAAAABAAAAZUcAAAAAAAAARwAAAAAAAAABAAAAbEYAAAAAAAAARgAAAAAAAAABAAAAaUUAAAAAAAAARQAAAAAAAAABAAAAZkQAAAAAAAAARAAAAAAAAAABAAAAZ0MAAAAAAAAAQwAAAAAAAAABAAAAIA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAATgAAAAAAAABOAAAAAAAAAAAAAAAAAPC/"
				],
				[
					135,
					1,
					"insert",
					{
						"characters": "gfile"
					},
					"BQAAAEMAAAAAAAAARAAAAAAAAAAAAAAARAAAAAAAAABFAAAAAAAAAAAAAABFAAAAAAAAAEYAAAAAAAAAAAAAAEYAAAAAAAAARwAAAAAAAAAAAAAARwAAAAAAAABIAAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAQwAAAAAAAABDAAAAAAAAAAAAAAAAAPC/"
				],
				[
					136,
					1,
					"insert",
					{
						"characters": " path"
					},
					"BQAAAEgAAAAAAAAASQAAAAAAAAAAAAAASQAAAAAAAABKAAAAAAAAAAAAAABKAAAAAAAAAEsAAAAAAAAAAAAAAEsAAAAAAAAATAAAAAAAAAAAAAAATAAAAAAAAABNAAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAASAAAAAAAAABIAAAAAAAAAAAAAAAAAPC/"
				],
				[
					137,
					8,
					"left_delete",
					null,
					"CAAAAEwAAAAAAAAATAAAAAAAAAABAAAAaEsAAAAAAAAASwAAAAAAAAABAAAAdEoAAAAAAAAASgAAAAAAAAABAAAAYUkAAAAAAAAASQAAAAAAAAABAAAAcEgAAAAAAAAASAAAAAAAAAABAAAAIEcAAAAAAAAARwAAAAAAAAABAAAAZUYAAAAAAAAARgAAAAAAAAABAAAAbEUAAAAAAAAARQAAAAAAAAABAAAAaQ",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAATQAAAAAAAABNAAAAAAAAAAAAAAAAAPC/"
				],
				[
					138,
					1,
					"insert",
					{
						"characters": " f"
					},
					"AgAAAEUAAAAAAAAARgAAAAAAAAAAAAAARgAAAAAAAABHAAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAARQAAAAAAAABFAAAAAAAAAAAAAAAAAPC/"
				],
				[
					139,
					3,
					"left_delete",
					null,
					"AwAAAEYAAAAAAAAARgAAAAAAAAABAAAAZkUAAAAAAAAARQAAAAAAAAABAAAAIEQAAAAAAAAARAAAAAAAAAABAAAAZg",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAARwAAAAAAAABHAAAAAAAAAAAAAAAAAPC/"
				],
				[
					140,
					1,
					"insert",
					{
						"characters": " file"
					},
					"BQAAAEQAAAAAAAAARQAAAAAAAAAAAAAARQAAAAAAAABGAAAAAAAAAAAAAABGAAAAAAAAAEcAAAAAAAAAAAAAAEcAAAAAAAAASAAAAAAAAAAAAAAASAAAAAAAAABJAAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAARAAAAAAAAABEAAAAAAAAAAAAAAAAAPC/"
				],
				[
					141,
					1,
					"insert",
					{
						"characters": " path"
					},
					"BQAAAEkAAAAAAAAASgAAAAAAAAAAAAAASgAAAAAAAABLAAAAAAAAAAAAAABLAAAAAAAAAEwAAAAAAAAAAAAAAEwAAAAAAAAATQAAAAAAAAAAAAAATQAAAAAAAABOAAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAASQAAAAAAAABJAAAAAAAAAAAAAAAAAPC/"
				],
				[
					142,
					1,
					"rust_fmt_format_buffer",
					null,
					"AQAAAG8AAAAAAAAAbwAAAAAAAAABAAAACg",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAATgAAAAAAAABOAAAAAAAAAAAAAAAAAPC/"
				],
				[
					144,
					1,
					"cut",
					null,
					"AQAAAE8AAAAAAAAATwAAAAAAAAABAAAACg",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAATwAAAAAAAABPAAAAAAAAAAAAAAAA0HNA"
				],
				[
					148,
					1,
					"insert",
					{
						"characters": " //"
					},
					"AwAAAG0AAAAAAAAAbgAAAAAAAAAAAAAAbgAAAAAAAABvAAAAAAAAAAAAAABvAAAAAAAAAHAAAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAbQAAAAAAAABtAAAAAAAAAP///////+9/"
				],
				[
					149,
					1,
					"insert",
					{
						"characters": " String"
					},
					"BwAAAHAAAAAAAAAAcQAAAAAAAAAAAAAAcQAAAAAAAAByAAAAAAAAAAAAAAByAAAAAAAAAHMAAAAAAAAAAAAAAHMAAAAAAAAAdAAAAAAAAAAAAAAAdAAAAAAAAAB1AAAAAAAAAAAAAAB1AAAAAAAAAHYAAAAAAAAAAAAAAHYAAAAAAAAAdwAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAcAAAAAAAAABwAAAAAAAAAAAAAAAAAPC/"
				],
				[
					150,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHcAAAAAAAAAeAAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAdwAAAAAAAAB3AAAAAAAAAAAAAAAAAPC/"
				],
				[
					154,
					1,
					"left_delete",
					null,
					"AQAAADsAAAAAAAAAOwAAAAAAAAATAAAALy8gU3RyaW5nIGZpbGUgcGF0aA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAOwAAAAAAAABOAAAAAAAAAP///////+9/"
				],
				[
					158,
					5,
					"left_delete",
					null,
					"BQAAAF4AAAAAAAAAXgAAAAAAAAAHAAAAU3RyaW5nIF0AAAAAAAAAXQAAAAAAAAABAAAAIFwAAAAAAAAAXAAAAAAAAAABAAAAL1sAAAAAAAAAWwAAAAAAAAABAAAAL1oAAAAAAAAAWgAAAAAAAAABAAAAIA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAZQAAAAAAAABeAAAAAAAAAAAAAAAAAPC/"
				],
				[
					159,
					1,
					"rust_fmt_format_buffer",
					null,
					"AQAAADoAAAAAAAAAOgAAAAAAAAABAAAAIA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAWgAAAAAAAABaAAAAAAAAAAAAAAAAAPC/"
				],
				[
					163,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAAIsAAAAAAAAAjAAAAAAAAAAAAAAAjAAAAAAAAACNAAAAAAAAAAAAAACMAAAAAAAAAJAAAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAiwAAAAAAAACLAAAAAAAAAAAAAAAAAPC/"
				],
				[
					164,
					1,
					"insert",
					{
						"characters": "fn"
					},
					"AgAAAJAAAAAAAAAAkQAAAAAAAAAAAAAAkQAAAAAAAACSAAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAkAAAAAAAAACQAAAAAAAAAAAAAAAAAPC/"
				],
				[
					165,
					1,
					"insert",
					{
						"characters": " from"
					},
					"BQAAAJIAAAAAAAAAkwAAAAAAAAAAAAAAkwAAAAAAAACUAAAAAAAAAAAAAACUAAAAAAAAAJUAAAAAAAAAAAAAAJUAAAAAAAAAlgAAAAAAAAAAAAAAlgAAAAAAAACXAAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAkgAAAAAAAACSAAAAAAAAAAAAAAAAAPC/"
				],
				[
					166,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJcAAAAAAAAAmQAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAlwAAAAAAAACXAAAAAAAAAAAAAAAAAPC/"
				],
				[
					167,
					1,
					"insert",
					{
						"characters": "error:"
					},
					"BgAAAJgAAAAAAAAAmQAAAAAAAAAAAAAAmQAAAAAAAACaAAAAAAAAAAAAAACaAAAAAAAAAJsAAAAAAAAAAAAAAJsAAAAAAAAAnAAAAAAAAAAAAAAAnAAAAAAAAACdAAAAAAAAAAAAAACdAAAAAAAAAJ4AAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAmAAAAAAAAACYAAAAAAAAAAAAAAAAAPC/"
				],
				[
					168,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJ4AAAAAAAAAnwAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAngAAAAAAAACeAAAAAAAAAAAAAAAAAPC/"
				],
				[
					182,
					1,
					"paste",
					null,
					"AQAAAJ8AAAAAAAAAtgAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAnwAAAAAAAACfAAAAAAAAAAAAAAAAAPC/"
				],
				[
					184,
					1,
					"insert",
					{
						"characters": " ->"
					},
					"AwAAALcAAAAAAAAAuAAAAAAAAAAAAAAAuAAAAAAAAAC5AAAAAAAAAAAAAAC5AAAAAAAAALoAAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAtwAAAAAAAAC3AAAAAAAAAAAAAAAAAPC/"
				],
				[
					185,
					1,
					"insert",
					{
						"characters": " Self"
					},
					"BQAAALoAAAAAAAAAuwAAAAAAAAAAAAAAuwAAAAAAAAC8AAAAAAAAAAAAAAC8AAAAAAAAAL0AAAAAAAAAAAAAAL0AAAAAAAAAvgAAAAAAAAAAAAAAvgAAAAAAAAC/AAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAugAAAAAAAAC6AAAAAAAAAAAAAAAAAPC/"
				],
				[
					186,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAL8AAAAAAAAAwAAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAvwAAAAAAAAC/AAAAAAAAAAAAAAAAAPC/"
				],
				[
					187,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAMAAAAAAAAAAwgAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAwAAAAAAAAADAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					188,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAMEAAAAAAAAAwgAAAAAAAAAAAAAAwgAAAAAAAADGAAAAAAAAAAAAAADGAAAAAAAAAMcAAAAAAAAAAAAAAMcAAAAAAAAAywAAAAAAAAAAAAAAwgAAAAAAAADCAAAAAAAAAAQAAAAgICAgwgAAAAAAAADKAAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAwQAAAAAAAADBAAAAAAAAAAAAAAAAAPC/"
				],
				[
					191,
					1,
					"insert",
					{
						"characters": "\nNewEDrro"
					},
					"CwAAAFkAAAAAAAAAWgAAAAAAAAAAAAAAWgAAAAAAAABeAAAAAAAAAAAAAADHAAAAAAAAAMcAAAAAAAAACAAAACAgICAgICAgXgAAAAAAAABfAAAAAAAAAAAAAABfAAAAAAAAAGAAAAAAAAAAAAAAAGAAAAAAAAAAYQAAAAAAAAAAAAAAYQAAAAAAAABiAAAAAAAAAAAAAABiAAAAAAAAAGMAAAAAAAAAAAAAAGMAAAAAAAAAZAAAAAAAAAAAAAAAZAAAAAAAAABlAAAAAAAAAAAAAABlAAAAAAAAAGYAAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAWQAAAAAAAABZAAAAAAAAAP///////+9/"
				],
				[
					192,
					4,
					"left_delete",
					null,
					"BAAAAGUAAAAAAAAAZQAAAAAAAAABAAAAb2QAAAAAAAAAZAAAAAAAAAABAAAAcmMAAAAAAAAAYwAAAAAAAAABAAAAcmIAAAAAAAAAYgAAAAAAAAABAAAARA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAZgAAAAAAAABmAAAAAAAAAAAAAAAAAPC/"
				],
				[
					193,
					1,
					"insert",
					{
						"characters": "rror,"
					},
					"BQAAAGIAAAAAAAAAYwAAAAAAAAAAAAAAYwAAAAAAAABkAAAAAAAAAAAAAABkAAAAAAAAAGUAAAAAAAAAAAAAAGUAAAAAAAAAZgAAAAAAAAAAAAAAZgAAAAAAAABnAAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAYgAAAAAAAABiAAAAAAAAAAAAAAAAAPC/"
				],
				[
					194,
					1,
					"rust_fmt_format_buffer",
					null,
					"AQAAAM8AAAAAAAAAzwAAAAAAAAAGAAAACgogICAg",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAZwAAAAAAAABnAAAAAAAAAAAAAAAAAPC/"
				],
				[
					198,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAM8AAAAAAAAA0AAAAAAAAAAAAAAA0AAAAAAAAADUAAAAAAAAAAAAAADUAAAAAAAAANUAAAAAAAAAAAAAANUAAAAAAAAA2QAAAAAAAAAAAAAA0AAAAAAAAADQAAAAAAAAAAQAAAAgICAg0AAAAAAAAADYAAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAzwAAAAAAAADPAAAAAAAAAAAAAAAAAPC/"
				],
				[
					199,
					1,
					"insert",
					{
						"characters": "Error::New"
					},
					"CgAAANgAAAAAAAAA2QAAAAAAAAAAAAAA2QAAAAAAAADaAAAAAAAAAAAAAADaAAAAAAAAANsAAAAAAAAAAAAAANsAAAAAAAAA3AAAAAAAAAAAAAAA3AAAAAAAAADdAAAAAAAAAAAAAADdAAAAAAAAAN4AAAAAAAAAAAAAAN4AAAAAAAAA3wAAAAAAAAAAAAAA3wAAAAAAAADgAAAAAAAAAAAAAADgAAAAAAAAAOEAAAAAAAAAAAAAAOEAAAAAAAAA4gAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA2AAAAAAAAADYAAAAAAAAAAAAAAAAAPC/"
				],
				[
					200,
					1,
					"insert",
					{
						"characters": "Error"
					},
					"BQAAAOIAAAAAAAAA4wAAAAAAAAAAAAAA4wAAAAAAAADkAAAAAAAAAAAAAADkAAAAAAAAAOUAAAAAAAAAAAAAAOUAAAAAAAAA5gAAAAAAAAAAAAAA5gAAAAAAAADnAAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4gAAAAAAAADiAAAAAAAAAAAAAAAAAPC/"
				],
				[
					204,
					1,
					"insert",
					{
						"characters": "std::"
					},
					"BQAAAHUAAAAAAAAAdgAAAAAAAAAAAAAAdgAAAAAAAAB3AAAAAAAAAAAAAAB3AAAAAAAAAHgAAAAAAAAAAAAAAHgAAAAAAAAAeQAAAAAAAAAAAAAAeQAAAAAAAAB6AAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAdQAAAAAAAAB1AAAAAAAAAAAAAAAAAPC/"
				],
				[
					205,
					1,
					"insert",
					{
						"characters": "ffi::CS"
					},
					"BwAAAHoAAAAAAAAAewAAAAAAAAAAAAAAewAAAAAAAAB8AAAAAAAAAAAAAAB8AAAAAAAAAH0AAAAAAAAAAAAAAH0AAAAAAAAAfgAAAAAAAAAAAAAAfgAAAAAAAAB/AAAAAAAAAAAAAAB/AAAAAAAAAIAAAAAAAAAAAAAAAIAAAAAAAAAAgQAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAegAAAAAAAAB6AAAAAAAAAAAAAAAAAPC/"
				],
				[
					206,
					1,
					"insert",
					{
						"characters": "tr"
					},
					"AgAAAIEAAAAAAAAAggAAAAAAAAAAAAAAggAAAAAAAACDAAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAgQAAAAAAAACBAAAAAAAAAAAAAAAAAPC/"
				],
				[
					208,
					1,
					"insert",
					{
						"characters": "::"
					},
					"AgAAAIMAAAAAAAAAhAAAAAAAAAAAAAAAhAAAAAAAAACFAAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAgwAAAAAAAACDAAAAAAAAAAAAAAAAAPC/"
				],
				[
					214,
					1,
					"paste",
					null,
					"AgAAAHUAAAAAAAAAnQAAAAAAAAAAAAAAnQAAAAAAAACdAAAAAAAAACcAAABzdGQ6OmZmaTo6Q1N0cjo6RnJvbUJ5dGVzVW50aWxOdWxsRXJyb3I",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAnAAAAAAAAAB1AAAAAAAAAAAAAAAAAPC/"
				],
				[
					215,
					1,
					"rust_fmt_format_buffer",
					null,
					"AQAAAHUAAAAAAAAAdQAAAAAAAAABAAAAIA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAnQAAAAAAAACdAAAAAAAAAAAAAAAAAPC/"
				],
				[
					219,
					1,
					"insert",
					{
						"characters": "CStr"
					},
					"BQAAAH8AAAAAAAAAgAAAAAAAAAAAAAAAgAAAAAAAAACAAAAAAAAAAAUAAABjX3N0coAAAAAAAAAAgQAAAAAAAAAAAAAAgQAAAAAAAACCAAAAAAAAAAAAAACCAAAAAAAAAIMAAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAhAAAAAAAAAB/AAAAAAAAAAAAAAAAAPC/"
				],
				[
					238,
					1,
					"paste",
					null,
					"AgAAAHUAAAAAAAAAnAAAAAAAAAAAAAAAnAAAAAAAAACcAAAAAAAAACYAAABzdGQ6OmZmaTo6Q1N0cjo6RnJvbUJ5dGVzVW50aWxOdWxFcnJvcg",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAmwAAAAAAAAB1AAAAAAAAAAAAAAAAAPC/"
				],
				[
					242,
					1,
					"insert",
					{
						"characters": "CStr"
					},
					"BQAAAH8AAAAAAAAAgAAAAAAAAAAAAAAAgAAAAAAAAACAAAAAAAAAAAUAAABjX3N0coAAAAAAAAAAgQAAAAAAAAAAAAAAgQAAAAAAAACCAAAAAAAAAAAAAACCAAAAAAAAAIMAAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAhAAAAAAAAAB/AAAAAAAAAAAAAAAAAPC/"
				],
				[
					258,
					1,
					"insert",
					{
						"characters": "\n/*"
					},
					"AwAAAGoAAAAAAAAAawAAAAAAAAAAAAAAawAAAAAAAABsAAAAAAAAAAAAAABsAAAAAAAAAG0AAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAagAAAAAAAABqAAAAAAAAAAAAAAAAAFJA"
				],
				[
					263,
					1,
					"insert",
					{
						"characters": "\n*/"
					},
					"AwAAAAEBAAAAAAAAAgEAAAAAAAAAAAAAAgEAAAAAAAADAQAAAAAAAAAAAAADAQAAAAAAAAQBAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAQEAAAAAAAABAQAAAAAAAP///////+9/"
				],
				[
					269,
					2,
					"left_delete",
					null,
					"AgAAAGwAAAAAAAAAbAAAAAAAAAABAAAAKmsAAAAAAAAAawAAAAAAAAABAAAALw",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAbQAAAAAAAABtAAAAAAAAAP///////+9/"
				],
				[
					272,
					2,
					"left_delete",
					null,
					"AgAAAAEBAAAAAAAAAQEAAAAAAAABAAAALwABAAAAAAAAAAEAAAAAAAABAAAAKg",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAgEAAAAAAAACAQAAAAAAAP///////+9/"
				],
				[
					274,
					1,
					"rust_fmt_format_buffer",
					null,
					"AgAAAGsAAAAAAAAAawAAAAAAAAABAAAACv8AAAAAAAAA/wAAAAAAAAABAAAACg",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAawAAAAAAAABrAAAAAAAAAAAAAAAAAPC/"
				],
				[
					279,
					1,
					"paste",
					null,
					"AgAAAIUAAAAAAAAAmwAAAAAAAAAAAAAAmwAAAAAAAACbAAAAAAAAABYAAABGcm9tQnl0ZXNVbnRpbE51bEVycm9y",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAmwAAAAAAAACFAAAAAAAAAAAAAAAAAPC/"
				],
				[
					295,
					1,
					"paste",
					null,
					"AgAAALwAAAAAAAAA4gAAAAAAAAAAAAAA4gAAAAAAAADiAAAAAAAAABcAAABGcm9tQnl0ZXNVbnRpbE51bGxFcnJvcg",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA0wAAAAAAAAC8AAAAAAAAAAAAAAAAAPC/"
				],
				[
					320,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAGoAAAAAAAAAawAAAAAAAAAAAAAAawAAAAAAAABsAAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAagAAAAAAAABqAAAAAAAAAAAAAAAAAFJA"
				],
				[
					322,
					1,
					"insert",
					{
						"characters": "use"
					},
					"AwAAAGsAAAAAAAAAbAAAAAAAAAAAAAAAbAAAAAAAAABtAAAAAAAAAAAAAABtAAAAAAAAAG4AAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAawAAAAAAAABrAAAAAAAAAAAAAAAAAAAA"
				],
				[
					323,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAG4AAAAAAAAAbwAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAbgAAAAAAAABuAAAAAAAAAAAAAAAAAPC/"
				],
				[
					332,
					1,
					"paste",
					null,
					"AQAAAG8AAAAAAAAAfQAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAbwAAAAAAAABvAAAAAAAAAP///////+9/"
				],
				[
					333,
					1,
					"insert",
					{
						"characters": "::*;"
					},
					"BAAAAH0AAAAAAAAAfgAAAAAAAAAAAAAAfgAAAAAAAAB/AAAAAAAAAAAAAAB/AAAAAAAAAIAAAAAAAAAAAAAAAIAAAAAAAAAAgQAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAfQAAAAAAAAB9AAAAAAAAAAAAAAAAAPC/"
				],
				[
					339,
					6,
					"left_delete",
					null,
					"BgAAAHwAAAAAAAAAfAAAAAAAAAABAAAAcnsAAAAAAAAAewAAAAAAAAABAAAAdHoAAAAAAAAAegAAAAAAAAABAAAAU3kAAAAAAAAAeQAAAAAAAAABAAAAQ3gAAAAAAAAAeAAAAAAAAAABAAAAOncAAAAAAAAAdwAAAAAAAAABAAAAOg",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAfQAAAAAAAAB9AAAAAAAAAAAAAAAAAPC/"
				],
				[
					345,
					1,
					"left_delete",
					null,
					"AQAAAIcAAAAAAAAAhwAAAAAAAAAQAAAAc3RkOjpmZmk6OkNTdHI6Og",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAlwAAAAAAAACHAAAAAAAAAAAAAAAAAPC/"
				],
				[
					353,
					1,
					"left_delete",
					null,
					"AQAAAL4AAAAAAAAAvgAAAAAAAAAQAAAAc3RkOjpmZmk6OkNTdHI6Og",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAzgAAAAAAAAC+AAAAAAAAAAAAAAAAAPC/"
				],
				[
					356,
					7,
					"swap_line_up",
					null,
					"DgAAAGsAAAAAAAAAawAAAAAAAAARAAAAdXNlIHN0ZDo6ZmZpOjoqOwpqAAAAAAAAAHsAAAAAAAAAAAAAAGoAAAAAAAAAagAAAAAAAAARAAAAdXNlIHN0ZDo6ZmZpOjoqOwpoAAAAAAAAAHkAAAAAAAAAAAAAAGgAAAAAAAAAaAAAAAAAAAARAAAAdXNlIHN0ZDo6ZmZpOjoqOwpaAAAAAAAAAGsAAAAAAAAAAAAAAFoAAAAAAAAAWgAAAAAAAAARAAAAdXNlIHN0ZDo6ZmZpOjoqOwo7AAAAAAAAAEwAAAAAAAAAAAAAADsAAAAAAAAAOwAAAAAAAAARAAAAdXNlIHN0ZDo6ZmZpOjoqOwoiAAAAAAAAADMAAAAAAAAAAAAAACIAAAAAAAAAIgAAAAAAAAARAAAAdXNlIHN0ZDo6ZmZpOjoqOwoRAAAAAAAAACIAAAAAAAAAAAAAABEAAAAAAAAAEQAAAAAAAAARAAAAdXNlIHN0ZDo6ZmZpOjoqOwoAAAAAAAAAABEAAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAewAAAAAAAAB7AAAAAAAAAAAAAAAAIGFA"
				],
				[
					358,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAAAAAAAAAAAAAQAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
				],
				[
					360,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAABEAAAAAAAAAEgAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAEQAAAAAAAAARAAAAAAAAAP///////+9/"
				],
				[
					362,
					1,
					"cut",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAAABAAAACg",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					364,
					1,
					"cut",
					null,
					"AQAAAHwAAAAAAAAAfAAAAAAAAAABAAAACg",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAfAAAAAAAAAB8AAAAAAAAAAAAAAAAAPC/"
				],
				[
					372,
					1,
					"insert",
					{
						"characters": "CStringCOnver"
					},
					"DgAAAHAAAAAAAAAAcQAAAAAAAAAAAAAAcQAAAAAAAABxAAAAAAAAAAgAAABOZXdFcnJvcnEAAAAAAAAAcgAAAAAAAAAAAAAAcgAAAAAAAABzAAAAAAAAAAAAAABzAAAAAAAAAHQAAAAAAAAAAAAAAHQAAAAAAAAAdQAAAAAAAAAAAAAAdQAAAAAAAAB2AAAAAAAAAAAAAAB2AAAAAAAAAHcAAAAAAAAAAAAAAHcAAAAAAAAAeAAAAAAAAAAAAAAAeAAAAAAAAAB5AAAAAAAAAAAAAAB5AAAAAAAAAHoAAAAAAAAAAAAAAHoAAAAAAAAAewAAAAAAAAAAAAAAewAAAAAAAAB8AAAAAAAAAAAAAAB8AAAAAAAAAH0AAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAeAAAAAAAAABwAAAAAAAAAAAAAAAAAPC/"
				],
				[
					373,
					4,
					"left_delete",
					null,
					"BAAAAHwAAAAAAAAAfAAAAAAAAAABAAAAcnsAAAAAAAAAewAAAAAAAAABAAAAZXoAAAAAAAAAegAAAAAAAAABAAAAdnkAAAAAAAAAeQAAAAAAAAABAAAAbg",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAfQAAAAAAAAB9AAAAAAAAAAAAAAAAAPC/"
				],
				[
					374,
					1,
					"left_delete",
					null,
					"AQAAAHgAAAAAAAAAeAAAAAAAAAABAAAATw",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAeQAAAAAAAAB5AAAAAAAAAAAAAAAAAPC/"
				],
				[
					375,
					1,
					"insert",
					{
						"characters": "ovnr"
					},
					"BAAAAHgAAAAAAAAAeQAAAAAAAAAAAAAAeQAAAAAAAAB6AAAAAAAAAAAAAAB6AAAAAAAAAHsAAAAAAAAAAAAAAHsAAAAAAAAAfAAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAeAAAAAAAAAB4AAAAAAAAAAAAAAAAAPC/"
				],
				[
					377,
					1,
					"insert",
					{
						"characters": "FFI"
					},
					"BAAAAHAAAAAAAAAAcQAAAAAAAAAAAAAAcQAAAAAAAABxAAAAAAAAAAwAAABDU3RyaW5nQ292bnJxAAAAAAAAAHIAAAAAAAAAAAAAAHIAAAAAAAAAcwAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAfAAAAAAAAABwAAAAAAAAAAAAAAAAAPC/"
				],
				[
					378,
					3,
					"left_delete",
					null,
					"AwAAAHIAAAAAAAAAcgAAAAAAAAABAAAASXEAAAAAAAAAcQAAAAAAAAABAAAARnAAAAAAAAAAcAAAAAAAAAABAAAARg",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAcwAAAAAAAABzAAAAAAAAAAAAAAAAAPC/"
				],
				[
					379,
					1,
					"insert",
					{
						"characters": "FFI_"
					},
					"BAAAAHAAAAAAAAAAcQAAAAAAAAAAAAAAcQAAAAAAAAByAAAAAAAAAAAAAAByAAAAAAAAAHMAAAAAAAAAAAAAAHMAAAAAAAAAdAAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAcAAAAAAAAABwAAAAAAAAAAAAAAAAAPC/"
				],
				[
					380,
					1,
					"left_delete",
					null,
					"AQAAAHMAAAAAAAAAcwAAAAAAAAABAAAAXw",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAdAAAAAAAAAB0AAAAAAAAAAAAAAAAAPC/"
				],
				[
					381,
					1,
					"insert",
					{
						"characters": "C"
					},
					"AQAAAHMAAAAAAAAAdAAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAcwAAAAAAAABzAAAAAAAAAAAAAAAAAPC/"
				],
				[
					382,
					1,
					"left_delete",
					null,
					"AQAAAHMAAAAAAAAAcwAAAAAAAAABAAAAQw",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAdAAAAAAAAAB0AAAAAAAAAAAAAAAAAPC/"
				],
				[
					383,
					1,
					"insert",
					{
						"characters": "_"
					},
					"AQAAAHMAAAAAAAAAdAAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAcwAAAAAAAABzAAAAAAAAAAAAAAAAAPC/"
				],
				[
					384,
					1,
					"left_delete",
					null,
					"AQAAAHMAAAAAAAAAcwAAAAAAAAABAAAAXw",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAdAAAAAAAAAB0AAAAAAAAAAAAAAAAAPC/"
				],
				[
					385,
					1,
					"insert",
					{
						"characters": "CCon"
					},
					"BAAAAHMAAAAAAAAAdAAAAAAAAAAAAAAAdAAAAAAAAAB1AAAAAAAAAAAAAAB1AAAAAAAAAHYAAAAAAAAAAAAAAHYAAAAAAAAAdwAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAcwAAAAAAAABzAAAAAAAAAAAAAAAAAPC/"
				],
				[
					386,
					4,
					"left_delete",
					null,
					"BAAAAHYAAAAAAAAAdgAAAAAAAAABAAAAbnUAAAAAAAAAdQAAAAAAAAABAAAAb3QAAAAAAAAAdAAAAAAAAAABAAAAQ3MAAAAAAAAAcwAAAAAAAAABAAAAQw",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAdwAAAAAAAAB3AAAAAAAAAAAAAAAAAPC/"
				],
				[
					387,
					1,
					"insert",
					{
						"characters": "_Testing"
					},
					"CAAAAHMAAAAAAAAAdAAAAAAAAAAAAAAAdAAAAAAAAAB1AAAAAAAAAAAAAAB1AAAAAAAAAHYAAAAAAAAAAAAAAHYAAAAAAAAAdwAAAAAAAAAAAAAAdwAAAAAAAAB4AAAAAAAAAAAAAAB4AAAAAAAAAHkAAAAAAAAAAAAAAHkAAAAAAAAAegAAAAAAAAAAAAAAegAAAAAAAAB7AAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAcwAAAAAAAABzAAAAAAAAAAAAAAAAAPC/"
				],
				[
					392,
					1,
					"insert",
					{
						"characters": "FOr"
					},
					"BAAAAHAAAAAAAAAAcQAAAAAAAAAAAAAAcQAAAAAAAABxAAAAAAAAAAsAAABGRklfVGVzdGluZ3EAAAAAAAAAcgAAAAAAAAAAAAAAcgAAAAAAAABzAAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAewAAAAAAAABwAAAAAAAAAAAAAAAAAPC/"
				],
				[
					393,
					3,
					"left_delete",
					null,
					"AwAAAHIAAAAAAAAAcgAAAAAAAAABAAAAcnEAAAAAAAAAcQAAAAAAAAABAAAAT3AAAAAAAAAAcAAAAAAAAAABAAAARg",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAcwAAAAAAAABzAAAAAAAAAAAAAAAAAPC/"
				],
				[
					394,
					1,
					"insert",
					{
						"characters": "FFI"
					},
					"AwAAAHAAAAAAAAAAcQAAAAAAAAAAAAAAcQAAAAAAAAByAAAAAAAAAAAAAAByAAAAAAAAAHMAAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAcAAAAAAAAABwAAAAAAAAAAAAAAAAAPC/"
				],
				[
					395,
					1,
					"insert",
					{
						"characters": "Frombytes"
					},
					"CQAAAHMAAAAAAAAAdAAAAAAAAAAAAAAAdAAAAAAAAAB1AAAAAAAAAAAAAAB1AAAAAAAAAHYAAAAAAAAAAAAAAHYAAAAAAAAAdwAAAAAAAAAAAAAAdwAAAAAAAAB4AAAAAAAAAAAAAAB4AAAAAAAAAHkAAAAAAAAAAAAAAHkAAAAAAAAAegAAAAAAAAAAAAAAegAAAAAAAAB7AAAAAAAAAAAAAAB7AAAAAAAAAHwAAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAcwAAAAAAAABzAAAAAAAAAAAAAAAAAPC/"
				],
				[
					396,
					5,
					"left_delete",
					null,
					"BQAAAHsAAAAAAAAAewAAAAAAAAABAAAAc3oAAAAAAAAAegAAAAAAAAABAAAAZXkAAAAAAAAAeQAAAAAAAAABAAAAdHgAAAAAAAAAeAAAAAAAAAABAAAAeXcAAAAAAAAAdwAAAAAAAAABAAAAYg",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAfAAAAAAAAAB8AAAAAAAAAAAAAAAAAPC/"
				],
				[
					397,
					1,
					"insert",
					{
						"characters": "Byts"
					},
					"BAAAAHcAAAAAAAAAeAAAAAAAAAAAAAAAeAAAAAAAAAB5AAAAAAAAAAAAAAB5AAAAAAAAAHoAAAAAAAAAAAAAAHoAAAAAAAAAewAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAdwAAAAAAAAB3AAAAAAAAAAAAAAAAAPC/"
				],
				[
					399,
					8,
					"left_delete",
					null,
					"CAAAAHoAAAAAAAAAegAAAAAAAAABAAAAc3kAAAAAAAAAeQAAAAAAAAABAAAAdHgAAAAAAAAAeAAAAAAAAAABAAAAeXcAAAAAAAAAdwAAAAAAAAABAAAAQnYAAAAAAAAAdgAAAAAAAAABAAAAbXUAAAAAAAAAdQAAAAAAAAABAAAAb3QAAAAAAAAAdAAAAAAAAAABAAAAcnMAAAAAAAAAcwAAAAAAAAABAAAARg",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAewAAAAAAAAB7AAAAAAAAAAAAAAAAAPC/"
				],
				[
					400,
					1,
					"insert",
					{
						"characters": "StringConvert"
					},
					"DQAAAHMAAAAAAAAAdAAAAAAAAAAAAAAAdAAAAAAAAAB1AAAAAAAAAAAAAAB1AAAAAAAAAHYAAAAAAAAAAAAAAHYAAAAAAAAAdwAAAAAAAAAAAAAAdwAAAAAAAAB4AAAAAAAAAAAAAAB4AAAAAAAAAHkAAAAAAAAAAAAAAHkAAAAAAAAAegAAAAAAAAAAAAAAegAAAAAAAAB7AAAAAAAAAAAAAAB7AAAAAAAAAHwAAAAAAAAAAAAAAHwAAAAAAAAAfQAAAAAAAAAAAAAAfQAAAAAAAAB+AAAAAAAAAAAAAAB+AAAAAAAAAH8AAAAAAAAAAAAAAH8AAAAAAAAAgAAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAcwAAAAAAAABzAAAAAAAAAAAAAAAAAPC/"
				],
				[
					412,
					1,
					"paste",
					null,
					"AgAAAPcAAAAAAAAABwEAAAAAAAAAAAAABwEAAAAAAAAHAQAAAAAAAAgAAABOZXdFcnJvcg",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA/wAAAAAAAAD3AAAAAAAAAAAAAAAAAPC/"
				],
				[
					421,
					1,
					"insert",
					{
						"characters": "\nUTF8Errr"
					},
					"CgAAAIEAAAAAAAAAggAAAAAAAAAAAAAAggAAAAAAAACGAAAAAAAAAAAAAACGAAAAAAAAAIcAAAAAAAAAAAAAAIcAAAAAAAAAiAAAAAAAAAAAAAAAiAAAAAAAAACJAAAAAAAAAAAAAACJAAAAAAAAAIoAAAAAAAAAAAAAAIoAAAAAAAAAiwAAAAAAAAAAAAAAiwAAAAAAAACMAAAAAAAAAAAAAACMAAAAAAAAAI0AAAAAAAAAAAAAAI0AAAAAAAAAjgAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAgQAAAAAAAACBAAAAAAAAAAAAAAAAAGtA"
				],
				[
					422,
					2,
					"left_delete",
					null,
					"AgAAAI0AAAAAAAAAjQAAAAAAAAABAAAAcowAAAAAAAAAjAAAAAAAAAABAAAAcg",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAjgAAAAAAAACOAAAAAAAAAAAAAAAAAPC/"
				],
				[
					423,
					1,
					"insert",
					{
						"characters": "ror,"
					},
					"BAAAAIwAAAAAAAAAjQAAAAAAAAAAAAAAjQAAAAAAAACOAAAAAAAAAAAAAACOAAAAAAAAAI8AAAAAAAAAAAAAAI8AAAAAAAAAkAAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAjAAAAAAAAACMAAAAAAAAAAAAAAAAAPC/"
				],
				[
					430,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAB8BAAAAAAAAIAEAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAHwEAAAAAAAAfAQAAAAAAAAAAAAAAAAAA"
				],
				[
					431,
					1,
					"paste",
					null,
					"AQAAACABAAAAAAAAqwEAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAIAEAAAAAAAAgAQAAAAAAAAAAAAAAAPC/"
				],
				[
					438,
					1,
					"insert",
					{
						"characters": "UTF8Error"
					},
					"CgAAACoBAAAAAAAAKwEAAAAAAAAAAAAAKwEAAAAAAAArAQAAAAAAABYAAABGcm9tQnl0ZXNVbnRpbE51bEVycm9yKwEAAAAAAAAsAQAAAAAAAAAAAAAsAQAAAAAAAC0BAAAAAAAAAAAAAC0BAAAAAAAALgEAAAAAAAAAAAAALgEAAAAAAAAvAQAAAAAAAAAAAAAvAQAAAAAAADABAAAAAAAAAAAAADABAAAAAAAAMQEAAAAAAAAAAAAAMQEAAAAAAAAyAQAAAAAAAAAAAAAyAQAAAAAAADMBAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAQAEAAAAAAAAqAQAAAAAAAAAAAAAAAPC/"
				],
				[
					446,
					1,
					"paste",
					null,
					"AgAAAFQBAAAAAAAAXQEAAAAAAAAAAAAAXQEAAAAAAABdAQAAAAAAABYAAABGcm9tQnl0ZXNVbnRpbE51bEVycm9y",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAagEAAAAAAABUAQAAAAAAAAAAAAAAAPC/"
				],
				[
					453,
					1,
					"insert",
					{
						"characters": "\nuse"
					},
					"BAAAABAAAAAAAAAAEQAAAAAAAAAAAAAAEQAAAAAAAAASAAAAAAAAAAAAAAASAAAAAAAAABMAAAAAAAAAAAAAABMAAAAAAAAAFAAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAEAAAAAAAAAAQAAAAAAAAAP///////+9/"
				],
				[
					454,
					1,
					"insert",
					{
						"characters": " std::"
					},
					"BgAAABQAAAAAAAAAFQAAAAAAAAAAAAAAFQAAAAAAAAAWAAAAAAAAAAAAAAAWAAAAAAAAABcAAAAAAAAAAAAAABcAAAAAAAAAGAAAAAAAAAAAAAAAGAAAAAAAAAAZAAAAAAAAAAAAAAAZAAAAAAAAABoAAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAFAAAAAAAAAAUAAAAAAAAAAAAAAAAAPC/"
				],
				[
					455,
					1,
					"insert",
					{
						"characters": "str::"
					},
					"BQAAABoAAAAAAAAAGwAAAAAAAAAAAAAAGwAAAAAAAAAcAAAAAAAAAAAAAAAcAAAAAAAAAB0AAAAAAAAAAAAAAB0AAAAAAAAAHgAAAAAAAAAAAAAAHgAAAAAAAAAfAAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAGgAAAAAAAAAaAAAAAAAAAAAAAAAAAPC/"
				],
				[
					456,
					1,
					"insert",
					{
						"characters": "UTF8Error;"
					},
					"CgAAAB8AAAAAAAAAIAAAAAAAAAAAAAAAIAAAAAAAAAAhAAAAAAAAAAAAAAAhAAAAAAAAACIAAAAAAAAAAAAAACIAAAAAAAAAIwAAAAAAAAAAAAAAIwAAAAAAAAAkAAAAAAAAAAAAAAAkAAAAAAAAACUAAAAAAAAAAAAAACUAAAAAAAAAJgAAAAAAAAAAAAAAJgAAAAAAAAAnAAAAAAAAAAAAAAAnAAAAAAAAACgAAAAAAAAAAAAAACgAAAAAAAAAKQAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAHwAAAAAAAAAfAAAAAAAAAAAAAAAAAPC/"
				],
				[
					459,
					1,
					"insert",
					{
						"characters": "::*"
					},
					"AwAAACgAAAAAAAAAKQAAAAAAAAAAAAAAKQAAAAAAAAAqAAAAAAAAAAAAAAAqAAAAAAAAACsAAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAKAAAAAAAAAAoAAAAAAAAAAAAAAAAAPC/"
				],
				[
					465,
					1,
					"paste",
					null,
					"AgAAABUAAAAAAAAAKAAAAAAAAAAAAAAAKAAAAAAAAAAoAAAAAAAAABMAAABzdGQ6OnN0cjo6VVRGOEVycm9y",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAKAAAAAAAAAAVAAAAAAAAAAAAAAAAAPC/"
				],
				[
					471,
					1,
					"left_delete",
					null,
					"AQAAACoAAAAAAAAAKgAAAAAAAAABAAAAKg",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAKwAAAAAAAAArAAAAAAAAAAAAAAAAAPC/"
				],
				[
					472,
					1,
					"paste",
					null,
					"AQAAACoAAAAAAAAANAAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAKgAAAAAAAAAqAAAAAAAAAAAAAAAAAPC/"
				],
				[
					473,
					1,
					"rust_fmt_format_buffer",
					null,
					"AQAAADMAAAAAAAAAMwAAAAAAAAABAAAAIA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAANAAAAAAAAAA0AAAAAAAAAAAAAAAAAPC/"
				],
				[
					476,
					3,
					"left_delete",
					null,
					"AwAAAB8AAAAAAAAAHwAAAAAAAAAJAAAAVXRmOEVycm9yHgAAAAAAAAAeAAAAAAAAAAEAAAA6HQAAAAAAAAAdAAAAAAAAAAEAAAA6",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAKAAAAAAAAAAfAAAAAAAAAAAAAAAAAPC/"
				],
				[
					489,
					1,
					"paste",
					null,
					"AgAAAEMBAAAAAAAATAEAAAAAAAAAAAAATAEAAAAAAABMAQAAAAAAAAkAAABVVEY4RXJyb3I",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAQwEAAAAAAABMAQAAAAAAAAAAAAAAAPC/"
				],
				[
					494,
					1,
					"paste",
					null,
					"AgAAAG0BAAAAAAAAdgEAAAAAAAAAAAAAdgEAAAAAAAB2AQAAAAAAAAkAAABVVEY4RXJyb3I",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAbQEAAAAAAAB2AQAAAAAAAAAAAAAAAPC/"
				],
				[
					499,
					1,
					"insert",
					{
						"characters": "std;:str::"
					},
					"CgAAAEMBAAAAAAAARAEAAAAAAAAAAAAARAEAAAAAAABFAQAAAAAAAAAAAABFAQAAAAAAAEYBAAAAAAAAAAAAAEYBAAAAAAAARwEAAAAAAAAAAAAARwEAAAAAAABIAQAAAAAAAAAAAABIAQAAAAAAAEkBAAAAAAAAAAAAAEkBAAAAAAAASgEAAAAAAAAAAAAASgEAAAAAAABLAQAAAAAAAAAAAABLAQAAAAAAAEwBAAAAAAAAAAAAAEwBAAAAAAAATQEAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAQwEAAAAAAABDAQAAAAAAAAAAAAAAAPC/"
				],
				[
					513,
					10,
					"left_delete",
					null,
					"CgAAAEwBAAAAAAAATAEAAAAAAAABAAAAOksBAAAAAAAASwEAAAAAAAABAAAAOkoBAAAAAAAASgEAAAAAAAABAAAAckkBAAAAAAAASQEAAAAAAAABAAAAdEgBAAAAAAAASAEAAAAAAAABAAAAc0cBAAAAAAAARwEAAAAAAAABAAAAOkYBAAAAAAAARgEAAAAAAAABAAAAO0UBAAAAAAAARQEAAAAAAAABAAAAZEQBAAAAAAAARAEAAAAAAAABAAAAdEMBAAAAAAAAQwEAAAAAAAABAAAAcw",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAATQEAAAAAAABNAQAAAAAAAAAAAAAAAPC/"
				],
				[
					518,
					1,
					"insert",
					{
						"characters": "UT"
					},
					"AwAAAJEBAAAAAAAAkgEAAAAAAAAAAAAAkgEAAAAAAACSAQAAAAAAABAAAABGRklTdHJpbmdDb252ZXJ0kgEAAAAAAACTAQAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAoQEAAAAAAACRAQAAAAAAAAAAAAAAAPC/"
				],
				[
					519,
					1,
					"left_delete",
					null,
					"AQAAAJIBAAAAAAAAkgEAAAAAAAABAAAAVA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAkwEAAAAAAACTAQAAAAAAAAAAAAAAAPC/"
				],
				[
					520,
					1,
					"insert",
					{
						"characters": "tf8Errr"
					},
					"BwAAAJIBAAAAAAAAkwEAAAAAAAAAAAAAkwEAAAAAAACUAQAAAAAAAAAAAACUAQAAAAAAAJUBAAAAAAAAAAAAAJUBAAAAAAAAlgEAAAAAAAAAAAAAlgEAAAAAAACXAQAAAAAAAAAAAACXAQAAAAAAAJgBAAAAAAAAAAAAAJgBAAAAAAAAmQEAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAkgEAAAAAAACSAQAAAAAAAAAAAAAAAPC/"
				],
				[
					521,
					2,
					"left_delete",
					null,
					"AgAAAJgBAAAAAAAAmAEAAAAAAAABAAAAcpcBAAAAAAAAlwEAAAAAAAABAAAAcg",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAmQEAAAAAAACZAQAAAAAAAAAAAAAAAPC/"
				],
				[
					522,
					1,
					"insert",
					{
						"characters": "ror"
					},
					"AwAAAJcBAAAAAAAAmAEAAAAAAAAAAAAAmAEAAAAAAACZAQAAAAAAAAAAAACZAQAAAAAAAJoBAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAlwEAAAAAAACXAQAAAAAAAAAAAAAAAPC/"
				],
				[
					529,
					1,
					"insert",
					{
						"characters": "Utf8A"
					},
					"BgAAAJ8AAAAAAAAAoAAAAAAAAAAAAAAAoAAAAAAAAACgAAAAAAAAAAkAAABVVEY4RXJyb3KgAAAAAAAAAKEAAAAAAAAAAAAAAKEAAAAAAAAAogAAAAAAAAAAAAAAogAAAAAAAACjAAAAAAAAAAAAAACjAAAAAAAAAKQAAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAqAAAAAAAAACfAAAAAAAAAAAAAAAAAPC/"
				],
				[
					530,
					1,
					"left_delete",
					null,
					"AQAAAKMAAAAAAAAAowAAAAAAAAABAAAAQQ",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAApAAAAAAAAACkAAAAAAAAAAAAAAAAAPC/"
				],
				[
					531,
					1,
					"insert",
					{
						"characters": "Error"
					},
					"BQAAAKMAAAAAAAAApAAAAAAAAAAAAAAApAAAAAAAAAClAAAAAAAAAAAAAAClAAAAAAAAAKYAAAAAAAAAAAAAAKYAAAAAAAAApwAAAAAAAAAAAAAApwAAAAAAAACoAAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAowAAAAAAAACjAAAAAAAAAAAAAAAAAPC/"
				],
				[
					539,
					1,
					"paste",
					null,
					"AQAAAGYAAAAAAAAAhQAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAZgAAAAAAAABmAAAAAAAAAAAAAAAAAAAA"
				],
				[
					541,
					1,
					"insert",
					{
						"characters": "Linking"
					},
					"BwAAAI8AAAAAAAAAkAAAAAAAAAAAAAAAkAAAAAAAAACRAAAAAAAAAAAAAACRAAAAAAAAAJIAAAAAAAAAAAAAAJIAAAAAAAAAkwAAAAAAAAAAAAAAkwAAAAAAAACUAAAAAAAAAAAAAACUAAAAAAAAAJUAAAAAAAAAAAAAAJUAAAAAAAAAlgAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAjwAAAAAAAACPAAAAAAAAAAAAAAAAAPC/"
				],
				[
					544,
					1,
					"insert",
					{
						"characters": "p"
					},
					"AQAAAI8AAAAAAAAAkAAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAjwAAAAAAAACPAAAAAAAAAAAAAAAAAPC/"
				],
				[
					545,
					1,
					"left_delete",
					null,
					"AQAAAI8AAAAAAAAAjwAAAAAAAAABAAAAcA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAkAAAAAAAAACQAAAAAAAAAAAAAAAAAPC/"
				],
				[
					546,
					1,
					"insert",
					{
						"characters": "Program"
					},
					"BwAAAI8AAAAAAAAAkAAAAAAAAAAAAAAAkAAAAAAAAACRAAAAAAAAAAAAAACRAAAAAAAAAJIAAAAAAAAAAAAAAJIAAAAAAAAAkwAAAAAAAAAAAAAAkwAAAAAAAACUAAAAAAAAAAAAAACUAAAAAAAAAJUAAAAAAAAAAAAAAJUAAAAAAAAAlgAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAjwAAAAAAAACPAAAAAAAAAAAAAAAAAPC/"
				],
				[
					549,
					1,
					"left_delete",
					null,
					"AQAAAJ0AAAAAAAAAnQAAAAAAAAALAAAAQ29tcGlsYXRpb24",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAqAAAAAAAAACdAAAAAAAAAAAAAAAAAPC/"
				],
				[
					552,
					1,
					"insert",
					{
						"characters": "Link"
					},
					"BQAAAJYAAAAAAAAAlwAAAAAAAAAAAAAAlwAAAAAAAACXAAAAAAAAAAcAAABMaW5raW5nlwAAAAAAAACYAAAAAAAAAAAAAACYAAAAAAAAAJkAAAAAAAAAAAAAAJkAAAAAAAAAmgAAAAAAAAAAAAAA",
					"CgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAnQAAAAAAAACWAAAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					1,
					"insert",
					{
						"characters": "_"
					},
					"AQAAAAYBAAAAAAAABwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABgEAAAAAAAAGAQAAAAAAAAAAAAAAAPC/"
				],
				[
					12,
					1,
					"insert",
					{
						"characters": "_"
					},
					"AQAAAIYBAAAAAAAAhwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhgEAAAAAAACGAQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "/C/Users/perma/.cargo/registry/src/index.crates.io-6f17d22bba15001f/khronos_api-3.1.0/src/lib.rs",
			"settings":
			{
				"buffer_size": 2635,
				"line_ending": "Unix"
			}
		},
		{
			"file": "gengar_engine/src/engine/resources.rs",
			"settings":
			{
				"buffer_size": 49,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"insert",
					{
						"characters": "pub"
					},
					"AwAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAACAAAAAAAAAAAAAAACAAAAAAAAAAMAAAAAAAAAAAAAAA",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				],
				[
					2,
					1,
					"insert",
					{
						"characters": " struct"
					},
					"BwAAAAMAAAAAAAAABAAAAAAAAAAAAAAABAAAAAAAAAAFAAAAAAAAAAAAAAAFAAAAAAAAAAYAAAAAAAAAAAAAAAYAAAAAAAAABwAAAAAAAAAAAAAABwAAAAAAAAAIAAAAAAAAAAAAAAAIAAAAAAAAAAkAAAAAAAAAAAAAAAkAAAAAAAAACgAAAAAAAAAAAAAA",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAMAAAAAAAAAAwAAAAAAAAAAAAAAAADwvw"
				],
				[
					3,
					1,
					"insert",
					{
						"characters": " engine"
					},
					"BwAAAAoAAAAAAAAACwAAAAAAAAAAAAAACwAAAAAAAAAMAAAAAAAAAAAAAAAMAAAAAAAAAA0AAAAAAAAAAAAAAA0AAAAAAAAADgAAAAAAAAAAAAAADgAAAAAAAAAPAAAAAAAAAAAAAAAPAAAAAAAAABAAAAAAAAAAAAAAABAAAAAAAAAAEQAAAAAAAAAAAAAA",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAoAAAAAAAAACgAAAAAAAAAAAAAAAADwvw"
				],
				[
					4,
					6,
					"left_delete",
					null,
					"BgAAABAAAAAAAAAAEAAAAAAAAAABAAAAZQ8AAAAAAAAADwAAAAAAAAABAAAAbg4AAAAAAAAADgAAAAAAAAABAAAAaQ0AAAAAAAAADQAAAAAAAAABAAAAZwwAAAAAAAAADAAAAAAAAAABAAAAbgsAAAAAAAAACwAAAAAAAAABAAAAZQ",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABEAAAAAAAAAEQAAAAAAAAAAAAAAAADwvw"
				],
				[
					5,
					1,
					"insert",
					{
						"characters": "resources"
					},
					"CQAAAAsAAAAAAAAADAAAAAAAAAAAAAAADAAAAAAAAAANAAAAAAAAAAAAAAANAAAAAAAAAA4AAAAAAAAAAAAAAA4AAAAAAAAADwAAAAAAAAAAAAAADwAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAABEAAAAAAAAAAAAAABEAAAAAAAAAEgAAAAAAAAAAAAAAEgAAAAAAAAATAAAAAAAAAAAAAAATAAAAAAAAABQAAAAAAAAAAAAAAA",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAsAAAAAAAAACwAAAAAAAAAAAAAAAADwvw"
				],
				[
					6,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABQAAAAAAAAAFQAAAAAAAAAAAAAA",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABQAAAAAAAAAFAAAAAAAAAAAAAAAAADwvw"
				],
				[
					7,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAABUAAAAAAAAAFwAAAAAAAAAAAAAA",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABUAAAAAAAAAFQAAAAAAAAAAAAAAAADwvw"
				],
				[
					8,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAABYAAAAAAAAAFwAAAAAAAAAAAAAAFwAAAAAAAAAYAAAAAAAAAAAAAAAXAAAAAAAAABgAAAAAAAAAAAAAAA",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABYAAAAAAAAAFgAAAAAAAAAAAAAAAADwvw"
				],
				[
					9,
					1,
					"rust_fmt_format_buffer",
					null,
					"AgAAABYAAAAAAAAAFgAAAAAAAAADAAAACgkKFwAAAAAAAAAYAAAAAAAAAAAAAAA",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABgAAAAAAAAAGAAAAAAAAAAAAAAAAADwvw"
				],
				[
					11,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAABgAAAAAAAAAGQAAAAAAAAAAAAAA",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABgAAAAAAAAAGAAAAAAAAAAAAAAAAMBjQA"
				],
				[
					12,
					1,
					"left_delete",
					null,
					"AQAAABgAAAAAAAAAGAAAAAAAAAABAAAAOw",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABkAAAAAAAAAGQAAAAAAAAAAAAAAAADwvw"
				],
				[
					16,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAABYAAAAAAAAAFwAAAAAAAAAAAAAAFwAAAAAAAAAYAAAAAAAAAAAAAAAXAAAAAAAAABgAAAAAAAAAAAAAAA",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABYAAAAAAAAAFgAAAAAAAAAAAAAAAADwvw"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": "basic_shd"
					},
					"CQAAABgAAAAAAAAAGQAAAAAAAAAAAAAAGQAAAAAAAAAaAAAAAAAAAAAAAAAaAAAAAAAAABsAAAAAAAAAAAAAABsAAAAAAAAAHAAAAAAAAAAAAAAAHAAAAAAAAAAdAAAAAAAAAAAAAAAdAAAAAAAAAB4AAAAAAAAAAAAAAB4AAAAAAAAAHwAAAAAAAAAAAAAAHwAAAAAAAAAgAAAAAAAAAAAAAAAgAAAAAAAAACEAAAAAAAAAAAAAAA",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABgAAAAAAAAAGAAAAAAAAAAAAAAAAADwvw"
				],
				[
					18,
					1,
					"left_delete",
					null,
					"AQAAACAAAAAAAAAAIAAAAAAAAAABAAAAZA",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACEAAAAAAAAAIQAAAAAAAAAAAAAAAADwvw"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": "ader"
					},
					"BAAAACAAAAAAAAAAIQAAAAAAAAAAAAAAIQAAAAAAAAAiAAAAAAAAAAAAAAAiAAAAAAAAACMAAAAAAAAAAAAAACMAAAAAAAAAJAAAAAAAAAAAAAAA",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACAAAAAAAAAAIAAAAAAAAAAAAAAAAADwvw"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAACQAAAAAAAAAJQAAAAAAAAAAAAAA",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACQAAAAAAAAAJAAAAAAAAAAAAAAAAADwvw"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": " Strings"
					},
					"CAAAACUAAAAAAAAAJgAAAAAAAAAAAAAAJgAAAAAAAAAnAAAAAAAAAAAAAAAnAAAAAAAAACgAAAAAAAAAAAAAACgAAAAAAAAAKQAAAAAAAAAAAAAAKQAAAAAAAAAqAAAAAAAAAAAAAAAqAAAAAAAAACsAAAAAAAAAAAAAACsAAAAAAAAALAAAAAAAAAAAAAAALAAAAAAAAAAtAAAAAAAAAAAAAAA",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACUAAAAAAAAAJQAAAAAAAAAAAAAAAADwvw"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAC8AAAAAAAAAMAAAAAAAAAAAAAAA",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAC8AAAAAAAAALwAAAAAAAAAAAAAAAIBmQA"
				]
			]
		},
		{
			"file": "gengar_engine/src/engine/state.rs",
			"settings":
			{
				"buffer_size": 474,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"insert",
					{
						"characters": "pub"
					},
					"AwAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAACAAAAAAAAAAAAAAACAAAAAAAAAAMAAAAAAAAAAAAAAA",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				],
				[
					2,
					1,
					"insert",
					{
						"characters": " struc"
					},
					"BgAAAAMAAAAAAAAABAAAAAAAAAAAAAAABAAAAAAAAAAFAAAAAAAAAAAAAAAFAAAAAAAAAAYAAAAAAAAAAAAAAAYAAAAAAAAABwAAAAAAAAAAAAAABwAAAAAAAAAIAAAAAAAAAAAAAAAIAAAAAAAAAAkAAAAAAAAAAAAAAA",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAMAAAAAAAAAAwAAAAAAAAAAAAAAAADwvw"
				],
				[
					3,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAkAAAAAAAAACgAAAAAAAAAAAAAA",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAkAAAAAAAAACQAAAAAAAAAAAAAAAADwvw"
				],
				[
					4,
					1,
					"left_delete",
					null,
					"AQAAAAkAAAAAAAAACQAAAAAAAAABAAAAIA",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAoAAAAAAAAACgAAAAAAAAAAAAAAAADwvw"
				],
				[
					5,
					1,
					"insert",
					{
						"characters": "t"
					},
					"AQAAAAkAAAAAAAAACgAAAAAAAAAAAAAA",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAkAAAAAAAAACQAAAAAAAAAAAAAAAADwvw"
				],
				[
					6,
					1,
					"insert",
					{
						"characters": " state"
					},
					"BgAAAAoAAAAAAAAACwAAAAAAAAAAAAAACwAAAAAAAAAMAAAAAAAAAAAAAAAMAAAAAAAAAA0AAAAAAAAAAAAAAA0AAAAAAAAADgAAAAAAAAAAAAAADgAAAAAAAAAPAAAAAAAAAAAAAAAPAAAAAAAAABAAAAAAAAAAAAAAAA",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAoAAAAAAAAACgAAAAAAAAAAAAAAAADwvw"
				],
				[
					7,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABAAAAAAAAAAEQAAAAAAAAAAAAAA",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABAAAAAAAAAAEAAAAAAAAAAAAAAAAADwvw"
				],
				[
					8,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAABEAAAAAAAAAEwAAAAAAAAAAAAAA",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABEAAAAAAAAAEQAAAAAAAAAAAAAAAADwvw"
				],
				[
					9,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAABIAAAAAAAAAEwAAAAAAAAAAAAAAEwAAAAAAAAAUAAAAAAAAAAAAAAATAAAAAAAAABQAAAAAAAAAAAAAAA",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABIAAAAAAAAAEgAAAAAAAAAAAAAAAADwvw"
				],
				[
					10,
					1,
					"rust_fmt_format_buffer",
					null,
					"AgAAABIAAAAAAAAAEgAAAAAAAAADAAAACgkKEwAAAAAAAAAUAAAAAAAAAAAAAAA",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABQAAAAAAAAAFAAAAAAAAAAAAAAAAADwvw"
				],
				[
					11,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAABIAAAAAAAAAEwAAAAAAAAAAAAAAEwAAAAAAAAAUAAAAAAAAAAAAAAATAAAAAAAAABQAAAAAAAAAAAAAAA",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABIAAAAAAAAAEgAAAAAAAAAAAAAAAADwvw"
				],
				[
					12,
					1,
					"rust_fmt_format_buffer",
					null,
					"AQAAABIAAAAAAAAAEgAAAAAAAAADAAAACgkK",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABQAAAAAAAAAFAAAAAAAAAAAAAAAAADwvw"
				],
				[
					2,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAABIAAAAAAAAAEwAAAAAAAAAAAAAAEwAAAAAAAAAUAAAAAAAAAAAAAAATAAAAAAAAABQAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEgAAAAAAAAASAAAAAAAAAAAAAAAAAPC/"
				],
				[
					3,
					1,
					"insert",
					{
						"characters": "u32"
					},
					"AwAAABQAAAAAAAAAFQAAAAAAAAAAAAAAFQAAAAAAAAAWAAAAAAAAAAAAAAAWAAAAAAAAABcAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFAAAAAAAAAAUAAAAAAAAAAAAAAAAAPC/"
				],
				[
					4,
					3,
					"left_delete",
					null,
					"AwAAABYAAAAAAAAAFgAAAAAAAAABAAAAMhUAAAAAAAAAFQAAAAAAAAABAAAAMxQAAAAAAAAAFAAAAAAAAAABAAAAdQ",
					"AQAAAAAAAAABAAAAFwAAAAAAAAAXAAAAAAAAAAAAAAAAAPC/"
				],
				[
					5,
					1,
					"insert",
					{
						"characters": "prog_id:"
					},
					"CAAAABQAAAAAAAAAFQAAAAAAAAAAAAAAFQAAAAAAAAAWAAAAAAAAAAAAAAAWAAAAAAAAABcAAAAAAAAAAAAAABcAAAAAAAAAGAAAAAAAAAAAAAAAGAAAAAAAAAAZAAAAAAAAAAAAAAAZAAAAAAAAABoAAAAAAAAAAAAAABoAAAAAAAAAGwAAAAAAAAAAAAAAGwAAAAAAAAAcAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFAAAAAAAAAAUAAAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					1,
					"insert",
					{
						"characters": " u4"
					},
					"AwAAABwAAAAAAAAAHQAAAAAAAAAAAAAAHQAAAAAAAAAeAAAAAAAAAAAAAAAeAAAAAAAAAB8AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHAAAAAAAAAAcAAAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					1,
					"left_delete",
					null,
					"AQAAAB4AAAAAAAAAHgAAAAAAAAABAAAANA",
					"AQAAAAAAAAABAAAAHwAAAAAAAAAfAAAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					1,
					"insert",
					{
						"characters": "32,"
					},
					"AwAAAB4AAAAAAAAAHwAAAAAAAAAAAAAAHwAAAAAAAAAgAAAAAAAAAAAAAAAgAAAAAAAAACEAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHgAAAAAAAAAeAAAAAAAAAAAAAAAAAPC/"
				],
				[
					9,
					1,
					"rust_fmt_format_buffer",
					null,
					"AgAAABMAAAAAAAAAEwAAAAAAAAABAAAACRMAAAAAAAAAFwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIQAAAAAAAAAhAAAAAAAAAAAAAAAAAPC/"
				],
				[
					12,
					1,
					"insert",
					{
						"characters": "State"
					},
					"BgAAAAsAAAAAAAAADAAAAAAAAAAAAAAADAAAAAAAAAAMAAAAAAAAAAUAAABzdGF0ZQwAAAAAAAAADQAAAAAAAAAAAAAADQAAAAAAAAAOAAAAAAAAAAAAAAAOAAAAAAAAAA8AAAAAAAAAAAAAAA8AAAAAAAAAEAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEAAAAAAAAAALAAAAAAAAAAAAAAAAAPC/"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": "pub"
					},
					"AwAAABcAAAAAAAAAGAAAAAAAAAAAAAAAGAAAAAAAAAAZAAAAAAAAAAAAAAAZAAAAAAAAABoAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFwAAAAAAAAAXAAAAAAAAAAAAAAAAAD1A"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABoAAAAAAAAAGwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGgAAAAAAAAAaAAAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					1,
					"insert",
					{
						"characters": "\n\npub"
					},
					"BQAAACoAAAAAAAAAKwAAAAAAAAAAAAAAKwAAAAAAAAAsAAAAAAAAAAAAAAAsAAAAAAAAAC0AAAAAAAAAAAAAAC0AAAAAAAAALgAAAAAAAAAAAAAALgAAAAAAAAAvAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKgAAAAAAAAAqAAAAAAAAAAAAAAAAAE1A"
				],
				[
					21,
					3,
					"left_delete",
					null,
					"AwAAAC4AAAAAAAAALgAAAAAAAAABAAAAYi0AAAAAAAAALQAAAAAAAAABAAAAdSwAAAAAAAAALAAAAAAAAAABAAAAcA",
					"AQAAAAAAAAABAAAALwAAAAAAAAAvAAAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": "impl"
					},
					"BAAAACwAAAAAAAAALQAAAAAAAAAAAAAALQAAAAAAAAAuAAAAAAAAAAAAAAAuAAAAAAAAAC8AAAAAAAAAAAAAAC8AAAAAAAAAMAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALAAAAAAAAAAsAAAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"insert",
					{
						"characters": " State"
					},
					"BgAAADAAAAAAAAAAMQAAAAAAAAAAAAAAMQAAAAAAAAAyAAAAAAAAAAAAAAAyAAAAAAAAADMAAAAAAAAAAAAAADMAAAAAAAAANAAAAAAAAAAAAAAANAAAAAAAAAA1AAAAAAAAAAAAAAA1AAAAAAAAADYAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMAAAAAAAAAAwAAAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADYAAAAAAAAANwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANgAAAAAAAAA2AAAAAAAAAAAAAAAAAPC/"
				],
				[
					25,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAADcAAAAAAAAAOQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANwAAAAAAAAA3AAAAAAAAAAAAAAAAAPC/"
				],
				[
					26,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAADgAAAAAAAAAOQAAAAAAAAAAAAAAOQAAAAAAAAA6AAAAAAAAAAAAAAA5AAAAAAAAADoAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOAAAAAAAAAA4AAAAAAAAAAAAAAAAAPC/"
				],
				[
					27,
					1,
					"insert",
					{
						"characters": "fn"
					},
					"AgAAADoAAAAAAAAAOwAAAAAAAAAAAAAAOwAAAAAAAAA8AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOgAAAAAAAAA6AAAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": " new"
					},
					"BAAAADwAAAAAAAAAPQAAAAAAAAAAAAAAPQAAAAAAAAA+AAAAAAAAAAAAAAA+AAAAAAAAAD8AAAAAAAAAAAAAAD8AAAAAAAAAQAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPAAAAAAAAAA8AAAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAEAAAAAAAAAAQgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQAAAAAAAAABAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					31,
					1,
					"insert",
					{
						"characters": " _>"
					},
					"AwAAAEIAAAAAAAAAQwAAAAAAAAAAAAAAQwAAAAAAAABEAAAAAAAAAAAAAABEAAAAAAAAAEUAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQgAAAAAAAABCAAAAAAAAAAAAAAAAAPC/"
				],
				[
					32,
					1,
					"insert",
					{
						"characters": " s"
					},
					"AgAAAEUAAAAAAAAARgAAAAAAAAAAAAAARgAAAAAAAABHAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARQAAAAAAAABFAAAAAAAAAAAAAAAAAPC/"
				],
				[
					33,
					4,
					"left_delete",
					null,
					"BAAAAEYAAAAAAAAARgAAAAAAAAABAAAAc0UAAAAAAAAARQAAAAAAAAABAAAAIEQAAAAAAAAARAAAAAAAAAABAAAAPkMAAAAAAAAAQwAAAAAAAAABAAAAXw",
					"AQAAAAAAAAABAAAARwAAAAAAAABHAAAAAAAAAAAAAAAAAPC/"
				],
				[
					34,
					1,
					"insert",
					{
						"characters": "->"
					},
					"AgAAAEMAAAAAAAAARAAAAAAAAAAAAAAARAAAAAAAAABFAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQwAAAAAAAABDAAAAAAAAAAAAAAAAAPC/"
				],
				[
					35,
					1,
					"insert",
					{
						"characters": " Self"
					},
					"BQAAAEUAAAAAAAAARgAAAAAAAAAAAAAARgAAAAAAAABHAAAAAAAAAAAAAABHAAAAAAAAAEgAAAAAAAAAAAAAAEgAAAAAAAAASQAAAAAAAAAAAAAASQAAAAAAAABKAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARQAAAAAAAABFAAAAAAAAAAAAAAAAAPC/"
				],
				[
					36,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEoAAAAAAAAASwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASgAAAAAAAABKAAAAAAAAAAAAAAAAAPC/"
				],
				[
					37,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAEsAAAAAAAAATQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASwAAAAAAAABLAAAAAAAAAAAAAAAAAPC/"
				],
				[
					38,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAEwAAAAAAAAATQAAAAAAAAAAAAAATQAAAAAAAABOAAAAAAAAAAAAAABOAAAAAAAAAE8AAAAAAAAAAAAAAE8AAAAAAAAAUAAAAAAAAAAAAAAATQAAAAAAAABNAAAAAAAAAAEAAAAJTQAAAAAAAABPAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATAAAAAAAAABMAAAAAAAAAAAAAAAAAPC/"
				],
				[
					39,
					1,
					"insert",
					{
						"characters": "State"
					},
					"BQAAAE8AAAAAAAAAUAAAAAAAAAAAAAAAUAAAAAAAAABRAAAAAAAAAAAAAABRAAAAAAAAAFIAAAAAAAAAAAAAAFIAAAAAAAAAUwAAAAAAAAAAAAAAUwAAAAAAAABUAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATwAAAAAAAABPAAAAAAAAAAAAAAAAAPC/"
				],
				[
					40,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFQAAAAAAAAAVQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVAAAAAAAAABUAAAAAAAAAAAAAAAAAPC/"
				],
				[
					41,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAFUAAAAAAAAAVwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVQAAAAAAAABVAAAAAAAAAAAAAAAAAPC/"
				],
				[
					42,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAFYAAAAAAAAAVwAAAAAAAAAAAAAAVwAAAAAAAABZAAAAAAAAAAAAAABZAAAAAAAAAFoAAAAAAAAAAAAAAFoAAAAAAAAAXAAAAAAAAAAAAAAAVwAAAAAAAABXAAAAAAAAAAIAAAAJCVcAAAAAAAAAWgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVgAAAAAAAABWAAAAAAAAAAAAAAAAAPC/"
				],
				[
					43,
					1,
					"insert",
					{
						"characters": "prog"
					},
					"BAAAAFoAAAAAAAAAWwAAAAAAAAAAAAAAWwAAAAAAAABcAAAAAAAAAAAAAABcAAAAAAAAAF0AAAAAAAAAAAAAAF0AAAAAAAAAXgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWgAAAAAAAABaAAAAAAAAAAAAAAAAAPC/"
				],
				[
					44,
					1,
					"insert_completion",
					{
						"completion": "prog_id",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "prog_id"
					},
					"AgAAAFoAAAAAAAAAWgAAAAAAAAAEAAAAcHJvZ1oAAAAAAAAAYQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXgAAAAAAAABeAAAAAAAAAAAAAAAAAPC/"
				],
				[
					45,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAGEAAAAAAAAAYgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYQAAAAAAAABhAAAAAAAAAAAAAAAAAPC/"
				],
				[
					46,
					1,
					"insert",
					{
						"characters": " 0,"
					},
					"AwAAAGIAAAAAAAAAYwAAAAAAAAAAAAAAYwAAAAAAAABkAAAAAAAAAAAAAABkAAAAAAAAAGUAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYgAAAAAAAABiAAAAAAAAAAAAAAAAAPC/"
				],
				[
					47,
					1,
					"rust_fmt_format_buffer",
					null,
					"CAAAADkAAAAAAAAAOQAAAAAAAAABAAAACTkAAAAAAAAAPQAAAAAAAAAAAAAAUAAAAAAAAABQAAAAAAAAAAIAAAAJCVAAAAAAAAAAWAAAAAAAAAAAAAAAXwAAAAAAAABfAAAAAAAAAAQAAAAKCQkJXwAAAAAAAABgAAAAAAAAAAAAAABqAAAAAAAAAGoAAAAAAAAABwAAACwKCQl9CglqAAAAAAAAAHEAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZQAAAAAAAABlAAAAAAAAAAAAAAAAAPC/"
				],
				[
					50,
					1,
					"insert",
					{
						"characters": "pub"
					},
					"AwAAAD0AAAAAAAAAPgAAAAAAAAAAAAAAPgAAAAAAAAA/AAAAAAAAAAAAAAA/AAAAAAAAAEAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPQAAAAAAAAA9AAAAAAAAAAAAAAAAAD1A"
				],
				[
					51,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEAAAAAAAAAAQQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQAAAAAAAAABAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					55,
					1,
					"insert",
					{
						"characters": "\npub"
					},
					"BQAAACgAAAAAAAAAKQAAAAAAAAAAAAAAKQAAAAAAAAAtAAAAAAAAAAAAAAAtAAAAAAAAAC4AAAAAAAAAAAAAAC4AAAAAAAAALwAAAAAAAAAAAAAALwAAAAAAAAAwAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKAAAAAAAAAAoAAAAAAAAAP///////+9/"
				],
				[
					56,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADAAAAAAAAAAMQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMAAAAAAAAAAwAAAAAAAAAAAAAAAAAPC/"
				],
				[
					57,
					1,
					"insert",
					{
						"characters": " cub"
					},
					"BAAAADEAAAAAAAAAMgAAAAAAAAAAAAAAMgAAAAAAAAAzAAAAAAAAAAAAAAAzAAAAAAAAADQAAAAAAAAAAAAAADQAAAAAAAAANQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMQAAAAAAAAAxAAAAAAAAAAAAAAAAAPC/"
				],
				[
					58,
					4,
					"left_delete",
					null,
					"BAAAADQAAAAAAAAANAAAAAAAAAABAAAAYjMAAAAAAAAAMwAAAAAAAAABAAAAdTIAAAAAAAAAMgAAAAAAAAABAAAAYzEAAAAAAAAAMQAAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAANQAAAAAAAAA1AAAAAAAAAAAAAAAAAPC/"
				],
				[
					59,
					1,
					"insert",
					{
						"characters": "cube_id:"
					},
					"CAAAADEAAAAAAAAAMgAAAAAAAAAAAAAAMgAAAAAAAAAzAAAAAAAAAAAAAAAzAAAAAAAAADQAAAAAAAAAAAAAADQAAAAAAAAANQAAAAAAAAAAAAAANQAAAAAAAAA2AAAAAAAAAAAAAAA2AAAAAAAAADcAAAAAAAAAAAAAADcAAAAAAAAAOAAAAAAAAAAAAAAAOAAAAAAAAAA5AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMQAAAAAAAAAxAAAAAAAAAAAAAAAAAPC/"
				],
				[
					60,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADkAAAAAAAAAOgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOQAAAAAAAAA5AAAAAAAAAAAAAAAAAPC/"
				],
				[
					61,
					1,
					"left_delete",
					null,
					"AQAAADkAAAAAAAAAOQAAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAOgAAAAAAAAA6AAAAAAAAAAAAAAAAAPC/"
				],
				[
					62,
					1,
					"insert",
					{
						"characters": " u32"
					},
					"BAAAADkAAAAAAAAAOgAAAAAAAAAAAAAAOgAAAAAAAAA7AAAAAAAAAAAAAAA7AAAAAAAAADwAAAAAAAAAAAAAADwAAAAAAAAAPQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOQAAAAAAAAA5AAAAAAAAAAAAAAAAAPC/"
				],
				[
					63,
					1,
					"rust_fmt_format_buffer",
					null,
					"AQAAAD0AAAAAAAAAPgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPQAAAAAAAAA9AAAAAAAAAAAAAAAAAPC/"
				],
				[
					64,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAD4AAAAAAAAAPwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPgAAAAAAAAA+AAAAAAAAAAAAAAAAAPC/"
				],
				[
					69,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAIUAAAAAAAAAhgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhQAAAAAAAACFAAAAAAAAAAAAAAAAAPC/"
				],
				[
					70,
					1,
					"insert",
					{
						"characters": "\ncube_i"
					},
					"CAAAAIYAAAAAAAAAhwAAAAAAAAAAAAAAhwAAAAAAAACPAAAAAAAAAAAAAACPAAAAAAAAAJAAAAAAAAAAAAAAAJAAAAAAAAAAkQAAAAAAAAAAAAAAkQAAAAAAAACSAAAAAAAAAAAAAACSAAAAAAAAAJMAAAAAAAAAAAAAAJMAAAAAAAAAlAAAAAAAAAAAAAAAlAAAAAAAAACVAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhgAAAAAAAACGAAAAAAAAAAAAAAAAAPC/"
				],
				[
					71,
					1,
					"insert_completion",
					{
						"completion": "cube_id",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "cube_id"
					},
					"AgAAAI8AAAAAAAAAjwAAAAAAAAAGAAAAY3ViZV9pjwAAAAAAAACWAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlQAAAAAAAACVAAAAAAAAAAAAAAAAAPC/"
				],
				[
					72,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAJYAAAAAAAAAlwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlgAAAAAAAACWAAAAAAAAAAAAAAAAAPC/"
				],
				[
					73,
					1,
					"insert",
					{
						"characters": " 0,"
					},
					"AwAAAJcAAAAAAAAAmAAAAAAAAAAAAAAAmAAAAAAAAACZAAAAAAAAAAAAAACZAAAAAAAAAJoAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlwAAAAAAAACXAAAAAAAAAAAAAAAAAPC/"
				],
				[
					78,
					1,
					"left_delete",
					null,
					"AQAAAD4AAAAAAAAAPgAAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAAPwAAAAAAAAA/AAAAAAAAAP///////+9/"
				],
				[
					79,
					1,
					"rust_fmt_format_buffer",
					null,
					"AwAAAHkAAAAAAAAAhQAAAAAAAAAAAAAAmgAAAAAAAACeAAAAAAAAAAAAAACpAAAAAAAAALEAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPgAAAAAAAAA+AAAAAAAAAAAAAAAAAPC/"
				],
				[
					90,
					1,
					"insert",
					{
						"characters": "\npub"
					},
					"BQAAAD4AAAAAAAAAPwAAAAAAAAAAAAAAPwAAAAAAAABDAAAAAAAAAAAAAABDAAAAAAAAAEQAAAAAAAAAAAAAAEQAAAAAAAAARQAAAAAAAAAAAAAARQAAAAAAAABGAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPgAAAAAAAAA+AAAAAAAAAP///////+9/"
				],
				[
					91,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEYAAAAAAAAARwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARgAAAAAAAABGAAAAAAAAAAAAAAAAAPC/"
				],
				[
					92,
					4,
					"left_delete",
					null,
					"BAAAAEYAAAAAAAAARgAAAAAAAAABAAAAIEUAAAAAAAAARQAAAAAAAAABAAAAYkQAAAAAAAAARAAAAAAAAAABAAAAdUMAAAAAAAAAQwAAAAAAAAABAAAAcA",
					"AQAAAAAAAAABAAAARwAAAAAAAABHAAAAAAAAAAAAAAAAAPC/"
				],
				[
					93,
					1,
					"insert",
					{
						"characters": " pub"
					},
					"BAAAAEMAAAAAAAAARAAAAAAAAAAAAAAARAAAAAAAAABFAAAAAAAAAAAAAABFAAAAAAAAAEYAAAAAAAAAAAAAAEYAAAAAAAAARwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQwAAAAAAAABDAAAAAAAAAAAAAAAAAPC/"
				],
				[
					94,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEcAAAAAAAAASAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARwAAAAAAAABHAAAAAAAAAAAAAAAAAPC/"
				],
				[
					95,
					5,
					"left_delete",
					null,
					"BQAAAEcAAAAAAAAARwAAAAAAAAABAAAAIEYAAAAAAAAARgAAAAAAAAABAAAAYkUAAAAAAAAARQAAAAAAAAABAAAAdUQAAAAAAAAARAAAAAAAAAABAAAAcEMAAAAAAAAAQwAAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAASAAAAAAAAABIAAAAAAAAAAAAAAAAAPC/"
				],
				[
					96,
					1,
					"insert",
					{
						"characters": "\npub"
					},
					"BgAAAEMAAAAAAAAARAAAAAAAAAAAAAAARAAAAAAAAABIAAAAAAAAAAAAAAA/AAAAAAAAAD8AAAAAAAAABAAAACAgICBEAAAAAAAAAEUAAAAAAAAAAAAAAEUAAAAAAAAARgAAAAAAAAAAAAAARgAAAAAAAABHAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQwAAAAAAAABDAAAAAAAAAAAAAAAAAPC/"
				],
				[
					97,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEcAAAAAAAAASAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARwAAAAAAAABHAAAAAAAAAAAAAAAAAPC/"
				],
				[
					99,
					1,
					"insert",
					{
						"characters": "fame_nu"
					},
					"BwAAAEgAAAAAAAAASQAAAAAAAAAAAAAASQAAAAAAAABKAAAAAAAAAAAAAABKAAAAAAAAAEsAAAAAAAAAAAAAAEsAAAAAAAAATAAAAAAAAAAAAAAATAAAAAAAAABNAAAAAAAAAAAAAABNAAAAAAAAAE4AAAAAAAAAAAAAAE4AAAAAAAAATwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASAAAAAAAAABIAAAAAAAAAAAAAAAAAPC/"
				],
				[
					100,
					3,
					"left_delete",
					null,
					"AwAAAE4AAAAAAAAATgAAAAAAAAABAAAAdU0AAAAAAAAATQAAAAAAAAABAAAAbkwAAAAAAAAATAAAAAAAAAABAAAAXw",
					"AQAAAAAAAAABAAAATwAAAAAAAABPAAAAAAAAAAAAAAAAAPC/"
				],
				[
					101,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAEwAAAAAAAAATQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATAAAAAAAAABMAAAAAAAAAAAAAAAAAPC/"
				],
				[
					102,
					1,
					"insert",
					{
						"characters": " i64,"
					},
					"BQAAAE0AAAAAAAAATgAAAAAAAAAAAAAATgAAAAAAAABPAAAAAAAAAAAAAABPAAAAAAAAAFAAAAAAAAAAAAAAAFAAAAAAAAAAUQAAAAAAAAAAAAAAUQAAAAAAAABSAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATQAAAAAAAABNAAAAAAAAAAAAAAAAAPC/"
				],
				[
					108,
					1,
					"insert",
					{
						"characters": "\nframe:"
					},
					"CAAAAL0AAAAAAAAAvgAAAAAAAAAAAAAAvgAAAAAAAADKAAAAAAAAAAAAAADKAAAAAAAAAMsAAAAAAAAAAAAAAMsAAAAAAAAAzAAAAAAAAAAAAAAAzAAAAAAAAADNAAAAAAAAAAAAAADNAAAAAAAAAM4AAAAAAAAAAAAAAM4AAAAAAAAAzwAAAAAAAAAAAAAAzwAAAAAAAADQAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvQAAAAAAAAC9AAAAAAAAAP///////+9/"
				],
				[
					109,
					1,
					"insert",
					{
						"characters": " 0;"
					},
					"AwAAANAAAAAAAAAA0QAAAAAAAAAAAAAA0QAAAAAAAADSAAAAAAAAAAAAAADSAAAAAAAAANMAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0AAAAAAAAADQAAAAAAAAAAAAAAAAAPC/"
				],
				[
					111,
					1,
					"left_delete",
					null,
					"AQAAANIAAAAAAAAA0gAAAAAAAAABAAAAOw",
					"AQAAAAAAAAABAAAA0wAAAAAAAADTAAAAAAAAAAAAAAAAAPC/"
				],
				[
					112,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAANIAAAAAAAAA0wAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0gAAAAAAAADSAAAAAAAAAAAAAAAAAPC/"
				],
				[
					124,
					1,
					"insert",
					{
						"characters": "r"
					},
					"AQAAAEkAAAAAAAAASgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASQAAAAAAAABJAAAAAAAAAAAAAAAAAPC/"
				],
				[
					128,
					1,
					"insert",
					{
						"characters": "p"
					},
					"AQAAAOcAAAAAAAAA6AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5wAAAAAAAADnAAAAAAAAAAAAAAAAAPC/"
				],
				[
					129,
					1,
					"left_delete",
					null,
					"AQAAAOcAAAAAAAAA5wAAAAAAAAABAAAAcA",
					"AQAAAAAAAAABAAAA6AAAAAAAAADoAAAAAAAAAAAAAAAAAPC/"
				],
				[
					137,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAAFMAAAAAAAAAVAAAAAAAAAAAAAAAVAAAAAAAAABYAAAAAAAAAAAAAABYAAAAAAAAAFkAAAAAAAAAAAAAAFkAAAAAAAAAXQAAAAAAAAAAAAAAVAAAAAAAAABUAAAAAAAAAAQAAAAgICAg",
					"AQAAAAAAAAABAAAAUwAAAAAAAABTAAAAAAAAAP///////+9/"
				],
				[
					138,
					1,
					"insert",
					{
						"characters": "pub"
					},
					"AwAAAFkAAAAAAAAAWgAAAAAAAAAAAAAAWgAAAAAAAABbAAAAAAAAAAAAAABbAAAAAAAAAFwAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWQAAAAAAAABZAAAAAAAAAAAAAAAAAPC/"
				],
				[
					139,
					1,
					"insert",
					{
						"characters": " r"
					},
					"AgAAAFwAAAAAAAAAXQAAAAAAAAAAAAAAXQAAAAAAAABeAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXAAAAAAAAABcAAAAAAAAAAAAAAAAAPC/"
				],
				[
					140,
					1,
					"insert",
					{
						"characters": "ener"
					},
					"BAAAAF4AAAAAAAAAXwAAAAAAAAAAAAAAXwAAAAAAAABgAAAAAAAAAAAAAABgAAAAAAAAAGEAAAAAAAAAAAAAAGEAAAAAAAAAYgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXgAAAAAAAABeAAAAAAAAAAAAAAAAAPC/"
				],
				[
					141,
					3,
					"left_delete",
					null,
					"AwAAAGEAAAAAAAAAYQAAAAAAAAABAAAAcmAAAAAAAAAAYAAAAAAAAAABAAAAZV8AAAAAAAAAXwAAAAAAAAABAAAAbg",
					"AQAAAAAAAAABAAAAYgAAAAAAAABiAAAAAAAAAAAAAAAAAPC/"
				],
				[
					142,
					1,
					"insert",
					{
						"characters": "d"
					},
					"AQAAAF8AAAAAAAAAYAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXwAAAAAAAABfAAAAAAAAAAAAAAAAAPC/"
				],
				[
					143,
					1,
					"left_delete",
					null,
					"AQAAAF8AAAAAAAAAXwAAAAAAAAABAAAAZA",
					"AQAAAAAAAAABAAAAYAAAAAAAAABgAAAAAAAAAAAAAAAAAPC/"
				],
				[
					144,
					1,
					"insert",
					{
						"characters": "de"
					},
					"AgAAAF8AAAAAAAAAYAAAAAAAAAAAAAAAYAAAAAAAAABhAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXwAAAAAAAABfAAAAAAAAAAAAAAAAAPC/"
				],
				[
					145,
					2,
					"left_delete",
					null,
					"AgAAAGAAAAAAAAAAYAAAAAAAAAABAAAAZV8AAAAAAAAAXwAAAAAAAAABAAAAZA",
					"AQAAAAAAAAABAAAAYQAAAAAAAABhAAAAAAAAAAAAAAAAAPC/"
				],
				[
					146,
					1,
					"insert",
					{
						"characters": "nder_list:"
					},
					"CgAAAF8AAAAAAAAAYAAAAAAAAAAAAAAAYAAAAAAAAABhAAAAAAAAAAAAAABhAAAAAAAAAGIAAAAAAAAAAAAAAGIAAAAAAAAAYwAAAAAAAAAAAAAAYwAAAAAAAABkAAAAAAAAAAAAAABkAAAAAAAAAGUAAAAAAAAAAAAAAGUAAAAAAAAAZgAAAAAAAAAAAAAAZgAAAAAAAABnAAAAAAAAAAAAAABnAAAAAAAAAGgAAAAAAAAAAAAAAGgAAAAAAAAAaQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXwAAAAAAAABfAAAAAAAAAAAAAAAAAPC/"
				],
				[
					147,
					1,
					"insert",
					{
						"characters": " Vec"
					},
					"BAAAAGkAAAAAAAAAagAAAAAAAAAAAAAAagAAAAAAAABrAAAAAAAAAAAAAABrAAAAAAAAAGwAAAAAAAAAAAAAAGwAAAAAAAAAbQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaQAAAAAAAABpAAAAAAAAAAAAAAAAAPC/"
				],
				[
					148,
					3,
					"left_delete",
					null,
					"AwAAAGwAAAAAAAAAbAAAAAAAAAABAAAAY2sAAAAAAAAAawAAAAAAAAABAAAAZWoAAAAAAAAAagAAAAAAAAABAAAAVg",
					"AQAAAAAAAAABAAAAbQAAAAAAAABtAAAAAAAAAAAAAAAAAPC/"
				],
				[
					149,
					1,
					"insert",
					{
						"characters": "vec<"
					},
					"BAAAAGoAAAAAAAAAawAAAAAAAAAAAAAAawAAAAAAAABsAAAAAAAAAAAAAABsAAAAAAAAAG0AAAAAAAAAAAAAAG0AAAAAAAAAbgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAagAAAAAAAABqAAAAAAAAAAAAAAAAAPC/"
				],
				[
					150,
					4,
					"left_delete",
					null,
					"BAAAAG0AAAAAAAAAbQAAAAAAAAABAAAAPGwAAAAAAAAAbAAAAAAAAAABAAAAY2sAAAAAAAAAawAAAAAAAAABAAAAZWoAAAAAAAAAagAAAAAAAAABAAAAdg",
					"AQAAAAAAAAABAAAAbgAAAAAAAABuAAAAAAAAAAAAAAAAAPC/"
				],
				[
					151,
					1,
					"insert",
					{
						"characters": "Vec<RenderVo"
					},
					"DAAAAGoAAAAAAAAAawAAAAAAAAAAAAAAawAAAAAAAABsAAAAAAAAAAAAAABsAAAAAAAAAG0AAAAAAAAAAAAAAG0AAAAAAAAAbgAAAAAAAAAAAAAAbgAAAAAAAABvAAAAAAAAAAAAAABvAAAAAAAAAHAAAAAAAAAAAAAAAHAAAAAAAAAAcQAAAAAAAAAAAAAAcQAAAAAAAAByAAAAAAAAAAAAAAByAAAAAAAAAHMAAAAAAAAAAAAAAHMAAAAAAAAAdAAAAAAAAAAAAAAAdAAAAAAAAAB1AAAAAAAAAAAAAAB1AAAAAAAAAHYAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAagAAAAAAAABqAAAAAAAAAAAAAAAAAPC/"
				],
				[
					152,
					2,
					"left_delete",
					null,
					"AgAAAHUAAAAAAAAAdQAAAAAAAAABAAAAb3QAAAAAAAAAdAAAAAAAAAABAAAAVg",
					"AQAAAAAAAAABAAAAdgAAAAAAAAB2AAAAAAAAAAAAAAAAAPC/"
				],
				[
					153,
					1,
					"insert",
					{
						"characters": "Command>"
					},
					"CAAAAHQAAAAAAAAAdQAAAAAAAAAAAAAAdQAAAAAAAAB2AAAAAAAAAAAAAAB2AAAAAAAAAHcAAAAAAAAAAAAAAHcAAAAAAAAAeAAAAAAAAAAAAAAAeAAAAAAAAAB5AAAAAAAAAAAAAAB5AAAAAAAAAHoAAAAAAAAAAAAAAHoAAAAAAAAAewAAAAAAAAAAAAAAewAAAAAAAAB8AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdAAAAAAAAAB0AAAAAAAAAAAAAAAAAPC/"
				],
				[
					154,
					1,
					"rust_fmt_format_buffer",
					null,
					"AQAAAHwAAAAAAAAAfQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfAAAAAAAAAB8AAAAAAAAAAAAAAAAAPC/"
				],
				[
					163,
					1,
					"insert",
					{
						"characters": "commnd"
					},
					"BwAAAGQAAAAAAAAAZQAAAAAAAAAAAAAAZQAAAAAAAABlAAAAAAAAAAQAAABsaXN0ZQAAAAAAAABmAAAAAAAAAAAAAABmAAAAAAAAAGcAAAAAAAAAAAAAAGcAAAAAAAAAaAAAAAAAAAAAAAAAaAAAAAAAAABpAAAAAAAAAAAAAABpAAAAAAAAAGoAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaAAAAAAAAABkAAAAAAAAAAAAAAAAAPC/"
				],
				[
					164,
					2,
					"left_delete",
					null,
					"AgAAAGkAAAAAAAAAaQAAAAAAAAABAAAAZGgAAAAAAAAAaAAAAAAAAAABAAAAbg",
					"AQAAAAAAAAABAAAAagAAAAAAAABqAAAAAAAAAAAAAAAAAPC/"
				],
				[
					165,
					1,
					"insert",
					{
						"characters": "ands"
					},
					"BAAAAGgAAAAAAAAAaQAAAAAAAAAAAAAAaQAAAAAAAABqAAAAAAAAAAAAAABqAAAAAAAAAGsAAAAAAAAAAAAAAGsAAAAAAAAAbAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaAAAAAAAAABoAAAAAAAAAAAAAAAAAPC/"
				],
				[
					167,
					1,
					"insert",
					{
						"characters": "commands"
					},
					"CQAAAGQAAAAAAAAAZQAAAAAAAAAAAAAAZQAAAAAAAABlAAAAAAAAAAgAAABjb21tYW5kc2UAAAAAAAAAZgAAAAAAAAAAAAAAZgAAAAAAAABnAAAAAAAAAAAAAABnAAAAAAAAAGgAAAAAAAAAAAAAAGgAAAAAAAAAaQAAAAAAAAAAAAAAaQAAAAAAAABqAAAAAAAAAAAAAABqAAAAAAAAAGsAAAAAAAAAAAAAAGsAAAAAAAAAbAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbAAAAAAAAABkAAAAAAAAAAAAAAAAAPC/"
				],
				[
					170,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAACAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
				],
				[
					172,
					1,
					"insert",
					{
						"characters": "use"
					},
					"AwAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAACAAAAAAAAAAAAAAACAAAAAAAAAAMAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
				],
				[
					173,
					1,
					"insert",
					{
						"characters": " crate::"
					},
					"CAAAAAMAAAAAAAAABAAAAAAAAAAAAAAABAAAAAAAAAAFAAAAAAAAAAAAAAAFAAAAAAAAAAYAAAAAAAAAAAAAAAYAAAAAAAAABwAAAAAAAAAAAAAABwAAAAAAAAAIAAAAAAAAAAAAAAAIAAAAAAAAAAkAAAAAAAAAAAAAAAkAAAAAAAAACgAAAAAAAAAAAAAACgAAAAAAAAALAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAwAAAAAAAAADAAAAAAAAAAAAAAAAAPC/"
				],
				[
					174,
					1,
					"insert",
					{
						"characters": "render::"
					},
					"CAAAAAsAAAAAAAAADAAAAAAAAAAAAAAADAAAAAAAAAANAAAAAAAAAAAAAAANAAAAAAAAAA4AAAAAAAAAAAAAAA4AAAAAAAAADwAAAAAAAAAAAAAADwAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAABEAAAAAAAAAAAAAABEAAAAAAAAAEgAAAAAAAAAAAAAAEgAAAAAAAAATAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACwAAAAAAAAALAAAAAAAAAAAAAAAAAPC/"
				],
				[
					175,
					1,
					"insert",
					{
						"characters": "render"
					},
					"BgAAABMAAAAAAAAAFAAAAAAAAAAAAAAAFAAAAAAAAAAVAAAAAAAAAAAAAAAVAAAAAAAAABYAAAAAAAAAAAAAABYAAAAAAAAAFwAAAAAAAAAAAAAAFwAAAAAAAAAYAAAAAAAAAAAAAAAYAAAAAAAAABkAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEwAAAAAAAAATAAAAAAAAAAAAAAAAAPC/"
				],
				[
					176,
					1,
					"insert_completion",
					{
						"completion": "render_commands",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "render_commands"
					},
					"AgAAABMAAAAAAAAAEwAAAAAAAAAGAAAAcmVuZGVyEwAAAAAAAAAiAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGQAAAAAAAAAZAAAAAAAAAAAAAAAAAPC/"
				],
				[
					177,
					1,
					"insert",
					{
						"characters": "::*;"
					},
					"BAAAACIAAAAAAAAAIwAAAAAAAAAAAAAAIwAAAAAAAAAkAAAAAAAAAAAAAAAkAAAAAAAAACUAAAAAAAAAAAAAACUAAAAAAAAAJgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIgAAAAAAAAAiAAAAAAAAAAAAAAAAAPC/"
				],
				[
					182,
					1,
					"left_delete",
					null,
					"AQAAACEAAAAAAAAAIQAAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAAIgAAAAAAAAAiAAAAAAAAAAAAAAAAAPC/"
				],
				[
					193,
					1,
					"insert",
					{
						"characters": "eng"
					},
					"AwAAAAoAAAAAAAAACwAAAAAAAAAAAAAACwAAAAAAAAAMAAAAAAAAAAAAAAAMAAAAAAAAAA0AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACgAAAAAAAAAKAAAAAAAAAAAAAAAAAPC/"
				],
				[
					194,
					3,
					"left_delete",
					null,
					"AwAAAAwAAAAAAAAADAAAAAAAAAABAAAAZwsAAAAAAAAACwAAAAAAAAABAAAAbgoAAAAAAAAACgAAAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAADQAAAAAAAAANAAAAAAAAAAAAAAAAAPC/"
				],
				[
					196,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAABEAAAAAAAAAEgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEQAAAAAAAAARAAAAAAAAAAAAAAAAAPC/"
				],
				[
					197,
					1,
					"left_delete",
					null,
					"AQAAABEAAAAAAAAAEQAAAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAAEgAAAAAAAAASAAAAAAAAAAAAAAAAAPC/"
				],
				[
					199,
					1,
					"insert",
					{
						"characters": "engine::"
					},
					"CAAAAAsAAAAAAAAADAAAAAAAAAAAAAAADAAAAAAAAAANAAAAAAAAAAAAAAANAAAAAAAAAA4AAAAAAAAAAAAAAA4AAAAAAAAADwAAAAAAAAAAAAAADwAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAABEAAAAAAAAAAAAAABEAAAAAAAAAEgAAAAAAAAAAAAAAEgAAAAAAAAATAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACwAAAAAAAAALAAAAAAAAAAAAAAAAAPC/"
				],
				[
					207,
					1,
					"insert",
					{
						"characters": "\nrender"
					},
					"CAAAADEBAAAAAAAAMgEAAAAAAAAAAAAAMgEAAAAAAAA+AQAAAAAAAAAAAAA+AQAAAAAAAD8BAAAAAAAAAAAAAD8BAAAAAAAAQAEAAAAAAAAAAAAAQAEAAAAAAABBAQAAAAAAAAAAAABBAQAAAAAAAEIBAAAAAAAAAAAAAEIBAAAAAAAAQwEAAAAAAAAAAAAAQwEAAAAAAABEAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMQEAAAAAAAAxAQAAAAAAAP///////+9/"
				],
				[
					210,
					1,
					"insert_completion",
					{
						"completion": "render_command",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "render_command"
					},
					"AgAAAD4BAAAAAAAAPgEAAAAAAAAGAAAAcmVuZGVyPgEAAAAAAABMAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARAEAAAAAAABEAQAAAAAAAAAAAAAAAPC/"
				],
				[
					211,
					1,
					"insert",
					{
						"characters": "::"
					},
					"AgAAAEwBAAAAAAAATQEAAAAAAAAAAAAATQEAAAAAAABOAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATAEAAAAAAABMAQAAAAAAAAAAAAAAAPC/"
				],
				[
					212,
					2,
					"left_delete",
					null,
					"AgAAAE0BAAAAAAAATQEAAAAAAAABAAAAOkwBAAAAAAAATAEAAAAAAAABAAAAOg",
					"AQAAAAAAAAABAAAATgEAAAAAAABOAQAAAAAAAAAAAAAAAPC/"
				],
				[
					213,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAEwBAAAAAAAATQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATAEAAAAAAABMAQAAAAAAAAAAAAAAAPC/"
				],
				[
					214,
					1,
					"insert",
					{
						"characters": " vec!"
					},
					"BQAAAE0BAAAAAAAATgEAAAAAAAAAAAAATgEAAAAAAABPAQAAAAAAAAAAAABPAQAAAAAAAFABAAAAAAAAAAAAAFABAAAAAAAAUQEAAAAAAAAAAAAAUQEAAAAAAABSAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATQEAAAAAAABNAQAAAAAAAAAAAAAAAPC/"
				],
				[
					215,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAFIBAAAAAAAAVAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUgEAAAAAAABSAQAAAAAAAAAAAAAAAPC/"
				],
				[
					217,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAFQBAAAAAAAAVQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVAEAAAAAAABUAQAAAAAAAAAAAAAAAPC/"
				],
				[
					223,
					1,
					"left_delete",
					null,
					"AQAAAEwBAAAAAAAATAEAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAATQEAAAAAAABNAQAAAAAAAAAAAAAAAPC/"
				],
				[
					224,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAEwBAAAAAAAATQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATAEAAAAAAABMAQAAAAAAAAAAAAAAAPC/"
				],
				[
					229,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAAEwBAAAAAAAATQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATAEAAAAAAABMAQAAAAAAAAAAAAAAAPC/"
				],
				[
					237,
					2,
					"left_delete",
					null,
					"AgAAAGYAAAAAAAAAZgAAAAAAAAABAAAAZGUAAAAAAAAAZQAAAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAAZwAAAAAAAABnAAAAAAAAAAAAAAAAAPC/"
				],
				[
					238,
					1,
					"insert",
					{
						"characters": "vao"
					},
					"AwAAAGUAAAAAAAAAZgAAAAAAAAAAAAAAZgAAAAAAAABnAAAAAAAAAAAAAABnAAAAAAAAAGgAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZQAAAAAAAABlAAAAAAAAAAAAAAAAAPC/"
				],
				[
					241,
					3,
					"left_delete",
					null,
					"AwAAAGwAAAAAAAAAbAAAAAAAAAABAAAAMmsAAAAAAAAAawAAAAAAAAABAAAAM2oAAAAAAAAAagAAAAAAAAABAAAAdQ",
					"AQAAAAAAAAABAAAAbQAAAAAAAABtAAAAAAAAAAAAAAAAAPC/"
				],
				[
					242,
					1,
					"insert",
					{
						"characters": "Vao"
					},
					"AwAAAGoAAAAAAAAAawAAAAAAAAAAAAAAawAAAAAAAABsAAAAAAAAAAAAAABsAAAAAAAAAG0AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAagAAAAAAAABqAAAAAAAAAAAAAAAAAPC/"
				],
				[
					246,
					1,
					"paste",
					null,
					"AQAAAAAAAAAAAAAALgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFQAAAAAAAAAVAAAAAAAAAAAAAAAA4GJA"
				],
				[
					252,
					1,
					"insert",
					{
						"characters": "vao"
					},
					"BAAAAEkAAAAAAAAASgAAAAAAAAAAAAAASgAAAAAAAABKAAAAAAAAAA4AAAByZW5kZXJfY29tbWFuZEoAAAAAAAAASwAAAAAAAAAAAAAASwAAAAAAAABMAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVwAAAAAAAABJAAAAAAAAAAAAAAAAAPC/"
				],
				[
					260,
					4,
					"left_delete",
					null,
					"BAAAAIoAAAAAAAAAigAAAAAAAAABAAAAb4kAAAAAAAAAiQAAAAAAAAABAAAAYYgAAAAAAAAAiAAAAAAAAAABAAAAdocAAAAAAAAAhwAAAAAAAAABAAAAXw",
					"AQAAAAAAAAABAAAAiwAAAAAAAACLAAAAAAAAAAAAAAAAAPC/"
				],
				[
					273,
					1,
					"left_delete",
					null,
					"AQAAADkBAAAAAAAAOQEAAAAAAAABAAAAMA",
					"AQAAAAAAAAABAAAAOgEAAAAAAAA6AQAAAAAAAAAAAAAAAPC/"
				],
				[
					274,
					1,
					"insert",
					{
						"characters": "Vao::new()"
					},
					"CgAAADkBAAAAAAAAOgEAAAAAAAAAAAAAOgEAAAAAAAA7AQAAAAAAAAAAAAA7AQAAAAAAADwBAAAAAAAAAAAAADwBAAAAAAAAPQEAAAAAAAAAAAAAPQEAAAAAAAA+AQAAAAAAAAAAAAA+AQAAAAAAAD8BAAAAAAAAAAAAAD8BAAAAAAAAQAEAAAAAAAAAAAAAQAEAAAAAAABBAQAAAAAAAAAAAABBAQAAAAAAAEIBAAAAAAAAAAAAAEIBAAAAAAAAQwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOQEAAAAAAAA5AQAAAAAAAAAAAAAAAPC/"
				],
				[
					275,
					2,
					"left_delete",
					null,
					"AgAAAEIBAAAAAAAAQgEAAAAAAAABAAAAKUEBAAAAAAAAQQEAAAAAAAABAAAAKA",
					"AQAAAAAAAAABAAAAQwEAAAAAAABDAQAAAAAAAAAAAAAAAPC/"
				],
				[
					276,
					1,
					"insert",
					{
						"characters": "_emtpy()"
					},
					"CAAAAEEBAAAAAAAAQgEAAAAAAAAAAAAAQgEAAAAAAABDAQAAAAAAAAAAAABDAQAAAAAAAEQBAAAAAAAAAAAAAEQBAAAAAAAARQEAAAAAAAAAAAAARQEAAAAAAABGAQAAAAAAAAAAAABGAQAAAAAAAEcBAAAAAAAAAAAAAEcBAAAAAAAASAEAAAAAAAAAAAAASAEAAAAAAABJAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQQEAAAAAAABBAQAAAAAAAAAAAAAAAPC/"
				],
				[
					280,
					1,
					"insert",
					{
						"characters": "empty"
					},
					"BgAAAEIBAAAAAAAAQwEAAAAAAAAAAAAAQwEAAAAAAABDAQAAAAAAAAUAAABlbXRweUMBAAAAAAAARAEAAAAAAAAAAAAARAEAAAAAAABFAQAAAAAAAAAAAABFAQAAAAAAAEYBAAAAAAAAAAAAAEYBAAAAAAAARwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARwEAAAAAAABCAQAAAAAAAAAAAAAAAPC/"
				],
				[
					284,
					1,
					"insert",
					{
						"characters": "Openion"
					},
					"BwAAAIkAAAAAAAAAigAAAAAAAAAAAAAAigAAAAAAAACLAAAAAAAAAAAAAACLAAAAAAAAAIwAAAAAAAAAAAAAAIwAAAAAAAAAjQAAAAAAAAAAAAAAjQAAAAAAAACOAAAAAAAAAAAAAACOAAAAAAAAAI8AAAAAAAAAAAAAAI8AAAAAAAAAkAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiQAAAAAAAACJAAAAAAAAAAAAAAAAAPC/"
				],
				[
					286,
					1,
					"insert",
					{
						"characters": "OPtion<"
					},
					"CAAAAIkAAAAAAAAAigAAAAAAAAAAAAAAigAAAAAAAACKAAAAAAAAAAcAAABPcGVuaW9uigAAAAAAAACLAAAAAAAAAAAAAACLAAAAAAAAAIwAAAAAAAAAAAAAAIwAAAAAAAAAjQAAAAAAAAAAAAAAjQAAAAAAAACOAAAAAAAAAAAAAACOAAAAAAAAAI8AAAAAAAAAAAAAAI8AAAAAAAAAkAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkAAAAAAAAACJAAAAAAAAAAAAAAAAAPC/"
				],
				[
					287,
					6,
					"left_delete",
					null,
					"BgAAAI8AAAAAAAAAjwAAAAAAAAABAAAAPI4AAAAAAAAAjgAAAAAAAAABAAAAbo0AAAAAAAAAjQAAAAAAAAABAAAAb4wAAAAAAAAAjAAAAAAAAAABAAAAaYsAAAAAAAAAiwAAAAAAAAABAAAAdIoAAAAAAAAAigAAAAAAAAABAAAAUA",
					"AQAAAAAAAAABAAAAkAAAAAAAAACQAAAAAAAAAAAAAAAAAPC/"
				],
				[
					288,
					1,
					"insert",
					{
						"characters": "ption<"
					},
					"BgAAAIoAAAAAAAAAiwAAAAAAAAAAAAAAiwAAAAAAAACMAAAAAAAAAAAAAACMAAAAAAAAAI0AAAAAAAAAAAAAAI0AAAAAAAAAjgAAAAAAAAAAAAAAjgAAAAAAAACPAAAAAAAAAAAAAACPAAAAAAAAAJAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAigAAAAAAAACKAAAAAAAAAAAAAAAAAPC/"
				],
				[
					291,
					1,
					"insert",
					{
						"characters": ">"
					},
					"AQAAAJMAAAAAAAAAlAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkwAAAAAAAACTAAAAAAAAAAAAAAAAAPC/"
				],
				[
					297,
					1,
					"insert",
					{
						"characters": "None"
					},
					"BQAAAEEBAAAAAAAAQgEAAAAAAAAAAAAAQgEAAAAAAABCAQAAAAAAABAAAABWYW86Om5ld19lbXB0eSgpQgEAAAAAAABDAQAAAAAAAAAAAABDAQAAAAAAAEQBAAAAAAAAAAAAAEQBAAAAAAAARQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQQEAAAAAAABRAQAAAAAAAAAAAAAAAPC/"
				],
				[
					307,
					7,
					"left_delete",
					null,
					"BwAAAI8AAAAAAAAAjwAAAAAAAAABAAAAPI4AAAAAAAAAjgAAAAAAAAABAAAAbo0AAAAAAAAAjQAAAAAAAAABAAAAb4wAAAAAAAAAjAAAAAAAAAABAAAAaYsAAAAAAAAAiwAAAAAAAAABAAAAdIoAAAAAAAAAigAAAAAAAAABAAAAcIkAAAAAAAAAiQAAAAAAAAABAAAATw",
					"AQAAAAAAAAABAAAAkAAAAAAAAACQAAAAAAAAAAAAAAAAAPC/"
				],
				[
					310,
					1,
					"left_delete",
					null,
					"AQAAAIwAAAAAAAAAjAAAAAAAAAABAAAAPg",
					"AQAAAAAAAAABAAAAjQAAAAAAAACNAAAAAAAAAAAAAAAAAPC/"
				],
				[
					318,
					4,
					"left_delete",
					null,
					"BAAAADwBAAAAAAAAPAEAAAAAAAABAAAAZTsBAAAAAAAAOwEAAAAAAAABAAAAbjoBAAAAAAAAOgEAAAAAAAABAAAAbzkBAAAAAAAAOQEAAAAAAAABAAAATg",
					"AQAAAAAAAAABAAAAPQEAAAAAAAA9AQAAAAAAAAAAAAAAAPC/"
				],
				[
					319,
					1,
					"insert",
					{
						"characters": "vo"
					},
					"AgAAADkBAAAAAAAAOgEAAAAAAAAAAAAAOgEAAAAAAAA7AQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOQEAAAAAAAA5AQAAAAAAAAAAAAAAAPC/"
				],
				[
					320,
					2,
					"left_delete",
					null,
					"AgAAADoBAAAAAAAAOgEAAAAAAAABAAAAbzkBAAAAAAAAOQEAAAAAAAABAAAAdg",
					"AQAAAAAAAAABAAAAOwEAAAAAAAA7AQAAAAAAAAAAAAAAAPC/"
				],
				[
					321,
					1,
					"insert",
					{
						"characters": "Vao::nwe_"
					},
					"CQAAADkBAAAAAAAAOgEAAAAAAAAAAAAAOgEAAAAAAAA7AQAAAAAAAAAAAAA7AQAAAAAAADwBAAAAAAAAAAAAADwBAAAAAAAAPQEAAAAAAAAAAAAAPQEAAAAAAAA+AQAAAAAAAAAAAAA+AQAAAAAAAD8BAAAAAAAAAAAAAD8BAAAAAAAAQAEAAAAAAAAAAAAAQAEAAAAAAABBAQAAAAAAAAAAAABBAQAAAAAAAEIBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOQEAAAAAAAA5AQAAAAAAAAAAAAAAAPC/"
				],
				[
					322,
					3,
					"left_delete",
					null,
					"AwAAAEEBAAAAAAAAQQEAAAAAAAABAAAAX0ABAAAAAAAAQAEAAAAAAAABAAAAZT8BAAAAAAAAPwEAAAAAAAABAAAAdw",
					"AQAAAAAAAAABAAAAQgEAAAAAAABCAQAAAAAAAAAAAAAAAPC/"
				],
				[
					323,
					1,
					"insert",
					{
						"characters": "ew_empty()"
					},
					"CgAAAD8BAAAAAAAAQAEAAAAAAAAAAAAAQAEAAAAAAABBAQAAAAAAAAAAAABBAQAAAAAAAEIBAAAAAAAAAAAAAEIBAAAAAAAAQwEAAAAAAAAAAAAAQwEAAAAAAABEAQAAAAAAAAAAAABEAQAAAAAAAEUBAAAAAAAAAAAAAEUBAAAAAAAARgEAAAAAAAAAAAAARgEAAAAAAABHAQAAAAAAAAAAAABHAQAAAAAAAEgBAAAAAAAAAAAAAEgBAAAAAAAASQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPwEAAAAAAAA/AQAAAAAAAAAAAAAAAPC/"
				],
				[
					327,
					3,
					"left_delete",
					null,
					"AwAAADYBAAAAAAAANgEAAAAAAAABAAAAZDUBAAAAAAAANQEAAAAAAAABAAAAaTQBAAAAAAAANAEAAAAAAAABAAAAXw",
					"AQAAAAAAAAABAAAANwEAAAAAAAA3AQAAAAAAAAAAAAAAAPC/"
				],
				[
					338,
					1,
					"insert",
					{
						"characters": "basic_shader"
					},
					"DQAAAG0AAAAAAAAAbgAAAAAAAAAAAAAAbgAAAAAAAABuAAAAAAAAAAcAAABwcm9nX2lkbgAAAAAAAABvAAAAAAAAAAAAAABvAAAAAAAAAHAAAAAAAAAAAAAAAHAAAAAAAAAAcQAAAAAAAAAAAAAAcQAAAAAAAAByAAAAAAAAAAAAAAByAAAAAAAAAHMAAAAAAAAAAAAAAHMAAAAAAAAAdAAAAAAAAAAAAAAAdAAAAAAAAAB1AAAAAAAAAAAAAAB1AAAAAAAAAHYAAAAAAAAAAAAAAHYAAAAAAAAAdwAAAAAAAAAAAAAAdwAAAAAAAAB4AAAAAAAAAAAAAAB4AAAAAAAAAHkAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdAAAAAAAAABtAAAAAAAAAAAAAAAAAPC/"
				],
				[
					341,
					2,
					"left_delete",
					null,
					"AgAAAH0AAAAAAAAAfQAAAAAAAAABAAAAMnwAAAAAAAAAfAAAAAAAAAABAAAAMw",
					"AQAAAAAAAAABAAAAfgAAAAAAAAB+AAAAAAAAAAAAAAAAAPC/"
				],
				[
					344,
					1,
					"paste",
					null,
					"AQAAAC4AAAAAAAAAUQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARQAAAAAAAABFAAAAAAAAAAAAAAAAwGRA"
				],
				[
					349,
					1,
					"insert",
					{
						"characters": "Sh"
					},
					"AwAAAGwAAAAAAAAAbQAAAAAAAAAAAAAAbQAAAAAAAABtAAAAAAAAAAMAAAB2YW9tAAAAAAAAAG4AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbwAAAAAAAABsAAAAAAAAAAAAAAAAAPC/"
				],
				[
					350,
					2,
					"left_delete",
					null,
					"AgAAAG0AAAAAAAAAbQAAAAAAAAABAAAAaGwAAAAAAAAAbAAAAAAAAAABAAAAUw",
					"AQAAAAAAAAABAAAAbgAAAAAAAABuAAAAAAAAAAAAAAAAAPC/"
				],
				[
					351,
					1,
					"insert",
					{
						"characters": "shader"
					},
					"BgAAAGwAAAAAAAAAbQAAAAAAAAAAAAAAbQAAAAAAAABuAAAAAAAAAAAAAABuAAAAAAAAAG8AAAAAAAAAAAAAAG8AAAAAAAAAcAAAAAAAAAAAAAAAcAAAAAAAAABxAAAAAAAAAAAAAABxAAAAAAAAAHIAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbAAAAAAAAABsAAAAAAAAAAAAAAAAAPC/"
				],
				[
					358,
					1,
					"left_delete",
					null,
					"AQAAAKEAAAAAAAAAoQAAAAAAAAABAAAAdQ",
					"AQAAAAAAAAABAAAAogAAAAAAAACiAAAAAAAAAAAAAAAAAPC/"
				],
				[
					359,
					1,
					"insert",
					{
						"characters": "Shader"
					},
					"BgAAAKEAAAAAAAAAogAAAAAAAAAAAAAAogAAAAAAAACjAAAAAAAAAAAAAACjAAAAAAAAAKQAAAAAAAAAAAAAAKQAAAAAAAAApQAAAAAAAAAAAAAApQAAAAAAAACmAAAAAAAAAAAAAACmAAAAAAAAAKcAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoQAAAAAAAAChAAAAAAAAAAAAAAAAAPC/"
				],
				[
					360,
					1,
					"rust_fmt_format_buffer",
					null,
					"BAAAAEkAAAAAAAAASQAAAAAAAAADAAAAdmFvSQAAAAAAAABPAAAAAAAAAAAAAABvAAAAAAAAAG8AAAAAAAAABgAAAHNoYWRlcm8AAAAAAAAAcgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApwAAAAAAAACnAAAAAAAAAAAAAAAAAPC/"
				],
				[
					370,
					1,
					"left_delete",
					null,
					"AQAAAE8BAAAAAAAATwEAAAAAAAABAAAAMA",
					"AQAAAAAAAAABAAAAUAEAAAAAAABQAQAAAAAAAAAAAAAAAPC/"
				],
				[
					371,
					1,
					"insert",
					{
						"characters": "shad"
					},
					"BAAAAE8BAAAAAAAAUAEAAAAAAAAAAAAAUAEAAAAAAABRAQAAAAAAAAAAAABRAQAAAAAAAFIBAAAAAAAAAAAAAFIBAAAAAAAAUwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATwEAAAAAAABPAQAAAAAAAAAAAAAAAPC/"
				],
				[
					372,
					4,
					"left_delete",
					null,
					"BAAAAFIBAAAAAAAAUgEAAAAAAAABAAAAZFEBAAAAAAAAUQEAAAAAAAABAAAAYVABAAAAAAAAUAEAAAAAAAABAAAAaE8BAAAAAAAATwEAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAAUwEAAAAAAABTAQAAAAAAAAAAAAAAAPC/"
				],
				[
					373,
					1,
					"insert",
					{
						"characters": "Shader::new_ep"
					},
					"DgAAAE8BAAAAAAAAUAEAAAAAAAAAAAAAUAEAAAAAAABRAQAAAAAAAAAAAABRAQAAAAAAAFIBAAAAAAAAAAAAAFIBAAAAAAAAUwEAAAAAAAAAAAAAUwEAAAAAAABUAQAAAAAAAAAAAABUAQAAAAAAAFUBAAAAAAAAAAAAAFUBAAAAAAAAVgEAAAAAAAAAAAAAVgEAAAAAAABXAQAAAAAAAAAAAABXAQAAAAAAAFgBAAAAAAAAAAAAAFgBAAAAAAAAWQEAAAAAAAAAAAAAWQEAAAAAAABaAQAAAAAAAAAAAABaAQAAAAAAAFsBAAAAAAAAAAAAAFsBAAAAAAAAXAEAAAAAAAAAAAAAXAEAAAAAAABdAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATwEAAAAAAABPAQAAAAAAAAAAAAAAAPC/"
				],
				[
					374,
					1,
					"left_delete",
					null,
					"AQAAAFwBAAAAAAAAXAEAAAAAAAABAAAAcA",
					"AQAAAAAAAAABAAAAXQEAAAAAAABdAQAAAAAAAAAAAAAAAPC/"
				],
				[
					375,
					1,
					"insert",
					{
						"characters": "mpty()"
					},
					"BgAAAFwBAAAAAAAAXQEAAAAAAAAAAAAAXQEAAAAAAABeAQAAAAAAAAAAAABeAQAAAAAAAF8BAAAAAAAAAAAAAF8BAAAAAAAAYAEAAAAAAAAAAAAAYAEAAAAAAABhAQAAAAAAAAAAAABhAQAAAAAAAGIBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXAEAAAAAAABcAQAAAAAAAAAAAAAAAPC/"
				],
				[
					381,
					1,
					"insert",
					{
						"characters": "ba"
					},
					"AwAAAEYBAAAAAAAARwEAAAAAAAAAAAAARwEAAAAAAABHAQAAAAAAAAcAAABwcm9nX2lkRwEAAAAAAABIAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATQEAAAAAAABGAQAAAAAAAAAAAAAAAPC/"
				],
				[
					382,
					1,
					"insert_completion",
					{
						"completion": "basic_shader",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "basic_shader"
					},
					"AgAAAEYBAAAAAAAARgEAAAAAAAACAAAAYmFGAQAAAAAAAFIBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASAEAAAAAAABIAQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "ghostly_game_windows/src/gl.rs",
			"settings":
			{
				"buffer_size": 12813,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"rust_fmt_format_buffer",
					null,
					"AQAAACsAAAAAAAAALQAAAAAAAAAAAAAA",
					"FAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					7,
					1,
					"left_delete",
					null,
					"AQAAACsAAAAAAAAAKwAAAAAAAAABAAAADQ",
					"FAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					11,
					1,
					"paste",
					null,
					"AQAAAAAAAAAAAAAAGwAAAAAAAAAAAAAA",
					"FAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAABoAAAAAAAAAGwAAAAAAAAAAAAAA",
					"FAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": "pub"
					},
					"AwAAABwAAAAAAAAAHQAAAAAAAAAAAAAAHQAAAAAAAAAeAAAAAAAAAAAAAAAeAAAAAAAAAB8AAAAAAAAAAAAAAA",
					"FAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					18,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAB8AAAAAAAAAIAAAAAAAAAAAAAAA",
					"FAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAABsAAAAAAAAAHAAAAAAAAAAAAAAA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABsAAAAAAAAAGwAAAAAAAAAAAAAAAADwvw"
				],
				[
					25,
					1,
					"paste",
					null,
					"AQAAABwAAAAAAAAAwDAAAAAAAAAAAAAA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABwAAAAAAAAAHAAAAAAAAAAAAAAAAADwvw"
				],
				[
					26,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line.sublime-macro"
					},
					"AQAAAMAwAAAAAAAAwTAAAAAAAAAAAAAA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMAwAAAAAAAAwDAAAAAAAAAAAAAAAADwvw"
				],
				[
					27,
					2,
					"rust_fmt_format_buffer",
					null,
					"AQAAAMEwAAAAAAAAwTAAAAAAAAABAAAACg",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMEwAAAAAAAAwTAAAAAAAAAAAAAAAADwvw"
				],
				[
					31,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAABsAAAAAAAAAHAAAAAAAAAAAAAAA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABsAAAAAAAAAGwAAAAAAAAAAAAAAAAAAAA"
				],
				[
					32,
					1,
					"paste",
					null,
					"AQAAABwAAAAAAAAAbwAAAAAAAAAAAAAA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABwAAAAAAAAAHAAAAAAAAAAAAAAAAADwvw"
				],
				[
					38,
					1,
					"insert",
					{
						"characters": "game"
					},
					"BQAAACUAAAAAAAAAJgAAAAAAAAAAAAAAJgAAAAAAAAAmAAAAAAAAAAQAAABjb21lJgAAAAAAAAAnAAAAAAAAAAAAAAAnAAAAAAAAACgAAAAAAAAAAAAAACgAAAAAAAAAKQAAAAAAAAAAAAAA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACkAAAAAAAAAJQAAAAAAAAAAAAAAAADwvw"
				],
				[
					39,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACkAAAAAAAAAKgAAAAAAAAAAAAAA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACkAAAAAAAAAKQAAAAAAAAAAAAAAAADwvw"
				],
				[
					40,
					1,
					"left_delete",
					null,
					"AQAAACkAAAAAAAAAKQAAAAAAAAABAAAAIA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACoAAAAAAAAAKgAAAAAAAAAAAAAAAADwvw"
				],
				[
					48,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAAKkCAAAAAAAArAIAAAAAAAAAAAAA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACkAAAAAAAAAKQAAAAAAAAAAAAAAAADwvw"
				],
				[
					50,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAAN8CAAAAAAAA4gIAAAAAAAAAAAAA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACkAAAAAAAAAKQAAAAAAAAAAAAAAAADwvw"
				],
				[
					52,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAABYDAAAAAAAAGQMAAAAAAAAAAAAA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACkAAAAAAAAAKQAAAAAAAAAAAAAAAADwvw"
				],
				[
					67,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAAKkCAAAAAAAAqQIAAAAAAAADAAAALy8g",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACkAAAAAAAAAKQAAAAAAAAAAAAAAAADwvw"
				],
				[
					69,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAANwCAAAAAAAA3AIAAAAAAAADAAAALy8g",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACkAAAAAAAAAKQAAAAAAAAAAAAAAAADwvw"
				],
				[
					71,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAABADAAAAAAAAEAMAAAAAAAADAAAALy8g",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACkAAAAAAAAAKQAAAAAAAAAAAAAAAADwvw"
				],
				[
					76,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAAAAAAAAAAAAAQAAAAAAAAAAAAAA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACkAAAAAAAAAKQAAAAAAAAAAAAAAAADwvw"
				],
				[
					78,
					1,
					"insert",
					{
						"characters": "3"
					},
					"AQAAAAAAAAAAAAAAAQAAAAAAAAAAAAAA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACoAAAAAAAAAKgAAAAAAAAAAAAAAAADwvw"
				],
				[
					79,
					1,
					"left_delete",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAMw",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACsAAAAAAAAAKwAAAAAAAAAAAAAAAADwvw"
				],
				[
					80,
					1,
					"insert",
					{
						"characters": "#"
					},
					"AQAAAAAAAAAAAAAAAQAAAAAAAAAAAAAA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACoAAAAAAAAAKgAAAAAAAAAAAAAAAADwvw"
				],
				[
					81,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAAEAAAAAAAAAAwAAAAAAAAAAAAAA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACsAAAAAAAAAKwAAAAAAAAAAAAAAAADwvw"
				],
				[
					82,
					1,
					"insert",
					{
						"characters": "allow"
					},
					"BQAAAAIAAAAAAAAAAwAAAAAAAAAAAAAAAwAAAAAAAAAEAAAAAAAAAAAAAAAEAAAAAAAAAAUAAAAAAAAAAAAAAAUAAAAAAAAABgAAAAAAAAAAAAAABgAAAAAAAAAHAAAAAAAAAAAAAAA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAC0AAAAAAAAALQAAAAAAAAAAAAAAAADwvw"
				],
				[
					85,
					1,
					"insert",
					{
						"characters": "!"
					},
					"AQAAAAEAAAAAAAAAAgAAAAAAAAAAAAAA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADIAAAAAAAAAMgAAAAAAAAAAAAAAAADwvw"
				],
				[
					88,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAAgAAAAAAAAACgAAAAAAAAAAAAAA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADMAAAAAAAAAMwAAAAAAAAAAAAAAAADwvw"
				],
				[
					89,
					1,
					"insert",
					{
						"characters": "non_camel_"
					},
					"CgAAAAkAAAAAAAAACgAAAAAAAAAAAAAACgAAAAAAAAALAAAAAAAAAAAAAAALAAAAAAAAAAwAAAAAAAAAAAAAAAwAAAAAAAAADQAAAAAAAAAAAAAADQAAAAAAAAAOAAAAAAAAAAAAAAAOAAAAAAAAAA8AAAAAAAAAAAAAAA8AAAAAAAAAEAAAAAAAAAAAAAAAEAAAAAAAAAARAAAAAAAAAAAAAAARAAAAAAAAABIAAAAAAAAAAAAAABIAAAAAAAAAEwAAAAAAAAAAAAAA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADUAAAAAAAAANQAAAAAAAAAAAAAAAADwvw"
				],
				[
					90,
					1,
					"insert",
					{
						"characters": "case_types"
					},
					"CgAAABMAAAAAAAAAFAAAAAAAAAAAAAAAFAAAAAAAAAAVAAAAAAAAAAAAAAAVAAAAAAAAABYAAAAAAAAAAAAAABYAAAAAAAAAFwAAAAAAAAAAAAAAFwAAAAAAAAAYAAAAAAAAAAAAAAAYAAAAAAAAABkAAAAAAAAAAAAAABkAAAAAAAAAGgAAAAAAAAAAAAAAGgAAAAAAAAAbAAAAAAAAAAAAAAAbAAAAAAAAABwAAAAAAAAAAAAAABwAAAAAAAAAHQAAAAAAAAAAAAAA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAD8AAAAAAAAAPwAAAAAAAAAAAAAAAADwvw"
				],
				[
					92,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAB8AAAAAAAAAIAAAAAAAAAAAAAAA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEkAAAAAAAAASQAAAAAAAAAAAAAAAADwvw"
				],
				[
					156,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAADUxAAAAAAAANjEAAAAAAAAAAAAA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEoAAAAAAAAASgAAAAAAAAAAAAAAAADwvw"
				],
				[
					157,
					1,
					"paste",
					null,
					"AQAAADYxAAAAAAAABDoAAAAAAAAAAAAA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEoAAAAAAAAASgAAAAAAAAAAAAAAAADwvw"
				],
				[
					158,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line.sublime-macro"
					},
					"AgAAAAQ6AAAAAAAABToAAAAAAAAAAAAABToAAAAAAAANOgAAAAAAAAAAAAA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEoAAAAAAAAASgAAAAAAAAAAAAAAAADwvw"
				],
				[
					164,
					1,
					"insert",
					{
						"characters": "pub"
					},
					"fAAAANY5AAAAAAAA1zkAAAAAAAAAAAAAnzkAAAAAAACgOQAAAAAAAAAAAABoOQAAAAAAAGk5AAAAAAAAAAAAADE5AAAAAAAAMjkAAAAAAAAAAAAA+jgAAAAAAAD7OAAAAAAAAAAAAADDOAAAAAAAAMQ4AAAAAAAAAAAAAIw4AAAAAAAAjTgAAAAAAAAAAAAAVTgAAAAAAABWOAAAAAAAAAAAAAAeOAAAAAAAAB84AAAAAAAAAAAAAOc3AAAAAAAA6DcAAAAAAAAAAAAAsDcAAAAAAACxNwAAAAAAAAAAAAB5NwAAAAAAAHo3AAAAAAAAAAAAAEI3AAAAAAAAQzcAAAAAAAAAAAAACzcAAAAAAAAMNwAAAAAAAAAAAADUNgAAAAAAANU2AAAAAAAAAAAAAJ02AAAAAAAAnjYAAAAAAAAAAAAAZjYAAAAAAABnNgAAAAAAAAAAAAAvNgAAAAAAADA2AAAAAAAAAAAAAPg1AAAAAAAA+TUAAAAAAAAAAAAAwTUAAAAAAADCNQAAAAAAAAAAAACKNQAAAAAAAIs1AAAAAAAAAAAAAFM1AAAAAAAAVDUAAAAAAAAAAAAAHDUAAAAAAAAdNQAAAAAAAAAAAADlNAAAAAAAAOY0AAAAAAAAAAAAAK40AAAAAAAArzQAAAAAAAAAAAAAdzQAAAAAAAB4NAAAAAAAAAAAAABANAAAAAAAAEE0AAAAAAAAAAAAAAk0AAAAAAAACjQAAAAAAAAAAAAA0jMAAAAAAADTMwAAAAAAAAAAAACbMwAAAAAAAJwzAAAAAAAAAAAAAGQzAAAAAAAAZTMAAAAAAAAAAAAALTMAAAAAAAAuMwAAAAAAAAAAAAD2MgAAAAAAAPcyAAAAAAAAAAAAAL8yAAAAAAAAwDIAAAAAAAAAAAAAiDIAAAAAAACJMgAAAAAAAAAAAABRMgAAAAAAAFIyAAAAAAAAAAAAABoyAAAAAAAAGzIAAAAAAAAAAAAA4zEAAAAAAADkMQAAAAAAAAAAAACsMQAAAAAAAK0xAAAAAAAAAAAAAHUxAAAAAAAAdjEAAAAAAAAAAAAAPjEAAAAAAAA/MQAAAAAAAAAAAAAuOgAAAAAAAC46AAAAAAAACAAAACAgICAgICAg/zkAAAAAAAAAOgAAAAAAAAAAAADHOQAAAAAAAMg5AAAAAAAAAAAAAI85AAAAAAAAkDkAAAAAAAAAAAAAVzkAAAAAAABYOQAAAAAAAAAAAAAfOQAAAAAAACA5AAAAAAAAAAAAAOc4AAAAAAAA6DgAAAAAAAAAAAAArzgAAAAAAACwOAAAAAAAAAAAAAB3OAAAAAAAAHg4AAAAAAAAAAAAAD84AAAAAAAAQDgAAAAAAAAAAAAABzgAAAAAAAAIOAAAAAAAAAAAAADPNwAAAAAAANA3AAAAAAAAAAAAAJc3AAAAAAAAmDcAAAAAAAAAAAAAXzcAAAAAAABgNwAAAAAAAAAAAAAnNwAAAAAAACg3AAAAAAAAAAAAAO82AAAAAAAA8DYAAAAAAAAAAAAAtzYAAAAAAAC4NgAAAAAAAAAAAAB/NgAAAAAAAIA2AAAAAAAAAAAAAEc2AAAAAAAASDYAAAAAAAAAAAAADzYAAAAAAAAQNgAAAAAAAAAAAADXNQAAAAAAANg1AAAAAAAAAAAAAJ81AAAAAAAAoDUAAAAAAAAAAAAAZzUAAAAAAABoNQAAAAAAAAAAAAAvNQAAAAAAADA1AAAAAAAAAAAAAPc0AAAAAAAA+DQAAAAAAAAAAAAAvzQAAAAAAADANAAAAAAAAAAAAACHNAAAAAAAAIg0AAAAAAAAAAAAAE80AAAAAAAAUDQAAAAAAAAAAAAAFzQAAAAAAAAYNAAAAAAAAAAAAADfMwAAAAAAAOAzAAAAAAAAAAAAAKczAAAAAAAAqDMAAAAAAAAAAAAAbzMAAAAAAABwMwAAAAAAAAAAAAA3MwAAAAAAADgzAAAAAAAAAAAAAP8yAAAAAAAAADMAAAAAAAAAAAAAxzIAAAAAAADIMgAAAAAAAAAAAACPMgAAAAAAAJAyAAAAAAAAAAAAAFcyAAAAAAAAWDIAAAAAAAAAAAAAHzIAAAAAAAAgMgAAAAAAAAAAAADnMQAAAAAAAOgxAAAAAAAAAAAAAK8xAAAAAAAAsDEAAAAAAAAAAAAAdzEAAAAAAAB4MQAAAAAAAAAAAAA/MQAAAAAAAEAxAAAAAAAAAAAAACg6AAAAAAAAKToAAAAAAAAAAAAA7zkAAAAAAADwOQAAAAAAAAAAAAC2OQAAAAAAALc5AAAAAAAAAAAAAH05AAAAAAAAfjkAAAAAAAAAAAAARDkAAAAAAABFOQAAAAAAAAAAAAALOQAAAAAAAAw5AAAAAAAAAAAAANI4AAAAAAAA0zgAAAAAAAAAAAAAmTgAAAAAAACaOAAAAAAAAAAAAABgOAAAAAAAAGE4AAAAAAAAAAAAACc4AAAAAAAAKDgAAAAAAAAAAAAA7jcAAAAAAADvNwAAAAAAAAAAAAC1NwAAAAAAALY3AAAAAAAAAAAAAHw3AAAAAAAAfTcAAAAAAAAAAAAAQzcAAAAAAABENwAAAAAAAAAAAAAKNwAAAAAAAAs3AAAAAAAAAAAAANE2AAAAAAAA0jYAAAAAAAAAAAAAmDYAAAAAAACZNgAAAAAAAAAAAABfNgAAAAAAAGA2AAAAAAAAAAAAACY2AAAAAAAAJzYAAAAAAAAAAAAA7TUAAAAAAADuNQAAAAAAAAAAAAC0NQAAAAAAALU1AAAAAAAAAAAAAHs1AAAAAAAAfDUAAAAAAAAAAAAAQjUAAAAAAABDNQAAAAAAAAAAAAAJNQAAAAAAAAo1AAAAAAAAAAAAANA0AAAAAAAA0TQAAAAAAAAAAAAAlzQAAAAAAACYNAAAAAAAAAAAAABeNAAAAAAAAF80AAAAAAAAAAAAACU0AAAAAAAAJjQAAAAAAAAAAAAA7DMAAAAAAADtMwAAAAAAAAAAAACzMwAAAAAAALQzAAAAAAAAAAAAAHozAAAAAAAAezMAAAAAAAAAAAAAQTMAAAAAAABCMwAAAAAAAAAAAAAIMwAAAAAAAAkzAAAAAAAAAAAAAM8yAAAAAAAA0DIAAAAAAAAAAAAAljIAAAAAAACXMgAAAAAAAAAAAABdMgAAAAAAAF4yAAAAAAAAAAAAACQyAAAAAAAAJTIAAAAAAAAAAAAA6zEAAAAAAADsMQAAAAAAAAAAAACyMQAAAAAAALMxAAAAAAAAAAAAAHkxAAAAAAAAejEAAAAAAAAAAAAAQDEAAAAAAABBMQAAAAAAAAAAAAA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEoAAAAAAAAASgAAAAAAAAAAAAAAAADwvw"
				],
				[
					165,
					1,
					"insert",
					{
						"characters": " const"
					},
					"9gAAAFE6AAAAAAAAUjoAAAAAAAAAAAAAFzoAAAAAAAAYOgAAAAAAAAAAAADdOQAAAAAAAN45AAAAAAAAAAAAAKM5AAAAAAAApDkAAAAAAAAAAAAAaTkAAAAAAABqOQAAAAAAAAAAAAAvOQAAAAAAADA5AAAAAAAAAAAAAPU4AAAAAAAA9jgAAAAAAAAAAAAAuzgAAAAAAAC8OAAAAAAAAAAAAACBOAAAAAAAAII4AAAAAAAAAAAAAEc4AAAAAAAASDgAAAAAAAAAAAAADTgAAAAAAAAOOAAAAAAAAAAAAADTNwAAAAAAANQ3AAAAAAAAAAAAAJk3AAAAAAAAmjcAAAAAAAAAAAAAXzcAAAAAAABgNwAAAAAAAAAAAAAlNwAAAAAAACY3AAAAAAAAAAAAAOs2AAAAAAAA7DYAAAAAAAAAAAAAsTYAAAAAAACyNgAAAAAAAAAAAAB3NgAAAAAAAHg2AAAAAAAAAAAAAD02AAAAAAAAPjYAAAAAAAAAAAAAAzYAAAAAAAAENgAAAAAAAAAAAADJNQAAAAAAAMo1AAAAAAAAAAAAAI81AAAAAAAAkDUAAAAAAAAAAAAAVTUAAAAAAABWNQAAAAAAAAAAAAAbNQAAAAAAABw1AAAAAAAAAAAAAOE0AAAAAAAA4jQAAAAAAAAAAAAApzQAAAAAAACoNAAAAAAAAAAAAABtNAAAAAAAAG40AAAAAAAAAAAAADM0AAAAAAAANDQAAAAAAAAAAAAA+TMAAAAAAAD6MwAAAAAAAAAAAAC/MwAAAAAAAMAzAAAAAAAAAAAAAIUzAAAAAAAAhjMAAAAAAAAAAAAASzMAAAAAAABMMwAAAAAAAAAAAAARMwAAAAAAABIzAAAAAAAAAAAAANcyAAAAAAAA2DIAAAAAAAAAAAAAnTIAAAAAAACeMgAAAAAAAAAAAABjMgAAAAAAAGQyAAAAAAAAAAAAACkyAAAAAAAAKjIAAAAAAAAAAAAA7zEAAAAAAADwMQAAAAAAAAAAAAC1MQAAAAAAALYxAAAAAAAAAAAAAHsxAAAAAAAAfDEAAAAAAAAAAAAAQTEAAAAAAABCMQAAAAAAAAAAAAB6OgAAAAAAAHs6AAAAAAAAAAAAAD86AAAAAAAAQDoAAAAAAAAAAAAABDoAAAAAAAAFOgAAAAAAAAAAAADJOQAAAAAAAMo5AAAAAAAAAAAAAI45AAAAAAAAjzkAAAAAAAAAAAAAUzkAAAAAAABUOQAAAAAAAAAAAAAYOQAAAAAAABk5AAAAAAAAAAAAAN04AAAAAAAA3jgAAAAAAAAAAAAAojgAAAAAAACjOAAAAAAAAAAAAABnOAAAAAAAAGg4AAAAAAAAAAAAACw4AAAAAAAALTgAAAAAAAAAAAAA8TcAAAAAAADyNwAAAAAAAAAAAAC2NwAAAAAAALc3AAAAAAAAAAAAAHs3AAAAAAAAfDcAAAAAAAAAAAAAQDcAAAAAAABBNwAAAAAAAAAAAAAFNwAAAAAAAAY3AAAAAAAAAAAAAMo2AAAAAAAAyzYAAAAAAAAAAAAAjzYAAAAAAACQNgAAAAAAAAAAAABUNgAAAAAAAFU2AAAAAAAAAAAAABk2AAAAAAAAGjYAAAAAAAAAAAAA3jUAAAAAAADfNQAAAAAAAAAAAACjNQAAAAAAAKQ1AAAAAAAAAAAAAGg1AAAAAAAAaTUAAAAAAAAAAAAALTUAAAAAAAAuNQAAAAAAAAAAAADyNAAAAAAAAPM0AAAAAAAAAAAAALc0AAAAAAAAuDQAAAAAAAAAAAAAfDQAAAAAAAB9NAAAAAAAAAAAAABBNAAAAAAAAEI0AAAAAAAAAAAAAAY0AAAAAAAABzQAAAAAAAAAAAAAyzMAAAAAAADMMwAAAAAAAAAAAACQMwAAAAAAAJEzAAAAAAAAAAAAAFUzAAAAAAAAVjMAAAAAAAAAAAAAGjMAAAAAAAAbMwAAAAAAAAAAAADfMgAAAAAAAOAyAAAAAAAAAAAAAKQyAAAAAAAApTIAAAAAAAAAAAAAaTIAAAAAAABqMgAAAAAAAAAAAAAuMgAAAAAAAC8yAAAAAAAAAAAAAPMxAAAAAAAA9DEAAAAAAAAAAAAAuDEAAAAAAAC5MQAAAAAAAAAAAAB9MQAAAAAAAH4xAAAAAAAAAAAAAEIxAAAAAAAAQzEAAAAAAAAAAAAAozoAAAAAAACkOgAAAAAAAAAAAABnOgAAAAAAAGg6AAAAAAAAAAAAACs6AAAAAAAALDoAAAAAAAAAAAAA7zkAAAAAAADwOQAAAAAAAAAAAACzOQAAAAAAALQ5AAAAAAAAAAAAAHc5AAAAAAAAeDkAAAAAAAAAAAAAOzkAAAAAAAA8OQAAAAAAAAAAAAD/OAAAAAAAAAA5AAAAAAAAAAAAAMM4AAAAAAAAxDgAAAAAAAAAAAAAhzgAAAAAAACIOAAAAAAAAAAAAABLOAAAAAAAAEw4AAAAAAAAAAAAAA84AAAAAAAAEDgAAAAAAAAAAAAA0zcAAAAAAADUNwAAAAAAAAAAAACXNwAAAAAAAJg3AAAAAAAAAAAAAFs3AAAAAAAAXDcAAAAAAAAAAAAAHzcAAAAAAAAgNwAAAAAAAAAAAADjNgAAAAAAAOQ2AAAAAAAAAAAAAKc2AAAAAAAAqDYAAAAAAAAAAAAAazYAAAAAAABsNgAAAAAAAAAAAAAvNgAAAAAAADA2AAAAAAAAAAAAAPM1AAAAAAAA9DUAAAAAAAAAAAAAtzUAAAAAAAC4NQAAAAAAAAAAAAB7NQAAAAAAAHw1AAAAAAAAAAAAAD81AAAAAAAAQDUAAAAAAAAAAAAAAzUAAAAAAAAENQAAAAAAAAAAAADHNAAAAAAAAMg0AAAAAAAAAAAAAIs0AAAAAAAAjDQAAAAAAAAAAAAATzQAAAAAAABQNAAAAAAAAAAAAAATNAAAAAAAABQ0AAAAAAAAAAAAANczAAAAAAAA2DMAAAAAAAAAAAAAmzMAAAAAAACcMwAAAAAAAAAAAABfMwAAAAAAAGAzAAAAAAAAAAAAACMzAAAAAAAAJDMAAAAAAAAAAAAA5zIAAAAAAADoMgAAAAAAAAAAAACrMgAAAAAAAKwyAAAAAAAAAAAAAG8yAAAAAAAAcDIAAAAAAAAAAAAAMzIAAAAAAAA0MgAAAAAAAAAAAAD3MQAAAAAAAPgxAAAAAAAAAAAAALsxAAAAAAAAvDEAAAAAAAAAAAAAfzEAAAAAAACAMQAAAAAAAAAAAABDMQAAAAAAAEQxAAAAAAAAAAAAAMw6AAAAAAAAzToAAAAAAAAAAAAAjzoAAAAAAACQOgAAAAAAAAAAAABSOgAAAAAAAFM6AAAAAAAAAAAAABU6AAAAAAAAFjoAAAAAAAAAAAAA2DkAAAAAAADZOQAAAAAAAAAAAACbOQAAAAAAAJw5AAAAAAAAAAAAAF45AAAAAAAAXzkAAAAAAAAAAAAAITkAAAAAAAAiOQAAAAAAAAAAAADkOAAAAAAAAOU4AAAAAAAAAAAAAKc4AAAAAAAAqDgAAAAAAAAAAAAAajgAAAAAAABrOAAAAAAAAAAAAAAtOAAAAAAAAC44AAAAAAAAAAAAAPA3AAAAAAAA8TcAAAAAAAAAAAAAszcAAAAAAAC0NwAAAAAAAAAAAAB2NwAAAAAAAHc3AAAAAAAAAAAAADk3AAAAAAAAOjcAAAAAAAAAAAAA/DYAAAAAAAD9NgAAAAAAAAAAAAC/NgAAAAAAAMA2AAAAAAAAAAAAAII2AAAAAAAAgzYAAAAAAAAAAAAARTYAAAAAAABGNgAAAAAAAAAAAAAINgAAAAAAAAk2AAAAAAAAAAAAAMs1AAAAAAAAzDUAAAAAAAAAAAAAjjUAAAAAAACPNQAAAAAAAAAAAABRNQAAAAAAAFI1AAAAAAAAAAAAABQ1AAAAAAAAFTUAAAAAAAAAAAAA1zQAAAAAAADYNAAAAAAAAAAAAACaNAAAAAAAAJs0AAAAAAAAAAAAAF00AAAAAAAAXjQAAAAAAAAAAAAAIDQAAAAAAAAhNAAAAAAAAAAAAADjMwAAAAAAAOQzAAAAAAAAAAAAAKYzAAAAAAAApzMAAAAAAAAAAAAAaTMAAAAAAABqMwAAAAAAAAAAAAAsMwAAAAAAAC0zAAAAAAAAAAAAAO8yAAAAAAAA8DIAAAAAAAAAAAAAsjIAAAAAAACzMgAAAAAAAAAAAAB1MgAAAAAAAHYyAAAAAAAAAAAAADgyAAAAAAAAOTIAAAAAAAAAAAAA+zEAAAAAAAD8MQAAAAAAAAAAAAC+MQAAAAAAAL8xAAAAAAAAAAAAAIExAAAAAAAAgjEAAAAAAAAAAAAARDEAAAAAAABFMQAAAAAAAAAAAAD1OgAAAAAAAPY6AAAAAAAAAAAAALc6AAAAAAAAuDoAAAAAAAAAAAAAeToAAAAAAAB6OgAAAAAAAAAAAAA7OgAAAAAAADw6AAAAAAAAAAAAAP05AAAAAAAA/jkAAAAAAAAAAAAAvzkAAAAAAADAOQAAAAAAAAAAAACBOQAAAAAAAII5AAAAAAAAAAAAAEM5AAAAAAAARDkAAAAAAAAAAAAABTkAAAAAAAAGOQAAAAAAAAAAAADHOAAAAAAAAMg4AAAAAAAAAAAAAIk4AAAAAAAAijgAAAAAAAAAAAAASzgAAAAAAABMOAAAAAAAAAAAAAANOAAAAAAAAA44AAAAAAAAAAAAAM83AAAAAAAA0DcAAAAAAAAAAAAAkTcAAAAAAACSNwAAAAAAAAAAAABTNwAAAAAAAFQ3AAAAAAAAAAAAABU3AAAAAAAAFjcAAAAAAAAAAAAA1zYAAAAAAADYNgAAAAAAAAAAAACZNgAAAAAAAJo2AAAAAAAAAAAAAFs2AAAAAAAAXDYAAAAAAAAAAAAAHTYAAAAAAAAeNgAAAAAAAAAAAADfNQAAAAAAAOA1AAAAAAAAAAAAAKE1AAAAAAAAojUAAAAAAAAAAAAAYzUAAAAAAABkNQAAAAAAAAAAAAAlNQAAAAAAACY1AAAAAAAAAAAAAOc0AAAAAAAA6DQAAAAAAAAAAAAAqTQAAAAAAACqNAAAAAAAAAAAAABrNAAAAAAAAGw0AAAAAAAAAAAAAC00AAAAAAAALjQAAAAAAAAAAAAA7zMAAAAAAADwMwAAAAAAAAAAAACxMwAAAAAAALIzAAAAAAAAAAAAAHMzAAAAAAAAdDMAAAAAAAAAAAAANTMAAAAAAAA2MwAAAAAAAAAAAAD3MgAAAAAAAPgyAAAAAAAAAAAAALkyAAAAAAAAujIAAAAAAAAAAAAAezIAAAAAAAB8MgAAAAAAAAAAAAA9MgAAAAAAAD4yAAAAAAAAAAAAAP8xAAAAAAAAADIAAAAAAAAAAAAAwTEAAAAAAADCMQAAAAAAAAAAAACDMQAAAAAAAIQxAAAAAAAAAAAAAEUxAAAAAAAARjEAAAAAAAAAAAAAHjsAAAAAAAAfOwAAAAAAAAAAAADfOgAAAAAAAOA6AAAAAAAAAAAAAKA6AAAAAAAAoToAAAAAAAAAAAAAYToAAAAAAABiOgAAAAAAAAAAAAAiOgAAAAAAACM6AAAAAAAAAAAAAOM5AAAAAAAA5DkAAAAAAAAAAAAApDkAAAAAAAClOQAAAAAAAAAAAABlOQAAAAAAAGY5AAAAAAAAAAAAACY5AAAAAAAAJzkAAAAAAAAAAAAA5zgAAAAAAADoOAAAAAAAAAAAAACoOAAAAAAAAKk4AAAAAAAAAAAAAGk4AAAAAAAAajgAAAAAAAAAAAAAKjgAAAAAAAArOAAAAAAAAAAAAADrNwAAAAAAAOw3AAAAAAAAAAAAAKw3AAAAAAAArTcAAAAAAAAAAAAAbTcAAAAAAABuNwAAAAAAAAAAAAAuNwAAAAAAAC83AAAAAAAAAAAAAO82AAAAAAAA8DYAAAAAAAAAAAAAsDYAAAAAAACxNgAAAAAAAAAAAABxNgAAAAAAAHI2AAAAAAAAAAAAADI2AAAAAAAAMzYAAAAAAAAAAAAA8zUAAAAAAAD0NQAAAAAAAAAAAAC0NQAAAAAAALU1AAAAAAAAAAAAAHU1AAAAAAAAdjUAAAAAAAAAAAAANjUAAAAAAAA3NQAAAAAAAAAAAAD3NAAAAAAAAPg0AAAAAAAAAAAAALg0AAAAAAAAuTQAAAAAAAAAAAAAeTQAAAAAAAB6NAAAAAAAAAAAAAA6NAAAAAAAADs0AAAAAAAAAAAAAPszAAAAAAAA/DMAAAAAAAAAAAAAvDMAAAAAAAC9MwAAAAAAAAAAAAB9MwAAAAAAAH4zAAAAAAAAAAAAAD4zAAAAAAAAPzMAAAAAAAAAAAAA/zIAAAAAAAAAMwAAAAAAAAAAAADAMgAAAAAAAMEyAAAAAAAAAAAAAIEyAAAAAAAAgjIAAAAAAAAAAAAAQjIAAAAAAABDMgAAAAAAAAAAAAADMgAAAAAAAAQyAAAAAAAAAAAAAMQxAAAAAAAAxTEAAAAAAAAAAAAAhTEAAAAAAACGMQAAAAAAAAAAAABGMQAAAAAAAEcxAAAAAAAAAAAAAA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEoAAAAAAAAASgAAAAAAAAAAAAAAAADwvw"
				],
				[
					166,
					1,
					"insert",
					{
						"characters": " "
					},
					"KQAAAEc7AAAAAAAASDsAAAAAAAAAAAAABzsAAAAAAAAIOwAAAAAAAAAAAADHOgAAAAAAAMg6AAAAAAAAAAAAAIc6AAAAAAAAiDoAAAAAAAAAAAAARzoAAAAAAABIOgAAAAAAAAAAAAAHOgAAAAAAAAg6AAAAAAAAAAAAAMc5AAAAAAAAyDkAAAAAAAAAAAAAhzkAAAAAAACIOQAAAAAAAAAAAABHOQAAAAAAAEg5AAAAAAAAAAAAAAc5AAAAAAAACDkAAAAAAAAAAAAAxzgAAAAAAADIOAAAAAAAAAAAAACHOAAAAAAAAIg4AAAAAAAAAAAAAEc4AAAAAAAASDgAAAAAAAAAAAAABzgAAAAAAAAIOAAAAAAAAAAAAADHNwAAAAAAAMg3AAAAAAAAAAAAAIc3AAAAAAAAiDcAAAAAAAAAAAAARzcAAAAAAABINwAAAAAAAAAAAAAHNwAAAAAAAAg3AAAAAAAAAAAAAMc2AAAAAAAAyDYAAAAAAAAAAAAAhzYAAAAAAACINgAAAAAAAAAAAABHNgAAAAAAAEg2AAAAAAAAAAAAAAc2AAAAAAAACDYAAAAAAAAAAAAAxzUAAAAAAADINQAAAAAAAAAAAACHNQAAAAAAAIg1AAAAAAAAAAAAAEc1AAAAAAAASDUAAAAAAAAAAAAABzUAAAAAAAAINQAAAAAAAAAAAADHNAAAAAAAAMg0AAAAAAAAAAAAAIc0AAAAAAAAiDQAAAAAAAAAAAAARzQAAAAAAABINAAAAAAAAAAAAAAHNAAAAAAAAAg0AAAAAAAAAAAAAMczAAAAAAAAyDMAAAAAAAAAAAAAhzMAAAAAAACIMwAAAAAAAAAAAABHMwAAAAAAAEgzAAAAAAAAAAAAAAczAAAAAAAACDMAAAAAAAAAAAAAxzIAAAAAAADIMgAAAAAAAAAAAACHMgAAAAAAAIgyAAAAAAAAAAAAAEcyAAAAAAAASDIAAAAAAAAAAAAABzIAAAAAAAAIMgAAAAAAAAAAAADHMQAAAAAAAMgxAAAAAAAAAAAAAIcxAAAAAAAAiDEAAAAAAAAAAAAARzEAAAAAAABIMQAAAAAAAAAAAAA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEoAAAAAAAAASgAAAAAAAAAAAAAAAADwvw"
				],
				[
					168,
					1,
					"insert",
					{
						"characters": ":u32"
					},
					"pAAAAIM7AAAAAAAAhDsAAAAAAAAAAAAAQzsAAAAAAABEOwAAAAAAAAAAAAAAOwAAAAAAAAE7AAAAAAAAAAAAAMU6AAAAAAAAxjoAAAAAAAAAAAAAgzoAAAAAAACEOgAAAAAAAAAAAABDOgAAAAAAAEQ6AAAAAAAAAAAAAAA6AAAAAAAAAToAAAAAAAAAAAAAuzkAAAAAAAC8OQAAAAAAAAAAAAB7OQAAAAAAAHw5AAAAAAAAAAAAADk5AAAAAAAAOjkAAAAAAAAAAAAA+DgAAAAAAAD5OAAAAAAAAAAAAAC2OAAAAAAAALc4AAAAAAAAAAAAAHc4AAAAAAAAeDgAAAAAAAAAAAAANTgAAAAAAAA2OAAAAAAAAAAAAADzNwAAAAAAAPQ3AAAAAAAAAAAAALE3AAAAAAAAsjcAAAAAAAAAAAAAcjcAAAAAAABzNwAAAAAAAAAAAAAxNwAAAAAAADI3AAAAAAAAAAAAAOw2AAAAAAAA7TYAAAAAAAAAAAAAsjYAAAAAAACzNgAAAAAAAAAAAAByNgAAAAAAAHM2AAAAAAAAAAAAAC42AAAAAAAALzYAAAAAAAAAAAAA7TUAAAAAAADuNQAAAAAAAAAAAACuNQAAAAAAAK81AAAAAAAAAAAAAGs1AAAAAAAAbDUAAAAAAAAAAAAANjUAAAAAAAA3NQAAAAAAAAAAAAD1NAAAAAAAAPY0AAAAAAAAAAAAALM0AAAAAAAAtDQAAAAAAAAAAAAAczQAAAAAAAB0NAAAAAAAAAAAAAAwNAAAAAAAADE0AAAAAAAAAAAAAOUzAAAAAAAA5jMAAAAAAAAAAAAAqTMAAAAAAACqMwAAAAAAAAAAAABnMwAAAAAAAGgzAAAAAAAAAAAAACIzAAAAAAAAIzMAAAAAAAAAAAAA6DIAAAAAAADpMgAAAAAAAAAAAACoMgAAAAAAAKkyAAAAAAAAAAAAAGAyAAAAAAAAYTIAAAAAAAAAAAAAHzIAAAAAAAAgMgAAAAAAAAAAAADgMQAAAAAAAOExAAAAAAAAAAAAAJ8xAAAAAAAAoDEAAAAAAAAAAAAAZDEAAAAAAABlMQAAAAAAAAAAAACsOwAAAAAAAK07AAAAAAAAAAAAAGs7AAAAAAAAbDsAAAAAAAAAAAAAJzsAAAAAAAAoOwAAAAAAAAAAAADrOgAAAAAAAOw6AAAAAAAAAAAAAKg6AAAAAAAAqToAAAAAAAAAAAAAZzoAAAAAAABoOgAAAAAAAAAAAAAjOgAAAAAAACQ6AAAAAAAAAAAAAN05AAAAAAAA3jkAAAAAAAAAAAAAnDkAAAAAAACdOQAAAAAAAAAAAABZOQAAAAAAAFo5AAAAAAAAAAAAABc5AAAAAAAAGDkAAAAAAAAAAAAA1DgAAAAAAADVOAAAAAAAAAAAAACUOAAAAAAAAJU4AAAAAAAAAAAAAFE4AAAAAAAAUjgAAAAAAAAAAAAADjgAAAAAAAAPOAAAAAAAAAAAAADLNwAAAAAAAMw3AAAAAAAAAAAAAIs3AAAAAAAAjDcAAAAAAAAAAAAASTcAAAAAAABKNwAAAAAAAAAAAAADNwAAAAAAAAQ3AAAAAAAAAAAAAMg2AAAAAAAAyTYAAAAAAAAAAAAAhzYAAAAAAACINgAAAAAAAAAAAABCNgAAAAAAAEM2AAAAAAAAAAAAAAA2AAAAAAAAATYAAAAAAAAAAAAAwDUAAAAAAADBNQAAAAAAAAAAAAB8NQAAAAAAAH01AAAAAAAAAAAAAEY1AAAAAAAARzUAAAAAAAAAAAAABDUAAAAAAAAFNQAAAAAAAAAAAADBNAAAAAAAAMI0AAAAAAAAAAAAAIA0AAAAAAAAgTQAAAAAAAAAAAAAPDQAAAAAAAA9NAAAAAAAAAAAAADwMwAAAAAAAPEzAAAAAAAAAAAAALMzAAAAAAAAtDMAAAAAAAAAAAAAcDMAAAAAAABxMwAAAAAAAAAAAAAqMwAAAAAAACszAAAAAAAAAAAAAO8yAAAAAAAA8DIAAAAAAAAAAAAArjIAAAAAAACvMgAAAAAAAAAAAABlMgAAAAAAAGYyAAAAAAAAAAAAACMyAAAAAAAAJDIAAAAAAAAAAAAA4zEAAAAAAADkMQAAAAAAAAAAAAChMQAAAAAAAKIxAAAAAAAAAAAAAGUxAAAAAAAAZjEAAAAAAAAAAAAA1TsAAAAAAADWOwAAAAAAAAAAAACTOwAAAAAAAJQ7AAAAAAAAAAAAAE47AAAAAAAATzsAAAAAAAAAAAAAETsAAAAAAAASOwAAAAAAAAAAAADNOgAAAAAAAM46AAAAAAAAAAAAAIs6AAAAAAAAjDoAAAAAAAAAAAAARjoAAAAAAABHOgAAAAAAAAAAAAD/OQAAAAAAAAA6AAAAAAAAAAAAAL05AAAAAAAAvjkAAAAAAAAAAAAAeTkAAAAAAAB6OQAAAAAAAAAAAAA2OQAAAAAAADc5AAAAAAAAAAAAAPI4AAAAAAAA8zgAAAAAAAAAAAAAsTgAAAAAAACyOAAAAAAAAAAAAABtOAAAAAAAAG44AAAAAAAAAAAAACk4AAAAAAAAKjgAAAAAAAAAAAAA5TcAAAAAAADmNwAAAAAAAAAAAACkNwAAAAAAAKU3AAAAAAAAAAAAAGE3AAAAAAAAYjcAAAAAAAAAAAAAGjcAAAAAAAAbNwAAAAAAAAAAAADeNgAAAAAAAN82AAAAAAAAAAAAAJw2AAAAAAAAnTYAAAAAAAAAAAAAVjYAAAAAAABXNgAAAAAAAAAAAAATNgAAAAAAABQ2AAAAAAAAAAAAANI1AAAAAAAA0zUAAAAAAAAAAAAAjTUAAAAAAACONQAAAAAAAAAAAABWNQAAAAAAAFc1AAAAAAAAAAAAABM1AAAAAAAAFDUAAAAAAAAAAAAAzzQAAAAAAADQNAAAAAAAAAAAAACNNAAAAAAAAI40AAAAAAAAAAAAAEg0AAAAAAAASTQAAAAAAAAAAAAA+zMAAAAAAAD8MwAAAAAAAAAAAAC9MwAAAAAAAL4zAAAAAAAAAAAAAHkzAAAAAAAAejMAAAAAAAAAAAAAMjMAAAAAAAAzMwAAAAAAAAAAAAD2MgAAAAAAAPcyAAAAAAAAAAAAALQyAAAAAAAAtTIAAAAAAAAAAAAAajIAAAAAAABrMgAAAAAAAAAAAAAnMgAAAAAAACgyAAAAAAAAAAAAAOYxAAAAAAAA5zEAAAAAAAAAAAAAozEAAAAAAACkMQAAAAAAAAAAAABmMQAAAAAAAGcxAAAAAAAAAAAAAP47AAAAAAAA/zsAAAAAAAAAAAAAuzsAAAAAAAC8OwAAAAAAAAAAAAB1OwAAAAAAAHY7AAAAAAAAAAAAADc7AAAAAAAAODsAAAAAAAAAAAAA8joAAAAAAADzOgAAAAAAAAAAAACvOgAAAAAAALA6AAAAAAAAAAAAAGk6AAAAAAAAajoAAAAAAAAAAAAAIToAAAAAAAAiOgAAAAAAAAAAAADeOQAAAAAAAN85AAAAAAAAAAAAAJk5AAAAAAAAmjkAAAAAAAAAAAAAVTkAAAAAAABWOQAAAAAAAAAAAAAQOQAAAAAAABE5AAAAAAAAAAAAAM44AAAAAAAAzzgAAAAAAAAAAAAAiTgAAAAAAACKOAAAAAAAAAAAAABEOAAAAAAAAEU4AAAAAAAAAAAAAP83AAAAAAAAADgAAAAAAAAAAAAAvTcAAAAAAAC+NwAAAAAAAAAAAAB5NwAAAAAAAHo3AAAAAAAAAAAAADE3AAAAAAAAMjcAAAAAAAAAAAAA9DYAAAAAAAD1NgAAAAAAAAAAAACxNgAAAAAAALI2AAAAAAAAAAAAAGo2AAAAAAAAazYAAAAAAAAAAAAAJjYAAAAAAAAnNgAAAAAAAAAAAADkNQAAAAAAAOU1AAAAAAAAAAAAAJ41AAAAAAAAnzUAAAAAAAAAAAAAZjUAAAAAAABnNQAAAAAAAAAAAAAiNQAAAAAAACM1AAAAAAAAAAAAAN00AAAAAAAA3jQAAAAAAAAAAAAAmjQAAAAAAACbNAAAAAAAAAAAAABUNAAAAAAAAFU0AAAAAAAAAAAAAAY0AAAAAAAABzQAAAAAAAAAAAAAxzMAAAAAAADIMwAAAAAAAAAAAACCMwAAAAAAAIMzAAAAAAAAAAAAADozAAAAAAAAOzMAAAAAAAAAAAAA/TIAAAAAAAD+MgAAAAAAAAAAAAC6MgAAAAAAALsyAAAAAAAAAAAAAG8yAAAAAAAAcDIAAAAAAAAAAAAAKzIAAAAAAAAsMgAAAAAAAAAAAADpMQAAAAAAAOoxAAAAAAAAAAAAAKUxAAAAAAAApjEAAAAAAAAAAAAAZzEAAAAAAABoMQAAAAAAAAAAAAA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEoAAAAAAAAASgAAAAAAAAAAAAAAAADwvw"
				],
				[
					169,
					1,
					"insert",
					{
						"characters": " ="
					},
					"UgAAACc8AAAAAAAAKDwAAAAAAAAAAAAA4zsAAAAAAADkOwAAAAAAAAAAAACcOwAAAAAAAJ07AAAAAAAAAAAAAF07AAAAAAAAXjsAAAAAAAAAAAAAFzsAAAAAAAAYOwAAAAAAAAAAAADTOgAAAAAAANQ6AAAAAAAAAAAAAIw6AAAAAAAAjToAAAAAAAAAAAAAQzoAAAAAAABEOgAAAAAAAAAAAAD/OQAAAAAAAAA6AAAAAAAAAAAAALk5AAAAAAAAujkAAAAAAAAAAAAAdDkAAAAAAAB1OQAAAAAAAAAAAAAuOQAAAAAAAC85AAAAAAAAAAAAAOs4AAAAAAAA7DgAAAAAAAAAAAAApTgAAAAAAACmOAAAAAAAAAAAAABfOAAAAAAAAGA4AAAAAAAAAAAAABk4AAAAAAAAGjgAAAAAAAAAAAAA1jcAAAAAAADXNwAAAAAAAAAAAACRNwAAAAAAAJI3AAAAAAAAAAAAAEg3AAAAAAAASTcAAAAAAAAAAAAACjcAAAAAAAALNwAAAAAAAAAAAADGNgAAAAAAAMc2AAAAAAAAAAAAAH42AAAAAAAAfzYAAAAAAAAAAAAAOTYAAAAAAAA6NgAAAAAAAAAAAAD2NQAAAAAAAPc1AAAAAAAAAAAAAK81AAAAAAAAsDUAAAAAAAAAAAAAdjUAAAAAAAB3NQAAAAAAAAAAAAAxNQAAAAAAADI1AAAAAAAAAAAAAOs0AAAAAAAA7DQAAAAAAAAAAAAApzQAAAAAAACoNAAAAAAAAAAAAABgNAAAAAAAAGE0AAAAAAAAAAAAABE0AAAAAAAAEjQAAAAAAAAAAAAA0TMAAAAAAADSMwAAAAAAAAAAAACLMwAAAAAAAIwzAAAAAAAAAAAAAEIzAAAAAAAAQzMAAAAAAAAAAAAABDMAAAAAAAAFMwAAAAAAAAAAAADAMgAAAAAAAMEyAAAAAAAAAAAAAHQyAAAAAAAAdTIAAAAAAAAAAAAALzIAAAAAAAAwMgAAAAAAAAAAAADsMQAAAAAAAO0xAAAAAAAAAAAAAKcxAAAAAAAAqDEAAAAAAAAAAAAAaDEAAAAAAABpMQAAAAAAAAAAAABQPAAAAAAAAFE8AAAAAAAAAAAAAAs8AAAAAAAADDwAAAAAAAAAAAAAwzsAAAAAAADEOwAAAAAAAAAAAACDOwAAAAAAAIQ7AAAAAAAAAAAAADw7AAAAAAAAPTsAAAAAAAAAAAAA9zoAAAAAAAD4OgAAAAAAAAAAAACvOgAAAAAAALA6AAAAAAAAAAAAAGU6AAAAAAAAZjoAAAAAAAAAAAAAIDoAAAAAAAAhOgAAAAAAAAAAAADZOQAAAAAAANo5AAAAAAAAAAAAAJM5AAAAAAAAlDkAAAAAAAAAAAAATDkAAAAAAABNOQAAAAAAAAAAAAAIOQAAAAAAAAk5AAAAAAAAAAAAAME4AAAAAAAAwjgAAAAAAAAAAAAAejgAAAAAAAB7OAAAAAAAAAAAAAAzOAAAAAAAADQ4AAAAAAAAAAAAAO83AAAAAAAA8DcAAAAAAAAAAAAAqTcAAAAAAACqNwAAAAAAAAAAAABfNwAAAAAAAGA3AAAAAAAAAAAAACA3AAAAAAAAITcAAAAAAAAAAAAA2zYAAAAAAADcNgAAAAAAAAAAAACSNgAAAAAAAJM2AAAAAAAAAAAAAEw2AAAAAAAATTYAAAAAAAAAAAAACDYAAAAAAAAJNgAAAAAAAAAAAADANQAAAAAAAME1AAAAAAAAAAAAAIY1AAAAAAAAhzUAAAAAAAAAAAAAQDUAAAAAAABBNQAAAAAAAAAAAAD5NAAAAAAAAPo0AAAAAAAAAAAAALQ0AAAAAAAAtTQAAAAAAAAAAAAAbDQAAAAAAABtNAAAAAAAAAAAAAAcNAAAAAAAAB00AAAAAAAAAAAAANszAAAAAAAA3DMAAAAAAAAAAAAAlDMAAAAAAACVMwAAAAAAAAAAAABKMwAAAAAAAEszAAAAAAAAAAAAAAszAAAAAAAADDMAAAAAAAAAAAAAxjIAAAAAAADHMgAAAAAAAAAAAAB5MgAAAAAAAHoyAAAAAAAAAAAAADMyAAAAAAAANDIAAAAAAAAAAAAA7zEAAAAAAADwMQAAAAAAAAAAAACpMQAAAAAAAKoxAAAAAAAAAAAAAGkxAAAAAAAAajEAAAAAAAAAAAAA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEoAAAAAAAAASgAAAAAAAAAAAAAAAADwvw"
				],
				[
					173,
					1,
					"insert",
					{
						"characters": ";"
					},
					"KQAAAJQ8AAAAAAAAlTwAAAAAAAAAAAAATTwAAAAAAABOPAAAAAAAAAAAAAAGPAAAAAAAAAc8AAAAAAAAAAAAAL87AAAAAAAAwDsAAAAAAAAAAAAAeDsAAAAAAAB5OwAAAAAAAAAAAAAxOwAAAAAAADI7AAAAAAAAAAAAAOo6AAAAAAAA6zoAAAAAAAAAAAAAozoAAAAAAACkOgAAAAAAAAAAAABcOgAAAAAAAF06AAAAAAAAAAAAABU6AAAAAAAAFjoAAAAAAAAAAAAAzjkAAAAAAADPOQAAAAAAAAAAAACHOQAAAAAAAIg5AAAAAAAAAAAAAEA5AAAAAAAAQTkAAAAAAAAAAAAA+TgAAAAAAAD6OAAAAAAAAAAAAACyOAAAAAAAALM4AAAAAAAAAAAAAGs4AAAAAAAAbDgAAAAAAAAAAAAAJDgAAAAAAAAlOAAAAAAAAAAAAADdNwAAAAAAAN43AAAAAAAAAAAAAJY3AAAAAAAAlzcAAAAAAAAAAAAATzcAAAAAAABQNwAAAAAAAAAAAAAINwAAAAAAAAk3AAAAAAAAAAAAAME2AAAAAAAAwjYAAAAAAAAAAAAAejYAAAAAAAB7NgAAAAAAAAAAAAAzNgAAAAAAADQ2AAAAAAAAAAAAAOw1AAAAAAAA7TUAAAAAAAAAAAAApTUAAAAAAACmNQAAAAAAAAAAAABeNQAAAAAAAF81AAAAAAAAAAAAABc1AAAAAAAAGDUAAAAAAAAAAAAA0DQAAAAAAADRNAAAAAAAAAAAAACJNAAAAAAAAIo0AAAAAAAAAAAAAEI0AAAAAAAAQzQAAAAAAAAAAAAA+zMAAAAAAAD8MwAAAAAAAAAAAAC0MwAAAAAAALUzAAAAAAAAAAAAAG0zAAAAAAAAbjMAAAAAAAAAAAAAJjMAAAAAAAAnMwAAAAAAAAAAAADfMgAAAAAAAOAyAAAAAAAAAAAAAJgyAAAAAAAAmTIAAAAAAAAAAAAAUTIAAAAAAABSMgAAAAAAAAAAAAAKMgAAAAAAAAsyAAAAAAAAAAAAAMMxAAAAAAAAxDEAAAAAAAAAAAAAfDEAAAAAAAB9MQAAAAAAAAAAAAA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEoAAAAAAAAASgAAAAAAAAAAAAAAAADwvw"
				],
				[
					174,
					2,
					"rust_fmt_format_buffer",
					null,
					"ewAAADYxAAAAAAAANjEAAAAAAAAIAAAAICAgICAgICBdMQAAAAAAAF4xAAAAAAAAAAAAAGQxAAAAAAAAZDEAAAAAAAALAAAAICAgICAgICAgICBsMQAAAAAAAGwxAAAAAAAACAAAACAgICAgICAgjTEAAAAAAACOMQAAAAAAAAAAAACUMQAAAAAAAJQxAAAAAAAAEQAAACAgICAgICAgICAgICAgICAgnDEAAAAAAACcMQAAAAAAAAgAAAAgICAgICAgIL0xAAAAAAAAvjEAAAAAAAAAAAAAxDEAAAAAAADEMQAAAAAAABEAAAAgICAgICAgICAgICAgICAgIMwxAAAAAAAAzDEAAAAAAAAIAAAAICAgICAgICDrMQAAAAAAAOwxAAAAAAAAAAAAAPIxAAAAAAAA8jEAAAAAAAATAAAAICAgICAgICAgICAgICAgICAgIPoxAAAAAAAA+jEAAAAAAAAIAAAAICAgICAgICAZMgAAAAAAABoyAAAAAAAAAAAAACAyAAAAAAAAIDIAAAAAAAATAAAAICAgICAgICAgICAgICAgICAgICgyAAAAAAAAKDIAAAAAAAAIAAAAICAgICAgICBOMgAAAAAAAE8yAAAAAAAAAAAAAFUyAAAAAAAAVTIAAAAAAAAMAAAAICAgICAgICAgICAgXTIAAAAAAABdMgAAAAAAAAgAAAAgICAgICAgIIIyAAAAAAAAgzIAAAAAAAAAAAAAiTIAAAAAAACJMgAAAAAAAA0AAAAgICAgICAgICAgICAgkTIAAAAAAACRMgAAAAAAAAgAAAAgICAgICAgIK8yAAAAAAAAsDIAAAAAAAAAAAAAtjIAAAAAAAC2MgAAAAAAABQAAAAgICAgICAgICAgICAgICAgICAgIL4yAAAAAAAAvjIAAAAAAAAIAAAAICAgICAgICDgMgAAAAAAAOEyAAAAAAAAAAAAAOcyAAAAAAAA5zIAAAAAAAAQAAAAICAgICAgICAgICAgICAgIO8yAAAAAAAA7zIAAAAAAAAIAAAAICAgICAgICASMwAAAAAAABMzAAAAAAAAAAAAABkzAAAAAAAAGTMAAAAAAAAPAAAAICAgICAgICAgICAgICAgITMAAAAAAAAhMwAAAAAAAAgAAAAgICAgICAgID8zAAAAAAAAQDMAAAAAAAAAAAAARjMAAAAAAABGMwAAAAAAABQAAAAgICAgICAgICAgICAgICAgICAgIE4zAAAAAAAATjMAAAAAAAAIAAAAICAgICAgICB2MwAAAAAAAHczAAAAAAAAAAAAAH0zAAAAAAAAfTMAAAAAAAAKAAAAICAgICAgICAgIIUzAAAAAAAAhTMAAAAAAAAIAAAAICAgICAgICCvMwAAAAAAALAzAAAAAAAAAAAAALYzAAAAAAAAtjMAAAAAAAAIAAAAICAgICAgICC+MwAAAAAAAL4zAAAAAAAACAAAACAgICAgICAg5zMAAAAAAADoMwAAAAAAAAAAAADuMwAAAAAAAO4zAAAAAAAACQAAACAgICAgICAgIPYzAAAAAAAA9jMAAAAAAAAIAAAAICAgICAgICAgNAAAAAAAACE0AAAAAAAAAAAAACY0AAAAAAAAJjQAAAAAAAAIAAAAICAgICAgICAvNAAAAAAAAC80AAAAAAAACAAAACAgICAgICAgWTQAAAAAAABaNAAAAAAAAAAAAABfNAAAAAAAAF80AAAAAAAACAAAACAgICAgICAgaDQAAAAAAABoNAAAAAAAAAgAAAAgICAgICAgIIY0AAAAAAAAhzQAAAAAAAAAAAAAjTQAAAAAAACNNAAAAAAAABQAAAAgICAgICAgICAgICAgICAgICAgIJU0AAAAAAAAlTQAAAAAAAAIAAAAICAgICAgICC1NAAAAAAAALY0AAAAAAAAAAAAALw0AAAAAAAAvDQAAAAAAAASAAAAICAgICAgICAgICAgICAgICAgxDQAAAAAAADENAAAAAAAAAgAAAAgICAgICAgIOI0AAAAAAAA4zQAAAAAAAAAAAAA6TQAAAAAAADpNAAAAAAAABQAAAAgICAgICAgICAgICAgICAgICAgIPE0AAAAAAAA8TQAAAAAAAAIAAAAICAgICAgICAPNQAAAAAAABA1AAAAAAAAAAAAABY1AAAAAAAAFjUAAAAAAAAUAAAAICAgICAgICAgICAgICAgICAgICAeNQAAAAAAAB41AAAAAAAACAAAACAgICAgICAgPzUAAAAAAABANQAAAAAAAAAAAABGNQAAAAAAAEY1AAAAAAAAEQAAACAgICAgICAgICAgICAgICAgTjUAAAAAAABONQAAAAAAAAgAAAAgICAgICAgIG41AAAAAAAAbzUAAAAAAAAAAAAAdTUAAAAAAAB1NQAAAAAAABIAAAAgICAgICAgICAgICAgICAgICB9NQAAAAAAAH01AAAAAAAACAAAACAgICAgICAgljUAAAAAAACXNQAAAAAAAAAAAACdNQAAAAAAAJ01AAAAAAAAGQAAACAgICAgICAgICAgICAgICAgICAgICAgICClNQAAAAAAAKU1AAAAAAAACAAAACAgICAgICAgwjUAAAAAAADDNQAAAAAAAAAAAADJNQAAAAAAAMk1AAAAAAAAFQAAACAgICAgICAgICAgICAgICAgICAgINE1AAAAAAAA0TUAAAAAAAAIAAAAICAgICAgICDuNQAAAAAAAO81AAAAAAAAAAAAAPU1AAAAAAAA9TUAAAAAAAAVAAAAICAgICAgICAgICAgICAgICAgICAg/TUAAAAAAAD9NQAAAAAAAAgAAAAgICAgICAgIBg2AAAAAAAAGTYAAAAAAAAAAAAAHzYAAAAAAAAfNgAAAAAAABcAAAAgICAgICAgICAgICAgICAgICAgICAgICc2AAAAAAAAJzYAAAAAAAAIAAAAICAgICAgICBDNgAAAAAAAEQ2AAAAAAAAAAAAAEo2AAAAAAAASjYAAAAAAAAWAAAAICAgICAgICAgICAgICAgICAgICAgIFI2AAAAAAAAUjYAAAAAAAAIAAAAICAgICAgICBvNgAAAAAAAHA2AAAAAAAAAAAAAHY2AAAAAAAAdjYAAAAAAAAVAAAAICAgICAgICAgICAgICAgICAgICAgfjYAAAAAAAB+NgAAAAAAAAgAAAAgICAgICAgIJw2AAAAAAAAnTYAAAAAAAAAAAAAozYAAAAAAACjNgAAAAAAABQAAAAgICAgICAgICAgICAgICAgICAgIKs2AAAAAAAAqzYAAAAAAAAIAAAAICAgICAgICDHNgAAAAAAAMg2AAAAAAAAAAAAAM42AAAAAAAAzjYAAAAAAAAWAAAAICAgICAgICAgICAgICAgICAgICAgINY2AAAAAAAA1jYAAAAAAAAIAAAAICAgICAgICDzNgAAAAAAAPQ2AAAAAAAAAAAAAPo2AAAAAAAA+jYAAAAAAAAVAAAAICAgICAgICAgICAgICAgICAgICAgAjcAAAAAAAACNwAAAAAAAAgAAAAgICAgICAgIB83AAAAAAAAIDcAAAAAAAAAAAAAJjcAAAAAAAAmNwAAAAAAABUAAAAgICAgICAgICAgICAgICAgICAgICAuNwAAAAAAAC43AAAAAAAACAAAACAgICAgICAgTDcAAAAAAABNNwAAAAAAAAAAAABTNwAAAAAAAFM3AAAAAAAAFAAAACAgICAgICAgICAgICAgICAgICAgWzcAAAAAAABbNwAAAAAAAAgAAAAgICAgICAgIHg3AAAAAAAAeTcAAAAAAAAAAAAAfzcAAAAAAAB/NwAAAAAAABUAAAAgICAgICAgICAgICAgICAgICAgICCHNwAAAAAAAIc3AAAAAAAACAAAACAgICAgICAgqDcAAAAAAACpNwAAAAAAAAAAAACvNwAAAAAAAK83AAAAAAAAEQAAACAgICAgICAgICAgICAgICAgtzcAAAAAAAC3NwAAAAAAAAgAAAAgICAgICAgINo3AAAAAAAA2zcAAAAAAAAAAAAA4TcAAAAAAADhNwAAAAAAAA8AAAAgICAgICAgICAgICAgICDpNwAAAAAAAOk3AAAAAAAACAAAACAgICAgICAgCzgAAAAAAAAMOAAAAAAAAAAAAAASOAAAAAAAABI4AAAAAAAAEAAAACAgICAgICAgICAgICAgICAaOAAAAAAAABo4AAAAAAAACAAAACAgICAgICAgPTgAAAAAAAA+OAAAAAAAAAAAAABEOAAAAAAAAEQ4AAAAAAAADwAAACAgICAgICAgICAgICAgIEw4AAAAAAAATDgAAAAAAAAIAAAAICAgICAgICBpOAAAAAAAAGo4AAAAAAAAAAAAAHA4AAAAAAAAcDgAAAAAAAAVAAAAICAgICAgICAgICAgICAgICAgICAgeDgAAAAAAAB4OAAAAAAAAAgAAAAgICAgICAgIJc4AAAAAAAAmDgAAAAAAAAAAAAAnjgAAAAAAACeOAAAAAAAABMAAAAgICAgICAgICAgICAgICAgICAgpjgAAAAAAACmOAAAAAAAAAgAAAAgICAgICAgIMQ4AAAAAAAAxTgAAAAAAAAAAAAAyjgAAAAAAADKOAAAAAAAABQAAAAgICAgICAgICAgICAgICAgICAgIA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEoAAAAAAAAASgAAAAAAAAAAAAAAAADwvw"
				],
				[
					184,
					1,
					"cut",
					null,
					"AQAAADYxAAAAAAAANjEAAAAAAAA2AAAAcHViIGNvbnN0IFdHTF9OVU1CRVJfUElYRUxfRk9STUFUU19BUkI6IHUzMiA9IDB4MjAwMDsK",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEoAAAAAAAAASgAAAAAAAAAAAAAAAADwvw"
				],
				[
					194,
					16,
					"swap_line_down",
					null,
					"IAAAAPE1AAAAAAAAHTYAAAAAAAAAAAAAmzUAAAAAAACbNQAAAAAAACwAAABwdWIgY29uc3QgV0dMX0NPTE9SX0JJVFNfQVJCOiB1MzIgPSAweDIwMTQ7Chw2AAAAAAAASDYAAAAAAAAAAAAAxTUAAAAAAADFNQAAAAAAACwAAABwdWIgY29uc3QgV0dMX0NPTE9SX0JJVFNfQVJCOiB1MzIgPSAweDIwMTQ7Ckg2AAAAAAAAdDYAAAAAAAAAAAAA8DUAAAAAAADwNQAAAAAAACwAAABwdWIgY29uc3QgV0dMX0NPTE9SX0JJVFNfQVJCOiB1MzIgPSAweDIwMTQ7CnU2AAAAAAAAoTYAAAAAAAAAAAAAHDYAAAAAAAAcNgAAAAAAACwAAABwdWIgY29uc3QgV0dMX0NPTE9SX0JJVFNfQVJCOiB1MzIgPSAweDIwMTQ7CqA2AAAAAAAAzDYAAAAAAAAAAAAASTYAAAAAAABJNgAAAAAAACwAAABwdWIgY29uc3QgV0dMX0NPTE9SX0JJVFNfQVJCOiB1MzIgPSAweDIwMTQ7Csw2AAAAAAAA+DYAAAAAAAAAAAAAdDYAAAAAAAB0NgAAAAAAACwAAABwdWIgY29uc3QgV0dMX0NPTE9SX0JJVFNfQVJCOiB1MzIgPSAweDIwMTQ7Cvg2AAAAAAAAJDcAAAAAAAAAAAAAoDYAAAAAAACgNgAAAAAAACwAAABwdWIgY29uc3QgV0dMX0NPTE9SX0JJVFNfQVJCOiB1MzIgPSAweDIwMTQ7CiU3AAAAAAAAUTcAAAAAAAAAAAAAzDYAAAAAAADMNgAAAAAAACwAAABwdWIgY29uc3QgV0dMX0NPTE9SX0JJVFNfQVJCOiB1MzIgPSAweDIwMTQ7ClE3AAAAAAAAfTcAAAAAAAAAAAAA+TYAAAAAAAD5NgAAAAAAACwAAABwdWIgY29uc3QgV0dMX0NPTE9SX0JJVFNfQVJCOiB1MzIgPSAweDIwMTQ7CoE3AAAAAAAArTcAAAAAAAAAAAAAJTcAAAAAAAAlNwAAAAAAACwAAABwdWIgY29uc3QgV0dMX0NPTE9SX0JJVFNfQVJCOiB1MzIgPSAweDIwMTQ7CrM3AAAAAAAA3zcAAAAAAAAAAAAAVTcAAAAAAABVNwAAAAAAACwAAABwdWIgY29uc3QgV0dMX0NPTE9SX0JJVFNfQVJCOiB1MzIgPSAweDIwMTQ7CuQ3AAAAAAAAEDgAAAAAAAAAAAAAhzcAAAAAAACHNwAAAAAAACwAAABwdWIgY29uc3QgV0dMX0NPTE9SX0JJVFNfQVJCOiB1MzIgPSAweDIwMTQ7ChY4AAAAAAAAQjgAAAAAAAAAAAAAuDcAAAAAAAC4NwAAAAAAACwAAABwdWIgY29uc3QgV0dMX0NPTE9SX0JJVFNfQVJCOiB1MzIgPSAweDIwMTQ7CkI4AAAAAAAAbjgAAAAAAAAAAAAA6jcAAAAAAADqNwAAAAAAACwAAABwdWIgY29uc3QgV0dMX0NPTE9SX0JJVFNfQVJCOiB1MzIgPSAweDIwMTQ7CnA4AAAAAAAAnDgAAAAAAAAAAAAAFjgAAAAAAAAWOAAAAAAAACwAAABwdWIgY29uc3QgV0dMX0NPTE9SX0JJVFNfQVJCOiB1MzIgPSAweDIwMTQ7Cp04AAAAAAAAyTgAAAAAAAAAAAAARDgAAAAAAABEOAAAAAAAACwAAABwdWIgY29uc3QgV0dMX0NPTE9SX0JJVFNfQVJCOiB1MzIgPSAweDIwMTQ7Cg",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEoAAAAAAAAASgAAAAAAAAAAAAAAAADwvw"
				],
				[
					197,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAHA4AAAAAAAAcTgAAAAAAAAAAAAA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEoAAAAAAAAASgAAAAAAAAAAAAAAAADwvw"
				],
				[
					201,
					1,
					"insert",
					{
						"characters": "\n/8"
					},
					"AwAAADUxAAAAAAAANjEAAAAAAAAAAAAANjEAAAAAAAA3MQAAAAAAAAAAAAA3MQAAAAAAADgxAAAAAAAAAAAAAA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEoAAAAAAAAASgAAAAAAAAAAAAAAAADwvw"
				],
				[
					206,
					1,
					"left_delete",
					null,
					"AQAAADcxAAAAAAAANzEAAAAAAAABAAAAOA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEoAAAAAAAAASgAAAAAAAAAAAAAAAADwvw"
				],
				[
					207,
					1,
					"insert",
					{
						"characters": "*"
					},
					"AQAAADcxAAAAAAAAODEAAAAAAAAAAAAA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEoAAAAAAAAASgAAAAAAAAAAAAAAAADwvw"
				],
				[
					211,
					1,
					"insert",
					{
						"characters": "\n*/"
					},
					"AwAAAHM4AAAAAAAAdDgAAAAAAAAAAAAAdDgAAAAAAAB1OAAAAAAAAAAAAAB1OAAAAAAAAHY4AAAAAAAAAAAAAA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEoAAAAAAAAASgAAAAAAAAAAAAAAAADwvw"
				],
				[
					280,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAKM4AAAAAAAApDgAAAAAAAAAAAAApDgAAAAAAAClOAAAAAAAAAAAAAA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADQxAAAAAAAANDEAAAAAAAAAAAAAAADwvw"
				],
				[
					281,
					1,
					"paste",
					null,
					"AQAAAKU4AAAAAAAAPDkAAAAAAAAAAAAA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADQxAAAAAAAANDEAAAAAAAAAAAAAAADwvw"
				],
				[
					286,
					1,
					"cut",
					null,
					"AQAAADUxAAAAAAAANTEAAAAAAABCBwAACi8qCnB1YiBjb25zdCBXR0xfRFJBV19UT19XSU5ET1dfQVJCOiB1MzIgPSAweDIwMDE7CnB1YiBjb25zdCBXR0xfRFJBV19UT19CSVRNQVBfQVJCOiB1MzIgPSAweDIwMDI7CnB1YiBjb25zdCBXR0xfQUNDRUxFUkFUSU9OX0FSQjogdTMyID0gMHgyMDAzOwpwdWIgY29uc3QgV0dMX05FRURfUEFMRVRURV9BUkI6IHUzMiA9IDB4MjAwNDsKcHViIGNvbnN0IFdHTF9ORUVEX1NZU1RFTV9QQUxFVFRFX0FSQjogdTMyID0gMHgyMDA1OwpwdWIgY29uc3QgV0dMX1NXQVBfTEFZRVJfQlVGRkVSU19BUkI6IHUzMiA9IDB4MjAwNjsKcHViIGNvbnN0IFdHTF9TV0FQX01FVEhPRF9BUkI6IHUzMiA9IDB4MjAwNzsKcHViIGNvbnN0IFdHTF9OVU1CRVJfT1ZFUkxBWVNfQVJCOiB1MzIgPSAweDIwMDg7CnB1YiBjb25zdCBXR0xfTlVNQkVSX1VOREVSTEFZU19BUkI6IHUzMiA9IDB4MjAwOTsKcHViIGNvbnN0IFdHTF9UUkFOU1BBUkVOVF9BUkI6IHUzMiA9IDB4MjAwQTsKcHViIGNvbnN0IFdHTF9UUkFOU1BBUkVOVF9SRURfVkFMVUVfQVJCOiB1MzIgPSAweDIwMzc7CnB1YiBjb25zdCBXR0xfVFJBTlNQQVJFTlRfR1JFRU5fVkFMVUVfQVJCOiB1MzIgPSAweDIwMzg7CnB1YiBjb25zdCBXR0xfVFJBTlNQQVJFTlRfQkxVRV9WQUxVRV9BUkI6IHUzMiA9IDB4MjAzOTsKcHViIGNvbnN0IFdHTF9UUkFOU1BBUkVOVF9BTFBIQV9WQUxVRV9BUkI6IHUzMiA9IDB4MjAzQTsKcHViIGNvbnN0IFdHTF9UUkFOU1BBUkVOVF9JTkRFWF9WQUxVRV9BUkI6IHUzMiA9IDB4MjAzQjsKcHViIGNvbnN0IFdHTF9TSEFSRV9ERVBUSF9BUkI6IHUzMiA9IDB4MjAwQzsKcHViIGNvbnN0IFdHTF9TSEFSRV9TVEVOQ0lMX0FSQjogdTMyID0gMHgyMDBEOwpwdWIgY29uc3QgV0dMX1NIQVJFX0FDQ1VNX0FSQjogdTMyID0gMHgyMDBFOwpwdWIgY29uc3QgV0dMX1NVUFBPUlRfR0RJX0FSQjogdTMyID0gMHgyMDBGOwpwdWIgY29uc3QgV0dMX1NVUFBPUlRfT1BFTkdMX0FSQjogdTMyID0gMHgyMDEwOwpwdWIgY29uc3QgV0dMX0RPVUJMRV9CVUZGRVJfQVJCOiB1MzIgPSAweDIwMTE7CnB1YiBjb25zdCBXR0xfU1RFUkVPX0FSQjogdTMyID0gMHgyMDEyOwpwdWIgY29uc3QgV0dMX1BJWEVMX1RZUEVfQVJCOiB1MzIgPSAweDIwMTM7CnB1YiBjb25zdCBXR0xfUkVEX0JJVFNfQVJCOiB1MzIgPSAweDIwMTU7CnB1YiBjb25zdCBXR0xfUkVEX1NISUZUX0FSQjogdTMyID0gMHgyMDE2OwpwdWIgY29uc3QgV0dMX0dSRUVOX0JJVFNfQVJCOiB1MzIgPSAweDIwMTc7CnB1YiBjb25zdCBXR0xfR1JFRU5fU0hJRlRfQVJCOiB1MzIgPSAweDIwMTg7CnB1YiBjb25zdCBXR0xfQkxVRV9CSVRTX0FSQjogdTMyID0gMHgyMDE5OwpwdWIgY29uc3QgV0dMX0JMVUVfU0hJRlRfQVJCOiB1MzIgPSAweDIwMUE7CnB1YiBjb25zdCBXR0xfQUxQSEFfQklUU19BUkI6IHUzMiA9IDB4MjAxQjsKcHViIGNvbnN0IFdHTF9BTFBIQV9TSElGVF9BUkI6IHUzMiA9IDB4MjAxQzsKcHViIGNvbnN0IFdHTF9BQ0NVTV9CSVRTX0FSQjogdTMyID0gMHgyMDFEOwpwdWIgY29uc3QgV0dMX0FDQ1VNX1JFRF9CSVRTX0FSQjogdTMyID0gMHgyMDFFOwpwdWIgY29uc3QgV0dMX0FDQ1VNX0dSRUVOX0JJVFNfQVJCOiB1MzIgPSAweDIwMUY7CnB1YiBjb25zdCBXR0xfQUNDVU1fQkxVRV9CSVRTX0FSQjogdTMyID0gMHgyMDIwOwpwdWIgY29uc3QgV0dMX0FDQ1VNX0FMUEhBX0JJVFNfQVJCOiB1MzIgPSAweDIwMjE7CnB1YiBjb25zdCBXR0xfREVQVEhfQklUU19BUkI6IHUzMiA9IDB4MjAyMjsKcHViIGNvbnN0IFdHTF9TVEVOQ0lMX0JJVFNfQVJCOiB1MzIgPSAweDIwMjM7CnB1YiBjb25zdCBXR0xfQVVYX0JVRkZFUlNfQVJCOiB1MzIgPSAweDIwMjQ7CiovCg",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADQxAAAAAAAANDEAAAAAAAAAAAAAAADwvw"
				],
				[
					298,
					3,
					"cut",
					null,
					"AwAAAGMxAAAAAAAAYzEAAAAAAAAzAAAAY29uc3QgV0dMX0NPTlRFWFRfTUFKT1JfVkVSU0lPTl9BUkI6IGkzMiA9IDB4MjA5MTsKYzEAAAAAAABjMQAAAAAAADMAAABjb25zdCBXR0xfQ09OVEVYVF9NSU5PUl9WRVJTSU9OX0FSQjogaTMyID0gMHgyMDkyOwpjMQAAAAAAAGMxAAAAAAAAMgAAAGNvbnN0IFdHTF9DT05URVhUX1BST0ZJTEVfTUFTS19BUkI6IGkzMiA9IDB4OTEyNjsK",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADQxAAAAAAAANDEAAAAAAAAAAAAAAADwvw"
				],
				[
					299,
					1,
					"left_delete",
					null,
					"AQAAAGIxAAAAAAAAYjEAAAAAAAABAAAACg",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADQxAAAAAAAANDEAAAAAAAAAAAAAAADwvw"
				],
				[
					315,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAGExAAAAAAAAYjEAAAAAAAAAAAAA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADQxAAAAAAAANDEAAAAAAAAAAAAAAADwvw"
				],
				[
					316,
					1,
					"paste",
					null,
					"AQAAAGIxAAAAAAAAjDEAAAAAAAAAAAAA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADQxAAAAAAAANDEAAAAAAAAAAAAAAADwvw"
				],
				[
					336,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAI0xAAAAAAAAjjEAAAAAAAAAAAAAjjEAAAAAAACPMQAAAAAAAAAAAAA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADQxAAAAAAAANDEAAAAAAAAAAAAAAADwvw"
				],
				[
					338,
					1,
					"paste",
					null,
					"AQAAAI4xAAAAAAAArzEAAAAAAAAAAAAA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADQxAAAAAAAANDEAAAAAAAAAAAAAAADwvw"
				],
				[
					395,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAK8xAAAAAAAAsDEAAAAAAAAAAAAAsDEAAAAAAACxMQAAAAAAAAAAAAA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADQxAAAAAAAANDEAAAAAAAAAAAAAAADwvw"
				],
				[
					396,
					1,
					"paste",
					null,
					"AQAAALExAAAAAAAA3zEAAAAAAAAAAAAA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADQxAAAAAAAANDEAAAAAAAAAAAAAAADwvw"
				],
				[
					399,
					3,
					"swap_line_up",
					null,
					"BgAAALExAAAAAAAAsTEAAAAAAAAvAAAAY29uc3QgV0dMX0ZVTExfQUNDRUxFUkFUSU9OX0FSQjogaTMyID0gMHgyMDI3OwqwMQAAAAAAAN8xAAAAAAAAAAAAALAxAAAAAAAAsDEAAAAAAAAvAAAAY29uc3QgV0dMX0ZVTExfQUNDRUxFUkFUSU9OX0FSQjogaTMyID0gMHgyMDI3OwqOMQAAAAAAAL0xAAAAAAAAAAAAAI4xAAAAAAAAjjEAAAAAAAAvAAAAY29uc3QgV0dMX0ZVTExfQUNDRUxFUkFUSU9OX0FSQjogaTMyID0gMHgyMDI3OwqNMQAAAAAAALwxAAAAAAAAAAAAAA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADQxAAAAAAAANDEAAAAAAAAAAAAAAADwvw"
				],
				[
					400,
					2,
					"rust_fmt_format_buffer",
					null,
					"AQAAAOAxAAAAAAAA4DEAAAAAAAABAAAACg",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADQxAAAAAAAANDEAAAAAAAAAAAAAAADwvw"
				],
				[
					405,
					1,
					"insert",
					{
						"characters": "\n\n//"
					},
					"BAAAAIwxAAAAAAAAjTEAAAAAAAAAAAAAjTEAAAAAAACOMQAAAAAAAAAAAACOMQAAAAAAAI8xAAAAAAAAAAAAAI8xAAAAAAAAkDEAAAAAAAAAAAAA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADQxAAAAAAAANDEAAAAAAAAAAAAAAADwvw"
				],
				[
					406,
					1,
					"paste",
					null,
					"AQAAAJAxAAAAAAAA0TEAAAAAAAAAAAAA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADQxAAAAAAAANDEAAAAAAAAAAAAAAADwvw"
				],
				[
					409,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJAxAAAAAAAAkTEAAAAAAAAAAAAA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADQxAAAAAAAANDEAAAAAAAAAAAAAAADwvw"
				],
				[
					422,
					1,
					"insert",
					{
						"characters": "pub"
					},
					"AwAAANMxAAAAAAAA1DEAAAAAAAAAAAAA1DEAAAAAAADVMQAAAAAAAAAAAADVMQAAAAAAANYxAAAAAAAAAAAAAA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADQxAAAAAAAANDEAAAAAAAAAAAAAAADwvw"
				],
				[
					423,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANYxAAAAAAAA1zEAAAAAAAAAAAAA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADQxAAAAAAAANDEAAAAAAAAAAAAAAADwvw"
				],
				[
					484,
					1,
					"left_delete",
					null,
					"AQAAADoyAAAAAAAAOjIAAAAAAAAbAAAAY29sb3I6IGVuZ2luZTo6Y29sb3I6OkNvbG9y",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADQxAAAAAAAANDEAAAAAAAAAAAAAAADwvw"
				],
				[
					505,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAACkyAAAAAAAAKjIAAAAAAAAAAAAA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADQxAAAAAAAANDEAAAAAAAAAAAAAAADwvw"
				],
				[
					506,
					1,
					"left_delete",
					null,
					"AQAAACkyAAAAAAAAKTIAAAAAAAABAAAAcw",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADQxAAAAAAAANDEAAAAAAAAAAAAAAADwvw"
				],
				[
					518,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAAD0yAAAAAAAAPjIAAAAAAAAAAAAAPjIAAAAAAAA/MgAAAAAAAAAAAAA+MgAAAAAAAD8yAAAAAAAAAAAAAA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADQxAAAAAAAANDEAAAAAAAAAAAAAAADwvw"
				],
				[
					519,
					1,
					"insert",
					{
						"characters": "glClears"
					},
					"CAAAAD8yAAAAAAAAQDIAAAAAAAAAAAAAQDIAAAAAAABBMgAAAAAAAAAAAABBMgAAAAAAAEIyAAAAAAAAAAAAAEIyAAAAAAAAQzIAAAAAAAAAAAAAQzIAAAAAAABEMgAAAAAAAAAAAABEMgAAAAAAAEUyAAAAAAAAAAAAAEUyAAAAAAAARjIAAAAAAAAAAAAARjIAAAAAAABHMgAAAAAAAAAAAAA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADQxAAAAAAAANDEAAAAAAAAAAAAAAADwvw"
				],
				[
					522,
					1,
					"left_delete",
					null,
					"AQAAAEYyAAAAAAAARjIAAAAAAAABAAAAcw",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADQxAAAAAAAANDEAAAAAAAAAAAAAAADwvw"
				],
				[
					523,
					2,
					"rust_fmt_format_buffer",
					null,
					"AgAAAD4yAAAAAAAAPjIAAAAAAAABAAAACT4yAAAAAAAAQjIAAAAAAAAAAAAA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADQxAAAAAAAANDEAAAAAAAAAAAAAAADwvw"
				],
				[
					528,
					1,
					"cut",
					null,
					"AQAAAD4yAAAAAAAAPjIAAAAAAAAMAAAAICAgIGdsQ2xlYXIK",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADQxAAAAAAAANDEAAAAAAAAAAAAAAADwvw"
				],
				[
					529,
					2,
					"rust_fmt_format_buffer",
					null,
					"AQAAAD0yAAAAAAAAPTIAAAAAAAABAAAACg",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADQxAAAAAAAANDEAAAAAAAAAAAAAAADwvw"
				],
				[
					534,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAAD0yAAAAAAAAPjIAAAAAAAAAAAAAPjIAAAAAAAA/MgAAAAAAAAAAAAA+MgAAAAAAAD8yAAAAAAAAAAAAAA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADQxAAAAAAAANDEAAAAAAAAAAAAAAADwvw"
				],
				[
					535,
					1,
					"insert",
					{
						"characters": "glc"
					},
					"AwAAAD8yAAAAAAAAQDIAAAAAAAAAAAAAQDIAAAAAAABBMgAAAAAAAAAAAABBMgAAAAAAAEIyAAAAAAAAAAAAAA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADQxAAAAAAAANDEAAAAAAAAAAAAAAADwvw"
				],
				[
					536,
					1,
					"left_delete",
					null,
					"AQAAAEEyAAAAAAAAQTIAAAAAAAABAAAAYw",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADQxAAAAAAAANDEAAAAAAAAAAAAAAADwvw"
				],
				[
					537,
					1,
					"insert",
					{
						"characters": "Clear"
					},
					"BQAAAEEyAAAAAAAAQjIAAAAAAAAAAAAAQjIAAAAAAABDMgAAAAAAAAAAAABDMgAAAAAAAEQyAAAAAAAAAAAAAEQyAAAAAAAARTIAAAAAAAAAAAAARTIAAAAAAABGMgAAAAAAAAAAAAA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADQxAAAAAAAANDEAAAAAAAAAAAAAAADwvw"
				],
				[
					538,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAEYyAAAAAAAASDIAAAAAAAAAAAAA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADQxAAAAAAAANDEAAAAAAAAAAAAAAADwvw"
				],
				[
					540,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAEgyAAAAAAAASTIAAAAAAAAAAAAA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADQxAAAAAAAANDEAAAAAAAAAAAAAAADwvw"
				],
				[
					541,
					2,
					"rust_fmt_format_buffer",
					null,
					"AgAAAD4yAAAAAAAAPjIAAAAAAAABAAAACT4yAAAAAAAAQjIAAAAAAAAAAAAA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADQxAAAAAAAANDEAAAAAAAAAAAAAAADwvw"
				],
				[
					544,
					1,
					"paste",
					null,
					"AQAAAD4yAAAAAAAAYjIAAAAAAAAAAAAA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADQxAAAAAAAANDEAAAAAAAAAAAAAAADwvw"
				],
				[
					545,
					1,
					"cut",
					null,
					"AQAAAGIyAAAAAAAAYjIAAAAAAAAPAAAAICAgIGdsQ2xlYXIoKTsK",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADQxAAAAAAAANDEAAAAAAAAAAAAAAADwvw"
				],
				[
					547,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAAEIyAAAAAAAAQjIAAAAAAAACAAAALy8",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADQxAAAAAAAANDEAAAAAAAAAAAAAAADwvw"
				],
				[
					563,
					1,
					"paste",
					null,
					"AQAAADwAAAAAAAAAZQAAAAAAAAAAAAAA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADQxAAAAAAAANDEAAAAAAAAAAAAAAADwvw"
				],
				[
					567,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAADsAAAAAAAAAPAAAAAAAAAAAAAAA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAF0xAAAAAAAAXTEAAAAAAAAAAAAAAADwvw"
				],
				[
					5,
					3,
					"cut",
					null,
					"AwAAAFQyAAAAAAAAVDIAAAAAAAAUAAAAcHViIGZuIGdsX2NsZWFyKCkgewpUMgAAAAAAAFQyAAAAAAAAIgAAACAgICBnbENsZWFyKEdMX0NPTE9SX0JVRkZFUl9CSVQpOwpUMgAAAAAAAFQyAAAAAAAAAgAAAH0K",
					"EwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAXjEAAAAAAABeMQAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					1,
					"left_delete",
					null,
					"AQAAAFMyAAAAAAAAUzIAAAAAAAABAAAACg",
					"EwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAXjEAAAAAAABeMQAAAAAAAAAAAAAAAPC/"
				],
				[
					9,
					1,
					"left_delete",
					null,
					"AQAAAFIyAAAAAAAAUjIAAAAAAAABAAAACg",
					"EwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAXjEAAAAAAABeMQAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					2,
					"rust_fmt_format_buffer",
					null,
					"AQAAAFIyAAAAAAAAUzIAAAAAAAAAAAAA",
					"EwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAXjEAAAAAAABeMQAAAAAAAAAAAAAAAPC/"
				],
				[
					2,
					1,
					"cut",
					null,
					"AQAAACEAAAAAAAAAIQAAAAAAAAAbAAAAdXNlIGdlbmdhcl9lbmdpbmU6OmVuZ2luZTsK",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAF4xAAAAAAAAXjEAAAAAAAAAAAAAAADwvw"
				],
				[
					3,
					1,
					"left_delete",
					null,
					"AQAAACAAAAAAAAAAIAAAAAAAAAABAAAACg",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEMxAAAAAAAAQzEAAAAAAAAAAAAAAADwvw"
				],
				[
					6,
					1,
					"reindent",
					null,
					"AQAAACAAAAAAAAAAJAAAAAAAAAAAAAAA",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEIxAAAAAAAAQjEAAAAAAAAAAAAAAADwvw"
				],
				[
					7,
					2,
					"rust_fmt_format_buffer",
					null,
					"AQAAACAAAAAAAAAAIAAAAAAAAAAEAAAAICAgIA",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEYxAAAAAAAARjEAAAAAAAAAAAAAAADwvw"
				],
				[
					9,
					1,
					"cut",
					null,
					"AQAAACEAAAAAAAAAIQAAAAAAAAApAAAAdXNlIHdpbmRvd3M6OldpbjMyOjpHcmFwaGljczo6T3BlbkdMOjoqOwo",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEIxAAAAAAAAQjEAAAAAAAAAAAAAAADwvw"
				],
				[
					10,
					1,
					"left_delete",
					null,
					"AQAAACAAAAAAAAAAIAAAAAAAAAABAAAACg",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABkxAAAAAAAAGTEAAAAAAAAAAAAAAADwvw"
				],
				[
					12,
					1,
					"left_delete",
					null,
					"AQAAAAwyAAAAAAAADDIAAAAAAAABAAAACg",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABgxAAAAAAAAGDEAAAAAAAAAAAAAAADwvw"
				],
				[
					14,
					2,
					"rust_fmt_format_buffer",
					null,
					"AQAAAAwyAAAAAAAADTIAAAAAAAAAAAAA",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABgxAAAAAAAAGDEAAAAAAAAAAAAAAADwvw"
				]
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Rust Enhanced/RustEnhanced.sublime-build",
					""
				],
				[
					"Packages/Rust Enhanced/RustEnhanced.sublime-build",
					"Automatic"
				],
				[
					"Packages/Rust Enhanced/RustEnhanced.sublime-build",
					"Run"
				],
				[
					"Packages/Rust Enhanced/RustEnhanced.sublime-build",
					"Run (with args)..."
				],
				[
					"Packages/Rust Enhanced/RustEnhanced.sublime-build",
					"Check"
				],
				[
					"Packages/Rust Enhanced/RustEnhanced.sublime-build",
					"Test"
				],
				[
					"Packages/Rust Enhanced/RustEnhanced.sublime-build",
					"Test (with args)..."
				],
				[
					"Packages/Rust Enhanced/RustEnhanced.sublime-build",
					"Bench"
				],
				[
					"Packages/Rust Enhanced/RustEnhanced.sublime-build",
					"Clean"
				],
				[
					"Packages/Rust Enhanced/RustEnhanced.sublime-build",
					"Document"
				],
				[
					"Packages/Rust Enhanced/RustEnhanced.sublime-build",
					"Clippy"
				],
				[
					"Packages/Rust Enhanced/RustEnhanced.sublime-build",
					"Script"
				]
			],
			[
				"Packages/Rust Enhanced/RustEnhanced.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"test",
				"Build With: RustEnhanced - Test"
			],
			[
				"enhan",
				"Build With: RustEnhanced - Test"
			],
			[
				"insatll",
				"Package Control: Install Package"
			],
			[
				"rust",
				"Preferences: Rust Enhanced Settings"
			],
			[
				"clean",
				"Build With: RustEnhanced - Clean"
			],
			[
				"binding",
				"Formatter: Key Bindings"
			],
			[
				"rustfmt",
				"RustFmt: Format Buffer"
			],
			[
				"isntall",
				"Package Control: Install Package"
			],
			[
				"rustenhance",
				"Preferences: Rust Enhanced Settings"
			],
			[
				"rustenhanced sett",
				"Preferences: Rust Enhanced Settings"
			],
			[
				"theme",
				"UI: Select Color Scheme"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"settings",
				"Preferences: Rust Enhanced Settings"
			],
			[
				"format",
				"SublimeAStyleFormatter: Format Current File"
			],
			[
				"binidng",
				"Preferences: Key Bindings"
			],
			[
				"comment",
				"Toggle Comment"
			],
			[
				"package",
				"Package Control: Disable Package"
			],
			[
				"rein",
				"Indentation: Reindent Lines"
			],
			[
				"reind",
				"Indentation: Reindent Lines"
			],
			[
				"reing",
				"Package Control: Revert Built-in Package"
			],
			[
				"key",
				"Preferences: Key Bindings"
			],
			[
				"indent",
				"Indentation: Reindent Lines"
			],
			[
				"word",
				"Preferences: WordHighlight Settings"
			],
			[
				"high",
				"Preferences: WordHighlight Settings"
			],
			[
				"wordhigh",
				"Preferences: WordHighlight Settings"
			],
			[
				"color",
				"UI: Select Color Scheme"
			],
			[
				"select theme",
				"UI: Select Color Scheme"
			],
			[
				"teme",
				"UI: Select Theme"
			],
			[
				"keybind",
				"Preferences: Key Bindings"
			],
			[
				"idnent",
				"Indentation: Reindent Lines"
			],
			[
				":w",
				":w - Save"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 112.0,
		"history":
		[
			"cargo test",
			"test"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Digital Archive/Game Development/Active/ghostly",
		"/C/Digital Archive/Game Development/Active/ghostly/gengar_engine",
		"/C/Digital Archive/Game Development/Active/ghostly/gengar_engine/engine_resources",
		"/C/Digital Archive/Game Development/Active/ghostly/gengar_engine/engine_resources/shaders",
		"/C/Digital Archive/Game Development/Active/ghostly/gengar_engine/src",
		"/C/Digital Archive/Game Development/Active/ghostly/gengar_engine/src/engine",
		"/C/Digital Archive/Game Development/Active/ghostly/gengar_engine/src/engine/matricies",
		"/C/Digital Archive/Game Development/Active/ghostly/gengar_engine/src/engine/render",
		"/C/Digital Archive/Game Development/Active/ghostly/gengar_render_opengl",
		"/C/Digital Archive/Game Development/Active/ghostly/gengar_render_opengl/src",
		"/C/Digital Archive/Game Development/Active/ghostly/gengar_renderapi_opengl_windows",
		"/C/Digital Archive/Game Development/Active/ghostly/gengar_renderapi_opengl_windows/src",
		"/C/Digital Archive/Game Development/Active/ghostly/ghostly_game",
		"/C/Digital Archive/Game Development/Active/ghostly/ghostly_game/src",
		"/C/Digital Archive/Game Development/Active/ghostly/ghostly_game_windows",
		"/C/Digital Archive/Game Development/Active/ghostly/ghostly_game_windows/src"
	],
	"file_history":
	[
		"/C/Digital Archive/Game Development/Active/ghostly/gengar_engine/src/engine/render/shader.rs",
		"/C/Digital Archive/Game Development/Active/SpaceUnknown/TowerEngine/Game/code/Engine/Math.cpp",
		"/C/Digital Archive/Game Development/Active/ghostly/gengar_engine/src/engine/matricies.rs",
		"/C/Digital Archive/Game Development/Active/ghostly/gengar_engine/src/engine/v3.rs",
		"/C/Digital Archive/Game Development/Active/ghostly/gengar_render_opengl/generated_gl_functions_and_types.rs",
		"/C/Users/perma/AppData/Roaming/Sublime Text/Packages/User/RustsBuildSystem",
		"/C/Digital Archive/Game Development/Active/ghostly/ghostly_game_windows/target/debug/build/gengar_renderapi_opengl_windows-a2551648e644c667/out/bindings.rs",
		"/C/Users/perma/.cargo/registry/src/index.crates.io-6f17d22bba15001f/khronos_api-3.1.0/src/lib.rs",
		"/C/Digital Archive/Game Development/Active/ghostly/gengar_renderapi_opengl_windows/target/debug/build/gengar_renderapi_opengl_windows-3fa9c70cc327d084/out/bindings.rs",
		"/C/Digital Archive/Game Development/Active/ghostly/ghostly_game_windows/src/gl.rs",
		"/C/Digital Archive/Game Development/Active/SpaceUnknown/TowerEngine/Game/build_scripts/build_win32.bat",
		"/C/Digital Archive/Game Development/Active/SpaceUnknown/TowerEngine/Game/code/Engine/Renderer/Renderer.cpp",
		"/C/Digital Archive/Game Development/Active/SpaceUnknown/TowerEngine/Game/code/Platform/render_win32_ogles3.cpp",
		"/C/Digital Archive/Game Development/Active/SpaceUnknown/TowerEngine/Game/code/Platform/render_android_ogles3.cpp",
		"/C/Digital Archive/Game Development/Active/ghostly/ghostly_game_windows/target/debug/incremental/gengar_renderapi_opengl_windows-3ui5jnoh7clmx/s-gy85lebydk-ksedhl-6q4np92s6pmpmld8ia1o1suad/dep-graph.bin",
		"/C/Digital Archive/Game Development/Active/SpaceUnknown/TowerEngine/Game/code/Engine/Renderer/ShaderLoader.cpp",
		"/C/Digital Archive/Game Development/Active/ghostly/gengar_renderapi_opengl_windows/src/wgl_api.rs",
		"/C/Digital Archive/Game Development/Active/ghostly/gengar_engine/src/engine/gengar_error.rs",
		"/C/Digital Archive/Game Development/Active/ghostly/gengar_engine/src/engine/g_error.rs",
		"/C/Digital Archive/Game Development/Active/ghostly/gengar_engine/src/engine/error.rs",
		"/C/Digital Archive/Game Development/Active/ghostly/ghostly_game/src/game.rs",
		"/C/Digital Archive/Game Development/Active/ghostly/gengar_renderapi_opengl_windows/src/render.rs",
		"/C/Digital Archive/Game Development/Active/ghostly/gengar_render/src/lib.rs",
		"/C/Digital Archive/Game Development/Active/ghostly/gengar_render/src/render.rs",
		"/C/Digital Archive/Game Development/Active/ghostly/gengar_render_webgl/Cargo.toml",
		"/C/Digital Archive/Game Development/Active/ghostly/gengar_render_webgl/src/lib.rs",
		"/C/Digital Archive/Game Development/Active/ghostly/gengar_renderapi_opengl_windows/Cargo.toml",
		"/C/Digital Archive/Game Development/Active/ghostly/gengar_render_opengl_windows/src/render.rs",
		"/C/Digital Archive/Game Development/Active/ghostly/gengar_render_opengl_windows/Cargo.toml",
		"/C/Digital Archive/Game Development/Active/ghostly/gengar_render_opengl/Cargo.toml",
		"/C/Digital Archive/Game Development/Active/ghostly/gengar_render_opengl/src/lib.rs",
		"/C/Digital Archive/Game Development/Active/ghostly/gengar_render_opengl/src/render.rs",
		"/C/Users/perma/Desktop/ghostly_game/src/main.rs",
		"/C/Digital Archive/Game Development/Active/SpaceUnknown/TowerEngine/Game/code/Engine/Renderer/Renderer.h",
		"/C/Digital Archive/Game Development/Active/SpaceUnknown/TowerEngine/Game/code/Platform/platform_win32.cpp",
		"/C/Digital Archive/Game Development/Active/ghostly/gengar_engine/src/color.rs",
		"/C/Digital Archive/Game Development/Active/ghostly/ghostly_game_windows/src/main.rs",
		"/C/Digital Archive/Game Development/Active/SpaceUnknown/TowerEngine/Game/code/Platform/render_emscripten_ogles3.cpp",
		"/C/Digital Archive/Game Development/Active/SpaceUnknown/TowerEngine/Game/build.bat",
		"/C/Digital Archive/Game Development/Active/ghostly/ghostly_game/Cargo.toml",
		"/C/Digital Archive/Game Development/Active/ghostly/ghostly_game/src/lib.rs",
		"/C/Users/perma/Desktop/ghostly_game/Cargo.toml",
		"/C/Digital Archive/Game Development/Active/ghostly/gengar_engine/src/engine.rs",
		"/C/Digital Archive/Game Development/Active/ghostly/gengar_engine/src/lib.rs",
		"/C/Digital Archive/Game Development/Active/ghostly/ghostly_game/src/main.rs",
		"/C/Digital Archive/Game Development/Active/ghostly/gengar_render_webgl/src/render.rs",
		"/C/Digital Archive/Game Development/Active/gengar_engine/src/lib.rs",
		"/C/Digital Archive/Game Development/Active/gengar_engine/src/engine.rs",
		"/C/Digital Archive/Game Development/Active/ghostly/src/main.rs",
		"/C/Digital Archive/Game Development/Active/gengar_engine/src/engine_loop.rs",
		"/C/Digital Archive/Game Development/Active/ghostly/Cargo.toml",
		"/C/Digital Archive/Game Development/Active/gengar_engine/Cargo.toml",
		"/C/Digital Archive/Game Development/Active/gengar_engine/src/game_loop.rs",
		"/C/Digital Archive/Game Development/Active/gengar_render_webgl/Cargo.toml",
		"/C/Digital Archive/Game Development/Active/ghostly/Cargo.lock",
		"/C/Digital Archive/Game Development/Active/gengar_engine/src/game_loop/game_loop.rs",
		"/C/Digital Archive/Game Development/Active/gengar_render_webgl/src/lib.rs",
		"/C/Digital Archive/Game Development/Active/ghostly/target/debug/.fingerprint/ghostly-1fbd0683c7a858c4/bin-ghostly",
		"/C/Digital Archive/Game Development/Active/Gengar/cargo.toml",
		"/C/Digital Archive/Game Development/Active/Leco3/Leco3_Unity/Assets/Scripts/UI/TaskQueue.cs",
		"/C/Digital Archive/Game Development/Active/Leco3/Leco3_Unity/Assets/Scripts/UI/ShipUIDisplay.cs",
		"/C/Digital Archive/Game Development/Active/Leco3/Leco3_Unity/Assets/Scripts/UI/UIController.cs",
		"/C/Digital Archive/Game Development/Active/Leco3/Leco3_Unity/Assets/Scripts/EnemyController.cs",
		"/C/Digital Archive/Game Development/Active/Leco3/Leco3_Unity/Assets/Scripts/UI/TaskEntryDisplay.cs",
		"/C/Digital Archive/Game Development/Active/Leco3/Leco3_Unity/Assets/Scripts/UpgradeAttribute.cs",
		"/C/Digital Archive/Game Development/Active/Leco3/Leco3_Unity/Assets/Scripts/ShipStats.cs",
		"/C/Digital Archive/Game Development/Active/Leco3/Leco3_Unity/Assets/Scripts/Health.cs",
		"/C/Digital Archive/Game Development/Active/Leco3/Leco3_Unity/Assets/Scripts/UI/HealthRingManager.cs",
		"/C/Digital Archive/Game Development/Active/Leco3/Leco3_Unity/Assets/Scripts/UI/HealthRing.cs",
		"/C/Digital Archive/Game Development/Active/Leco3/Leco3_Unity/Assets/Scripts/UVSlide.cs",
		"/C/Digital Archive/Game Development/Active/Leco3/Leco3_Unity/Assets/Scripts/Persist.cs",
		"/C/Digital Archive/Game Development/Active/Leco3/Leco3_Unity/Assets/Scripts/Twitch.meta",
		"/C/Digital Archive/Game Development/Active/Leco3/Leco3_Unity/Assets/Scripts/Ship.cs",
		"/C/Digital Archive/Game Development/Active/Leco3/Leco3_Unity/Assets/Scripts/WaveManager.cs",
		"/C/Digital Archive/Game Development/Active/Leco3/Leco3_Unity/Assets/Scripts/Tasks/TaskType.cs",
		"/C/Digital Archive/Game Development/Active/Leco3/Leco3_Unity/Assets/Scripts/Twitch/Twitch.cs",
		"/C/Digital Archive/Game Development/Active/Leco3/Leco3_Unity/Assets/Scripts/TwitchManager.cs",
		"/C/Digital Archive/Game Development/Active/Leco3/Leco3_Unity/Assets/Scripts/Station.cs",
		"/C/Digital Archive/Game Development/Active/Leco3/Leco3_Unity/Assets/Scripts/TurretController.cs",
		"/C/Digital Archive/Game Development/Active/Leco3/Leco3_Unity/Assets/Scripts/CameraController.cs",
		"/C/Digital Archive/Game Development/Active/Leco3/Leco3_Unity/Assets/Scripts/Ore.cs",
		"/C/Digital Archive/Game Development/Active/Leco3/Leco3_Unity/Assets/Shaders/UniltTexture.shader",
		"/C/Digital Archive/Game Development/Active/Leco3/Leco3_Unity/Assets/Scripts/UVFollow.cs",
		"/C/Digital Archive/Game Development/Active/Leco3/Leco3_Unity/Assets/Scripts/Conductor.cs",
		"/C/Digital Archive/Game Development/Active/Leco3/Leco3_Unity/Assets/Plugins/TwitchSDK.xml",
		"/C/Digital Archive/Game Development/Active/Leco3/Leco3_Unity/Assets/Scripts/OreSpawner.cs",
		"/C/Digital Archive/Game Development/Active/Leco3/Leco3_Unity/Assets/Scripts/ShipStats.cs.meta",
		"/C/Digital Archive/Game Development/Active/Leco3/Leco3_Unity/Assets/Scripts/LaserLine.cs",
		"/C/Digital Archive/Game Development/Active/Leco3/Leco3_Unity/Assets/Scripts/UI/UIWorldFollow.cs",
		"/C/Digital Archive/Game Development/Active/Leco3/Leco3_Unity/Assets/Scripts/UI/FollowerNotification.cs",
		"/C/Digital Archive/Game Development/Active/Leco3/Leco3_Unity/Assets/Scripts/StationComponent.cs",
		"/C/Digital Archive/Game Development/Active/Leco3/Leco3_Unity/Assets/Plugins/TwitchSDK.cs",
		"/C/Digital Archive/Game Development/Active/Leco3/Leco3_Unity/Assets/Scripts/SimpleJSON.cs",
		"/C/Digital Archive/Game Development/Active/Leco3/Leco3_Unity/Assets/Scripts/SimpleJSONUnity.cs",
		"/C/Digital Archive/Game Development/Active/Leco3/Leco3_Unity/Assets/Shaders/NewUnlitShader.shader",
		"/C/Digital Archive/Game Development/Active/Leco3/Leco3_Unity/Temp/Compiled-Unlit-ColorBlend.shader",
		"/C/Users/perma/AppData/Local/nvim/init.lua",
		"/C/Users/perma/AppData/Roaming/Sublime Text/Packages/Default/Default (Windows).sublime-keymap",
		"/C/Users/perma/AppData/Roaming/Sublime Text/Packages/User/Default (Windows).sublime-keymap",
		"/C/Digital Archive/NotionArchive/Games 82e7984a726f4862ab7633ff74ff9219/Leco2 33aa932c870b42cdbbff0c1bb0ddedb2.md",
		"/C/Digital Archive/NotionArchive/Games 82e7984a726f4862ab7633ff74ff9219/Leco2 33aa932c870b42cdbbff0c1bb0ddedb2/Old Backup from Leco cacc75d639604c868328085baf0c56b8.md",
		"/C/Digital Archive/RustProjects/last_finance/public/styles/bootstrap/css/bootstrap.css",
		"/C/Digital Archive/RustProjects/last_finance/dist/public/styles/bootstrap/css/bootstrap.css",
		"/C/Digital Archive/RustProjects/last_finance/data/src/lib.rs",
		"/C/Digital Archive/RustProjects/last_finance/styles/bootstrap.js",
		"/C/Digital Archive/RustProjects/last_finance/styles/jquery.js",
		"/C/Digital Archive/RustProjects/aoc_2023/resources/inputs/day_11.txt",
		"/C/Digital Archive/RustProjects/aoc_2023/resources/day_17/day_17_testing.txt",
		"/C/Digital Archive/RustProjects/aoc_2023/resources/day_11/day_11_sample.txt",
		"/C/Digital Archive/RustProjects/aoc_2023/resources/day_10/day_10_easy.txt",
		"/C/Digital Archive/RustProjects/aoc_2023/resources/day_10/day_10_fancy.txt",
		"/C/Digital Archive/RustProjects/aoc_2023/resources/day_10/day_10_loop_back.txt",
		"/C/Digital Archive/RustProjects/aoc_2023/resources/day_10/day_10_hard.txt",
		"/T/Game/TowerEngine.sublime-build"
	],
	"find":
	{
		"height": 38.0
	},
	"find_in_files":
	{
		"height": 101.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"4fv",
			"shader_iv",
			"extern_global_glGetShaderiv",
			"func_glGetShaderiv",
			"gl_uniform_matrix_4fv",
			"extern_global_glGetUniformLocation",
			"UniformMatrix4fv",
			"gluniformmatrix4fv",
			"as_ptr",
			"&str",
			"getuniformloc",
			"MatrixFourFour",
			"apply_vec_three",
			"apply",
			"elements",
			"new_translation",
			"getmessagea",
			"rotate",
			"enablevertex",
			"upload_v3",
			"genvertexarrays",
			"extern_global_glGenVertexArrays",
			"create_vao",
			"render_api",
			"extern_global_glShaderSource",
			"func_glShaderSource",
			"extern_global_glCreateShader",
			"create_shader",
			"fragment_shader",
			"vertex_shader",
			"GL_TRIANGLES",
			"GL_UNSIGNED_INT",
			"unsigned_int",
			"gl_uns",
			"extern_global_glDrawElements",
			"drawelements",
			"BindVertexArray",
			"gl_use_program",
			"extern_global_glShaderInfoLog",
			"extern_global_glAttachShader",
			"extern_global_glLinkProgram",
			"extern_global_glGetShaderiv",
			"extern_global_glCompileShader",
			"gl_link_program",
			"gl_attach_shader",
			"gl_shader_info_log",
			"gl_shader_source",
			"gl_create_shader",
			"gl_compile_shader",
			"gl_use_program",
			"attachshader",
			"gl_attach_shader",
			"compile_shader",
			"gl_shader_info_log",
			"gl_compile_shader",
			"gl_shader_source",
			"createshader",
			"gl_get_shader_iv",
			"gl_attach_shader",
			"attach_shader",
			"glcreateprogram",
			"func_glCreateProgram",
			"createprogram",
			"extern_global_glCreateProgram",
			"create_program",
			"useprogram",
			"gl_vertex_attrib_pointer_v3",
			"extern_global_glVertexAttribPointer",
			"glVertexAttribPointer",
			"gl_float",
			"size",
			"gl_vertex_attrib_pointer",
			"extern_global_glVertexAttribPointer",
			"func_glVertexAttribPointer",
			"vertexattrib",
			"attribpointer",
			"vao_upload_",
			"vao_upload_v3",
			"vao_upload",
			"GL_STATIC_DRAW",
			"static_draw",
			"gl_buffer_data_v3",
			"gl_buffer_data_v3,",
			"glbufferdata",
			"extern_global_glBufferData",
			"size",
			"bufferdata",
			"buffer_data",
			"glenum",
			"array_buffer",
			"bindbuffer",
			"genbuffers",
			"genvertexarrays",
			"link_status",
			"linkprogram",
			"attachshader",
			"gl_create_program",
			"createprogram",
			"gl_shader_info_log",
			"shaderinfolog",
			"compileshader",
			"vertex_shader",
			"compile_",
			"getshaderiv",
			"lguint",
			"ShaderSource",
			"glshadersource",
			"getshadersource",
			"glshadersource",
			"getshadersource",
			"glshadersource",
			"shadersource",
			"glshadersource",
			"macro",
			"vertex_shader",
			"platform_api",
			"ogl",
			"OGL_REND_API",
			"rend",
			"loadres",
			"gengar_render_opengl",
			"MakeProgram",
			"wglgetprocaddress",
			"FuncWglChoosePixelFormatARB",
			"wgl_choose_pixel_format_arb",
			"transpose",
			"glclear",
			"pfd"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"M44"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "ghostly_game_windows/src/main.rs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9373,
						"regions":
						{
						},
						"selection":
						[
							[
								8582,
								8582
							]
						],
						"settings":
						{
							"show_line_column": "disabled",
							"syntax": "Packages/Rust Enhanced/RustEnhanced.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2613.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "gengar_render_opengl/src/lib.rs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 20,
						"regions":
						{
						},
						"selection":
						[
							[
								20,
								20
							]
						],
						"settings":
						{
							"show_line_column": "disabled",
							"syntax": "Packages/Rust Enhanced/RustEnhanced.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "gengar_renderapi_opengl_windows/src/lib.rs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 37,
						"regions":
						{
						},
						"selection":
						[
							[
								37,
								37
							]
						],
						"settings":
						{
							"show_line_column": "disabled",
							"syntax": "Packages/Rust Enhanced/RustEnhanced.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "gengar_renderapi_opengl_windows/src/wgl_api.rs",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10219,
						"regions":
						{
						},
						"selection":
						[
							[
								6479,
								6482
							]
						],
						"settings":
						{
							"show_line_column": "disabled",
							"syntax": "Packages/Rust Enhanced/RustEnhanced.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1242.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "gengar_engine/src/engine/render/shader.rs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 843,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"show_line_column": "disabled",
							"syntax": "Packages/Rust Enhanced/RustEnhanced.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "gengar_renderapi_opengl_windows/target/debug/.fingerprint/windows-a2754bc8d6ae3ddd/invoked.timestamp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 48,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 17,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "gengar_render_opengl/src/render.rs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 163,
						"regions":
						{
						},
						"selection":
						[
							[
								163,
								163
							]
						],
						"settings":
						{
							"show_line_column": "disabled",
							"syntax": "Packages/Rust Enhanced/RustEnhanced.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 18,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "gengar_render_opengl/Cargo.toml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 252,
						"regions":
						{
						},
						"selection":
						[
							[
								252,
								252
							]
						],
						"settings":
						{
							"show_line_column": "disabled",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "gengar_renderapi_opengl_windows/Cargo.toml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 425,
						"regions":
						{
						},
						"selection":
						[
							[
								127,
								127
							]
						],
						"settings":
						{
							"show_line_column": "disabled",
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "gengar_renderapi_opengl_windows/build.rs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 466,
						"regions":
						{
						},
						"selection":
						[
							[
								466,
								466
							]
						],
						"settings":
						{
							"show_line_column": "disabled",
							"syntax": "Packages/Rust Enhanced/RustEnhanced.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "ghostly_game_windows/target/debug/build/gengar_renderapi_opengl_windows-a2551648e644c667/out/bindings.rs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 589406,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"show_line_column": "disabled",
							"syntax": "Packages/Rust Enhanced/RustEnhanced.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "gengar_engine/src/engine.rs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1607,
						"regions":
						{
						},
						"selection":
						[
							[
								1573,
								1573
							]
						],
						"settings":
						{
							"show_line_column": "disabled",
							"syntax": "Packages/Rust Enhanced/RustEnhanced.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 226.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "gengar_engine/src/engine/render/vao.rs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 751,
						"regions":
						{
						},
						"selection":
						[
							[
								63,
								63
							]
						],
						"settings":
						{
							"show_line_column": "disabled",
							"syntax": "Packages/Rust Enhanced/RustEnhanced.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "gengar_engine/src/engine/matricies/matrix_four_four.rs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6570,
						"regions":
						{
						},
						"selection":
						[
							[
								3545,
								3545
							]
						],
						"settings":
						{
							"show_line_column": "disabled",
							"syntax": "Packages/Rust Enhanced/RustEnhanced.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1206.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "gengar_engine/src/engine/vectors.rs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 663,
						"regions":
						{
						},
						"selection":
						[
							[
								280,
								280
							]
						],
						"settings":
						{
							"show_line_column": "disabled",
							"syntax": "Packages/Rust Enhanced/RustEnhanced.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "gengar_engine/Cargo.toml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 85,
						"regions":
						{
						},
						"selection":
						[
							[
								84,
								84
							]
						],
						"settings":
						{
							"show_line_column": "disabled",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 16,
					"file": "gengar_render_opengl/src/ogl_render.rs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5244,
						"regions":
						{
						},
						"selection":
						[
							[
								4772,
								4772
							]
						],
						"settings":
						{
							"show_line_column": "disabled",
							"syntax": "Packages/Rust Enhanced/RustEnhanced.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1433.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 17,
					"file": "gengar_engine/src/engine/render.rs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 589,
						"regions":
						{
						},
						"selection":
						[
							[
								334,
								334
							]
						],
						"settings":
						{
							"show_line_column": "disabled",
							"syntax": "Packages/Rust Enhanced/RustEnhanced.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 18,
					"file": "gengar_engine/src/engine/color.rs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 69,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Rust Enhanced/RustEnhanced.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 19,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 19,
					"file": "ghostly_game_windows/Cargo.toml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 363,
						"regions":
						{
						},
						"selection":
						[
							[
								136,
								136
							]
						],
						"settings":
						{
							"show_line_column": "disabled",
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 16,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 20,
					"file": "ghostly_game/src/lib.rs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14,
						"regions":
						{
						},
						"selection":
						[
							[
								13,
								13
							]
						],
						"settings":
						{
							"show_line_column": "disabled",
							"syntax": "Packages/Rust Enhanced/RustEnhanced.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 24,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 21,
					"file": "ghostly_game/src/game.rs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 22,
						"regions":
						{
						},
						"selection":
						[
							[
								22,
								22
							]
						],
						"settings":
						{
							"show_line_column": "disabled",
							"syntax": "Packages/Rust Enhanced/RustEnhanced.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 23,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 16,
					"file": "gengar_render_opengl/src/ogl_render.rs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5244,
						"regions":
						{
						},
						"selection":
						[
							[
								4680,
								4680
							]
						],
						"settings":
						{
							"show_line_column": "disabled",
							"syntax": "Packages/Rust Enhanced/RustEnhanced.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1528.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "gengar_engine/src/engine/vectors.rs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 663,
						"regions":
						{
						},
						"selection":
						[
							[
								156,
								156
							]
						],
						"settings":
						{
							"show_line_column": "disabled",
							"syntax": "Packages/Rust Enhanced/RustEnhanced.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 22,
					"file": "gengar_engine/src/engine/matricies.rs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 26,
						"regions":
						{
						},
						"selection":
						[
							[
								24,
								8
							]
						],
						"settings":
						{
							"show_line_column": "disabled",
							"syntax": "Packages/Rust Enhanced/RustEnhanced.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "gengar_engine/src/engine/matricies/matrix_four_four.rs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6570,
						"regions":
						{
						},
						"selection":
						[
							[
								81,
								81
							]
						],
						"settings":
						{
							"show_line_column": "disabled",
							"syntax": "Packages/Rust Enhanced/RustEnhanced.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 23,
					"file": "gengar_render_opengl/generated_gl_functions_and_types.rs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 589406,
						"regions":
						{
						},
						"selection":
						[
							[
								196781,
								196781
							]
						],
						"settings":
						{
							"show_line_column": "disabled",
							"syntax": "Packages/Rust Enhanced/RustEnhanced.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 23467.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "gengar_render_opengl/Cargo.toml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 252,
						"regions":
						{
						},
						"selection":
						[
							[
								102,
								102
							]
						],
						"settings":
						{
							"show_line_column": "disabled",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 20,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "gengar_renderapi_opengl_windows/src/wgl_api.rs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10219,
						"regions":
						{
						},
						"selection":
						[
							[
								6954,
								6954
							]
						],
						"settings":
						{
							"show_line_column": "disabled",
							"syntax": "Packages/Rust Enhanced/RustEnhanced.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1344.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 24,
					"file": "gengar_engine/engine_resources/shaders/basic.fs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 91,
						"regions":
						{
						},
						"selection":
						[
							[
								91,
								91
							]
						],
						"settings":
						{
							"show_line_column": "disabled",
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 16,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 25,
					"file": "gengar_engine/engine_resources/shaders/basic.vs",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 315,
						"regions":
						{
						},
						"selection":
						[
							[
								236,
								236
							]
						],
						"settings":
						{
							"show_line_column": "disabled",
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 26,
					"file": "gengar_engine/src/engine/render/render_command.rs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 543,
						"regions":
						{
						},
						"selection":
						[
							[
								521,
								521
							]
						],
						"settings":
						{
							"show_line_column": "disabled",
							"syntax": "Packages/Rust Enhanced/RustEnhanced.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "gengar_engine/src/engine/render/shader.rs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 843,
						"regions":
						{
						},
						"selection":
						[
							[
								255,
								255
							]
						],
						"settings":
						{
							"show_line_column": "disabled",
							"syntax": "Packages/Rust Enhanced/RustEnhanced.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "gengar_engine/src/engine/render/vao.rs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 751,
						"regions":
						{
						},
						"selection":
						[
							[
								751,
								751
							]
						],
						"settings":
						{
							"show_line_column": "disabled",
							"syntax": "Packages/Rust Enhanced/RustEnhanced.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 27,
					"file": "gengar_engine/src/engine/error.rs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 452,
						"regions":
						{
						},
						"selection":
						[
							[
								391,
								391
							]
						],
						"settings":
						{
							"show_line_column": "disabled",
							"syntax": "Packages/Rust Enhanced/RustEnhanced.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 28,
					"file": "/C/Users/perma/.cargo/registry/src/index.crates.io-6f17d22bba15001f/khronos_api-3.1.0/src/lib.rs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2635,
						"regions":
						{
						},
						"selection":
						[
							[
								2633,
								2633
							]
						],
						"settings":
						{
							"syntax": "Packages/Rust Enhanced/RustEnhanced.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 86.0,
						"zoom_level": 1.0
					},
					"stack_index": 19,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "gengar_renderapi_opengl_windows/Cargo.toml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 425,
						"regions":
						{
						},
						"selection":
						[
							[
								420,
								420
							]
						],
						"settings":
						{
							"show_line_column": "disabled",
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 17,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "gengar_renderapi_opengl_windows/src/lib.rs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 37,
						"regions":
						{
						},
						"selection":
						[
							[
								37,
								37
							]
						],
						"settings":
						{
							"show_line_column": "disabled",
							"syntax": "Packages/Rust Enhanced/RustEnhanced.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "gengar_engine/src/engine.rs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1607,
						"regions":
						{
						},
						"selection":
						[
							[
								1607,
								1607
							]
						],
						"settings":
						{
							"show_line_column": "disabled",
							"syntax": "Packages/Rust Enhanced/RustEnhanced.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 128.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 17,
					"file": "gengar_engine/src/engine/render.rs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 589,
						"regions":
						{
						},
						"selection":
						[
							[
								98,
								98
							]
						],
						"settings":
						{
							"show_line_column": "disabled",
							"syntax": "Packages/Rust Enhanced/RustEnhanced.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 29,
					"file": "gengar_engine/src/engine/resources.rs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 49,
						"regions":
						{
						},
						"selection":
						[
							[
								48,
								48
							]
						],
						"settings":
						{
							"show_line_column": "disabled",
							"syntax": "Packages/Rust Enhanced/RustEnhanced.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 22,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 30,
					"file": "gengar_engine/src/engine/state.rs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 474,
						"regions":
						{
						},
						"selection":
						[
							[
								338,
								338
							]
						],
						"settings":
						{
							"show_line_column": "disabled",
							"syntax": "Packages/Rust Enhanced/RustEnhanced.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 0,
					"file": "ghostly_game_windows/src/main.rs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9373,
						"regions":
						{
						},
						"selection":
						[
							[
								2994,
								2994
							]
						],
						"settings":
						{
							"show_line_column": "disabled",
							"syntax": "Packages/Rust Enhanced/RustEnhanced.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 504.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 31,
					"file": "ghostly_game_windows/src/gl.rs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12813,
						"regions":
						{
						},
						"selection":
						[
							[
								12568,
								12568
							]
						],
						"settings":
						{
							"show_line_column": "disabled",
							"syntax": "Packages/Rust Enhanced/RustEnhanced.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3696.0,
						"zoom_level": 1.0
					},
					"stack_index": 21,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 19,
					"file": "ghostly_game_windows/Cargo.toml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 363,
						"regions":
						{
						},
						"selection":
						[
							[
								363,
								363
							]
						],
						"settings":
						{
							"show_line_column": "disabled",
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 18,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 27.0
	},
	"input":
	{
		"height": 35.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.5,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.astyle_error_message":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 163.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/Rust Enhanced/RustEnhanced.sublime-build",
	"project": "ghostly_sublime.sublime-project",
	"replace":
	{
		"height": 50.0
	},
	"save_all_on_build": false,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"wgl",
				"gengar_renderapi_opengl_windows\\src\\wgl_api.rs"
			],
			[
				"ogl",
				"gengar_render_opengl\\src\\ogl_render.rs"
			],
			[
				"basic",
				"gengar_engine\\engine_resources\\shaders\\basic.vs"
			],
			[
				"engine",
				"gengar_engine\\src\\engine.rs"
			],
			[
				"main",
				"ghostly_game_windows\\src\\main.rs"
			],
			[
				"shade",
				"gengar_engine\\src\\engine\\render\\shader.rs"
			],
			[
				"mat",
				"gengar_engine\\src\\engine\\matricies\\matrix_four_four.rs"
			],
			[
				"sahder",
				"gengar_engine\\src\\engine\\render\\shader.rs"
			],
			[
				"gen",
				"gengar_render_opengl\\generated_gl_functions_and_types.rs"
			],
			[
				"sh",
				"gengar_engine\\src\\engine\\render\\shader.rs"
			],
			[
				"shader",
				"gengar_engine\\src\\engine\\render\\shader.rs"
			],
			[
				"render",
				"gengar_engine\\src\\engine\\render\\render_command.rs"
			],
			[
				"ren",
				"gengar_engine\\src\\engine\\render.rs"
			],
			[
				"basi",
				"gengar_engine\\engine_resources\\shaders\\basic.vs"
			],
			[
				"matri",
				"gengar_engine\\src\\engine\\matricies.rs"
			],
			[
				"state",
				"gengar_engine\\src\\engine\\state.rs"
			],
			[
				"vao",
				"gengar_engine\\src\\engine\\render\\vao.rs"
			],
			[
				"rener",
				"gengar_engine\\src\\engine\\render\\render_command.rs"
			],
			[
				"r",
				"gengar_engine\\src\\engine\\render.rs"
			],
			[
				"",
				"gengar_engine\\src\\engine\\render\\render_command.rs"
			],
			[
				"rcommad",
				"gengar_engine\\src\\engine\\render\\render_command.rs"
			],
			[
				"render_command",
				"gengar_engine\\src\\engine\\render\\render_command.rs"
			],
			[
				"vect",
				"gengar_engine\\src\\engine\\vectors.rs"
			],
			[
				"matricies",
				"gengar_engine\\src\\engine\\matricies.rs"
			],
			[
				"vec",
				"gengar_engine\\src\\engine\\vectors.rs"
			],
			[
				"matrix",
				"gengar_engine\\src\\engine\\matricies\\matrix_four_four.rs"
			],
			[
				"matr",
				"gengar_engine\\src\\engine\\matricies.rs"
			],
			[
				"vert",
				"gengar_engine\\src\\engine\\vectors.rs"
			],
			[
				"vs",
				"gengar_engine\\engine_resources\\shaders\\basic.vs"
			],
			[
				"fs",
				"gengar_engine\\engine_resources\\shaders\\basic.fs"
			],
			[
				"en",
				"gengar_engine\\src\\engine.rs"
			],
			[
				"eng",
				"gengar_engine\\src\\engine.rs"
			],
			[
				"rend",
				"gengar_engine\\src\\engine\\render.rs"
			],
			[
				"w",
				"gengar_renderapi_opengl_windows\\src\\wgl_api.rs"
			],
			[
				"wg",
				"gengar_renderapi_opengl_windows\\src\\wgl_api.rs"
			],
			[
				"redn",
				"gengar_engine\\src\\engine\\render.rs"
			],
			[
				"ve",
				"gengar_engine\\src\\engine\\vectors.rs"
			],
			[
				"vector",
				"gengar_engine\\src\\engine\\vectors.rs"
			],
			[
				"v3",
				"gengar_engine\\src\\engine\\v3.rs"
			],
			[
				"ogl_",
				"gengar_render_opengl\\src\\ogl_render.rs"
			],
			[
				"err",
				"gengar_engine\\src\\engine\\error.rs"
			],
			[
				"gener",
				"gengar_render_opengl\\generated_gl_functions_and_types.rs"
			],
			[
				"generate",
				"gengar_render_opengl\\generated_gl_functions_and_types.rs"
			],
			[
				"bidin",
				"ghostly_game_windows\\target\\debug\\build\\gengar_renderapi_opengl_windows-a2551648e644c667\\out\\bindings.rs"
			],
			[
				"build",
				"gengar_renderapi_opengl_windows\\build.rs"
			],
			[
				"bind",
				"gengar_renderapi_opengl_windows\\target\\debug\\build\\gengar_renderapi_opengl_windows-3fa9c70cc327d084\\out\\bindings.rs"
			],
			[
				"binidng",
				"gengar_renderapi_opengl_windows\\target\\debug\\build\\gengar_renderapi_opengl_windows-3fa9c70cc327d084\\out\\bindings.rs"
			],
			[
				"36",
				"ghostly_game_windows\\target\\debug\\incremental\\gengar_renderapi_opengl_windows-3ui5jnoh7clmx\\s-gy85lebydk-ksedhl-6q4np92s6pmpmld8ia1o1suad\\dep-graph.bin"
			],
			[
				"ain",
				"gengar_renderapi_opengl_windows\\target\\debug\\.fingerprint\\windows-a2754bc8d6ae3ddd\\invoked.timestamp"
			],
			[
				"resources",
				"gengar_engine\\src\\engine\\resources.rs"
			],
			[
				"wgl_api",
				"gengar_renderapi_opengl_windows\\src\\wgl_api.rs"
			],
			[
				"oglrender",
				"gengar_render_opengl\\src\\ogl_render.rs"
			],
			[
				"gl.",
				"ghostly_game_windows\\src\\gl.rs"
			],
			[
				"gl",
				"ghostly_game_windows\\src\\gl.rs"
			],
			[
				"color",
				"gengar_engine\\src\\engine\\color.rs"
			],
			[
				"engine_",
				"gengar_engine\\src\\engine_loop.rs"
			],
			[
				"game_",
				"gengar_engine\\src\\game_loop.rs"
			],
			[
				"gme",
				"gengar_engine\\src\\game_loop.rs"
			],
			[
				"lib",
				"gengar_engine\\src\\lib.rs"
			],
			[
				"bin",
				"ghostly\\target\\debug\\.fingerprint\\ghostly-1fbd0683c7a858c4\\bin-ghostly"
			],
			[
				"cargo",
				"Cargo.toml"
			],
			[
				"twitch",
				"Twitch\\Twitch.cs"
			],
			[
				"task",
				"Tasks\\TaskType.cs"
			],
			[
				"ship",
				"Ship.cs"
			],
			[
				"uicont",
				"UI\\UIController.cs"
			],
			[
				"tasktype",
				"Tasks\\TaskType.cs"
			],
			[
				"stats",
				"ShipStats.cs"
			],
			[
				"twit",
				"Twitch\\Twitch.cs"
			],
			[
				"twtich",
				"Twitch.meta"
			],
			[
				"twi",
				"Twitch\\Twitch.cs"
			],
			[
				"att",
				"UpgradeAttribute.cs"
			],
			[
				"shipssta",
				"ShipStats.cs.meta"
			],
			[
				"stat",
				"ShipStats.cs"
			],
			[
				"upgra",
				"UpgradeAttribute.cs"
			],
			[
				"shipstat",
				"ShipStats.cs"
			],
			[
				"enemy",
				"EnemyController.cs"
			],
			[
				"condu",
				"Conductor.cs"
			],
			[
				"ore",
				"Ore.cs"
			],
			[
				"aster",
				"C:\\Digital Archive\\Game Development\\Active\\Leco3\\Leco3_Unity\\Assets\\Shaders\\UniltTexture.shader"
			],
			[
				"follower",
				"UI\\FollowerNotification.cs"
			],
			[
				"twih",
				"Twitch.meta"
			],
			[
				"camera",
				"CameraController.cs"
			],
			[
				"uicon",
				"UI\\UIController.cs"
			],
			[
				"camer",
				"CameraController.cs"
			],
			[
				"persist",
				"Persist.cs"
			],
			[
				"wave",
				"WaveManager.cs"
			],
			[
				"per",
				"Persist.cs"
			],
			[
				"cond",
				"Conductor.cs"
			],
			[
				"waveman",
				"WaveManager.cs"
			],
			[
				"orespawn",
				"OreSpawner.cs"
			],
			[
				"tw",
				"Twitch\\Twitch.cs"
			],
			[
				"uic",
				"UI\\UIController.cs"
			],
			[
				"uid",
				"UI\\ShipUIDisplay.cs"
			],
			[
				"station",
				"Station.cs"
			],
			[
				"taskquee",
				"UI\\TaskQueue.cs"
			],
			[
				"uv",
				"UVSlide.cs"
			],
			[
				"laser",
				"LaserLine.cs"
			],
			[
				"he",
				"Health.cs"
			],
			[
				"taktype",
				"Tasks\\TaskType.cs"
			],
			[
				"uvsli",
				"UVSlide.cs"
			],
			[
				"waeman",
				"WaveManager.cs"
			],
			[
				"shi",
				"Ship.cs"
			],
			[
				"ui",
				"UI\\UIController.cs"
			],
			[
				"shipdi",
				"UI\\ShipUIDisplay.cs"
			],
			[
				"dis",
				"UI\\TaskEntryDisplay.cs"
			],
			[
				"health",
				"Health.cs"
			],
			[
				"enem",
				"EnemyController.cs"
			],
			[
				"tur",
				"TurretController.cs"
			],
			[
				"turre",
				"TurretController.cs"
			],
			[
				"conduc",
				"Conductor.cs"
			],
			[
				"tasks",
				"Tasks\\TaskType.cs"
			],
			[
				"turret",
				"TurretController.cs"
			],
			[
				"heatlh",
				"Health.cs"
			],
			[
				"uiwor",
				"UI\\UIWorldFollow.cs"
			],
			[
				"shipuidis",
				"UI\\ShipUIDisplay.cs"
			],
			[
				"healtring",
				"UI\\HealthRingManager.cs"
			],
			[
				"heatlhrin",
				"UI\\HealthRing.cs"
			],
			[
				"healthringm",
				"UI\\HealthRingManager.cs"
			],
			[
				"stationcomp",
				"StationComponent.cs"
			],
			[
				"healh",
				"Health.cs"
			],
			[
				"wavemanager",
				"WaveManager.cs"
			],
			[
				"type",
				"Tasks\\TaskType.cs"
			],
			[
				"twitchmanager",
				"TwitchManager.cs"
			],
			[
				"simple",
				"SimpleJSON.cs"
			],
			[
				"caemracon",
				"CameraController.cs"
			],
			[
				"simp",
				"SimpleJSON.cs"
			],
			[
				"dspla",
				"UI\\TaskEntryDisplay.cs"
			],
			[
				"sim",
				"SimpleJSON.cs"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"C:\\Digital Archive\\Game Development\\Active\\gengar_engine\\gengar_engine_sublime.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 35.0,
		"last_filter": "gettask",
		"selected_items":
		[
			[
				"gettask",
				"GetTask"
			]
		],
		"width": 592.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 376.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
